**** BEGIN LOGGING AT Sat Aug 31 11:22:17 2019

Aug 31 11:22:17 *	Now talking on #vim
Aug 31 11:22:17 *	Topic for #vim is: Can't talk? Register https://freenode.net/kb/answer/registration | Vim 8.1.1467 http://www.vim.org | Don't ask to ask! | Use :help and :helpgrep | WIKI: http://vim.wikia.com | PASTE: http://vpaste.net/?ft=vim | https://www.vi-improved.org
Aug 31 11:22:17 *	Topic for #vim set by phy1729 (Wed Jun  5 19:23:57 2019)
Aug 31 11:22:18 -ChanServ-	[#vim] vim discussion .. www.vim.org, vim.sf.net, :help
Aug 31 11:22:18 *	Channel #vim url: http://vi-improved.org
Aug 31 12:27:12 <synthmeat>	why would setting `hi Normal ctermbg=NONE guibg=NONE` change colors other than just the background ones? as if it "washes" all the other colors out a bit
Aug 31 12:28:49 <romainl>	because setting it causes Vim to reset &background, which in turn has effects on most default groups
Aug 31 12:29:32 <romainl>	has explained in :h :hi-normal-cterm
Aug 31 12:29:34 <digmbot>	:help :hi-normal-cterm -> http://vimhelp.appspot.com/syntax.txt.html#%3Ahi-normal-cterm
Aug 31 12:30:00 <synthmeat>	ah. ok. "xy problem" disclaimer.. i just wanted to maybe speed up performance within tmux, so it has to do less drawing. maybe i'm misguided.
Aug 31 12:30:31 <romainl>	very probable
Aug 31 12:31:00 <romainl>	you should investigate the cause of your performance issues first
Aug 31 12:37:02 <synthmeat>	it's not too bad with all the tweaks i've applied now (major one being ditching nvim). major effect is - when i start complex tmux session (say, dozen of vim instances), all of them next to updating horizontal split, it takes a while for vim to actually draw itself properly. nvim just borks out in at least a couple of those instances. cursor jumps like crazy, leaves vim in borked state (have to resize split to
Aug 31 12:37:04 <synthmeat>	get it to draw properly). vim at least gets there, after some time. startup time (within split) looks healthy, ~200ms
Aug 31 12:39:04 <synthmeat>	(i think this is off topic really, not related to vim)
Aug 31 13:08:08 <lopid>	5.12
Aug 31 16:12:10 <ninja>	How to force vim to display the text in terminal current window size. like if size is reduced, it should show the text on next line
Aug 31 16:12:37 <lopid>	wrap?
Aug 31 16:14:19 <ninja>	!wrap
Aug 31 16:14:25 <lopid>	:help 'wrap'
Aug 31 16:14:25 <digmbot>	:help 'wrap' -> http://vimhelp.appspot.com/options.txt.html#%27wrap%27
Aug 31 16:16:07 <ninja>	lopid: I have set nowrap in vimrc
Aug 31 16:16:26 <lopid>	that'll be it, then
Aug 31 16:18:20 <ninja>	Thanks lopid  problem solved after removing no from nowrap
Aug 31 16:18:40 <lopid>	wrap is on by default anyway
Aug 31 16:18:53 <ninja>	okay
Aug 31 16:19:20 <ninja>	Actually I use vim as editor in mutt and had problems
Aug 31 16:27:45 <ninja>	lopid: what about setlocal wrap?
Aug 31 16:27:56 <lopid>	what about it?
Aug 31 16:29:03 <ninja>	is it same thing?
Aug 31 16:29:14 <lopid>	:help :setlocal
Aug 31 16:29:14 <digmbot>	:help :setlocal -> http://vimhelp.appspot.com/options.txt.html#%3Asetlocal
Aug 31 16:33:44 <ninja>	:help linebreak
Aug 31 16:33:45 <digmbot>	:help linebreak -> http://vimhelp.appspot.com/options.txt.html#%27linebreak%27
Aug 31 17:40:40 <nnarol>	Hi! When mapping character combinations in insert mode, usually, the first typed character is shown in a preview with a darker background, before I disambiguate or the mapping delay is over. However, with some characters, like "é", I don't get the preview. It makes me stutter when typing. Does anyone know a solution?
Aug 31 17:41:09 <nnarol>	I have ";j" as <Esc> in insert mode, which is useful when I am using my regular English layout.
Aug 31 17:41:32 <nnarol>	";" is shown even if I don't press another key yet.
Aug 31 17:42:34 <nnarol>	However, when I need to type in Hungarian, the key with corresponding to ";" is "é", so I also mapped "éj" to <Esc> .
Aug 31 17:43:20 <nnarol>	"é" does not appear before I continue to type. I see the result only afterwards, and it stops my typing flow.
Aug 31 17:43:40 <Pepe_vulgaris>	nnarol: I solved this same problem by omitting diacritics
Aug 31 17:44:21 <nnarol>	Pepe_vulgaris: I wouldn't want to, as the key position matters when it comes to efficiency.
Aug 31 17:44:37 <Pepe_vulgaris>	If it is unavoidable, you can switch the layout from your WM/DE
Aug 31 17:44:52 <Pepe_vulgaris>	or maybe memorize composing digrams
Aug 31 17:45:30 <Pepe_vulgaris>	:h digraph
Aug 31 17:45:30 <digmbot>	:help digraph -> http://vimhelp.appspot.com/digraph.txt.html#digraph
Aug 31 17:45:37 <Pepe_vulgaris>	also :digrams
Aug 31 17:45:45 <Pepe_vulgaris>	digraphs*
Aug 31 17:45:47 <nnarol>	Pepe_vulgaris: Maybe I could get used to using "pe" though. In that case, I wouldn't have to create different mappings for German, Hungarian and English.
Aug 31 17:46:00 <nnarol>	Pepe_vulgaris: OK, thanks! I'll look into it.
Aug 31 17:52:55 <synthmeat>	how to check if setting support a particular argument? i.e. signcolumn=number
Aug 31 18:08:20 <lopid>	:help 'signcolumn'
Aug 31 18:08:20 <digmbot>	:help 'signcolumn' -> http://vimhelp.appspot.com/options.txt.html#%27signcolumn%27
Aug 31 18:09:00 <lopid>	sweet, shortmess-=S obviates my need for vim-anzu
Aug 31 18:12:19 <lopid>	wish there was a more friendly way to see such changes without having to trail through the git log
Aug 31 18:15:40 <synthmeat>	lopid: that wasn't really helpful, i've read that. just want to know if i can use something like exists(), but for an argument to a setting. for some reason, my vim supports signcolumn, but not "number" argument
Aug 31 18:17:48 <lopid>	what happens when you try to use number?
Aug 31 18:19:11 <synthmeat>	"Invalid argument: signcolumn=number"
Aug 31 18:19:27 <synthmeat>	it's fine with "yes", and has +signs
Aug 31 18:19:50 <lopid>	how exactly are you invoking it?
Aug 31 18:19:55 <synthmeat>	and passes exists('&signcolumn')
Aug 31 18:20:40 <synthmeat>	if exists('&signcolumn') \n set signcolumn=number \n endif
Aug 31 18:21:22 <synthmeat>	(\n just so i don't spam here)
Aug 31 18:21:25 <lopid>	does it happen when you set it manually?
Aug 31 18:22:26 <synthmeat>	nope, invalid argument
Aug 31 18:22:58 <synthmeat>	i've just dropped it after a silent! as a workaround, but was just interested in can i check it properly
Aug 31 18:23:04 <lopid>	and your :help 'signcolumn' lists "number" as a value?
Aug 31 18:23:04 <digmbot>	:help 'signcolumn' -> http://vimhelp.appspot.com/options.txt.html#%27signcolumn%27
Aug 31 18:23:22 <synthmeat>	no, doesn't list it
Aug 31 18:23:29 <lopid>	ah
Aug 31 18:23:51 <lopid>	then maybe a try-catch around it (or update your vim)
Aug 31 18:24:10 <synthmeat>	yeah
Aug 31 18:24:55 <synthmeat>	lol, have another problem now though. colorscheme doesn't get set via vimrc. but is fine when i set it within vim.
Aug 31 18:25:29 <lopid>	just wrap your vimrc with try-endtry
Aug 31 18:25:37 <lopid>	\o/
Aug 31 18:25:57 <lopid>	set the colorscheme lastly
Aug 31 18:26:42 <synthmeat>	it's last. to note, this is only on remotes, works fine locally. weird.
Aug 31 18:32:52 <synthmeat>	might be me deploying a colorscheme plugin that has the same name as the old one (fork)
Aug 31 18:56:51 <synthmeat>	huh. needs to have "set background=dark" before the colorscheme declaration o.O
Aug 31 19:47:09 <danknoob>	hello how do i copy and yank globally?
Aug 31 19:47:18 <lopid>	globally
Aug 31 19:47:23 <danknoob>	i want to use the visual mode in vim and copy to firefox url bar
Aug 31 19:47:35 <lopid>	vimgor: clipboard
Aug 31 19:47:35 <vimgor>	The * register corresponds to the X PRIMARY selection (pasted with <MiddleClick>), and the + register corresponds to the system clipboard (pasted with <C-v> or Edit->Paste). On windows, both registers are for the system clipboard. To use the clipboard in terminal vim, vim must be built with +clipboard
Aug 31 19:47:53 <lopid>	so yank with "+y or "*y
Aug 31 19:48:14 <danknoob>	um
Aug 31 19:48:15 <danknoob>	okay
Aug 31 19:49:43 <mingdao>	Or, in ViM highlight with your left mouse button and paste into other app with the scrollbar.
Aug 31 19:49:54 <mingdao>	s/scrollbar/scrollwheel
Aug 31 19:50:11 <danknoob>	+y is a sequence right
Aug 31 19:52:15 <lopid>	they are keys that you press
Aug 31 19:52:24 <danknoob>	vim --version | grep clipboard
Aug 31 19:52:24 <danknoob>	-clipboard         +keymap            +printer           +vertsplit
Aug 31 19:52:24 <danknoob>	+emacs_tags        +mouse_gpm         -sun_workshop      -xterm_clipboard
Aug 31 19:52:25 <lopid>	including the quote
Aug 31 19:52:37 <danknoob>	fedora 30..
Aug 31 19:52:47 <lopid>	alas
Aug 31 19:53:55 <lopid>	bypass vim by holding down shift when you select with the mouse
Aug 31 20:46:49 <blueyed>	synthmeat: for a feature switch you would do "has('+signcolumn')" ("+" instead of "&")
Aug 31 20:47:12 <lopid>	it's a version of a feature
Sep 02 08:51:42 *	Disconnected ()
**** ENDING LOGGING AT Mon Sep  2 08:51:42 2019

**** BEGIN LOGGING AT Mon Sep  2 08:52:08 2019

Sep 02 08:52:08 *	Now talking on #vim
Sep 02 08:52:08 *	Topic for #vim is: Can't talk? Register https://freenode.net/kb/answer/registration | Vim 8.1.1467 http://www.vim.org | Don't ask to ask! | Use :help and :helpgrep | WIKI: http://vim.wikia.com | PASTE: http://vpaste.net/?ft=vim | https://www.vi-improved.org
Sep 02 08:52:08 *	Topic for #vim set by phy1729 (Wed Jun  5 19:23:57 2019)
Sep 02 08:52:09 -ChanServ-	[#vim] vim discussion .. www.vim.org, vim.sf.net, :help
Sep 02 08:52:09 *	Channel #vim url: http://vi-improved.org
Sep 02 09:05:49 *	Disconnected ()
**** ENDING LOGGING AT Mon Sep  2 09:05:49 2019

**** BEGIN LOGGING AT Mon Sep  2 09:06:12 2019

Sep 02 09:06:12 *	Now talking on #vim
Sep 02 09:06:12 *	Topic for #vim is: Can't talk? Register https://freenode.net/kb/answer/registration | Vim 8.1.1467 http://www.vim.org | Don't ask to ask! | Use :help and :helpgrep | WIKI: http://vim.wikia.com | PASTE: http://vpaste.net/?ft=vim | https://www.vi-improved.org
Sep 02 09:06:12 *	Topic for #vim set by phy1729 (Wed Jun  5 19:23:57 2019)
Sep 02 09:06:12 -ChanServ-	[#vim] vim discussion .. www.vim.org, vim.sf.net, :help
Sep 02 09:06:12 *	Channel #vim url: http://vi-improved.org
Sep 02 09:17:20 <muffindrake1>	Is there some general solution to synchronize a file on a paste site (such as github gist) automatically, or in vim?
Sep 02 09:20:57 <muffindrake>	What I'd specifically like is creating a secret gist tied to my github account using a file on disk, and have the gist amended each time I update the local file on disk.
Sep 02 09:20:59 <novum>	muffindrake, you can, but it will require a bit of finagling and saving your password for github
Sep 02 09:21:05 <novum>	and using it in a curl command
Sep 02 09:21:09 <muffindrake>	I have no qualms about getting an access code
Sep 02 09:21:46 <muffindrake>	I would need something that manages all that for me, I can get an access token just fine - just that managing specific files manually with scripts doesn't scale too well
Sep 02 09:22:26 <novum>	you should be able to do it if you put in .gitconfig [github] oath-token=yomama
Sep 02 09:23:42 <novum>	then you do :exec '!curl -X POST -d ''{"public":true,"files":{"'.expand('%:p').':{"content":"secret gist"}}}'' -u YourUsername https://api.github.com/gists'
Sep 02 09:24:27 <novum>	the first time. somehow you'd have to parse that and get the url
Sep 02 09:25:47 <novum>	but fyi once you create a gist it is a full git repo that you can clone, but idk what you'd do. maybe clone to fnamemodify(tempname(), ':h')
Sep 02 09:26:15 <novum>	but there is nothing written but it wouldn't take long
Sep 02 09:26:49 <novum>	or is there https://github.com/mattn/gist-vim
Sep 02 09:27:13 <muffindrake>	'once you create a gist it is a full git repo that you can clone'
Sep 02 09:27:15 <muffindrake>	Well shit
Sep 02 09:27:25 <muffindrake>	That's really useful information
Sep 02 09:27:31 <muffindrake>	Thank you.
Sep 02 09:37:54 *	Disconnected ()
**** ENDING LOGGING AT Mon Sep  2 09:37:54 2019

**** BEGIN LOGGING AT Mon Sep  2 09:38:17 2019

Sep 02 09:38:17 *	Now talking on #vim
Sep 02 09:38:17 *	Topic for #vim is: Can't talk? Register https://freenode.net/kb/answer/registration | Vim 8.1.1467 http://www.vim.org | Don't ask to ask! | Use :help and :helpgrep | WIKI: http://vim.wikia.com | PASTE: http://vpaste.net/?ft=vim | https://www.vi-improved.org
Sep 02 09:38:17 *	Topic for #vim set by phy1729 (Wed Jun  5 19:23:57 2019)
Sep 02 09:38:17 -ChanServ-	[#vim] vim discussion .. www.vim.org, vim.sf.net, :help
Sep 02 09:38:17 *	Channel #vim url: http://vi-improved.org
Sep 02 10:57:50 <Antony_>	Hehe, yes it does. Already using to paste the URLs of my gists.
Sep 02 11:01:07 <Antony_>	https://asciinema.org/a/5eYifiYCUIAQk7gWi262ZUd4b
Sep 02 11:14:19 <steven>	I don't like ads.
Sep 02 11:15:58 <Antony_>	You are not alone.
Sep 02 12:03:58 *	Disconnected ()
**** ENDING LOGGING AT Mon Sep  2 12:03:58 2019

**** BEGIN LOGGING AT Mon Sep  2 12:04:25 2019

Sep 02 12:04:25 *	Now talking on #vim
Sep 02 12:04:25 *	Topic for #vim is: Can't talk? Register https://freenode.net/kb/answer/registration | Vim 8.1.1467 http://www.vim.org | Don't ask to ask! | Use :help and :helpgrep | WIKI: http://vim.wikia.com | PASTE: http://vpaste.net/?ft=vim | https://www.vi-improved.org
Sep 02 12:04:25 *	Topic for #vim set by phy1729 (Wed Jun  5 19:23:57 2019)
Sep 02 12:04:25 -ChanServ-	[#vim] vim discussion .. www.vim.org, vim.sf.net, :help
Sep 02 12:04:25 *	Channel #vim url: http://vi-improved.org
Sep 02 12:09:39 <edd_lc>	how do you guys work with multiple projects; each one in its own tab or multiple vim instances (managed by some linux window manager)?
Sep 02 12:09:58 <lopid>	different terminal
Sep 02 12:10:07 <lopid>	or terminal tab
Sep 02 12:10:26 <edd_lc>	lopid: personal preference or something else i may be missing?
Sep 02 12:10:56 <edd_lc>	disclaimer - im new to vim as an ide
Sep 02 12:11:03 <lopid>	the former, of course
Sep 02 12:12:17 <edd_lc>	lopid: cheers
Sep 02 12:23:31 <igemnace>	yep. multiple vim instances as well for me
Sep 02 12:24:03 <jigubigule>	hello guys! What vim-plugin would you recommend for making markdown files?
Sep 02 12:24:17 <lopid>	ftplugin=markdown
Sep 02 12:26:01 <igemnace>	yep. ftplugin=markdown as well for me
Sep 02 12:26:38 *	lopid deposits money into lopid's account
Sep 02 12:29:39 <igemnace>	yep. money from lopid's account as well for me
Sep 02 12:29:46 <lopid>	>:/
Sep 02 12:35:12 <slax0r>	single instance, multiple tabs with :set hidden
Sep 02 12:35:29 <slax0r>	I have at least 3-4 projects open every time
Sep 02 12:35:36 <slax0r>	projects/libs/tools/etc
Sep 02 12:42:00 <tshirtman>	wait, lopid was *depositing* money, you know what to do igemnace
Sep 02 12:42:33 <tshirtman>	(multiple vim instances for me as well)
Sep 02 12:42:46 *	igemnace hides
Sep 02 12:45:51 <slax0r>	am I the only weird one who uses a single instance?
Sep 02 12:50:46 <tshirtman>	slax0r: i guess it depends a lot of your workflow, i like using a lot of workspaces each with things from a project in it, so there are a few terminals in each space, usually with one for vim, i also use hidden, but i don't use tabs, but i guess that's because i use windows for the project, and workspaces (linux/x11) for the different projects instead, whatever works for you is good :)
Sep 02 13:56:00 *	Disconnected ()
**** ENDING LOGGING AT Mon Sep  2 13:56:00 2019

**** BEGIN LOGGING AT Mon Sep  2 13:56:26 2019

Sep 02 13:56:26 *	Now talking on #vim
Sep 02 13:56:26 *	Topic for #vim is: Can't talk? Register https://freenode.net/kb/answer/registration | Vim 8.1.1467 http://www.vim.org | Don't ask to ask! | Use :help and :helpgrep | WIKI: http://vim.wikia.com | PASTE: http://vpaste.net/?ft=vim | https://www.vi-improved.org
Sep 02 13:56:26 *	Topic for #vim set by phy1729 (Wed Jun  5 19:23:57 2019)
Sep 02 13:56:26 -ChanServ-	[#vim] vim discussion .. www.vim.org, vim.sf.net, :help
Sep 02 13:56:26 *	Channel #vim url: http://vi-improved.org
Sep 02 13:57:26 <slax0r>	tshirtman: well, my workplace consists of multiple projects that are all a part of a larger project, with all the in-house libs that are in use, and i constantly have to switch between them, since our system is very microservice oriented
Sep 02 13:58:02 <slax0r>	I use i3wm, but find it easier to switch between tabs in vim than to jugle workspaces, and copy stuff between different instances etc
Sep 02 15:45:38 <novum>	exit
Sep 02 15:45:53 *	novum stumbled out embarassingly
Sep 02 16:04:51 <PlasmaHH>	Hi, I have ever since used a plugin that nicely visualizes vim undo history in a tree and lets you roll back and forth. Now with git I was wondering if there is a plugin that can transform git diff history into vim undo history
Sep 02 16:14:47 <lopid>	#git
Sep 02 16:15:04 <lopid>	there are some nice visual options to git log
Sep 02 16:19:14 <m_ben>	PlasmaHH: there's agit.vim, gv.vim and vim-flog that integrate git-log into vim and allow you to navigate through different commits of the same file. I think they all require fugitive
Sep 02 16:20:17 <PlasmaHH>	m_ben: the point is that I want to integrate it into my undo workflow, like a base of the past work done, kind as if I would check in my undo files...
Sep 02 16:20:31 <lopid>	for the same file, git-time-lapse doesn't require fugitive
Sep 02 16:21:58 <m_ben>	lopid: what is git-time-lapse?
Sep 02 16:22:01 <lopid>	fugitive has lots of options, maybe it can display history as you want
Sep 02 16:22:07 <lopid>	a vim plugin
Sep 02 16:37:20 <steven>	undo != git history PlasmaHH
Sep 02 16:37:30 <steven>	there is nothing that "merges" them
Sep 02 16:37:37 <steven>	also there's gina.vim
Sep 02 16:40:38 <m_ben>	PlasmaHH: when you run :AgitFile (provided by agit.vim), you get something like this: https://i.imgur.com/f0ucm8z.png it looks very similar to the gundo/mundo/vim-undo plugins that visualize the vim's undotree. while navigating with the cursor on the left git-log view, the right buffer is updated. at any point you can checkout the version you need. I personally wouldn't recommend to remap u and r in order to
Sep 02 16:40:41 <m_ben>	navigate between different commits of the same file
Sep 03 10:14:12 *	Disconnected ()
**** ENDING LOGGING AT Tue Sep  3 10:14:12 2019

**** BEGIN LOGGING AT Tue Sep  3 10:14:37 2019

Sep 03 10:14:37 *	Now talking on #vim
Sep 03 10:14:37 *	Topic for #vim is: Can't talk? Register https://freenode.net/kb/answer/registration | Vim 8.1.1467 http://www.vim.org | Don't ask to ask! | Use :help and :helpgrep | WIKI: http://vim.wikia.com | PASTE: http://vpaste.net/?ft=vim | https://www.vi-improved.org
Sep 03 10:14:37 *	Topic for #vim set by phy1729 (Wed Jun  5 19:23:57 2019)
Sep 03 10:14:38 -ChanServ-	[#vim] vim discussion .. www.vim.org, vim.sf.net, :help
Sep 03 10:14:38 *	Channel #vim url: http://vi-improved.org
Sep 03 10:58:06 <ArthurStrong>	Hi all. What you usually do to insert an empty line, but stay in normal mode after?
Sep 03 10:58:19 <osse>	o<esc>
Sep 03 10:58:46 <osse>	I don't think there is a better way
Sep 03 10:59:13 <ArthurStrong>	Someone offers a macros here: https://vim.fandom.com/wiki/Quickly_adding_and_deleting_empty_lines have anybody uses them?
Sep 03 11:00:53 <igemnace>	unimpaired does it by putting a newline with :put =repeat(nr2char(10), a:count)
Sep 03 11:01:55 <igemnace>	i've opted to use it instead of o<Esc> to get around certain formatoptions and indents (going by my commit message)
Sep 03 11:02:30 <igemnace>	:set paste before doing so should also take care of that, probably
Sep 03 11:03:26 <ArthurStrong>	thanks!
Sep 03 11:10:05 <squ>	map <S-Enter> :put! =nr2char(10)<CR>
Sep 03 11:16:23 <squ>	what you have this mapped to?
Sep 03 11:17:10 <igemnace>	unimpaired has it on [<Space> and ]<Space>
Sep 03 11:17:44 <squ>	Enter is taken by something else?
Sep 03 11:18:58 <squ>	is a:count really worth installing repeat plugin
Sep 03 11:19:01 <igemnace>	"go down" in normal mode, "go to entry" in quickfix
Sep 03 11:19:21 <igemnace>	:h repeat() is not from a plugin
Sep 03 11:19:22 <digmbot>	:help repeat() -> http://vimhelp.appspot.com/eval.txt.html#repeat%28%29
Sep 03 11:19:45 <squ>	> The . command works with all operator mappings, and will work with the linewise mappings as well if you install repeat.vim.
Sep 03 11:19:52 <squ>	https://github.com/tpope/vim-unimpaired
Sep 03 11:20:21 <igemnace>	that's for repeating with ., *not* for using counts
Sep 03 11:20:40 <squ>	allright
Sep 03 11:20:52 <igemnace>	https://github.com/igemnace/vim-config/blob/2e462b457435d17b9a97639aca469be2126b6844/cfg/plugin/impaired.vim#L18-L35
Sep 03 11:21:25 <igemnace>	use v:count1 there, not a:count, if you're using the :put line directly
Sep 03 11:21:51 <squ>	I'll just use my mappings
Sep 03 11:22:10 <squ>	<S-Enter> up, <C-Enter> down
Sep 03 11:22:38 <igemnace>	sure. just clarifying since you mentioned a:count specifically
Sep 03 11:22:56 <igemnace>	a: is for function arguments. if you're invoking the commandline directly, use v:count1 directly
Sep 03 11:23:27 <squ>	what I mean is who would want to enter new lines with counts
Sep 03 11:24:01 <igemnace>	ah, alright
Sep 03 11:28:37 <squ>	maybe a ctrl-j, ctrl-k is a bit easier than <Enter>
Sep 03 11:29:29 <chieta>	i've tried https://github.com/suxpert/vimcaps for notify me when the capslock on... after installing when i put the  set stl=...%{vimcaps#statusline(1)}... on .vimrc  ... it complain about unknown function
Sep 03 11:36:26 <chieta>	or any plugin  for notify the capslock accidentally pressed
Sep 03 12:38:20 <steven>	chieta: did you install it correctly? did you check whether the plugin was loaded? did you .. not use the three dots "..." when you set the statusline? you're not really providing much info here
Sep 03 13:22:55 <nedbat>	I can delete all the lines with pragma with :g/pragma/d     How can I delete all the lines with pragma, and the line that follows each of those lines?
Sep 03 13:23:29 <osse>	nedbat: :g/pragma/.,.+1d
Sep 03 13:23:45 <nedbat>	osse: ah, of course.   g/pragma/2d   definitely wasn't it :)
Sep 03 13:25:17 <osse>	running d twice does the trick too:  :g/pragma/d|d
Sep 03 13:26:38 <m_ben>	does anyone know how to build vim w/o the gui? I can't find the configure option, is it --without-x?
Sep 03 13:27:26 <m_ben>	nedbat: 2d deletes the second line, doesn't it?
Sep 03 13:27:33 <steven>	--disable-gui m_ben
Sep 03 13:27:34 <nedbat>	m_ben: yes, over and over :)
Sep 03 13:27:54 <nedbat>	m_ben: the second line in the file, that is.
Sep 03 13:29:22 <nedbat>	osse: also:  .,.+d
Sep 03 13:29:37 <osse>	also ,+d
Sep 03 13:29:47 <steven>	also d|d
Sep 03 13:30:12 <osse>	Old!
Sep 03 13:32:47 <squ>	2d
Sep 03 13:33:45 <squ>	nope :)
Sep 03 13:36:08 <squ>	osse: what . in :g does?
Sep 03 13:36:23 <osse>	just means the address of the current line
Sep 03 13:36:41 <squ>	right
Sep 03 13:36:41 <m_ben>	:h :range > squ
Sep 03 13:36:44 <nedbat>	squ: "current" as in, each match of the pattern.
Sep 03 13:36:45 <digmbot>	squ: :help :range -> http://vimhelp.appspot.com/cmdline.txt.html#%3Arange
Sep 03 13:36:49 <squ>	yes, range, I got it
Sep 03 13:38:50 <m_ben>	preview the current quickfix error in popup window: https://github.com/bfrg/vim-qf-preview
Sep 03 13:39:20 <squ>	where is the video
Sep 03 13:40:10 <squ>	it shows area around match in popup?
Sep 03 13:40:57 <m_ben>	yes, it previews the file with the quickfix item in a popup window
Sep 03 13:41:10 <m_ben>	you can scroll with <c-j>/<c-k>
Sep 03 13:41:23 <m_ben>	or jump to top/bottom with gg/G
Sep 03 13:42:11 <m_ben>	why does everyone need a video? I hate gifs because I have to watch them at least 5 times before I understand what is going on
Sep 03 13:42:41 <squ>	screenshots are worse to understand what is going on
Sep 03 13:43:15 <nedbat>	m_ben: i think those screenshots perfectly capture it
Sep 03 13:43:28 <m_ben>	nedbat: ty
Sep 03 13:43:33 <squ>	nope
Sep 03 13:43:36 <m_ben>	there's not much to show to be honest
Sep 03 13:43:49 <m_ben>	what program can I use to make gifs?
Sep 03 13:43:57 <nedbat>	squ: select a line in the quickfix, it displays the context of that file in the popup
Sep 03 13:44:16 <squ>	nedbat: I already figured that by asking
Sep 03 13:45:48 <nedbat>	m_ben: this requires some recent build of vim?
Sep 03 13:46:10 <nedbat>	squ: this didn't help?  "In the quickfix window navigate the cursor to the desired error and press p to open a popup window with the file containing the error. The window is scrolled such that the buffer line with the error is at the top of the window."
Sep 03 13:47:14 <m_ben>	nedbat: yes, around 8.1.1813, but I have to check which one exactly
Sep 03 13:47:35 <nedbat>	m_ben: it'd be cool to check for that in the plugin
Sep 03 13:49:09 <m_ben>	nedbat: will do once I figured out which patch exactly is required
Sep 03 13:49:48 <m_ben>	squ: which gif recorder do you recommend for linux?
Sep 03 13:54:55 <squ>	gif is heavy file, use video h265 for example. ffmpeg
Sep 03 13:55:27 <steven>	recording what m_ben ?
Sep 03 13:55:49 <squ>	but should ask what everybody is used to record these: https://asciinema.org/a/5eYifiYCUIAQk7gWi262ZUd4b
Sep 03 13:55:50 <m_ben>	steven: a vim terminal session
Sep 03 13:56:09 <steven>	asciinema
Sep 03 13:56:11 <m_ben>	there's also termtosvg
Sep 03 14:21:05 <narimiran>	hi guys! let's say that i have some multiline comment between `'''`, and i want to delete it using command mode. i have the following: `/'''/,???/d` — what do i put instead of ??? to find the next match of the same pattern?
Sep 03 14:22:26 <steven>	https://blog-en.openalfa.com/how-to-do-a-multiline-search-in-vim narimiran
Sep 03 14:23:59 <narimiran>	steven: thanks, but that doesn't help. i'm looking what to put as a higher limit in the range. i cannot do `:/'''/,/'''/d` as that matches only the first line where `'''` is
Sep 03 14:25:10 <steven>	oh so you didn't read it
Sep 03 14:26:42 <narimiran>	i did and i don't see the solution there
Sep 03 14:27:47 <mgedmin>	I guess steven wants you to use :%s/^\s*'''\_.*'''\n// to delete your multiline comments
Sep 03 14:28:39 <osse>	narimiran: try  :/'''/;/'''/d
Sep 03 14:29:14 <narimiran>	osse: that's it!! wow, thanks! i had no idea about `;`
Sep 03 14:31:12 <m_ben>	nedbat: added a version check. version 8.1.1705 is required since the new syntax #{} for dictionaries is used, see :h literal-Dict
Sep 03 14:32:20 <m_ben>	nick
Sep 03 14:32:23 <m_ben>	oops
Sep 03 14:34:13 <nedbat>	m_ben: hmm, i have 1722, and I get "Invalid arguments for funciton setwinvar"
Sep 03 14:34:52 <m_ben>	can you pull? there was a comma missing :(
Sep 03 14:37:33 <nedbat>	m_ben: nice :)
Sep 03 15:08:25 <m_ben>	does asciinema save my current font in the video file?
Sep 03 15:21:30 <mgedmin>	I'm pretty sure it doesn't
Sep 03 16:33:13 <m_ben>	squ: only for you :) https://asciinema.org/a/265820
Sep 03 16:51:41 <hoylemd>	Hey folks, I need some guidance, but I'm not really sure what to even google.  I want vim to run `:Vexplore` when I first launch it iff I've opened it without any arguments (e.g. `vim` vs `vim path_to/file.py`). Can anyone give me a good starting point?
Sep 03 16:52:50 <lopid>	i'd probably create a shell function or wrapper script for gvim
Sep 03 16:54:36 <igemnace>	nerdtree actually has a snippet for that in its README that you can hijack for Vexplore
Sep 03 16:54:47 <hoylemd>	I was hoping for something that could live in my vimrc.
Sep 03 16:54:59 <hoylemd>	igemnace: That sounds great! thanks
Sep 03 16:58:04 <igemnace>	m_ben: ooh, this is a plugin of yours?
Sep 03 16:58:30 <m_ben>	yes :)
Sep 03 16:58:48 <m_ben>	testing vim's new popup-windows
Sep 03 17:00:06 <igemnace>	found it, vim-qf-preview. neat
Sep 03 17:01:46 <hoylemd>	Is there a way I can break up really long autocmd lines? I have one now that is ~ 200 long and that does not satisfy my readability standards :p
Sep 03 17:02:02 <igemnace>	best to use a function to achieve that
Sep 03 17:02:34 <igemnace>	although maybe you're looking for line continuations
Sep 03 17:02:44 <igemnace>	:h line-continuation
Sep 03 17:02:45 <digmbot>	:help line-continuation -> http://vimhelp.appspot.com/repeat.txt.html#line-continuation
Sep 03 17:02:46 <m_ben>	igemnace: but requires a recent Vim version, at least 8.1.1705
Sep 03 17:04:41 <hoylemd>	Yeah, I think a function is what I want. thanks!
Sep 03 17:05:07 <mgedmin>	hoylemd: so maybe au VimEnter * if bufname("") == "" | Vexplore | endif ?
Sep 03 17:06:00 <igemnace>	m_ben: right, makes sense
Sep 03 17:06:00 <m_ben>	:h argc()
Sep 03 17:06:01 <digmbot>	:help argc() -> http://vimhelp.appspot.com/eval.txt.html#argc%28%29
Sep 03 17:06:24 <m_ben>	instead of bufname() you can use argc()
Sep 03 17:26:00 <hoylemd>	m_ben: Yeah, that's more or less what the nerdtree snippet does. I refactored it to be simpler and use :Vexplore instead: https://pastebin.com/h4g18VQZ
Sep 03 17:26:43 <hoylemd>	though if anyone has a better idea for detecting if anything was passed to stdin, I'm open to suggestions. I don't like that method (and am not even sure if it works...)
Sep 03 19:20:42 *	Disconnected ()
**** ENDING LOGGING AT Tue Sep  3 19:20:42 2019

**** BEGIN LOGGING AT Tue Sep  3 19:21:06 2019

Sep 03 19:21:06 *	Now talking on #vim
Sep 03 19:21:06 *	Topic for #vim is: Can't talk? Register https://freenode.net/kb/answer/registration | Vim 8.1.1467 http://www.vim.org | Don't ask to ask! | Use :help and :helpgrep | WIKI: http://vim.wikia.com | PASTE: http://vpaste.net/?ft=vim | https://www.vi-improved.org
Sep 03 19:21:06 *	Topic for #vim set by phy1729 (Wed Jun  5 19:23:57 2019)
Sep 03 19:21:06 -ChanServ-	[#vim] vim discussion .. www.vim.org, vim.sf.net, :help
Sep 03 19:21:06 *	Channel #vim url: http://vi-improved.org
Sep 03 20:25:44 *	Disconnected ()
**** ENDING LOGGING AT Tue Sep  3 20:25:44 2019

**** BEGIN LOGGING AT Tue Sep  3 20:26:12 2019

Sep 03 20:26:12 *	Now talking on #vim
Sep 03 20:26:12 *	Topic for #vim is: Can't talk? Register https://freenode.net/kb/answer/registration | Vim 8.1.1467 http://www.vim.org | Don't ask to ask! | Use :help and :helpgrep | WIKI: http://vim.wikia.com | PASTE: http://vpaste.net/?ft=vim | https://www.vi-improved.org
Sep 03 20:26:12 *	Topic for #vim set by phy1729 (Wed Jun  5 19:23:57 2019)
Sep 03 20:26:12 -ChanServ-	[#vim] vim discussion .. www.vim.org, vim.sf.net, :help
Sep 03 20:26:12 *	Channel #vim url: http://vi-improved.org
Sep 03 21:05:03 <m_ben>	romainl: https://github.com/bfrg/vim-qf-preview I should probably make a shorter video
Sep 03 21:08:27 <romainl>	maybe but that shouldn't be a priority
Sep 03 21:08:39 <romainl>	nice work
Sep 03 21:09:29 <romainl>	in before someone asks you to put the preview window over the right half of the qf window
Sep 03 21:10:19 <m_ben>	right half? it always has the same width as the qf window, either above or below
Sep 03 21:15:06 <m_ben>	I should add an option so that users can set the height
Sep 03 21:15:53 <Guiri>	I'm getting an error that disappears when using any command in vim-fugative.  Is there a way to capture the error or enable a debug mode?
Sep 03 21:16:17 <m_ben>	Guiri: :messages
Sep 03 21:18:22 <romainl>	m_ben: https://imgur.com/dx4yfdO
Sep 03 21:19:07 <romainl>	(yeah, it's not the right _half_)
Sep 03 21:21:08 <romainl>	hmm… why are getchar.c of a different color than window.c and gui_motif.c?
Sep 03 21:23:13 <m_ben>	so that it's easier to distinguish different file groups. I got this from hauleth, originally it's from markzen's vim-kickfix plugin: https://github.com/fcpg/vim-kickfix/blob/master/after/syntax/qf.vim#L15-L26
Sep 03 21:24:02 <romainl>	cool
Sep 03 21:25:32 <m_ben>	in the picture above the popup is directly on top of the quickfix window, is that what you want? currently the popup is displayed directly above the qf window (when qf window is at bottom), or directly below (when qf window is at top). it always has the same width as the qf window
Sep 03 21:26:59 <romainl>	not what I "want" but I'm almost certain your users will ask for a "less obtrusive" behaviour that integrates better with the quickfix window itself
Sep 03 21:27:34 <romainl>	kind of like how fzf.vim previews files if I'm not mistaken
Sep 03 21:28:55 <romainl>	hmm, maybe not fzf itself: https://github.com/yuki-ycino/fzf-preview.vim
Sep 03 21:33:27 <m_ben>	now I understand
Sep 03 21:37:14 <mekhami>	i just cannot get ALE to work for me at all...
Sep 03 21:37:50 <mekhami>	:ALEInfo shows eslint enabled, but I don't see any output anywhere... and even though i've set g:ale_fixers, I have no Enabled fixers
Sep 03 21:38:31 <Antony_>	Why does Vim take concealed characters into account when wrapping? :-(
Sep 03 21:39:02 <romainl>	mekhami: use one of ale's dedicated support channels
Sep 03 21:39:38 <mekhami>	is there somewhere that's listed
Sep 03 21:39:48 <romainl>	ale's readme
Sep 03 21:40:08 <mekhami>	i don't see anything about that in the readme...
Sep 03 21:41:18 <romainl>	vimgor: ale
Sep 03 21:41:18 <vimgor>	ALE is Asynchronous linting/fixing for Vim and Language Server Protocol (LSP) integration ( https://github.com/w0rp/ale ); please try #vim-ale for ALE specific questions
Sep 03 21:41:29 <mekhami>	#vim-ale is invite only.
Sep 03 21:41:42 <romainl>	so use their issue tracker
Sep 03 21:42:04 <m_ben>	ask on github
Sep 03 21:43:05 <romainl>	huge complicated plugins are under their author/maintainer/community's responsibility, not the whole ecosystem's
Sep 03 21:44:14 <romainl>	especially when they have half the number of open issues as projects like react
Sep 03 21:47:15 <mekhami>	what's a less heavy way to just eslint on save, show errors in the quickfix window
Sep 03 21:47:20 <mekhami>	i'm tired of trying to wrangle all these plugins
Sep 03 21:47:43 <romainl>	funny you ask: https://gist.github.com/romainl/ce55ce6fdc1659c5fbc0f4224fd6ad29
Sep 03 22:00:22 <Antony_>	Why isn't :tabnew|tabclose a no-op? :-(
Sep 03 22:01:01 <romainl>	foot, gun, do your thing with those
Sep 03 22:01:25 <mekhami>	romainl: is there a way to use what you posted above to do multiple things? i want to run eslint and prettier on save
Sep 03 22:02:15 <romainl>	look at the comments
Sep 03 22:04:21 <romainl>	prettier being based on eslint, why not just eslint --fix?
Sep 03 22:05:45 <romainl>	I hate autoformatters so much…
Sep 03 22:07:01 <mekhami>	hm
Sep 03 22:07:17 <mekhami>	well autoformatters are nice for keeping things consistent. i think i should be able to 'merge' the two together that way though
Sep 03 22:07:37 <romainl>	https://prettier.io/docs/en/integrating-with-linters.html
Sep 03 22:09:25 <romainl>	"formatting my code in a certain way is so important to me that I write garbage and let the autoformatter clean up the mess behind me"
Sep 03 22:09:54 <mekhami>	:eyeroll:
Sep 03 22:10:10 <mekhami>	there's never a middle ground with you, is there
Sep 03 22:10:12 <mekhami>	how about
Sep 03 22:10:40 <mekhami>	"formatting my code in a certain way is important to my team for readability, so i write code to adhere to that, and what i do miss or forget, my autoformatter helps cover my ass"
Sep 03 22:11:22 <romainl>	"because I don't care enough about what I do"
Sep 03 22:11:30 <mekhami>	whatever you say bud
Sep 03 22:12:23 <mekhami>	idk what's up with your life that you're always such an ass to everyone, but maybe try not insulting everyone around you so thoroughly and needlessly all the time.
Sep 03 22:14:42 <romainl>	I just helped you twice with things you were too lazy to look up yourself. You should consider yourself lucky that others take programming more seriously than you do.
Sep 03 22:14:50 <mekhami>	case in point.
Sep 03 22:14:53 <mekhami>	stop being a cunt.
Sep 03 22:15:05 <mekhami>	it's not useful to yourself or others.
Sep 03 22:16:09 <romainl>	"help me" "fuck you for helping me"
Sep 03 22:16:20 <mekhami>	no, "fuck you for being a cunt about it"
Sep 03 22:16:24 <mekhami>	you can help people without insulting them
Sep 03 22:16:29 <mekhami>	i know, it's hard, you have many years of practice the other way
Sep 03 22:16:33 <mekhami>	but you can do it, i believe in you
Sep 03 22:16:46 <mekhami>	you're a smart guy, just apply yourself to "today i will not be a douchebag"
Sep 03 22:23:01 <Antony_>	How do you screw up code so badly it needs an autoformatter anyway? I mean, I see it happen regularly, but I don't get it.
Sep 03 22:23:22 <romainl>	by not caring about your craft
Sep 03 22:23:36 <mekhami>	ooh, circlejerk time. i'm out, you can jerk each other off privately
Sep 03 22:24:10 <romainl>	it goes with asking others to look up things for you and so on and so forth
Sep 03 22:26:35 <Antony_>	I guess I'd better sit on the fence and not voice an opinion then. :-)
Sep 03 22:27:02 <romainl>	insultman is gone so…
Sep 03 22:29:09 <lopid>	looks like drama. must review
Sep 03 22:35:01 <novum>	m_ben, I push to gitlab/dylnmc/qfilter has a couple updates (namely, {/} became K/J and adds `if` pending operator which selects "inner files" (file group under cursor))
Sep 03 22:36:04 <novum>	sorry gitlab/dylnmc/qfilter.vim specifically) I experimented a bit with using search() for J/K (filejump thing) but it would require lots of finagling (as this way did, too) to get it to be the same
Sep 03 22:37:45 <lopid>	3/10
Sep 03 22:38:50 <m_ben>	novum: I can sign in on gitlab with my github account?
Sep 03 22:39:01 <romainl>	hehe
Sep 03 22:39:50 <novum>	xD I have no idea but pull requests open and you don't have to add if you don't want to. also, I don't have mirror in this computer ... if you want I can just migrate to github. there is no reason if others want to use github to stay on gitlab
Sep 03 22:39:59 <novum>	* pull requests welcome *
Sep 03 22:40:16 <lopid>	this is not that sort of channel!
Sep 03 22:40:48 <m_ben>	I want to give you a big *star*
Sep 03 22:40:55 <novum>	romainl, was that hehe for lopid? or for something else? don't encourage him/her ^n^
Sep 03 22:41:22 <romainl>	for the idea of github accounts being used on gitlab
Sep 03 22:41:54 <novum>	ah. I wonder what sort of data is piped out besides the name of your account
Sep 03 22:42:16 <novum>	it is rather funny though
Sep 03 22:44:06 <m_ben>	why is that funny, is there a rivalry/relationship going on?
Sep 03 22:44:45 <romainl>	wannabe github using github sign-in sounds funny to me
Sep 03 22:45:40 <novum>	m_ben, I deserve no star *hides* but I have found myself actually using the plugin surprisingly often
Sep 03 22:45:54 <novum>	it was romainl's idea so give him a big golden star
Sep 03 22:46:07 <m_ben>	novum: you could also ask romainl how he accomplished the {} jumps. I tried to keep it simple with search() but just yesterday realized that it doesn't work for empty entries, that is ||. I thought that I covered this with my regex, but have to check again
Sep 03 22:46:45 <novum>	mine isn't the fastest implementation in the world, but it does cover a lot of cases, but I could check how he do indeed
Sep 03 22:48:29 <m_ben>	I filter my quickfix lists all the time
Sep 03 22:48:44 <novum>	I didn't test mine with completely empty entries either
Sep 03 22:48:56 <romainl>	became second nature, here
Sep 03 22:49:26 <novum>	I like dif instead of :RejectFile TheFileForTheLine.txt
Sep 03 22:50:24 <m_ben>	what happened to 'inner paragraph'?
Sep 03 22:50:50 <novum>	eh. hehe. it's not a paragraph xD do you want ip?
Sep 03 22:51:17 <novum>	I had it as ig as you suggested then changed it to if because .. idk
Sep 03 22:52:07 <m_ben>	nickspoon: https://github.com/bfrg/vim-qf-preview still need to add an option for specifying the height. I was also thinking about adding mappings to jump to the next/prev file and automatically opening the popup, something like < and >. currently you have to press j/k and then p
Sep 03 22:52:36 <nickspoon>	m_ben: I just installed it 2 minutes ago 😄
Sep 03 22:53:02 <novum>	hehe. I saw you all discussing a while ago. I can easily check it out now. I was hopeing you'd make it a plugin. I can test on crappy bsd (os x) later x]
Sep 03 22:53:02 <m_ben>	novum: I will adapt to either
Sep 03 22:53:45 <novum>	who is bfrg xd
Sep 03 22:54:01 <m_ben>	nickspoon: 8.1.1705 is required because of the new #{} notation
Sep 03 22:54:01 <romainl>	I know :-)
Sep 04 07:55:02 *	Disconnected ()
**** ENDING LOGGING AT Wed Sep  4 07:55:02 2019

**** BEGIN LOGGING AT Wed Sep  4 07:55:27 2019

Sep 04 07:55:27 *	Now talking on #vim
Sep 04 07:55:27 *	Topic for #vim is: Can't talk? Register https://freenode.net/kb/answer/registration | Vim 8.1.1467 http://www.vim.org | Don't ask to ask! | Use :help and :helpgrep | WIKI: http://vim.wikia.com | PASTE: http://vpaste.net/?ft=vim | https://www.vi-improved.org
Sep 04 07:55:27 *	Topic for #vim set by phy1729 (Wed Jun  5 19:23:57 2019)
Sep 04 07:55:27 -ChanServ-	[#vim] vim discussion .. www.vim.org, vim.sf.net, :help
Sep 04 07:55:27 *	Channel #vim url: http://vi-improved.org
Sep 04 10:15:33 *	Disconnected ()
**** ENDING LOGGING AT Wed Sep  4 10:15:33 2019

**** BEGIN LOGGING AT Wed Sep  4 10:15:56 2019

Sep 04 10:15:56 *	Now talking on #vim
Sep 04 10:15:56 *	Topic for #vim is: Can't talk? Register https://freenode.net/kb/answer/registration | Vim 8.1.1467 http://www.vim.org | Don't ask to ask! | Use :help and :helpgrep | WIKI: http://vim.wikia.com | PASTE: http://vpaste.net/?ft=vim | https://www.vi-improved.org
Sep 04 10:15:56 *	Topic for #vim set by phy1729 (Wed Jun  5 19:23:57 2019)
Sep 04 10:15:56 -ChanServ-	[#vim] vim discussion .. www.vim.org, vim.sf.net, :help
Sep 04 10:15:56 *	Channel #vim url: http://vi-improved.org
Sep 04 10:34:34 <_vpal_>	How do I list only modified buffers in vim? Sometimes when there are a lot of buffers, it becomes hard to see which buffers have been modified.
Sep 04 10:35:32 <_vpal_>	:help
Sep 04 10:39:24 <threenuc>	Hi. Is there a plugin similar to the VSCode Ctrl+P (https://code.visualstudio.com/assets/docs/getstarted/tips-and-tricks/QuickOpen.gif) for Vim?
Sep 04 10:39:24 *	#vim :Cannot send to nick/channel
Sep 04 10:39:37 >NickServ<	identify ****
Sep 04 10:39:37 -NickServ-	You are now identified for Threenuc.
Sep 04 10:39:41 <threenuc>	Hi. Is there a plugin similar to the VSCode Ctrl+P (https://code.visualstudio.com/assets/docs/getstarted/tips-and-tricks/QuickOpen.gif) for Vim?
Sep 04 10:42:00 <MrElendig>	multiple, including one named ctrlp
Sep 04 10:42:30 <MrElendig>	which predates vscode by quite a lot
Sep 04 10:46:42 <steven>	threenuc: I use fzf.vim for this.
Sep 04 10:52:31 <currybullen>	can i while i have opened a file in a buffer set the file type of the file, so that the correct tab settings/syntax etc is loaded for that file?
Sep 04 10:53:54 <edd_lc>	can anyone help me debug an issue im having where there's a blank line under vim and only vim? https://imgur.com/a/MdR0m3r
Sep 04 11:01:16 <squ>	yeah that annoying line
Sep 04 11:03:13 <MrElendig>	goes away if you resize the terminal a few pixels?
Sep 04 11:04:03 <osse>	yes it looks like the usual can't-find-entire-space thing
Sep 04 11:04:22 <osse>	it will happen to any cli program that uses a different background color
Sep 04 11:09:55 <currybullen>	like, can i stick something in a plaintext file so that vim opens it as if it was a .sh file?
Sep 04 11:10:44 <MrElendig>	you can set an editor line
Sep 04 11:11:17 <lopid>	yes. a shebang
Sep 04 11:11:48 <lopid>	i think MrElendig means a modeline (if they're enabled)
Sep 04 11:12:58 <currybullen>	can the filetype be set in a modeline? ive only seen it used to set ts and sw  i think
Sep 04 11:13:12 <lopid>	yes
Sep 04 11:23:07 <squ>	modeline support may be disabled on some systems
Sep 04 11:23:32 <MrElendig>	there is also editorconfig, but that is external to the file
Sep 04 11:32:55 <currybullen>	thanks!
Sep 04 11:36:32 <edd_lc>	MrElendig, osse: thanks. yes, the issue is it doesn't fit. played around with font size/dpi to decrease it and make it less of an eye sore
Sep 04 11:37:07 <MrElendig>	you could use size hints, but imo that just looks worse
Sep 04 11:52:30 <osse>	edd_lc: you can perhaps change the default background of the terminal to match vim's
Sep 04 11:56:21 <muffindrake>	Applying external color schemes, is there a way for terminal vim not to explicitly draw the background color set in a theme, so that a terminal can replace the default background with an image as some pseudo-transparency?
Sep 04 15:37:42 <_vpal_>	hello
Sep 04 16:56:05 *	Disconnected ()
**** ENDING LOGGING AT Wed Sep  4 16:56:05 2019

**** BEGIN LOGGING AT Wed Sep  4 16:56:30 2019

Sep 04 16:56:30 *	Now talking on #vim
Sep 04 16:56:30 *	Topic for #vim is: Can't talk? Register https://freenode.net/kb/answer/registration | Vim 8.1.1467 http://www.vim.org | Don't ask to ask! | Use :help and :helpgrep | WIKI: http://vim.wikia.com | PASTE: http://vpaste.net/?ft=vim | https://www.vi-improved.org
Sep 04 16:56:30 *	Topic for #vim set by phy1729 (Wed Jun  5 19:23:57 2019)
Sep 04 16:56:30 -ChanServ-	[#vim] vim discussion .. www.vim.org, vim.sf.net, :help
Sep 04 16:56:30 *	Channel #vim url: http://vi-improved.org
Sep 04 17:02:54 <m_ben>	novum: some updates: https://github.com/bfrg/vim-qf-preview I don't know how to adjust the video resolution on asciinema. is that even possible?
Sep 04 17:03:22 <novum>	how did you know I was in here! you sneaky taco!
Sep 04 17:04:11 <m_ben>	weechat's case-insensitive tab-completion: no<tab>
Sep 04 17:04:39 <novum>	asciinema uses the $COLS and $ROWS reported by curses/tput pkg
Sep 04 17:05:21 <novum>	ie the rows and cols (for each monospace char) in terminal are what asciinema uses
Sep 04 17:07:13 <novum>	looks good. I am on 1566 right now x(
Sep 04 17:08:06 <novum>	the config you have if you ssh into a server and have slightly older vim. That's what I don't like about #{} dicts. I like the idea, though
Sep 04 17:08:38 <novum>	E121: Undefined variable: #
Sep 04 17:10:50 <m_ben>	did you try the plugin or how did you get the error? the plugin uses #{} everywhere but there's a has('patch-8.1.1705')
Sep 04 17:14:15 <novum>	I typed :let d = #{ foo:'bar' } in my vim with patches 1-1566
Sep 04 17:15:00 <m_ben>	ah okay, it was added in 1-1705
Sep 04 17:15:02 <novum>	if you're using that plugin and the plugin works, then certainly #{} should work, buuuut what I am saying is that if you want a portable configuration, then unfortunately, it isn't wise to use #{} in your vimrc, for instance
Sep 04 17:15:21 <novum>	and if you're making a plugin for others to use, then unfortunately you can't use #{}
Sep 04 17:15:32 <novum>	unless your plugin only supports that patch and above of course
Sep 04 17:16:12 <novum>	I wonder why my gvim is quite slow on InsertEnter and InsertLeave
Sep 04 17:16:17 <novum>	I haven't updated anything really
Sep 04 17:16:41 <novum>	like 250ms lag
Sep 05 09:58:43 *	Disconnected ()
**** ENDING LOGGING AT Thu Sep  5 09:58:43 2019

**** BEGIN LOGGING AT Thu Sep  5 09:59:06 2019

Sep 05 09:59:06 *	Now talking on #vim
Sep 05 09:59:06 *	Topic for #vim is: Can't talk? Register https://freenode.net/kb/answer/registration | Vim 8.1.1467 http://www.vim.org | Don't ask to ask! | Use :help and :helpgrep | WIKI: http://vim.wikia.com | PASTE: http://vpaste.net/?ft=vim | https://www.vi-improved.org
Sep 05 09:59:06 *	Topic for #vim set by phy1729 (Wed Jun  5 19:23:57 2019)
Sep 05 09:59:07 -ChanServ-	[#vim] vim discussion .. www.vim.org, vim.sf.net, :help
Sep 05 09:59:07 *	Channel #vim url: http://vi-improved.org
Sep 05 10:00:31 <igemnace>	pyzozord: generally, you can't
Sep 05 10:02:34 <pyzozord>	igemnace: hahah thanks, i'm imperssed how you can save mine and your times cutting to the chase
Sep 05 10:10:31 <igemnace>	yep. you might like :h wrapmargin (or :h textwidth if you want to hard wrap and find a way to soft wrap later on), but none are exactly what you're looking for
Sep 05 10:10:31 <digmbot>	:help wrapmargin -> http://vimhelp.appspot.com/options.txt.html#%27wrapmargin%27 | :help textwidth -> http://vimhelp.appspot.com/options.txt.html#%27textwidth%27
Sep 05 10:42:33 <m1cl>	hey, I have an issue with GVIM, cannot see the bottom, ex-mode input field,
Sep 05 10:42:51 <m1cl>	the cursor is underneath the statusline
Sep 05 10:57:34 <m1cl>	plugin manager recommendation? Plug sugs
Sep 05 11:02:37 <osse>	I recommend Plug
Sep 05 11:15:34 <bkhl>	I recommend the built-in one in Vim 8
Sep 05 11:16:13 <nickspoon>	the built-in one is good if you're happy to git clone your plugins manually
Sep 05 11:16:26 <nickspoon>	If you want you plugin manager to do that for you, use Plug
Sep 05 11:16:32 <bkhl>	I use git submodules for it
Sep 05 11:16:41 <nickspoon>	that counts as manual 😄
Sep 05 11:18:24 <bkhl>	Maybe I should write a Vim plugin to run `git submodule add` so it's automatic …
Sep 05 11:41:29 <steven>	like minpac?
Sep 05 11:41:31 <steven>	yeah +1 for plug, if you wanted an actual plugin *manager* plug is what you want m1cl
Sep 05 11:42:35 <steven>	at last years vimconf bram talked about how he wanted to move one of those plugin manages into vim but didn't because (at the time) he couldn't find one that the community agreed on
Sep 05 11:43:33 <lopid>	minpac clones
Sep 05 11:43:48 <lopid>	rather, minpac clones git
Sep 05 11:44:44 <steven>	ok, never really bothered with minpac. afaik it just leverages vim8's native packages api
Sep 05 11:45:54 <lopid>	it just adds, removes, updates plugins from vim's own [new] rtp
Sep 05 14:46:10 <pabgan>	hi there. I want to create a mapping that lets me decide between a list of snippets to insert, it looks like: nnoremap \is<TAB> :read $HOME/Plantillas/snippets/<TAB>
Sep 05 14:47:16 <pabgan>	after that I would expect to have the wildmenu open to select one, hit enter and be done. INstead I am stuck with :read $HOME/Plantillas/snippets/^I at the bottom
Sep 05 14:47:33 <pabgan>	how to map the actual press of TAB instead of inserting a tab character?
Sep 05 15:15:40 <lopid>	try <c-i>
Sep 05 15:15:46 <lopid>	pabgan
Sep 05 15:16:35 <mgedmin>	pabgan: :h 'wildcharm'
Sep 05 15:16:36 <digmbot>	:help 'wildcharm' -> http://vimhelp.appspot.com/options.txt.html#%27wildcharm%27
Sep 05 15:17:00 <lopid>	alright, why is it "edmin" not "admin"?
Sep 05 15:17:35 <mgedmin>	vim-plug rules
Sep 05 15:19:10 <lopid>	?
Sep 05 15:36:17 <nulleip>	does vim has code folding?
Sep 05 15:38:01 <lopid>	it has folding, yes
Sep 05 16:05:09 <lopid>	how can i get ":grep! -n foo a/**/b.txt" to effectively obey the globstar?
Sep 05 16:29:50 <igemnace>	lopid: grrr, that's also a gripe of mine
Sep 05 16:30:31 <igemnace>	i never remember how many levels of escaping is needed
Sep 05 16:30:45 <lopid>	oh so it's an escaping issue?
Sep 05 16:31:15 <igemnace>	isn't it? if it weren't, it'd just be up to the shell, right?
Sep 05 16:31:34 <igemnace>	i'm not actually sure, test it out
Sep 05 16:31:38 <lopid>	i didn't think the shell would have globstar enabled by default
Sep 05 16:32:01 <igemnace>	ah, you're *not* relying on your shell for globstar? i thought that was what you were after
Sep 05 16:32:41 <lopid>	i did briefly look into changing it…
Sep 05 16:33:08 <lopid>	but saw a little rabbit hole i couldn't be bothered with :)
Sep 05 16:33:34 <igemnace>	ah, alrightyj
Sep 05 16:33:55 <lopid>	up to five escaping levels is unsuccessful
Sep 05 16:45:15 <igemnace>	hmm if you're not relying on the shell, it's likely not an escaping issue. does vim expand globs on the commandline on its own? that's only for certain commands iirc
Sep 05 16:45:31 <igemnace>	perhaps you'll simply have to glob() it
Sep 05 16:46:30 <crose>	Not sure it helps, but if you increase the verbosity level to 4, you can see which exact shell command Vim sends to the shell (`:4verb grep! -n foo a/**/b.txt`).
Sep 05 16:50:41 *	Disconnected ()
**** ENDING LOGGING AT Thu Sep  5 16:50:41 2019

**** BEGIN LOGGING AT Thu Sep  5 16:54:00 2019

Sep 05 16:54:00 *	Now talking on #vim
Sep 05 16:54:00 *	Topic for #vim is: Can't talk? Register https://freenode.net/kb/answer/registration | Vim 8.1.1467 http://www.vim.org | Don't ask to ask! | Use :help and :helpgrep | WIKI: http://vim.wikia.com | PASTE: http://vpaste.net/?ft=vim | https://www.vi-improved.org
Sep 05 16:54:00 *	Topic for #vim set by phy1729 (Wed Jun  5 19:23:57 2019)
Sep 05 16:54:01 -ChanServ-	[#vim] vim discussion .. www.vim.org, vim.sf.net, :help
Sep 05 16:54:01 *	Channel #vim url: http://vi-improved.org
Sep 05 19:14:39 *	Disconnected ()
**** ENDING LOGGING AT Thu Sep  5 19:14:39 2019

**** BEGIN LOGGING AT Thu Sep  5 19:15:06 2019

Sep 05 19:15:06 *	Now talking on #vim
Sep 05 19:15:06 *	Topic for #vim is: Can't talk? Register https://freenode.net/kb/answer/registration | Vim 8.1.1467 http://www.vim.org | Don't ask to ask! | Use :help and :helpgrep | WIKI: http://vim.wikia.com | PASTE: http://vpaste.net/?ft=vim | https://www.vi-improved.org
Sep 05 19:15:06 *	Topic for #vim set by phy1729 (Wed Jun  5 19:23:57 2019)
Sep 05 19:15:06 -ChanServ-	[#vim] vim discussion .. www.vim.org, vim.sf.net, :help
Sep 05 19:15:06 *	Channel #vim url: http://vi-improved.org
Sep 05 19:28:42 <wald0>	when working in code (refactoring), i search matches using * to hilight them, is there a way to show results on the other files of this source code too ?
Sep 05 19:29:14 <wald0>	something like a key that it greps for these matches in the other files / dir tree, and shows them like in a list in the bottom could be nice
Sep 05 19:29:33 <lopid>	:help :grep
Sep 05 19:29:34 <digmbot>	:help :grep -> http://vimhelp.appspot.com/quickfix.txt.html#%3Agrep
Sep 05 19:30:10 <lopid>	<c-r><c-w> to place the current word in the command line
Sep 05 19:35:52 <wald0>	mmh looks good but not enough, maybe there's a special plugin for this, i would like that results appears directly on my bottom bar and I can click on them to directly edit these files in their match place
Sep 05 19:36:16 <lopid>	 :copen
Sep 05 19:37:32 <wald0>	map <F4> :execute "vimgrep /" . expand("<cword>") . "/j **" <Bar> cw<CR>
Sep 05 19:37:39 <wald0>	ha! that is just what i was searching for!
Sep 05 19:37:42 <dman777>	Can anyone recommend a plugin like Visual Studio's CodeLens?
Sep 05 19:37:56 <wald0>	press F4 and it opens quickfix with the list of matches from the current word... amazing
Sep 05 19:38:03 <lopid>	i use f3
Sep 05 19:38:10 <lopid>	but you may use f4
Sep 05 19:38:10 <igemnace>	dman777: what does it do?
Sep 05 19:38:30 <dman777>	igemnace: https://github.com/markwoodhall/vim-codelens
Sep 05 19:38:36 <wald0>	lopid: yeah thats a better one, but i have F2 / F3 used for "prev / next file"
Sep 05 19:38:38 <dman777>	but this one isn't 100% production ready
Sep 05 19:40:36 <igemnace>	dman777: which part is lacking?
Sep 05 19:42:34 <dman777>	igemnace: it is breaking
Sep 05 19:43:41 <igemnace>	dman777: which part exactly? i ask because i don't know of any other plugin that does git blame with virtual text, but for things like e.g. navigating blames, other plugins like fugitive can help
Sep 05 19:44:17 <dman777>	igemnace: I tried fugitive the other day and I got a error with :Gblame
Sep 05 21:45:17 *	Disconnected ()
**** ENDING LOGGING AT Thu Sep  5 21:45:17 2019

**** BEGIN LOGGING AT Thu Sep  5 21:45:43 2019

Sep 05 21:45:43 *	Now talking on #vim
Sep 05 21:45:43 *	Topic for #vim is: Can't talk? Register https://freenode.net/kb/answer/registration | Vim 8.1.1467 http://www.vim.org | Don't ask to ask! | Use :help and :helpgrep | WIKI: http://vim.wikia.com | PASTE: http://vpaste.net/?ft=vim | https://www.vi-improved.org
Sep 05 21:45:43 *	Topic for #vim set by phy1729 (Wed Jun  5 19:23:57 2019)
Sep 05 21:45:44 -ChanServ-	[#vim] vim discussion .. www.vim.org, vim.sf.net, :help
Sep 05 21:45:44 *	Channel #vim url: http://vi-improved.org
Sep 05 22:13:57 <ska>	Regex's like  : :%s/\(^                     relname='.*'\)}/\1/ ?
Sep 06 08:11:44 *	Disconnected ()
**** ENDING LOGGING AT Fri Sep  6 08:11:44 2019

**** BEGIN LOGGING AT Fri Sep  6 08:12:10 2019

Sep 06 08:12:10 *	Now talking on #vim
Sep 06 08:12:10 *	Topic for #vim is: Can't talk? Register https://freenode.net/kb/answer/registration | Vim 8.1.1467 http://www.vim.org | Don't ask to ask! | Use :help and :helpgrep | WIKI: http://vim.wikia.com | PASTE: http://vpaste.net/?ft=vim | https://www.vi-improved.org
Sep 06 08:12:10 *	Topic for #vim set by phy1729 (Wed Jun  5 19:23:57 2019)
Sep 06 08:12:12 -ChanServ-	[#vim] vim discussion .. www.vim.org, vim.sf.net, :help
Sep 06 08:12:12 *	Channel #vim url: http://vi-improved.org
Sep 06 14:11:19 <bn_work>	does anyone know if (mac)vim creates a temp file for new buffers?  my machine died and I lost open windows?
Sep 06 14:12:07 <steven>	buffers are in memory
Sep 06 14:13:36 <lopid>	unless you disabled swapfiles
Sep 06 14:16:26 <bn_work>	don't think I did?  I always get prompted about swapfiles from previous sessions upon loading of old files but what about new unsaved buffers
Sep 06 14:16:40 <bn_work>	where are those stored?
Sep 06 14:17:45 <lopid>	the same place as the new file, or pwd, or 'directory'
Sep 06 14:18:01 <lopid>	as in :help 'directory'
Sep 06 14:18:02 <digmbot>	:help 'directory' -> http://vimhelp.appspot.com/options.txt.html#%27directory%27
Sep 06 14:59:28 <bn_work>	lopid:  :!pwd shows ~/ but I don't see anything there, (help says "for Unix: ".,~/tmp,/var/tmp,/tmp"" and I assume OSX)
Sep 06 15:00:01 <bn_work>	lopid: what would it call swap files for new unsaved buffers?
Sep 06 15:00:18 <lopid>	.sw?
Sep 06 15:03:14 <bn_work>	lopid: ok, i think I see them!  is it actually `.s??`  I see one from yesterday called .svx  how would I recover it?
Sep 06 15:03:42 <lopid>	could be, if you have so many. vim -r <file>
Sep 06 15:05:46 <bn_work>	yes, that worked!  you're a life saver, thanks lopid!  <3 vim :)
Sep 06 15:05:58 <lopid>	:)
Sep 06 15:16:11 <lavalike>	why does the cursor go back one upon pressing ESC?
Sep 06 15:18:07 <LeoNerd>	Rounding error
Sep 06 15:18:23 <LeoNerd>	In insert mode, the logical concept of a cursor is "in between" two characters, whereas in normal mode it is on top of one
Sep 06 15:18:32 <LeoNerd>	So in insert mode its position is sortof at +0.5 away
Sep 06 15:19:00 <LeoNerd>	Entering insert mode by either `i` or `a` moves it +0.5 or -0.5 from where it is, but there's only one way to leave. that has to round down
Sep 06 15:22:53 <lavalike>	it always throws me off
Sep 06 15:23:16 <LeoNerd>	I find if you use an I-beam cursor shape for insert mode it feels more natural
Sep 06 16:42:16 *	Disconnected ()
**** ENDING LOGGING AT Fri Sep  6 16:42:16 2019

**** BEGIN LOGGING AT Fri Sep  6 16:42:40 2019

Sep 06 16:42:40 *	Now talking on #vim
Sep 06 16:42:40 *	Topic for #vim is: Can't talk? Register https://freenode.net/kb/answer/registration | Vim 8.1.1467 http://www.vim.org | Don't ask to ask! | Use :help and :helpgrep | WIKI: http://vim.wikia.com | PASTE: http://vpaste.net/?ft=vim | https://www.vi-improved.org
Sep 06 16:42:40 *	Topic for #vim set by phy1729 (Wed Jun  5 19:23:57 2019)
Sep 06 16:42:41 -ChanServ-	[#vim] vim discussion .. www.vim.org, vim.sf.net, :help
Sep 06 16:42:41 *	Channel #vim url: http://vi-improved.org
Sep 07 11:05:28 *	Disconnected ()
**** ENDING LOGGING AT Sat Sep  7 11:05:28 2019

**** BEGIN LOGGING AT Sat Sep  7 11:05:50 2019

Sep 07 11:05:50 *	Now talking on #vim
Sep 07 11:05:50 *	Topic for #vim is: Can't talk? Register https://freenode.net/kb/answer/registration | Vim 8.1.1467 http://www.vim.org | Don't ask to ask! | Use :help and :helpgrep | WIKI: http://vim.wikia.com | PASTE: http://vpaste.net/?ft=vim | https://www.vi-improved.org
Sep 07 11:05:50 *	Topic for #vim set by phy1729 (Wed Jun  5 19:23:57 2019)
Sep 07 11:05:51 -ChanServ-	[#vim] vim discussion .. www.vim.org, vim.sf.net, :help
Sep 07 11:05:51 *	Channel #vim url: http://vi-improved.org
Sep 07 11:58:11 <ReekyMarko>	Can anyone help me to install this plugin using vim-plug: https://git.zx2c4.com/password-store/tree/contrib/vim/redact_pass.vim
Sep 07 11:58:59 <ReekyMarko>	I tried Plug 'https://git.zx2c4.com/password-store', { 'rtp': 'contrib/vim' } but it doesn't seem to work
Sep 07 12:11:50 <romainl>	just put that file in ~/.vim/plugin/
Sep 07 12:12:28 <ReekyMarko>	Yeah I know I could do that but then it's a hassle when I want to install this setup on a new machine
Sep 07 12:12:40 <ReekyMarko>	And they might update the plugin etc
Sep 07 12:13:22 <romainl>	hassle how?
Sep 07 12:13:36 <romainl>	and they "might" update it
Sep 07 12:14:52 <ReekyMarko>	I mean this is why plugin managers exist, isn't it? It installs and updates plugins for you so you don't have to do it manually
Sep 07 12:15:26 <romainl>	yes, but that's not a proper plugin
Sep 07 12:15:36 <romainl>	it doesn't have the required structure
Sep 07 12:16:16 <ReekyMarko>	Aah okay, so this might be the reason why it doesn't load. Thanks
Sep 07 12:16:20 <ReekyMarko>	Might have to do it manually then
Sep 07 12:16:22 <romainl>	should be contrib/vim/plugin/redact_pass.vim
Sep 07 13:39:15 <cyphex>	Need some help with getting vimscript to work, any input is appreciated
Sep 07 13:39:25 <cyphex>	let cur_file = expand('%:t')
Sep 07 13:40:15 <romainl>	use a pastebin
Sep 07 13:40:20 <cyphex>	nnoremap <key> :!tmux run-shell -t 2 "some_command " + cur_file <cr>
Sep 07 13:40:39 <cyphex>	it's just those two lines, but I can use a pastebin if needed
Sep 07 13:41:09 <lopid>	:help :execute
Sep 07 13:41:12 <digmbot>	:help :execute -> http://vimhelp.appspot.com/eval.txt.html#%3Aexecute
Sep 07 13:44:52 <cyphex>	ty
Sep 07 15:13:31 <grobi>	7quit
Sep 07 15:38:48 <rosco_y>	is there a way to search and replace a character in a column position in a file? https://paste.ofcode.org/uEw2qjUS96p22VVawMt3tw
Sep 07 15:39:27 <rosco_y>	My example data doesn't make it clear--there are blanks in other positions too.
Sep 07 15:39:49 <rosco_y>	(For example:  qwe qrjrj q;lkj
Sep 07 15:40:28 <rosco_y>	so I just want to replace the blank in the forth column with commas.
Sep 07 15:40:56 <m_ben>	rosco_y: use awk
Sep 07 15:41:40 <rosco_y>	m_ben Thank You! Does awk have a big learning curve?
Sep 07 15:42:06 <m_ben>	I don't see a forth column
Sep 07 15:42:21 <m_ben>	how about providing a better example
Sep 07 15:43:27 <rosco_y>	My file contains three alpha chars, then a blank, then other alphanumeric characters, (including blanks.)
Sep 07 15:43:41 <m_ben>	oh, I thought you had each data column separated by whitespace
Sep 07 15:44:04 <rosco_y>	I appologize, I should have made that more clear.
Sep 07 15:44:30 <rosco_y>	That would be quite easy to search and replace, if that were the case.
Sep 07 15:44:42 <m_ben>	you can match a specific column in vim, see :h /\%c
Sep 07 15:44:43 <digmbot>	:help /\%c -> http://vimhelp.appspot.com/pattern.txt.html#%2F%5C%25c
Sep 07 15:45:30 <rosco_y>	Thank you, I think that's what I was looking for :)
Sep 07 15:46:12 <m_ben>	:%s/\%4c /XYZ
Sep 07 15:48:37 <rosco_y>	m_ben, that's what I did, and it works perfectly (of course.)  Thanks Again!
Sep 07 15:49:45 <rosco_y>	Do you know how to delete a character at a specific column?
Sep 07 15:50:03 <romainl>	move to that column and press x
Sep 07 15:50:08 <rosco_y>	:)
Sep 07 15:50:46 <rosco_y>	let me rephrase that: do you know how to search and delete a character?
Sep 07 15:51:04 <romainl>	more context
Sep 07 15:51:43 <romainl>	in a line? in a file? multiple occurrences to substitute? in a string as part of a script?
Sep 07 15:51:46 <rosco_y>	Now I have a blank at my nth column all the way down my file, which I would like to delete from each line.
Sep 07 15:52:28 <romainl>	how would you do it on one line?
Sep 07 15:53:49 <m_ben>	:%s/\%4c.//
Sep 07 15:53:58 <rosco_y>	I would do it just as you recommended, if there were only one occurance.
Sep 07 15:54:15 <romainl>	you said there' only one on that line
Sep 07 15:54:27 <rosco_y>	m_ben, Thank I believe that will do it :)
Sep 07 15:54:27 <romainl>	only one character to remove
Sep 07 15:57:38 <rosco_y>	romainl, I appologize for being so vague: I had many lines of data that needed to have the blank removed.
Sep 07 15:58:21 <rosco_y>	Thank you again m_ben, romainl you've been a big help!
Sep 07 15:58:58 <romainl>	there are many ways to do that and the best approach is to build on what you already know
Sep 07 15:59:34 <m_ben>	rosco_y: /\%4c. will match _any_ character in the 4th column, if you want to match whitespace only, then you need /\%4c\s or "/\%4c "
Sep 07 15:59:38 <romainl>	18|x on the line
Sep 07 15:59:38 <romainl>	:%normal 18|x on all lines
Sep 07 16:20:17 <novum>	is there a way to add two days to strftime() or should I just use python in ultisnips
Sep 07 16:21:59 <novum>	eh I have to use python anyway becuase regex matching
Sep 07 16:22:20 <osse>	novum: strftime("...", localtime() + 2 * 24 * 3600)
Sep 07 16:22:24 <romainl>	ah yes, regex, the missing feature in Vim
Sep 07 16:23:33 <novum>	ah osse I didn't know you could pass second param. cool xd
Sep 07 16:24:02 <novum>	romainl, you either don't understand or .. idk xd *hugs*
Sep 07 16:24:05 <romainl>	:h knew
Sep 07 17:11:12 *	Disconnected ()
**** ENDING LOGGING AT Sat Sep  7 17:11:12 2019

**** BEGIN LOGGING AT Sat Sep  7 17:11:34 2019

Sep 07 17:11:34 *	Now talking on #vim
Sep 07 17:11:34 *	Topic for #vim is: Can't talk? Register https://freenode.net/kb/answer/registration | Vim 8.1.1467 http://www.vim.org | Don't ask to ask! | Use :help and :helpgrep | WIKI: http://vim.wikia.com | PASTE: http://vpaste.net/?ft=vim | https://www.vi-improved.org
Sep 07 17:11:34 *	Topic for #vim set by phy1729 (Wed Jun  5 19:23:57 2019)
Sep 07 17:11:46 -ChanServ-	[#vim] vim discussion .. www.vim.org, vim.sf.net, :help
Sep 07 17:11:46 *	Channel #vim url: http://vi-improved.org
Sep 09 09:21:29 *	Disconnected ()
**** ENDING LOGGING AT Mon Sep  9 09:21:29 2019

**** BEGIN LOGGING AT Mon Sep  9 09:21:51 2019

Sep 09 09:21:51 *	Now talking on #vim
Sep 09 09:21:51 *	Topic for #vim is: Can't talk? Register https://freenode.net/kb/answer/registration | Vim 8.1.1467 http://www.vim.org | Don't ask to ask! | Use :help and :helpgrep | WIKI: http://vim.wikia.com | PASTE: http://vpaste.net/?ft=vim | https://www.vi-improved.org
Sep 09 09:21:51 *	Topic for #vim set by phy1729 (Wed Jun  5 19:23:57 2019)
Sep 09 09:21:51 -ChanServ-	[#vim] vim discussion .. www.vim.org, vim.sf.net, :help
Sep 09 09:21:51 *	Channel #vim url: http://vi-improved.org
Sep 09 12:18:03 <plitter>	I was just coming back to my machine and pressed backspace in vim and got <BS> what combination do I have to do to get that?
Sep 09 12:18:36 <osse>	plitter: ctrl-v
Sep 09 12:18:40 <lopid>	ctrl-k
Sep 09 12:18:48 <plitter>	ctrl-k is the winner ;)
Sep 09 12:18:50 <plitter>	thanks
Sep 09 12:18:58 <lopid>	lopid@paypal.com
Sep 09 12:19:11 <plitter>	donations have been sent
Sep 09 12:19:15 <lopid>	:D
Sep 09 14:23:43 <choice>	Hello! In a large codebase, I need to update all occurances of "<?" to "<?php". How would you guys go about this?
Sep 09 14:24:39 <mgedmin>	vim-fugitive's :Ggrep '<[?]', followed by :cdo s/<?/<?php/, probably
Sep 09 14:24:43 <NerdyPepper>	:vimgrep and the change motion probably
Sep 09 14:25:09 <NerdyPepper>	i would typically do this from outside vim with grep/rg
Sep 09 14:25:29 <choice>	mgedmin: For every file manually?
Sep 09 14:25:36 <mgedmin>	:help :cdo
Sep 09 14:25:36 <digmbot>	:help :cdo -> http://vimhelp.appspot.com/quickfix.txt.html#%3Acdo
Sep 09 14:25:41 <choice>	NerdyPepper: grep/rg?
Sep 09 14:26:30 <NerdyPepper>	choice, ripgrep
Sep 09 14:26:36 <lopid>	indeed, grep and ed
Sep 09 14:27:35 <mgedmin>	choice: :cdo is the automation of "for every file" (or, rather, for every match; :cfdo would be for every file that contains matches)
Sep 09 14:38:12 <choice>	How can I combine :w and :cn?
Sep 09 14:41:55 <choice>	Ah, |!. I do this now: :%s/<?/<?php/gc|w|cn
Sep 09 14:42:09 <choice>	How would I put that on a key, so I don't always have to : and arrow up?
Sep 09 14:42:39 <squ>	map
Sep 09 14:43:19 <NerdyPepper>	@: repeats the last command
Sep 09 14:43:27 <NerdyPepper>	choice ^
Sep 09 14:43:56 <steven>	choice use bufdo for this
Sep 09 14:44:15 <steven>	or just sed and do it once for every file
Sep 09 14:44:23 <choice>	NerdyPepper: Seems not tow work for :%s/<?/<?php/gc|w|cn
Sep 09 14:45:39 <NerdyPepper>	works just fine choice, whats the error (if any)?
Sep 09 14:46:16 <steven>	also /<?$/<?php choice
Sep 09 14:46:18 <petaflot>	Hello! today I have tried the spellcheck (french).. there are a (high) number of obvious mistakes, how/where can I report this?
Sep 09 14:46:58 <steven>	I really feel like you're asking the wrong quesion, I feel like i get what you're trying to do but the way you do it is wrong
Sep 09 14:47:53 <steven>	petaflot: did you confirm that you use the correct dictionary?
Sep 09 14:48:32 <NerdyPepper>	steven, spelllang was it?
Sep 09 14:48:51 <steven>	yes
Sep 09 14:49:00 <steven>	:set spelllang?
Sep 09 14:49:02 <petaflot>	steven: I use 'fr', there is no fr_CH dict
Sep 09 14:49:40 <petaflot>	:setlocal spell spelllang=fr
Sep 09 14:50:35 <steven>	:h spellfile
Sep 09 14:50:35 <digmbot>	:help spellfile -> http://vimhelp.appspot.com/options.txt.html#%27spellfile%27
Sep 09 14:51:17 <petaflot>	basically it reports many errors which are in fact grammatically correct (eg: 'expliquez-moi' is labelled as wrong, first suggestion is 'expliquez moi' but is grammatically incorrect
Sep 09 14:51:24 <throstur>	I'm trying to get the vim statusline to have a background (I'm using cmder, similar to ConEmu, on windows) but it seems that even :hi StatusLine ctermbg=blue doesn't have any effect. The statusline is the same color as the editor/terminal background. How can I troubleshoot this?
Sep 09 14:52:12 <igemnace>	throstur: perhaps you don't have anything on the statusline at all?
Sep 09 14:52:59 <throstur>	igemnace: maybe I'm talking about that line that separates splits?
Sep 09 14:53:16 <steven>	petaflot: then add those to your local spellfile, dunno. I don't know french. I don't know whether fr_CH differs from fr.. and I don't know whether there is a fr_CH dict available
Sep 09 14:53:22 <igemnace>	throstur: can we get a screenshot?
Sep 09 14:53:24 <throstur>	igemnace: in any case, neither have background colors, and it's causing me problems
Sep 09 14:56:48 <throstur>	igemnace: https://imgur.com/V3dTRXQ
Sep 09 14:57:53 <igemnace>	what does :hi Statusline say
Sep 09 14:58:22 <choice>	I am now doing it outside vim:
Sep 09 14:58:23 <choice>	This works so far: sed -i 's/^<?$/<?php/' *.php
Sep 09 14:58:26 <choice>	Can I make it recursively dive into directories?
Sep 09 14:59:04 <igemnace>	choice: if you have a shell that supports globstar, you can use **/*.php
Sep 09 14:59:45 <igemnace>	otherwise, find -exec
Sep 09 14:59:51 <choice>	igemnace: maybe i better use find ...
Sep 09 15:01:00 <steven>	find . -name "*.php" -exec sed -i http://s/^<?$/<?php/' {} + choice
Sep 09 15:01:13 <steven>	eh? wtf http?
Sep 09 15:01:43 <steven>	no idea how this http ended up in there but just use find .. exec
Sep 09 15:02:22 <steven>	"find . -name "*.php" -exec sed -i 's/^<?$/<?php/' {} +" choice
Sep 09 15:02:49 <choice>	steven: Awesome, thanks!
Sep 09 15:03:41 <petaflot>	steven: I won't add those to my spell file.. in french we have contractions (like "I am" > "I'm" which are compulsory and can be very easily computed based simple lexical rules)
Sep 09 15:03:51 <steven>	FWIW those kind of changes should be done using php-cs-fixer choice
Sep 09 15:03:55 <steven>	https://github.com/FriendsOfPhp/PHP-CS-Fixer
Sep 09 15:04:19 <choice>	steven: I prefer to do it with find and sed.
Sep 09 15:04:33 <Fersure>	petaflot: "j'ai" for example?
Sep 09 15:04:36 <petaflot>	steven: fr_CH is so slightly different than fr_FR that it does not matter
Sep 09 15:04:39 <petaflot>	Fersure: absolutely
Sep 09 15:05:01 <steven>	sure, was just suggestion a solution. if using a spell file is not an option feel free to open a issue on github
Sep 09 15:05:40 <petaflot>	steven: that sounds good, but I haven't been able to find the right place - that was my initial question
Sep 09 15:05:55 <steven>	dunno, github is the place :D
Sep 09 15:05:57 *	steven hides
Sep 09 15:06:17 <petaflot>	steven: github may be the place, but it is large/wide
Sep 09 15:06:25 <steven>	github.com/vim/vim
Sep 09 15:06:30 <petaflot>	that helps
Sep 09 15:06:57 <petaflot>	:-)
Sep 09 15:14:35 <petaflot>	done. thanks
Sep 09 15:57:12 <throstur>	igemnace: :hi StatusLine => StatusLine     xxx term=bold,reverse cterm=bold,reverse gui=bold,reverse
Sep 09 15:57:26 <throstur>	sorry for taking forever, got a little caught up in the zone :)
Sep 09 15:58:24 <Zoohouse>	Hello everyone. o/ I had VIM installed via apt install on my Ubuntu system. I wanted to upgrade my vim installation so I downloaded the source from vim.org. I make & make install. PROBLEM: When I use VIM I can't use the backspace while in INSERT MODE. Example: <i> Typing a test <esc> <i> <backspace> doesn't work. If I do: <i> typing a test <backspace> that works. What went wrong? As a side effect: When I run vim the splash screen flashes and
Sep 09 15:58:24 <Zoohouse>	disappears.
Sep 09 15:59:26 <igemnace>	Zoohouse: check :h 'backspace'
Sep 09 15:59:26 <digmbot>	:help 'backspace' -> http://vimhelp.appspot.com/options.txt.html#%27backspace%27
Sep 09 16:00:05 <igemnace>	the usual recommended value is :set backspace=indent,eol,start
Sep 09 16:02:24 <Zoohouse>	igemnace, thank you that worked.
Sep 09 16:07:06 <igemnace>	throstur: :hi Statusline ctermbg=blue doesn't have any effect?
Sep 09 16:13:07 <throstur>	igemnace: seems not
Sep 09 16:14:01 <mgedmin>	since StatusLine is cterm=reverse, changing ctermbg actually changes the foreground color
Sep 09 16:14:04 <mgedmin>	it's annoying
Sep 09 16:17:31 <throstur>	doesn't seem to change anything here :/
Sep 09 16:18:55 *	mgedmin looks at throstur's screenshot
Sep 09 16:18:59 <mgedmin>	ooh, yeah, something is very broken
Sep 09 16:19:09 <mgedmin>	what terminal emulator is that?  and what's $TERM set to?
Sep 09 16:19:36 <mgedmin>	somehow the vertical split has a visible background, but the statusline doesn't, weird
Sep 09 16:19:46 <mgedmin>	what if you tried :hi StatusLine cterm=NONE ctermbg=blue ?
Sep 09 16:20:01 <Zoohouse>	igemnace solved my backspace issue but I have anotherone. I used to copy text from my system then paste it into vim via <"+p>. That doesn't seem to work anymore...
Sep 09 16:20:21 <igemnace>	ah, you built your vim without clipboard support
Sep 09 16:20:37 <Zoohouse>	ah...
Sep 09 16:21:25 *	Zoohouse starts googling
Sep 09 16:23:20 <throstur>	mgedmin: it's cmder.exe (ConEmu port)
Sep 09 16:23:46 <throstur>	mgedmin: no change
Sep 09 16:24:28 <throstur>	term is xterm-256color
Sep 09 16:47:23 <Zoohouse>	igemnace, does this seem sensible? ./configure --enable-pythoninterp=yes --enable-python3interp=yes --enable-gtk3 --enable-gui=auto
Sep 09 16:48:37 <steven>	--with-features=huge --with-x
Sep 09 16:57:18 <Zoohouse>	steven, only those two flags or do I append those two to what I sent?
Sep 09 16:57:24 <steven>	append
Sep 09 16:57:29 <Zoohouse>	k
Sep 09 16:57:39 <Zoohouse>	I need to go get the x11 headers
Sep 09 16:57:41 <steven>	I don't use a gui so no idea whether --with-x is actually needed in your case
Sep 09 16:57:53 <steven>	I just have it for clipboard support
Sep 09 16:58:10 <Nicho1as>	Hi, my custom syntax keyword group linked to Todo gets ignored when filetype is set in the buffer, like to "c" or "vim" or something, my custom keyword group works only when the buffer has no filetype, how can I force vim to apply the syntax keyword group link always in any buffer?
Sep 09 16:58:12 <Nicho1as>	I see my keyword group linked to Todo in the list when I type :syntax, but it just doesn't apply the text style. Here's the code in my vimrc file: https://pastebin.com/nj9TRmFk
Sep 09 16:59:07 <Zoohouse>	steven, I use the gui with firefox's plugin Tridactyl. I think I can configure it to use the terminal tho
Sep 09 17:00:30 <steven>	I don't think the firefox plugin requires vim at all.
Sep 09 17:02:05 <Zoohouse>	steven, with ctrl+i it opens the text field into vim for editing
Sep 09 17:02:14 <steven>	ah ok
Sep 09 17:06:10 <jlebrech>	how do you match but also include right up to the match?
Sep 09 17:06:38 <lopid>	.\*match
Sep 09 17:07:27 <mgedmin>	Nicho1as: I would guess that the filetype-specific syntax plugin does a :syn clear and wipes your syntax keyword definition
Sep 09 17:07:57 <Nicho1as>	Oh, Thank you for the input, I'll take a close look at them
Sep 09 17:07:59 <lopid>	\v, sigh
Sep 09 17:08:06 <mgedmin>	as for how to fix it, I'm not sure -- is there an autocommand for "syntax loaded, apply your changes if you wish"?
Sep 09 17:09:39 <Nicho1as>	I see something interesting: |Syntax|  when the 'syntax' option has been set
Sep 09 17:10:44 <Nicho1as>	"When the 'syntax' option has been set.  The pattern is matched against the syntax name.
Sep 09 17:10:46 <Nicho1as>	<afile> can be used for the name of the file where this option was set, and <amatch> for the new value of 'syntax'.
Sep 09 17:10:48 <Nicho1as>	See |:syn-on|."
Sep 09 17:11:11 <Nicho1as>	I'm gonna take a closer look at it tomorrow, Thanks a lot mgedmin
Sep 09 17:13:30 <mgedmin>	I fear the Syntax event gets emitted before the syntax plugin runs (and wipes your keywords)
Sep 09 17:14:09 <mgedmin>	but I'm not sure
Sep 09 17:26:38 <Zoohouse>	Tried: ./configure --enable-pythoninterp=yes --enable-python3interp=yes --enable-gtk3-check --enable-gui=yes --with-features=huge and system pasting via "+p still doesn't work :( it ends up pasting things I yank from from vim
Sep 09 17:27:33 <steven>	then maybe -with-x is required :D
Sep 09 17:27:38 <Zoohouse>	err
Sep 09 17:27:57 *	LeoNerd wonders if vim will *ever* handle actual-terminal clipboard management
Sep 09 17:28:03 <LeoNerd>	Maybe about a week after nvim does it
Sep 09 17:28:10 <Zoohouse>	XD
Sep 09 17:28:14 <LeoNerd>	I should get onto the latter then the former will happen
Sep 09 17:28:29 <LeoNerd>	And then all this stupid X11 forwarding crap can finally go away
Sep 09 17:29:02 <mgedmin>	Zoohouse: check with :echo has('clipboard') has('xterm_clipboard')
Sep 09 17:29:17 <mgedmin>	or by running vim --version|grep clipboard and checking the + or - sigils in front
Sep 09 17:29:31 <mgedmin>	--with-x is, I believe, required for clipboard support on Linux
Sep 09 17:29:38 <steven>	--with-x compliles clipboard.
Sep 09 17:29:51 <steven>	I just said i am not sure whether you need it IF you compile with-gui anyway.
Sep 09 17:30:36 <mgedmin>	there's also :echo has('clipboard_working')
Sep 09 17:30:36 <steven>	LeoNerd:+1 I believe in you.
Sep 09 17:30:46 <steven>	if anyone, you can do it.
Sep 09 17:30:58 <LeoNerd>	I can't do it alone because other people need to approve stuff
Sep 09 17:31:01 <LeoNerd>	hell, or even write stuff
Sep 09 17:31:10 <Zoohouse>	:echo has('clipboard') has('xterm_clipboard') = 0 0 ; vim --version|grep clipboard = -clipboard, -xterm_clipboard
Sep 09 17:31:14 <mgedmin>	btw can anyone tell me what's the difference between the +clipboard and the +xterm_clipboard feature?
Sep 09 17:31:25 <LeoNerd>	If I alone were sufficient to fix things I'd have fixed a *lot* of things
Sep 09 17:31:39 <LeoNerd>	mgedmin: *possibly* the latter is about xterm's bracketed paste mode?
Sep 09 17:32:03 <mgedmin>	... no?  it's always been there, but vim learned about bracketed paste only relatively recently
Sep 09 17:32:10 <LeoNerd>	Hmmm
Sep 09 17:32:18 <LeoNerd>	(ohright; that's another one it stole from nvim)
Sep 09 17:32:36 <steven>	maybe the 2 clipboards thing from xterm mgedmin, support for primary  and secondary clipboard
Sep 09 17:32:44 <steven>	but that's just a guess
Sep 09 17:32:52 <LeoNerd>	steven: those are just X11 clipboards generally; nothing to do with xterm
Sep 09 17:32:56 <mgedmin>	maybe without +xterm_clipboard but with gui vim starts supporting the clipboard when you do :gui?
Sep 09 17:33:13 <steven>	LeoNerd:gotcha
Sep 09 17:34:08 <Zoohouse>	When I configure --with-x it asks for x11 headers.... I'm on ubuntu and I have libx11-data (X11 client-side library) & libx11-dev (X11 client-side library (development headers))
Sep 09 17:34:19 <mgedmin>	Zoohouse: I don't understand how you got a vim with -clipboard after building with --enable=gui=yes?  did configure fail to find GTK+ headers?
Sep 09 17:34:36 <Zoohouse>	mgedmin, let me check the log
Sep 09 17:34:46 <mgedmin>	Zoohouse: anyway here's a script I use to build vim on ubuntu: https://github.com/mgedmin/scripts/blob/master/rebuild-vim
Sep 09 17:34:55 <steven>	install xorg-dev Zoohouse
Sep 09 17:35:08 <mgedmin>	it lists all the dev packages needed and can even install them for you if you ask
Sep 09 17:35:37 <mgedmin>	it skips 'make install' because I use https://github.com/mgedmin/scripts/blob/master/vim to launch vim directly from the source tree, after setting $VIMRUNTIME
Sep 09 17:36:04 <mgedmin>	ah, my vim has no trouble[*] accessing the system clipboard
Sep 09 17:36:48 <Zoohouse>	oooo ./config didn't complain about missing x11 headers this time :D
Sep 09 17:36:56 <mgedmin>	(small print: yeah it has trouble if I do Bad Things like sudo vim somefile.txt, because Xwayland rejects connections from programs running as root)
Sep 09 17:37:00 *	Zoohouse running make
Sep 09 17:37:06 <LeoNerd>	Ohyes, install *all* the -dev things when ./configure'ing
Sep 09 17:38:11 <steven>	one more thing, google checkinstall Zoohouse and create a deb file to install wtih apt rather than usning make install, let your package manager handle it
Sep 09 17:38:27 <Zoohouse>	I read in a forum somewhere that --with-features=huge is not needed because it is already set as default. Is that true?
Sep 09 17:38:44 <mgedmin>	... possibly
Sep 09 17:38:45 <steven>	normal is the default
Sep 09 17:39:09 <mgedmin>	  --with-features=TYPE    tiny, small, normal, big or huge (default: huge)
Sep 09 17:39:17 <steven>	oh, when did that happen?
Sep 09 17:39:28 <mgedmin>	says ./configure --help of vim 8.1.2016
Sep 09 17:39:35 <mgedmin>	it happened pretty recently, iirc
Sep 09 17:39:41 <Zoohouse>	Pah! clipboard working
Sep 09 17:39:48 <steven>	#science
Sep 09 17:40:09 <mgedmin>	./configure help text was changed in 7.4.2105, but the actual default changed a bit earlier
Sep 09 17:40:29 <mgedmin>	7.4.1145 changed the default to huge
Sep 09 17:40:37 <steven>	TIL then
Sep 09 17:46:18 <Zoohouse>	steven, to uninstall vim (after doing make install a hundred times) I just rm vim from where `whereis vim` finds vim?
Sep 09 17:46:25 <Zoohouse>	or is there an easier way?
Sep 09 17:48:16 <steven>	no idea what make isntall does in detail, but you'd have to undo it all :D
Sep 09 17:48:28 <steven>	just use checkinstall to create a deb file and move on
Sep 09 17:48:30 <Zoohouse>	:'(
Sep 09 17:48:41 <Zoohouse>	k
Sep 09 17:50:06 <Zoohouse>	by the way, you know when you run $ vim and it opens with a splash screen with the version number and all that? Mines flashes then I get the blinking courser on the top left. Any idea why?
Sep 09 17:52:16 <steven>	flashes?
Sep 09 17:58:07 <novum>	great there is a redraw bug in windows gvim 32bit. 2x1 rectangle in middle of screen that cannot be dismissed with <c-l>
Sep 09 18:00:58 <novum>	o. :call popup_clear() .. eh. I think coc.vim is being a little crazy taco on windows. Shouldn't popups clear when popupcompletionmenu closes?
Sep 09 18:01:51 <novum>	dammit pepper_chico i am going to try to setup docker this weekend. I can't stand windows
Sep 09 18:06:39 <Zoohouse>	steven, $ sudo make uninstall
Sep 09 18:07:01 <steven>	sure, if it offers an uninstall goal.
Sep 09 18:12:07 <Zoohouse>	yea
Sep 09 18:12:18 <Zoohouse>	cleaned out vim from the system
Sep 09 18:13:37 <romainl>	what a weird idea
Sep 09 18:15:10 <steven>	?
Sep 09 18:28:32 <Zoohouse>	Found the reason my altscreen (didn't know that's what it's called) flashes and disapears when I open vim. It's a known problem in the latest vim patch 8.1.2015: terminal altscreen test still fails sometimes
Sep 09 18:34:51 <steven>	ugh, who uses patch 2015
Sep 09 18:34:52 <romainl>	always a good idea to read the changelog of what you install
Sep 09 19:45:06 <Itaipu>	hi how do I pipe a grep result to vim so I can have a cwindow to jump to localtions ?
Sep 09 20:04:36 <rkta>	Itaipu: see :help :grep
Sep 09 20:04:36 <digmbot>	:help :grep -> http://vimhelp.appspot.com/quickfix.txt.html#%3Agrep
Sep 09 20:24:42 <novum>	dear vim geniuses, I seek to find the index for the current foldlevel but only when v:foldlevel ==# 1. Is this easily possible. I hacked around it with a really slow method and would love to improve it.
Sep 09 20:25:01 <novum>	I tried this http://ix.io/1UGB
Sep 09 20:25:23 <novum>	it works only when all folds are closed when foldlevel=0
Sep 09 20:27:28 <romainl>	why ==#?
Sep 09 20:27:38 <novum>	basically, l:count should contain the "index" (from 0 to n) of the fold such that when you do :execute 'normal! zMgg' | if !foldclosed('.') | exe 'norm! zj' | endif  you are on the zeroth fold, then doing zj would be the first (index: 1) fold
Sep 09 20:27:43 <novum>	habit
Sep 09 20:28:28 <novum>	and, of course, this is inside foldtext function
Sep 09 20:49:11 <novum>	see .. this works if your cursor is on the first fold: http://ix.io/1UGG
Sep 09 20:49:22 <novum>	but when you move the cursor down, then it doesn't work
Sep 09 20:52:21 <novum>	which is rather unfortunate https://asciinema.org/a/endIcrJMk0XOXz8DjiSrLf0Ow
Sep 09 20:53:30 <novum>	meh until later. cya
Sep 10 00:09:46 <porco>	Hello. I add 'nnoremap <buffer> <F9> :w <bar> :exec '!clear;python' shellescape(@%, 1)<cr>
Sep 10 00:10:27 <porco>	' to my .vimrc file, to execute python scripts. however it's not working when i have two or more files in the buffer
Sep 10 00:11:17 <nickspoon>	you can only have a single file in a buffer
Sep 10 00:11:55 <porco>	when i do ':e file' i dont open another buffer?
Sep 10 00:12:13 <nickspoon>	yes
Sep 10 00:12:16 <nickspoon>	another buffer
Sep 10 00:12:30 <nickspoon>	not "another file in the buffer"
Sep 10 00:12:40 <nickspoon>	multiple files, multiple buffers
Sep 10 00:12:49 <nickspoon>	What's going wrong with your example?
Sep 10 00:13:02 <porco>	ok, sorry, thats what I meant
Sep 10 00:13:29 <porco>	if i have multiple buffers and press F9, not happens
Sep 10 00:13:36 <nickspoon>	nothing?
Sep 10 00:14:05 <nickspoon>	% represents the filename of the buffer in the current window
Sep 10 00:14:44 <porco>	yep, nothing happens. the script dont runs..
Sep 10 00:15:27 <nickspoon>	does  `nmap <F9>`  show that your mapping is still correctly loaded?
Sep 10 00:16:10 <porco>	no. i typed this and returns 'no map found'
Sep 10 00:16:10 <nickspoon>	Does you filename look right?  `:echo shellescape(@%, 1)`
Sep 10 00:16:15 <nickspoon>	ok
Sep 10 00:16:44 <nickspoon>	well there's something wrong with your mapping then
Sep 10 00:16:55 <porco>	yep, the filename looks right
Sep 10 00:17:04 <nickspoon>	oh
Sep 10 00:17:12 <nickspoon>	you have <buffer> in your mapping
Sep 10 00:17:20 <twobitsprite>	porco: are you specifying that mapping manually in vim and then opening another buffer and trying it there?
Sep 10 00:17:31 <nickspoon>	which means the mapping only applies to the current buffer when the mapping is created
Sep 10 00:17:51 <porco>	twobitsprite: the map is my .vimrc file
Sep 10 00:17:52 <twobitsprite>	porco: if you define that map in one buffer it won't be defined in another
Sep 10 00:18:01 <nickspoon>	This is presumably a python-specific mapping, so it shouldn't be in .vimrc, it should be in ~/.vim/after/ftplugin/python.vim
Sep 10 00:19:35 <twobitsprite>	porco: I think you need to get rid of the <buffer>, I think it's only defining it for the first buffer
Sep 10 00:19:47 <nickspoon>	no
Sep 10 00:19:50 <porco>	ok, i'll create this file
Sep 10 00:19:58 <twobitsprite>	porco: I just tried it without <buffer> and it works in both windows for me
Sep 10 00:20:06 <nickspoon>	<buffer> is right, if it's in the file I suggested
Sep 10 00:20:36 <nickspoon>	which will be sourced every time you open a python file, so it will be applied to all python buffers
Sep 10 00:20:52 <nickspoon>	if you want it to be in your .vimrc you need to have it either:
Sep 10 00:21:02 <nickspoon>	1. without the <buffer>
Sep 10 00:21:11 <nickspoon>	2. in a FileType autocmd
Sep 10 00:21:32 <nickspoon>	but putting it in ~/.vim/after/ftplugin/python.vim is IMO the cleanest
Sep 10 00:22:23 <twobitsprite>	I don't like doing that way because you end up with configuration stuff in various files that you might forget about... putting it in .vimrc makes it obvious what you have configured
Sep 10 00:22:45 <nickspoon>	then at least put it in a FileType autocmd
Sep 10 00:23:01 <twobitsprite>	sure
Sep 10 00:23:14 <porco>	got it.
Sep 10 00:24:01 <nickspoon>	But learning to use the vim files appropriately is worthwhile, ftplugin and autoload especially
Sep 10 00:24:38 <twobitsprite>	I always forget the directory layout. i.e, I totally forgot there's an "after" directory
Sep 10 00:24:55 <nickspoon>	there's only an "after" directory if you make one
Sep 10 00:25:11 <nickspoon>	You can also put that mapping in ~/.vim/ftplugin/python.vim  with no "after"
Sep 10 00:25:15 <twobitsprite>	(well, yeah, but I mean, I forgot that vim *uses* the after directory)
Sep 10 00:25:45 <nickspoon>	The reason to use "after" is to ensure that any plugin doing its own config gets overwritten by your own
Sep 10 00:26:04 <nickspoon>	https://vimways.org/2018/from-vimrc-to-vim/
Sep 10 00:26:39 <nickspoon>	https://vimways.org/2018/runtime-hackery/
Sep 10 00:26:48 <porco>	the best pratice is put all my python related configuration in pyhon.vim?
Sep 10 00:26:50 <nickspoon>	Those 2 articles by tejr are really good
Sep 10 00:27:01 <nickspoon>	porco: yeah
Sep 10 00:27:11 <nickspoon>	well ... no
Sep 10 00:27:14 <nickspoon>	lol
Sep 10 00:27:40 <nickspoon>	if it's one-time config like setting the path to your python installation etc. then leave it in your .vimrc
Sep 10 00:28:29 <nickspoon>	But python file settings like shiftwidth and mappings and things go in that file
Sep 10 00:29:38 <nickspoon>	The important thing is that ~/.vim/after/ftplugin/python.vim script gets sourced again and again, ever time you open a python file. So any config for that file gets set there
Sep 10 00:30:39 <nickspoon>	you can also use it to override your "general" settings with python-specific settings.
Sep 10 00:31:04 <porco>	hmm, i got it.
Sep 10 00:31:15 <nickspoon>	so, maybe you like  set shiftwidth=8 noexpandtab  usually, but in python you want  set shiftwidth=4 expandtab
Sep 10 00:31:31 <nickspoon>	so, maybe you like  set shiftwidth=8 noexpandtab  usually, but in python you want  setlocal shiftwidth=4 expandtab
Sep 10 00:31:43 <porco>	create this file works out of the box or i need put something more in my .vimrc?
Sep 10 00:31:59 <nickspoon>	it works out of the box, vim will find it
Sep 10 00:37:57 <porco>	thank you guys, it's working now. good to learn about the ftype plugin!
Sep 10 00:39:09 <porco>	how do you manage backups from these configuration files?
Sep 10 00:40:45 <nickspoon>	porco: I use GNU stow and keep the filestructure in a git repo
Sep 10 00:41:25 <nickspoon>	So I have a ~/dotfiles dir with ~/dotfiles/vim/.vim/vimrc and ~/dotfiles/vim/.vim/after/ftplugin/*.vim
Sep 10 00:42:09 <porco>	the real files or symlinks?
Sep 10 00:42:26 <nickspoon>	Then after cloning my dotfiles I cd into ~/dotfiles and do `stow vim` which creates symlinks from ~/.vim/vimrc to ~/dotfiles/vim/.vim/vimrc etc.
Sep 10 00:42:37 <nickspoon>	stow handles all the symlinks
Sep 10 00:43:08 <porco>	nice. i'll taka look! thank you
Sep 10 00:43:12 <porco>	take*
Sep 10 00:43:16 <nickspoon>	np
Sep 10 03:17:59 <bilb_ono>	how do I fold an entire class so that you only see function names in python?
Sep 10 03:52:22 <nickspoon>	bilb_ono: have you tried :h fold-indent   ?
Sep 10 03:52:24 <digmbot>	:help fold-indent -> http://vimhelp.appspot.com/fold.txt.html#fold-indent
Sep 10 07:01:44 <Pumble>	hey howsit going
Sep 10 07:03:14 <Pumble>	how's everyone?
Sep 10 07:19:46 <R2robot>	*crickets*
Sep 10 07:27:00 <davidfetter>	quiet here
Sep 10 07:27:11 <romainl>	shhh
Sep 10 08:57:38 <mgedmin>	bilb_ono: I use this foldexpr for Python: https://github.com/mgedmin/dotvim/blob/master/syntax/python.vim
Sep 10 09:25:59 <CaBa>	hi
Sep 10 09:54:46 <throstur>	when I :vsplit, my colorscheme is reset. I don't recall having set this behavior and haven't seen this on my other systems which share a similar configuration. How do I find the culprit?
Sep 10 09:59:50 <throstur>	I found the culprit... it's something from ftdetect
Sep 10 10:21:20 *	Disconnected ()
**** ENDING LOGGING AT Tue Sep 10 10:21:20 2019

**** BEGIN LOGGING AT Tue Sep 10 10:21:44 2019

Sep 10 10:21:44 *	Now talking on #vim
Sep 10 10:21:44 *	Topic for #vim is: Can't talk? Register https://freenode.net/kb/answer/registration | Vim 8.1.1467 http://www.vim.org | Don't ask to ask! | Use :help and :helpgrep | WIKI: http://vim.wikia.com | PASTE: http://vpaste.net/?ft=vim | https://www.vi-improved.org
Sep 10 10:21:44 *	Topic for #vim set by phy1729 (Wed Jun  5 19:23:57 2019)
Sep 10 10:21:44 -ChanServ-	[#vim] vim discussion .. www.vim.org, vim.sf.net, :help
Sep 10 10:21:44 *	Channel #vim url: http://vi-improved.org
Sep 10 10:22:42 <Miles2Go>	when I have a file open for editing and then do ":vsp | terminal" to open a new window (not sure if 'window' is technically correct), vim creates a second window of my already open file plus the terminal. Is there a way to make it not open a copy of my already open file?
Sep 10 10:24:13 <mgedmin>	:vsp | term ++curwin
Sep 10 10:25:25 <rkta>	:vert term
Sep 10 10:25:41 <rkta>	Miles2Go: ^
Sep 10 10:27:56 <Miles2Go>	rkta: that worked, thanks
Sep 10 10:38:11 <justsomeguy>	Hello #Vim.  How can I change which directory my .viminfo file goes into?
Sep 10 10:39:21 <steven>	:h viminfo
Sep 10 10:39:21 <digmbot>	:help viminfo -> http://vimhelp.appspot.com/starting.txt.html#viminfo
Sep 10 10:39:25 <mgedmin>	:h viminfo-file-name
Sep 10 10:39:25 <digmbot>	:help viminfo-file-name -> http://vimhelp.appspot.com/starting.txt.html#viminfo-file-name
Sep 10 10:42:27 <daGrevis>	how can I close all buffers with exact filetype?
Sep 10 10:46:09 <mgedmin>	ooh, interesting question, loop over all buffer numbers (from 1 to bufnr('$')), use getbufvar(nr, "&filetype") to check filetype, use :exec nr . "bd" to delete the buffers?
Sep 10 10:46:12 <rocketmagnet>	hi everyone
Sep 10 10:46:28 <rocketmagnet>	when i've two windows splited, how can i swap the windows ?
Sep 10 10:46:43 <rocketmagnet>	so the left becomes the right and vice versa ?
Sep 10 10:47:10 <mgedmin>	Ctrl-W r
Sep 10 10:47:21 <rocketmagnet>	ty
Sep 10 10:47:21 <mgedmin>	it's called "rotating" in the help
Sep 10 10:47:52 <rocketmagnet>	is there also a shortcut for :tabnew ?
Sep 10 10:48:04 <daGrevis>	mgedmin, yeah, I'll go with looping over all buffers
Sep 10 10:48:47 <justsomeguy>	Seems it was working all along, (I already had "set viminfo+=n~.vim/viminfo") but I had another line later in my vimrc that recreated an empty "~/.viminfo" file. Thanks for the help, steven and mgedmin.
Sep 10 12:03:44 <lopid>	how can i see a list of quickfix lists?
Sep 10 12:03:58 <lopid>	and then jump to one directly
Sep 10 12:06:27 <steven>	there's only one quickfix list, what are you talking about lopid
Sep 10 12:07:08 <mgedmin>	there's history
Sep 10 12:07:21 <mgedmin>	you can see it with :chistory
Sep 10 12:07:30 <mgedmin>	you can select one with :4chistory
Sep 10 12:08:07 <lopid>	aha, thanks
Sep 10 12:08:26 <steven>	oh TIL about chistory
Sep 10 12:10:06 <nickspoon>	steven: have I got an article for you…
Sep 10 12:10:37 <nickspoon>	https://vimways.org/2018/colder-quickfix-lists/
Sep 10 12:10:43 <nickspoon>	Written by some clever fellow
Sep 10 12:11:35 <lopid>	"A little bit of vimscript never hurt anybody. If you know what I mean." - disgusting
Sep 10 12:12:08 <nickspoon>	lol
Sep 10 12:12:46 <steven>	ugh I think I remember this nick cunt
Sep 10 12:12:51 <steven>	what tool, amirite nickspoon
Sep 10 12:13:17 <nickspoon>	you is rite
Sep 10 12:14:26 <steven>	you're right though. I should probably read it again
Sep 10 12:14:30 <steven>	+1
Sep 10 12:14:58 <squ>	learning vimscript in 2018
Sep 10 12:15:29 <squ>	should have been removed from vim long ago
Sep 10 12:15:52 <nickspoon>	I can't tell if you're serious
Sep 10 12:15:57 <squ>	replaced with common widely supported language
Sep 10 12:16:18 <nickspoon>	It's just a scripting language, it's fine
Sep 10 12:16:29 <squ>	its waste of time
Sep 10 12:16:39 <nickspoon>	Anything more widely supported has to have a whole heap of vim-specific stuff shunted into it anyway
Sep 10 12:16:50 <squ>	think about it, language for text editor
Sep 10 12:17:29 <nickspoon>	I'm not just thinking about it, I'm communicating about it in a decades-old IRC channel dedicated to a text editor
Sep 10 12:17:34 <nickspoon>	... that you're in
Sep 10 12:17:57 <squ>	okay I'm talking to troll
Sep 10 12:18:26 <nickspoon>	okay
Sep 10 12:18:48 <squ>	reserve some time perhaps to think about it
Sep 10 12:20:26 <nickspoon>	no
Sep 10 12:26:15 <ashfinal>	:help fold
Sep 10 12:26:16 <digmbot>	:help fold -> http://vimhelp.appspot.com/fold.txt.html#%3Afold
Sep 10 12:52:27 <lopid>	#vim :)
Sep 10 12:53:20 <slax0r>	lopid :)
Sep 10 13:27:58 <Momentum>	anu suggestions for usable colorscheme? i tried most base16 colors but none of them work properly
Sep 10 13:28:16 <lopid>	the default
Sep 10 13:29:13 <Momentum>	i messed up my terminal color scheme so i have to make that default first
Sep 10 13:29:14 <steven>	I use gruvbox, I find it hard to believe though that you tried most base16 themes and neither worked properly.
Sep 10 13:29:33 <steven>	if that's the case vim is not at fault here.
Sep 10 13:29:38 <lopid>	i find it hard to believe that the default is not usable
Sep 10 13:30:14 <Momentum>	it's really hard to find a color scheme that fits with everything i have
Sep 10 13:30:30 <steven>	meaning what?
Sep 10 13:30:36 <Momentum>	if it's usable inside vim it's not usable for weechat or something like that
Sep 10 13:31:03 <lopid>	vim ≠ weechat
Sep 10 13:31:14 <Momentum>	ikr
Sep 10 13:31:54 <Momentum>	but costumizing a color scheme for every program is difficult
Sep 10 13:32:14 <Momentum>	maybe i should fall back to defaults
Sep 10 13:32:49 <Momentum>	do you use gruvbox for the terminal too steven? or just for vim?
Sep 10 13:33:01 <Momentum>	also which gruvbox if possible
Sep 10 13:34:07 <steven>	https://imgur.com/8CxFqM9 Momentum
Sep 10 13:36:01 <lopid>	unnecessary nick list
Sep 10 13:36:14 <steven>	fite me
Sep 10 13:36:24 <lopid>	you've no "-" glyph?
Sep 10 13:37:01 <Momentum>	isn't that highlight a little bit unreadable?
Sep 10 13:37:53 <steven>	lopid: what do you mean? .. Momentum well the pink? ain't the prettiest, true but I never bothered to change it because meh
Sep 10 13:37:55 <steven>	I am a lazy person
Sep 10 13:38:37 <Momentum>	yeah that's what i'm talking about :D
Sep 10 13:39:00 <steven>	weechat will probably let me change it.. if I wasn't too lazy
Sep 10 13:39:10 <Momentum>	right
Sep 10 13:39:12 <mgedmin>	Momentum: is your 'background' set correctly?  I find the default colorscheme quite usable, unless of course 'background' is wrong
Sep 10 13:39:24 <Momentum>	here's one variant of gruvbox that i currently use https://i.imgur.com/VHX3k3H.png
Sep 10 13:39:44 <steven>	its just like mine but the darker version
Sep 10 13:39:49 <Momentum>	i didn't say anything about the default color scheme being unusable
Sep 10 13:39:58 <Momentum>	yes steven
Sep 10 13:40:17 <steven>	Momentum: https://github.com/morhetz/gruvbox-contrib
Sep 10 13:40:24 <steven>	theme for most terminals
Sep 10 13:41:30 <Momentum>	i have some shell script that allows me to change between base16 colorschemes for terminal and vim
Sep 10 13:41:45 <Momentum>	it's somewhere on github
Sep 10 13:42:36 <mgedmin>	ah, base16 is a Thing
Sep 10 13:42:39 <Momentum>	i think i'll just settle down with gruvbox i guess
Sep 10 13:42:48 <steven>	tbh that's why I use it
Sep 10 13:43:08 <steven>	its not that I like it, it's simply because I didn't find anything better
Sep 10 13:43:10 <Momentum>	i have OCD when it comes to colorschemes argh
Sep 10 13:44:43 <Momentum>	at some point i thought it was an issue with my st terminal which i thought i patched it more than necessary
Sep 10 13:44:59 <Momentum>	but no, it's just me
Sep 10 13:58:04 <lopid>	the activity marker line
Sep 10 22:51:48 *	Disconnected ()
**** ENDING LOGGING AT Tue Sep 10 22:51:48 2019

**** BEGIN LOGGING AT Tue Sep 10 22:52:12 2019

Sep 10 22:52:12 *	Now talking on #vim
Sep 10 22:52:12 *	Topic for #vim is: Can't talk? Register https://freenode.net/kb/answer/registration | Vim 8.1.1467 http://www.vim.org | Don't ask to ask! | Use :help and :helpgrep | WIKI: http://vim.wikia.com | PASTE: http://vpaste.net/?ft=vim | https://www.vi-improved.org
Sep 10 22:52:12 *	Topic for #vim set by phy1729 (Wed Jun  5 19:23:57 2019)
Sep 10 22:52:12 -ChanServ-	[#vim] vim discussion .. www.vim.org, vim.sf.net, :help
Sep 10 22:52:12 *	Channel #vim url: http://vi-improved.org
Sep 10 22:57:55 <novum>	what is causing  gx  to curl/wget the file then open the downloaded file (in file:///...) in firefox? It used to open the URL not the file:///
Sep 10 22:58:25 <romainl>	phy1729++
Sep 10 22:59:48 <phy1729>	romainl: I've got PI planning next week. I try to ignore everything and get some tech debt paid off.
Sep 10 23:00:07 <romainl>	hehe
Sep 10 23:00:30 <nickspoons>	novum: it's an ongoing netrw bug
Sep 10 23:01:17 *	novum sulks. netrw
Sep 10 23:01:44 <novum>	the bugs have bugs
Sep 10 23:02:25 <nickspoons>	for a while there it looked like someone else was going to start maintaining it … and then DrChip popped up again and we're back to waiting on his fixes
Sep 10 23:03:07 <romainl>	yesterday's tim pope
Sep 10 23:05:58 <novum>	I have begun to appreciate netrw a tiny bit more, but I still feel like it needs an overhaul.
Sep 10 23:06:14 <novum>	I do not like how it opens hundreds of hidden buffers
Sep 10 23:06:25 <novum>	nor how you cannot delete the netrw buffer
Sep 10 23:06:37 <novum>	it's like a virus within vim
Sep 10 23:06:59 <novum>	it just keeps propagating itself in your hidden buffers no matter how hard you try to tame it.
Sep 10 23:07:33 <romainl>	who cares about hidden buffers?
Sep 10 23:07:47 <novum>	not you, apparently
Sep 10 23:07:56 <romainl>	apparently
Sep 10 23:12:29 <novum>	unfortunately, buffer numbers are immutable, and they are a tiny bit important to me. I like to have my numbers grouped and I do set my own hidden buffers for things, so when I encounter a bug in my thing or someone elses, if I see 200 buffers in :ls! then it's hard to parse
Sep 10 23:13:19 <novum>	it's somewhat infrequent. I just don't see why it has to be that way. cough lsbuffer
Sep 10 23:13:27 <novum>	cough 100 loc
Sep 10 23:16:53 <nickspoons>	novum: what does it do? asciinema?
Sep 10 23:17:24 <nickspoons>	I'm going to work, may drop out for 30 seconds, BRB
Sep 10 23:21:10 <novum>	nickspoons, I lost the latest revision somewhere in a tar file, but I can show you in my WSL maybe. it's a tad broken on windows. https://asciinema.org/a/MHOLefRYPLAKSw055UH0wJmw0
Sep 10 23:23:25 <nickspoon>	I can't see which bit is the plugin...
Sep 10 23:23:42 <novum>	https://gitlab.com/dylnmc/lsbuffer.vim
Sep 10 23:24:00 <nickspoon>	oh it's a ... um
Sep 10 23:24:03 <nickspoon>	what is it?
Sep 10 23:24:13 <nickspoon>	it's a netrw/dirvish replacement?
Sep 10 23:24:18 <novum>	it's like dirvish yeah
Sep 10 23:24:27 <novum>	but it uses 1 buffer (when it's not broken)
Sep 10 23:24:37 <nickspoon>	ah
Sep 10 23:24:56 <nickspoon>	but what if you have 2 lsbuffer windows open at the same time, in different directories?
Sep 10 23:25:01 <novum>	it just uses call setline()
Sep 10 23:25:10 <novum>	yeah I wanted to add that
Sep 10 23:25:36 <novum>	multiple lsbuffers. lsbuffer-1 lsbuffer-2 lsbuffer-3 etc
Sep 10 23:26:04 <novum>	I think the ``file`` part is a bit broken causing it to "touch" the ~/lsbuffer
Sep 10 23:27:57 <novum>	also I want to allow ``p`` to freeze the directory, so when you press l then it prepends the "frozen" directory to the filename. eg if you're in /foo/ and you freeze that directory, then you'll get  foo/bar/ foo/baz/  for everything then navigating with l again would should foo/bar/taco/  etc and the :lcd wouldn't change
Sep 10 23:28:14 <novum>	and it would be nice to have all of the view-styles in netrw also. like the tree style
Sep 10 23:28:20 <nickspoon>	apart from the annoying completions, how are you finding coc?
Sep 10 23:28:37 <nickspoon>	I haven't tried it, not quiiite curious enough to actually install
Sep 10 23:28:47 <novum>	holy bananas. I haven't had time to use it. But it's not easy for me to use typescript, so it's just ... existing currently
Sep 10 23:29:01 <novum>	I have been pushing a lot of tutorials live and just cleaning sht up
Sep 10 23:29:35 <novum>	it's cool because you can refactor code and have actual lsp
Sep 10 23:29:48 <novum>	and gd actually works
Sep 10 23:30:43 <novum>	(eg it's not :1|call search('\V<c-r><c-w>', 'cW')<cr> or whatever
Sep 10 23:31:04 <novum>	throw an escape in there and that's what you get for ``gd`` in javascript typically
Sep 10 23:33:44 <nickspoon>	OK. I've been having pretty good success with vim-lsp for typescript.
Sep 10 23:33:56 <nickspoon>	I'll get around to giving coc a whirl at some stage
Sep 10 23:34:12 <novum>	nice :) what I *want* is jsdoc in popup when I complete
Sep 10 23:34:20 <novum>	but that seems impossible unless you're using vscode
Sep 10 23:34:27 <nickspoon>	shouldn't be
Sep 10 23:34:47 <nickspoon>	doesn't coc do that with LSP+popup windows?
Sep 10 23:34:51 <novum>	I know I should write jsdoc because no one uses it but meh I like it and run the java jsdoc stuff to view and it helps me stay organised
Sep 10 23:35:06 <nickspoon>	I think vim-lsp does..
Sep 10 23:35:06 <novum>	don't think so. I don't think it parses the jsdoc like vscode does
Sep 10 23:35:15 <novum>	you sure? jsdoc?
Sep 10 23:35:23 <novum>	I gotta head out to clase, amigo
Sep 10 23:35:26 <nickspoon>	does vscode parse it manually, outside of the lsp?
Sep 10 23:35:30 <nickspoon>	no I'm not sure at all
Sep 10 23:35:38 <nickspoon>	o/
Sep 10 23:35:54 <novum>	eh. I am not quite sure either. I just don't think I have gotten it to work, and I have seen absolutely nothing about it anywhere except in a blog about vscode
Sep 10 23:36:25 <novum>	https://medium.com/@trukrs/type-safe-javascript-with-jsdoc-7a2a63209b76
Sep 10 23:36:46 <novum>	only place I have seen reference to jsdoc in the completion engine/whatever
Sep 10 23:37:22 <novum>	hm maybe I need to do something like this in coc config javascript.implicitProjectConfig.checkJs
Sep 10 23:38:04 <novum>	idk I will have to investigate further, but I haven't really gotten it to work thus far. you don't have to experiment for me xd so don't waste your time. have a good one *salut*
Sep 11 00:18:03 <bin_bash>	is there a way to know the count of a search? e.g. /cart <enter> it says the number?
Sep 11 00:24:32 <hauleth>	bin_bash: :%s///gn
Sep 11 00:24:43 <bin_bash>	thanks
Sep 11 00:24:50 <bin_bash>	wait
Sep 11 00:24:53 <bin_bash>	what?
Sep 11 00:25:21 <bin_bash>	:%s is for substitutions i thought hauleth
Sep 11 00:25:30 <hauleth>	because it is
Sep 11 00:25:49 <bin_bash>	?
Sep 11 00:25:55 <hauleth>	Because :h :s_flags [n]
Sep 11 00:25:55 <digmbot>	:help :s_flags -> http://vimhelp.appspot.com/change.txt.html#%3As_flags
Sep 11 00:26:38 <bin_bash>	right but using just / there's no way, correct?
Sep 11 00:26:45 <bin_bash>	that's what i was looking for
Sep 11 00:28:00 <bin_bash>	i.e. it takes the me to first result, and then says how many :%s doesn't do that
Sep 11 00:29:53 <hauleth>	I do not know if it is in the progress in Vim, but for sure on nightly NeoVim I get count next to showcmd output
Sep 11 00:43:38 <nickspoon>	Yes Vim has the / count
Sep 11 00:43:51 <nickspoon>	reasonably recent, a couple of months I think?
Sep 11 00:43:58 <hauleth>	Ok
Sep 11 00:44:07 <hauleth>	Good
Sep 11 00:44:44 <hauleth>	That was one of few small but irritating things in Vim
Sep 11 00:48:36 <nickspoon>	8.1.1270 is where it was introduced
Sep 11 00:49:46 <nickspoon>	May, 2019
Sep 11 00:52:35 <novum>	hey. when I brew install macvim --or-- brew cask install macvim then run mvim then use this mapping: nnoremap <leader>pu :call maps#prePlugCmd()<bar>PlugUpdate<cr>   then I get a segmentation fault every time. Plug updates a few plugins, then basically :top new  buffer is created with  :file !system | set readonly
Sep 11 00:52:56 <novum>	it freezes after :PlugUpdate then does the split, then when I press <return> twice, it seg faults
Sep 11 00:55:11 <nickspoon>	novum: I do get jsdoc signaturehelp and hover support in popups using the typescript-language-server (both typescript and javascript)
Sep 11 00:55:18 <nickspoon>	... with vim-lsp
Sep 11 00:55:35 <novum>	nickspoon, I hate you in a good way
Sep 11 00:55:43 <novum>	do you know how hard I searched?
Sep 11 00:55:45 <novum>	DO YOU?!
Sep 11 00:55:54 <novum>	<3 I will check it out. 'preciate it
Sep 11 00:56:16 <hauleth>	I like vim-lsp as it is the least intrusive LSP client out there
Sep 11 00:56:31 <novum>	it better be async
Sep 11 00:56:37 <nickspoon>	it's async
Sep 11 00:56:40 <nickspoon>	It's very nice.
Sep 11 00:56:44 <hauleth>	LSP client cannot be sync
Sep 11 00:56:53 <nickspoon>	Takes a bit more config than some
Sep 11 00:57:02 <novum>	O-kay
Sep 11 00:57:39 <hauleth>	nickspoon: could be worse https://github.com/hauleth/dotfiles/blob/ecdeb691399919147bbafdd3099d67954dd37dd8/vim/.config/nvim/plugin/langclient.vim
Sep 11 00:57:41 <hauleth>	;)
Sep 11 00:58:34 <novum>	I was expecting hundreds of lines
Sep 11 00:59:01 <novum>	or thousands. but 50 loc. das güd
Sep 11 01:00:08 <nickspoon>	nah it's ok
Sep 11 01:00:30 <nickspoon>	I was mostly thinking of the lsp#register_server bits
Sep 11 01:03:13 <novum>	'member when we had only synch lsp? :)
Sep 11 01:03:37 <novum>	"back in my day"
Sep 11 01:03:43 <novum>	"we had to walk both ways up-hill"
Sep 11 01:13:00 <nickspoon>	after some messing around, here's mine: http://ix.io/1ULZ
Sep 11 03:31:04 <Nicho1as>	mgedmin: it was just the cCommentGroup or something preventing any syntax checking in the comment section. There were two different methods and I chose to go with :syntax cluster <cluster_name> add=myKeywordGroup; which I have to edit my vimrc whenever I start working on another filetype, the other way is just going with something like :match Todo /<PATTERN>/
Sep 11 03:32:33 <Nicho1as>	and :match <Highlight> /<PATTERN>/ way has this advantage that you can have it and it will work in any buffer with any filetype
Sep 11 11:12:47 *	Disconnected ()
**** ENDING LOGGING AT Wed Sep 11 11:12:47 2019

**** BEGIN LOGGING AT Wed Sep 11 11:13:12 2019

Sep 11 11:13:12 *	Now talking on #vim
Sep 11 11:13:12 *	Topic for #vim is: Can't talk? Register https://freenode.net/kb/answer/registration | Vim 8.1.1467 http://www.vim.org | Don't ask to ask! | Use :help and :helpgrep | WIKI: http://vim.wikia.com | PASTE: http://vpaste.net/?ft=vim | https://www.vi-improved.org
Sep 11 11:13:12 *	Topic for #vim set by phy1729 (Wed Jun  5 19:23:57 2019)
Sep 11 11:13:12 -ChanServ-	[#vim] vim discussion .. www.vim.org, vim.sf.net, :help
Sep 11 11:13:12 *	Channel #vim url: http://vi-improved.org
Sep 11 11:20:09 <sheldor_the_conq>	the nnoremap <silent> <F8> :GrammalecteCheck<CR>:echo "hello"<CR> works but quit the grammalectecheck
Sep 11 11:20:23 <sheldor_the_conq>	nnoremap <silent> <F8> :GrammalecteCheck<CR>:GrammalecteClear<CR>
Sep 11 11:20:38 <sheldor_the_conq>	so i don't have time to read
Sep 11 11:20:47 <sheldor_the_conq>	the bars seems not to be supported
Sep 11 11:49:01 <henrebotha[m]>	In Perl files, I often use gf on a word like Foo::Bar::Baz to open the file lib/Foo/Bar/Baz.pm. But some words have a magic string Foo::Abracadabra::Baz.pm; in those specific cases, I'd like gf to open lib/Foo/Alakazam/Baz.pm (that is to say, the magic string must be replaced by another magic string). Is there a convenient way to do this?
Sep 11 11:50:17 <henrebotha[m]>	I guess I'm using gf as a crude "go to definition" command (which it isn't really), and this is a limitation of that
Sep 11 11:51:24 <squ>	maybe if the <cfile> variable can be changes
Sep 11 11:52:05 <steven>	wouldn't tags solve this "problem" henrebotha[m] ?
Sep 11 11:52:40 <henrebotha[m]>	Probably, but my repo is e n o r m o u s, which has made ctags non-trivial to use
Sep 11 11:52:56 <henrebotha[m]>	I still have a few browser tabs open here somewhere, hoping to figure out a clean ctags solution
Sep 11 11:53:11 <squ>	help says you can use :s with <cfile>
Sep 11 11:55:10 <henrebotha[m]>	I guess I'm also super open to help with creating a clean tags config
Sep 11 11:59:01 <steven>	iirc LeoNerd does some perl stuff, maybe he can help
Sep 11 11:59:22 <henrebotha[m]>	I tried installing this, which sounded almost perfect… https://github.com/ludovicchabant/vim-gutentags
Sep 11 11:59:55 <henrebotha[m]>	…But it takes absolute ages to finish generating the tags file (as in minutes, I haven't let it run to completion yet)
Sep 11 12:02:47 <squ>	map gf :exe 'e ' . expand("<cfile>:s?Abracadabra?Alakazam?")<CR>
Sep 11 12:03:02 <henrebotha[m]>	Clean!
Sep 11 12:03:32 <steven>	hacky :)
Sep 11 12:04:01 <hauleth>	henrebotha[m] which ctags implementation you are using
Sep 11 12:04:18 <henrebotha[m]>	Exuberant
Sep 11 12:04:36 <steven>	try universalctags
Sep 11 12:04:53 <hauleth>	Also there is https://github.com/dalance/ptags which can speed things up on large repos
Sep 11 12:05:12 <squ>	 https://ctags.io/
Sep 11 12:05:23 <steven>	^ that's universalctags.
Sep 11 12:05:39 <squ>	I know
Sep 11 12:08:25 <hauleth>	My biggest gripe with Universal Ctags is their resistance to tag anything https://github.com/universal-ctags/ctags/issues/1038
Sep 11 12:08:52 <hauleth>	It feel like they want to release 1.0 from the day 1 and call it a success
Sep 11 12:10:38 <squ>	https://github.com/xolox/vim-easytags/issues/171
Sep 11 12:23:13 <steven>	I don't understand how this is important
Sep 11 12:23:19 <steven>	hauleth:^
Sep 11 12:23:48 <andyhoang>	Hi guys, how do I copy all matched search result (from regex) into register? Say I have a block from line 0 - 20. Search them to match a pattern, got result, now I want to copy those result into a register
Sep 11 12:24:07 <hauleth>	You mean you do not understand why having tagged release is important?
Sep 11 12:24:29 <hauleth>	Even when it is prerelease
Sep 11 12:24:59 <steven>	yes
Sep 11 12:26:52 <hauleth>	Most package managers will reject project from being in default repo if there is no such tag
Sep 11 12:28:41 <steven>	that makes sense but I mean.. it doesn't bother *me* since I (and I simply assume you, too) know how to compile stuff
Sep 11 12:29:11 <steven>	or build a package for $manager and install that
Sep 11 12:39:39 <henrebotha[m]>	Running (exuberant) ctags -R on my repo root results in a tags file of 7.4 GB and counting. I don't want or need that. I need a tags setup that only looks at files I interact with, and maybe intercept "go to definition" in Vim so that if it fails, we can look up the file that needs tagging & tag it
Sep 11 12:39:59 <henrebotha[m]>	File is now 11 GB and it has not yet reached ./lib, where most of my Perl code is
Sep 11 12:40:46 <henrebotha[m]>	File got to 12 GB before my SSD ran out of space
Sep 11 12:46:03 <steven>	henrebotha[m]: https://github.com/kberov/ctags  maybe you need to configure it properly (again, I don't know jack shit about perl)
Sep 11 12:46:38 <hauleth>	steven: yes, that is possible, but to increase adoption before release and to increase amount of potential testers it is worth to publish pre-releases
Sep 11 12:46:40 <steven>	I guess you can ignore the tagbar stuff and just take a look at the ctags config file
Sep 11 12:47:28 <steven>	hauleth: gotta be honest here, I am with the maintainer on this one. releasing some broken piece of software (even a pre-release) is a terrible idea. having debian maintainers pack/push a broken piece of software is a terrible idea.
Sep 11 12:48:15 <steven>	potential testers of it should just build a package locally and move on. I do understand though that some ppl simply have a different opinion and this is fine :)
Sep 11 12:50:37 <hauleth>	You know, there were bigger projects with prereleases and somehow it worked
Sep 11 12:50:55 <hauleth>	It could land in "testing" or something like that
Sep 11 12:51:45 <hauleth>	Tag would mean that - ok, this works more or less, and please test it
Sep 11 12:52:09 <hauleth>	It is much easier to inform about bugs in specific version rather than looking for commit
Sep 11 12:55:28 <steven>	boils down to the mindset. If I ran into a bug I'd just compile master, verify whether the bug still exists and report it. no need for a version.
Sep 11 12:58:44 <steven>	even better, that way you don't get usless bug reports like "this thing right here is broken in 0.0.3-pre-alpha" even tho this thing had been fixed 3 "tags" ago and no one bothered to upadte the package or read the changelog
Sep 11 14:58:41 <ChrisLane>	How do I find the nth instance of a string in a file?
Sep 11 14:59:32 <lopid>	gg0[n-1]n
Sep 11 14:59:49 <lopid>	heh, i skipped that part where you search for the string O:)
Sep 11 15:05:02 <ChrisLane>	Ah thanks
Sep 11 15:05:15 <ChrisLane>	Doesn't seem like the 0 is necessary though lopid
Sep 11 15:05:33 <lopid>	depends where on the line gg takes you
Sep 11 15:06:00 <Ediakar>	isn't it always 0, anyway?
Sep 11 15:06:08 <lopid>	o
Sep 11 15:06:14 <lopid>	n
**** BEGIN LOGGING AT Wed Sep 11 15:47:02 2019

Sep 11 15:47:02 *	Now talking on #vim
Sep 11 15:47:02 *	Topic for #vim is: Can't talk? Register https://freenode.net/kb/answer/registration | Vim 8.1.1467 http://www.vim.org | Don't ask to ask! | Use :help and :helpgrep | WIKI: http://vim.wikia.com | PASTE: http://vpaste.net/?ft=vim | https://www.vi-improved.org
Sep 11 15:47:02 *	Topic for #vim set by phy1729 (Wed Jun  5 19:23:57 2019)
Sep 11 15:47:02 -ChanServ-	[#vim] vim discussion .. www.vim.org, vim.sf.net, :help
Sep 11 15:47:02 *	Channel #vim url: http://vi-improved.org
Sep 11 16:06:42 <throstur>	anyone know some cool way to make it obvious when I :sh from vim that I'm not in my base shell but in a shell spawned by vim?
Sep 11 16:07:05 <throstur>	I'm looking for something simple, preferably not some major hax like ps | grep $PPID | grep vim or whatever
Sep 11 16:07:14 <throstur>	but I'll take what I can get...
Sep 11 16:12:14 <mgedmin>	in your vimrc :let $IN_VIM=1
Sep 11 16:13:03 <mgedmin>	... I think you can check for $MYVIMRC, I believe vim sets that
**** ENDING LOGGING AT Wed Sep 11 16:33:19 2019

**** BEGIN LOGGING AT Wed Sep 11 16:33:28 2019

Sep 11 16:33:28 *	Now talking on #vim
Sep 11 16:33:28 *	Topic for #vim is: Can't talk? Register https://freenode.net/kb/answer/registration | Vim 8.1.1467 http://www.vim.org | Don't ask to ask! | Use :help and :helpgrep | WIKI: http://vim.wikia.com | PASTE: http://vpaste.net/?ft=vim | https://www.vi-improved.org
Sep 11 16:33:28 *	Topic for #vim set by phy1729 (Wed Jun  5 19:23:57 2019)
Sep 11 16:33:28 -ChanServ-	[#vim] vim discussion .. www.vim.org, vim.sf.net, :help
Sep 11 16:33:28 *	Channel #vim url: http://vi-improved.org
Sep 11 16:43:37 <kkoomen>	When I tab in my plugin it jumps to the next TODO item, but it highlights the blocks because it uses a search pattern. This search is cleared using ":silent! noh\<CR>" but this doesn't fix it. If I add ":set lazyredraw" it is fixed, but can this also be fixed without setting lazyredraw?
Sep 11 16:43:46 <kkoomen>	Also, here is the demo: https://camo.githubusercontent.com/746fc41edea507995326820b7ab723f2a1058109/68747470733a2f2f692e696d6775722e636f6d2f727352567768722e676966
Sep 11 16:44:28 <kkoomen>	As you guys see, it shows the highlighting for a split second when tabbing around. Can this be prevented?
Sep 11 16:44:39 <novum>	kkoomen, whats is the mapping and all associated functions?
Sep 11 16:44:57 <mgedmin>	yeah, can we see your plugin?
Sep 11 16:45:29 <novum>	kkoomen, is the light-gray background your Search highlight? Is that what you are talking about?
Sep 11 16:45:58 <novum>	it is a little hard for us to jump into your mindset and understand what is going on with just that gif
Sep 11 16:46:09 <kkoomen>	novum: it's not mine, it's from someone who reported the bug, but yes it is.
Sep 11 16:46:17 <kkoomen>	give me a sec to get the things
Sep 11 16:46:54 <novum>	kkoomen, you can just link the plugin and maybe the relevant line? cool thanks
Sep 11 16:48:22 <koomen>	novum: sorry, got DC.
Sep 11 16:48:40 <novum>	unacceptable
Sep 11 16:48:53 <koomen>	xD
Sep 11 16:48:59 <mgedmin>	I also want a Data Center of my own ...
Sep 11 16:50:08 <novum>	mgedmin, you can't have your Center and eat it, too.
Sep 11 16:50:23 <koomen>	This is what my mapping returns when being in select-mode: "\<Esc>/\(\[TODO:[[:alnum:] ]\+\]\|TODO\)\<CR>:silent! noh\<CR>gno\<C-g>"
Sep 11 16:51:56 <mgedmin>	I wonder if :keeppatterns suppresses search highlighting
Sep 11 16:51:59 <mgedmin>	(probably not but I wish it did)
Sep 11 16:53:04 <mgedmin>	lol it undoes the :nohlsearch but instead starts highlighting the previous pattern (instead of the one I :keepp /searched/) again!
Sep 11 16:53:27 <mgedmin>	is there a way in vimscript to distinguish between hlsearch on and hlsearch on but :noh was called to suppress it?
Sep 11 16:54:04 <mgedmin>	I wish &hlsearch had values like 0/1/2 instead of just 0/1
Sep 11 16:54:22 <mgedmin>	now it seems impossible for a plugin to temporarily disable hlsearch but then reenable it without undoing the user's :noh
Sep 11 16:55:48 <koomen>	apparently.
Sep 11 16:56:59 <koomen>	thanks anyway ;)
Sep 11 16:57:52 <Elodin>	i find myself running set filetype very often for html files, where is the proper place to put that sort of configuration?
Sep 11 16:58:04 <Elodin>	set filetype=html.other
Sep 11 16:59:32 <mgedmin>	sounds like the job for a custom ftdetect script
Sep 11 16:59:47 <novum>	whoops went afk
Sep 11 17:00:36 <mgedmin>	koomen: you can use :call search('TODO') instead of :normal /TODO/ to move the cursor and avoid triggering search highlighting
Sep 11 17:00:49 <mgedmin>	ah they left
Sep 11 17:00:54 <novum>	idk if this will help but maybe setting v:hlsearch  yeah mg they left
Sep 11 17:01:43 <mgedmin>	ah my kingdom for a good irc client (that would dim nicks of people who are not online)
Sep 11 17:02:05 <novum>	mgedmin, what about smart filter? weechat?
Sep 11 17:02:36 <mgedmin>	I should try weechat someday
Sep 11 17:08:11 <fromBeyond>	Hi. Does anybody use the coc plugin? I am looking for a way to customize the look oc coc-lists. I read through the docs, and cant seem to find anythng on it.
Sep 11 17:08:13 <novum>	mgedmin, don't tell me your a bitchx user xd
Sep 11 17:08:24 <mgedmin>	struggling with irssi
Sep 11 17:08:39 <novum>	oof. come to the dark side; we have cookies
Sep 11 17:08:52 <mgedmin>	but do you have a friendly onboarding experience? ;)
Sep 11 17:09:04 *	mgedmin wonders if anyone wrote an irc client in vimscript
Sep 11 17:09:08 *	mgedmin stops wondering and shudders instead
Sep 11 17:09:35 <fromBeyond>	mgedmin: https://www.vim.org/scripts/script.php?script_id=931
Sep 11 17:09:37 <fromBeyond>	:)
Sep 11 17:09:50 <novum>	mgedmin, I always said I would write a real one using jobs
Sep 11 17:11:08 <novum>	mgedmin, I use a mapping to open a terminal split, set a few things (like nobuflisted  6wincmd _  etc), then navigate to previous window
Sep 11 17:11:18 <novum>	after attaching tmux attach -t irc
Sep 11 17:11:52 *	mgedmin feels bad for fromBeyond who never got an answer about coc.vim
Sep 11 17:11:59 <novum>	I was researching it
Sep 11 17:12:33 <novum>	there is nothing to be done anyhow
Sep 11 17:12:39 <mgedmin>	are there even language servers for python?  I work with python where static analysis never works and so smart completion plugins are always useless
Sep 11 17:13:06 <novum>	coc.nvim xd
Sep 11 17:13:10 <novum>	jedi always pops up
Sep 11 17:13:38 <mgedmin>	tried it a while ago, disabled its features one by one after encountering painful bugs in each, realized that nothing was left, removed it
Sep 11 17:13:43 <novum>	vim-lsp with pyls or somethin
Sep 11 17:14:06 <novum>	https://github.com/prabirshrestha/vim-lsp/wiki/Servers-Python#registering-in-vimrc
Sep 11 17:14:17 <mgedmin>	maybe when I start writing python 3 exclusively and annotating types everywhere static analysis will become less hopeless
Sep 11 17:14:20 <novum>	I am going to start trying to use vim-lsp more cuz I hear it's pretty good and unintrusive
Sep 11 17:14:55 <novum>	but I was usin coc and it was pretty good. With completeopt+=popup it pulls in the docstring and is pretty bootiful
Sep 11 17:15:40 <novum>	def foo(): / """ / This is a doc string / foo bar / """ pass   -> <c-x><c-i> -> popup with "This is a doc string\nfoo bar"
Sep 11 17:15:48 <mgedmin>	I've this hack that prints me the method signature when I type (
Sep 11 17:15:58 <mgedmin>	it usually suffices
Sep 11 17:16:03 <novum>	wow. do share xd
Sep 11 17:16:30 <novum>	coc does that too but it doesn't persist once you start typing first parameter
Sep 11 17:16:50 <mgedmin>	https://github.com/mgedmin/dotvim/blob/master/plugin/py-function-signature.vim
Sep 11 17:16:56 <mgedmin>	lol at the comment
Sep 11 17:17:03 <novum>	" This is going to be the GREATEST VIM PLUGIN EVAR!!!!!1
Sep 11 17:20:59 <novum>	mgedmin, you almost as white as me :o
Sep 11 17:21:12 <novum>	nice script!
Sep 11 17:21:57 <mgedmin>	but very unreadable, I should refactor it and extract it into a separate github repo as a proper plugin
Sep 11 17:24:06 <novum>	also autoload
Sep 11 17:25:42 <novum>	and use hasmapto() to check before adding default bindings (also check g:no_plugin_maps) and use <plug> instead of directly binding
Sep 11 17:25:48 <novum>	if you split into separate plugin
Sep 11 17:26:12 <novum>	very good job, though, considering it's fairly complex
Sep 11 17:29:08 <novum>	wow I didn't know about :exec s:python "PythonFunc()"
Sep 11 17:36:21 <mgedmin>	it's obsolete now that :pyx exists
Sep 11 17:37:41 <mgedmin>	(the s:python is merely a script-local variable, in case you didn't notice)
Sep 11 17:42:31 <novum>	O. no. makes sense. I silly
Sep 12 10:08:34 *	Disconnected ()
**** ENDING LOGGING AT Thu Sep 12 10:08:34 2019

**** BEGIN LOGGING AT Thu Sep 12 10:08:58 2019

Sep 12 10:08:58 *	Now talking on #vim
Sep 12 10:08:58 *	Topic for #vim is: Can't talk? Register https://freenode.net/kb/answer/registration | Vim 8.1.1467 http://www.vim.org | Don't ask to ask! | Use :help and :helpgrep | WIKI: http://vim.wikia.com | PASTE: http://vpaste.net/?ft=vim | https://www.vi-improved.org
Sep 12 10:08:58 *	Topic for #vim set by phy1729 (Wed Jun  5 19:23:57 2019)
Sep 12 10:08:59 -ChanServ-	[#vim] vim discussion .. www.vim.org, vim.sf.net, :help
Sep 12 10:08:59 *	Channel #vim url: http://vi-improved.org
Sep 12 10:09:26 <novik>	how can I automatically copy changes to the unnamed register? so that "ciw" will copy the changed word to register 0.
Sep 12 10:10:13 <lopid>	yiw first
Sep 12 10:10:37 <novik>	Yeah without yiw, I mean
Sep 12 10:10:56 <lopid>	redefine what c does
Sep 12 10:11:07 <steven>	nnoremap ciw yiw ciw
Sep 12 10:11:10 *	steven runs
Sep 12 11:12:14 <hussar>	nedbat: omg so strict with the rules
Sep 12 11:12:22 <hussar>	tell me
Sep 12 11:12:56 <_rgn>	how do i run this for every *.js file in my project? :g/import.*\./norm $i.js
Sep 12 11:13:01 <nedbat>	hussar: do you really want to scroll through the whole file, or are you looking for something in particular?
Sep 12 11:13:33 <henrebotha[m]>	_rgn: I believe :h :cdo might be of service
Sep 12 11:13:36 <digmbot>	:help :cdo -> http://vimhelp.appspot.com/quickfix.txt.html#%3Acdo
Sep 12 11:13:55 <hussar>	getting to something in particular is usually easy with / but I mean casualy searching to see an overview of the layout
Sep 12 11:14:37 <hussar>	I don't want to move my had to pgdn because that's basically the mouse anyway
Sep 12 11:16:35 <nedbat>	hussar: ctrl-d ?
Sep 12 11:19:12 <hussar>	I don't know or am forgetting what I"m looking for would be called
Sep 12 11:19:43 <hussar>	that key position is awkward
Sep 12 11:20:40 <hussar>	even more so when I think I missed something and want to scroll back up
Sep 12 11:29:18 <nedbat>	hussar: scrolling around in files can be a hard way to navigate, I'm not sure how to help with that.
Sep 12 11:29:39 <nedbat>	hussar: ]] will jump to the next function.  a tags plugin would give you a "table of contents"
Sep 12 11:31:01 <hussar>	so the solution for my own code is to keep files under 500 lines nedbat?
Sep 12 11:32:18 <nedbat>	hussar: if you like short files, you should keep your files short, yes.
Sep 12 11:40:57 <henrebotha[m]>	hussar: genuinely don't understand what's wrong with Ctrl-D/Ctrl-U
Sep 12 11:42:32 <hussar>	if c-d goes 25 lines at a time, it takes 10 presses to get to line 250/1000
Sep 12 11:42:38 <hussar>	that's what's wrong with it
Sep 12 11:43:17 <_rgn>	i mostly use ctrl-d ctrl-u and {} for scrolling and navigating
Sep 12 11:43:51 <igemnace>	what's the overall goal here?
Sep 12 11:44:08 <markzen>	money
Sep 12 11:44:22 <igemnace>	because if we're literally talking about getting to line 250/1000, that's just 250G/1000G. but i doubt you'll be happy with that answer as well
Sep 12 11:44:29 <igemnace>	markzen: isn't it bitches?
Sep 12 11:44:51 <markzen>	comes with the territory
Sep 12 11:44:58 <igemnace>	ah, of course
Sep 12 11:47:04 <aksr>	hi, is it possible, if spell is enabled, do disable "blue check" (meaning: word isn't capitalized etc.), but only blue?
Sep 12 11:47:50 <igemnace>	aksr: could you rephrase that? perhaps an example?
Sep 12 11:48:21 <vlt>	hussar: What about going to line 250 directly?
Sep 12 11:49:27 <aksr>	igemnace: spell is enabled, but i want to disable the blue part of it (for example, the word is written correctly, but ignore if it's capitalized etc)...
Sep 12 11:49:40 <aksr>	igemnace: is it clearer now?
Sep 12 11:50:05 <aksr>	*spellchecking
Sep 12 11:51:00 <igemnace>	aksr: ah, alright. if you want, you can configure :h hl-SpellCap
Sep 12 11:51:00 <digmbot>	:help hl-SpellCap -> http://vimhelp.appspot.com/syntax.txt.html#hl-SpellCap
Sep 12 11:54:31 <aksr>	thank you igemnace and digmbot
Sep 12 11:59:34 *	Disconnected ()
**** ENDING LOGGING AT Thu Sep 12 11:59:34 2019

**** BEGIN LOGGING AT Thu Sep 12 11:59:57 2019

Sep 12 11:59:57 *	Now talking on #vim
Sep 12 11:59:57 *	Topic for #vim is: Can't talk? Register https://freenode.net/kb/answer/registration | Vim 8.1.1467 http://www.vim.org | Don't ask to ask! | Use :help and :helpgrep | WIKI: http://vim.wikia.com | PASTE: http://vpaste.net/?ft=vim | https://www.vi-improved.org
Sep 12 11:59:57 *	Topic for #vim set by phy1729 (Wed Jun  5 19:23:57 2019)
Sep 12 11:59:58 -ChanServ-	[#vim] vim discussion .. www.vim.org, vim.sf.net, :help
Sep 12 11:59:58 *	Channel #vim url: http://vi-improved.org
Sep 12 12:00:54 <markzen>	beep boop burp
Sep 12 12:48:42 <yuung>	hi all.  i would like to do a regex search in a buffer, and get the resulting matches in a separate buffer. for example, given the regex "\(\w\+\)", find all the matches and output them somewhere
Sep 12 12:48:47 <yuung>	how can i go about this?
Sep 12 12:53:22 <igemnace>	one way is to redir :g/\(\w\+\)/p to a register, so that you can paste it wherever you want
Sep 12 12:54:06 <igemnace>	i actually have a set of convenience scripts for such stuff, perhaps you might find them useful
Sep 12 12:54:59 <igemnace>	https://github.com/igemnace/vim-config/blob/master/cfg/plugin/ex-read.vim is the entry point
Sep 12 12:55:40 <igemnace>	also see https://github.com/igemnace/vim-config/blob/master/cfg/autoload/ex.vim and https://github.com/igemnace/vim-config/blob/master/cfg/plugin/scratch.vim
Sep 12 12:56:56 <igemnace>	see: https://asciinema.org/a/Vt6q1dkDlULOfAFTK6Hthv6Kx
Sep 12 12:56:58 <yuung>	igemnace thank you
Sep 12 13:00:16 <igemnace>	here's a stripped down version for just the things you want: http://ix.io/1UTo
Sep 12 13:02:32 <yuung>	igemnace, awesome thanks a lot
Sep 12 13:21:31 <henrebotha[m]>	How can I get the path to the tags file?
Sep 12 13:22:03 <henrebotha[m]>	I'm trying to write my ctags config in a way that caters for two different use cases (tags in project root, and tags one level up from project root)
Sep 12 13:22:14 <henrebotha[m]>	And I need to get the path to the tags file that's in use
Sep 12 13:23:00 <osse>	henrebotha[m]: tagfiles()
Sep 12 13:24:07 <henrebotha[m]>	Maybe I'm misunderstanding something here
Sep 12 13:24:19 <henrebotha[m]>	Because tagfiles() is returning an empty list even though there's a tag file one dir up from pwd
Sep 12 13:25:09 <henrebotha[m]>	What constitutes a "match" for tagfiles?
Sep 12 13:25:24 <henrebotha[m]>	Like what criteria does Vim use to say, "ah, found the tag file"
Sep 12 13:25:34 <henrebotha[m]>	Does it have to contain tags for the current file?
Sep 12 13:27:30 <osse>	henrebotha[m]: does the 'tags' option instruct vim to search upward?
Sep 12 13:27:44 <henrebotha[m]>	I thought it did, hang on
Sep 12 13:27:55 <henrebotha[m]>	No it doesn't, I'm a nerd
Sep 12 13:28:01 <henrebotha[m]>	I forgot to restart that particular Vim instance
Sep 12 13:29:02 <henrebotha[m]>	Ok that's sorted it, thanks osse
Sep 12 13:37:58 <henrebotha[m]>	How do I determine whether or not the current file is in pwd?
Sep 12 13:39:44 <steven>	:h tags
Sep 12 13:39:45 <digmbot>	:help tags -> http://vimhelp.appspot.com/tagsrch.txt.html#tags
Sep 12 13:40:00 <osse>	henrebotha[m]: compare getcwd() and expand('%:h') perhaps?
Sep 12 13:40:08 <henrebotha[m]>	I guess this sort of does it, but it feels ugly: getcwd() . "/" . expand("%") == expand("%:p")
Sep 12 13:40:10 <henrebotha[m]>	Hah, snap
Sep 12 13:40:52 <steven>	why a tag file outside of your project if I may ask?
Sep 12 13:41:22 <henrebotha[m]>	Because I use git worktree to make multiple working trees for the same repo, all nested under the same dir
Sep 12 13:41:36 <osse>	henrebotha[m]: expand('%:.:h) == '.'
Sep 12 13:41:37 <henrebotha[m]>	So for project foo, branches bar baz and qux, I have foo/bar, foo/baz, and foo/qux
Sep 12 13:41:44 <henrebotha[m]>	I'd like the tags file to live in foo
Sep 12 13:42:30 <henrebotha[m]>	osse: I don't follow, that doesn't seem to do what I want?
Sep 12 13:42:45 <steven>	kind of silly given that each worktree might have a different set of api's? so the tagfile in foo wouldn't know about changes in each workingtree
Sep 12 13:43:56 <henrebotha[m]>	The idea is to incrementally update the shared tag file when I switch contexts
Sep 12 13:44:09 <henrebotha[m]>	It'll be slightly mismatched sometimes, but for now I can live with that
Sep 12 13:44:36 <osse>	henrebotha[m]: you want to check whether the current file is in the current directory, right?
Sep 12 13:44:43 <henrebotha[m]>	Otherwise every time I create a new working tree, I lose all my existing tags
Sep 12 13:44:59 <henrebotha[m]>	osse: I want to know whether the current file is a child of pwd
Sep 12 13:45:05 <osse>	ah
Sep 12 13:45:56 <osse>	I'd check that expand('%:.') doesn't start with /, ~ or ..
Sep 12 13:47:25 <henrebotha[m]>	Hah, clever
Sep 12 13:48:24 <osse>	why do you need to know?
Sep 12 13:49:07 <henrebotha[m]>	I'm writing an autocmd to generate tags for files I open, but I don't want it to do this when the file being opened is outside of the pwd
Sep 12 13:49:23 <henrebotha[m]>	E.g. when I open my vimrc or whatever
Sep 12 13:50:55 <osse>	stridx(expand('%:p'), getcwd()) == 0
Sep 12 13:52:08 <g19fanatic>	i have a quick question... I'm an avid vim user but am having an issue that I cannot find an answer for.     I use buffers extensively and use `:b filname` which will usually give me a partial list of filenames and I can tab through to the buffer I'm looking for. On the latest version of git for windows (installed yesterday), when I hit `tab` for
Sep 12 13:52:08 <g19fanatic>	the autocomplete, it shows a list of available options and I need to `shift+tab` to cycle through them... This is seriously messing up my flow... How do I change this behavior?
Sep 12 13:54:39 <g19fanatic>	In a cygwin installation, vim is working as expected. They have the same version of vim and I diffed all vimrc files (and defaults.vim) between the different installations but cannot see anything that would affect this setup
Sep 12 14:17:11 <henrebotha[m]>	osse: Elegant, thanks
Sep 12 14:38:42 <kkoomen>	Why does ":echo @/" return a differrent value than ":echo histget('search')" ?
Sep 12 14:54:24 <vejetaryenvampir>	Is there a plugin or setting for async writing via sshfs?
Sep 12 14:56:05 <henrebotha[m]>	Hmm, I need the path to the current file relative to a given directory. I.e. I want to specify a directory in the full file path, and I want the relative path from there. So for /foo/bar/baz, I can ask for the path relative to foo and get bar/baz, or the path relative to bar and get baz only
Sep 12 15:20:59 <rnmhdn>	how can I put things like yaw in :g//<here>?
Sep 12 15:22:40 <lopid>	type "y" "a" "w"
Sep 12 15:22:50 <lopid>	:help c_ctrl-r
Sep 12 15:22:51 <digmbot>	:help c_ctrl-r -> http://vimhelp.appspot.com/cmdline.txt.html#c_CTRL-R
Sep 12 15:22:52 <rnmhdn>	that's so bad
Sep 12 15:22:56 <lopid>	:)
Sep 12 15:23:01 <rnmhdn>	I also tried storing it in a macto
Sep 12 15:23:08 <rnmhdn>	so I did
Sep 12 15:23:14 <rnmhdn>	:g//@q
Sep 12 15:23:18 <rnmhdn>	but it didn't work either
Sep 12 15:23:37 <lopid>	anyway, it's <c-r>"
Sep 12 15:23:58 <g19fanatic>	so i found the answer to my question....  wildmode=full... apparently its set in defaults.vim differently and I didn't know what it did.. .now i do
Sep 12 15:24:19 <lopid>	welcome to non-default defaults
Sep 12 15:24:25 <rnmhdn>	I don't understand lopid
Sep 12 15:24:46 <lopid>	in the command like, hold control and press r, release control and press "
Sep 12 15:25:28 <lopid>	s/like/line
Sep 12 15:27:05 <rnmhdn>	I don't really understand
Sep 12 15:27:08 <rnmhdn>	I did this
Sep 12 15:27:29 <lopid>	did you want the content of the thing you last yanked?
Sep 12 15:28:10 <rnmhdn>	:g/pattern/{{press ctrl r}}{{type q which is the register I stored my command in}}{{then I had the content of my register displayed}}{{pressed "}}{{pressed enter}}{{I got no such command error}}
Sep 12 15:28:33 <rnmhdn>	lopid: no. I want to run a macro on all lines that match a certain pattern
Sep 12 15:28:42 <lopid>	you don't need the " now, since the character after <c-r> is the register
Sep 12 15:29:14 <lopid>	(or other, if not a register character)
Sep 12 15:29:31 <rnmhdn>	Not an editor command: ^yawoconsole.log*'<80>kb<80>kb('^[pa');^[bbiactioin:<80>kb<80>kb<80>kb<80>kbon: q<80>kb^[
Sep 12 15:30:10 <lopid>	oh. using stuff like <c-r> whilst recording a macro does indeed mess it up
Sep 12 15:30:15 <rnmhdn>	no
Sep 12 15:30:18 <rnmhdn>	listen
Sep 12 15:30:25 <lopid>	i shall read instead
Sep 12 15:30:34 <rnmhdn>	I have a magic command command that I have stored in a macro
Sep 12 15:30:45 <rnmhdn>	so if I'm on line x and do @q the magic I want happens
Sep 12 15:30:55 <lopid>	hooray
Sep 12 15:30:58 <rnmhdn>	now what I want is to do my magic on every line that matches a certain pettern
Sep 12 15:31:18 <lopid>	you want to run your macro on the specified lines
Sep 12 15:31:31 <lopid>	?
Sep 12 15:31:39 <lopid>	:g//normal @q
Sep 12 15:32:11 <rnmhdn>	thanks
Sep 12 15:32:39 <rnmhdn>	ufff
Sep 12 15:32:42 <rnmhdn>	thank you:P
Sep 12 15:32:49 <rnmhdn>	lopid: no. I want to run a macro on all lines that match a certain pattern
Sep 12 15:33:01 <rnmhdn>	I had exactlye said that before tho:-":P
Sep 12 15:35:08 <lopid>	le teehee
Sep 12 15:35:49 <lopid>	to be fair you originally asked about yaw
Sep 12 15:36:20 <lopid>	but we live happily every after
Sep 12 15:39:55 <rnmhdn>	correct:P I thought using a macro would make life easier:D
Sep 12 15:46:50 <adip>	could you help me with something? I'm trying to add C "->" to vim's highlight. I've tried adding it as a keyword but it doesn't work.
Sep 12 15:49:54 <lopid>	as if it was part of a colorscheme?
Sep 12 15:52:45 <adip>	lopid: yes, I've tried to add a custom category (idk how it's called) :syn keyword test ->   and highlight test ctermfg=yellow
Sep 12 15:53:58 <lopid>	i can't help with syntax colouring
Sep 12 15:54:41 <lopid>	i know how to highlight a pattern but not as syntax
Sep 12 15:54:52 <adip>	I want my highlight to match with * and -> but I'm not familiar enough with vim syntax matching mechanism to do it
Sep 12 15:54:55 <adip>	ok
Sep 12 15:55:48 <steven>	it'd match if you disabled syntax highlighting :D
Sep 12 15:56:22 <lopid>	or looked away
Sep 12 15:58:21 <rnmhdn>	how do I edit the content of a macro?
Sep 12 15:58:41 <steven>	https://thoughtbot.com/blog/how-to-edit-an-existing-vim-macro
Sep 12 15:58:46 <rnmhdn>	how can I copy a register into clipboard
Sep 12 16:00:08 <steven>	let @$registter=@*
Sep 12 16:00:17 <steven>	or +? I never remember which one is which
Sep 12 16:00:22 <lowryder>	rnmhdn: (if you have +clipboard) then you can put in the + register
Sep 12 16:00:31 <lowryder>	rnmhdn: see :h quote+ for more about those
Sep 12 16:00:31 <digmbot>	:help quote+ -> http://vimhelp.appspot.com/gui_x11.txt.html#quote%2B
Sep 12 16:01:20 <rnmhdn>	steven:I can't make it with your link
Sep 12 16:01:37 <rnmhdn>	I also tried let @+=@q but it didn't work
Sep 12 16:01:43 <rnmhdn>	@q is my macro
Sep 12 16:02:26 <rnmhdn>	I get
Sep 12 16:02:28 <rnmhdn>	E15: Invalid expression: '^yawoconsole.log('action: ^[pa, wit<80>kb<80>kb<80>kb^[k$bbyawjA${}')^[hhPbX'
Sep 12 16:02:44 <rnmhdn>	when I do let @+='<c-r><c-r>q'
Sep 12 16:02:56 <rnmhdn>	^yawoconsole.log('action: ^[pa, wit<80>kb<80>kb<80>kb^[k$bbyawjA${}')^[hhPbX is the content of my register
Sep 12 16:03:32 <steven>	rnmhdn: works on my machine
Sep 12 16:03:34 <steven>	dunno
Sep 12 16:04:08 <rnmhdn>	my vim is so fucked up
Sep 12 16:04:16 <rnmhdn>	now I'm in ex mode and cant get out
Sep 12 16:04:26 <steven>	:visual to get out of ex mode
Sep 12 16:35:55 <masquino>	hi everyone! can someone help me understand why this https://pastebin.com/wPCvDmhu doesn't seem to match "main" in this `public function main() {}` ?
Sep 12 17:44:43 <bdesham>	I've had the "closeb" plugin (to automatically close XML/HTML tags) in my configuration for a long time, but it hasn't been working recently
Sep 12 17:44:54 <bdesham>	(and by "recently" I mean "in the past several years")
Sep 12 17:45:17 <bdesham>	is anyone using this plugin successfully (and maybe there's just something wrong with my configuration), or is it obsolete?
Sep 12 17:48:12 <steven>	don't know closeb, don't know any "auto closers", but for html (or xml and alike) I'd probably use something like emmet.
Sep 12 17:52:54 <bdesham>	that doesn't look like an exact replacement but it's definitely interesting!
Sep 12 17:52:56 <bdesham>	and powerful
Sep 12 17:53:47 <axelf4>	emmet is one of those things that just feel like they were meant to be
Sep 12 17:56:49 <igemnace>	the default html omnicomplete has closing semantics, actually
Sep 12 17:57:06 <igemnace>	</<C-x><C-o> to omnicomplete the closing tag
Sep 12 17:57:22 <igemnace>	but true, i almost never use that because i rely on emmet
Sep 12 17:57:55 <steven>	well technically emmet closes the tags for you, too bdesham :D
Sep 12 17:58:18 <igemnace>	emmet and surround, for editing html/xml. come to think of it, i think i never type full tags manually
Sep 12 17:58:35 <steven>	igemnace: doesn't work on my machine
Sep 12 17:58:57 <steven>	the default omnicomplete I mean
Sep 12 17:59:24 <igemnace>	steven: is it an older version of vim? perhaps it's a newer addition
Sep 12 17:59:43 <steven>	Included patches: 1-2021
Sep 12 17:59:55 <steven>	probably new, I didn't update vim in like 12h
Sep 12 18:00:23 <igemnace>	are you in an html file? do you have your own omnicompletion settings?
Sep 12 18:01:03 <igemnace>	wfm with vim --clean then :filetype plugin indent on
Sep 12 18:01:03 <steven>	its all vim -u NONE test.html, then <div>c_x c_o
Sep 12 18:01:23 <steven>	oh, yeah should probably enable ft plugins :D
Sep 12 18:01:26 <igemnace>	ah, with vim -u NONE you'll need :filetype plugin on at least, to grab the html omnicomplete
Sep 12 18:02:03 <steven>	still no omnifunc set
Sep 12 18:05:02 <igemnace>	hmm, not sure
Sep 12 18:05:03 <bdesham>	huh. I've been using <C-N> and <C-P> autocompletion for years, but I guess that's separate from omnicomplete?
Sep 12 18:05:39 <bdesham>	steven: according to https://vim.fandom.com/wiki/Omni_completion you need to do  set omnifunc=syntaxcomplete#Complete
Sep 12 18:05:42 <igemnace>	yep, omnicomplete is explicitly triggered with <C-x><C-o>
Sep 12 18:05:50 <igemnace>	designed to be somewhat filetype-specific
Sep 12 18:07:23 <steven>	still not working, oh well :D I won't use it anyway - was just curious.
Sep 12 18:07:46 <steven>	I didn't nkow about a generic omnifunc though! I usually just set a ft specific in after/ftplugin/$ft.vim
Sep 12 18:08:52 <igemnace>	not a generic omnifunc actually; it's set in the default html runtime file
Sep 12 18:53:36 *	Disconnected ()
**** ENDING LOGGING AT Thu Sep 12 18:53:36 2019

**** BEGIN LOGGING AT Thu Sep 12 18:54:02 2019

Sep 12 18:54:02 *	Now talking on #vim
Sep 12 18:54:02 *	Topic for #vim is: Can't talk? Register https://freenode.net/kb/answer/registration | Vim 8.1.1467 http://www.vim.org | Don't ask to ask! | Use :help and :helpgrep | WIKI: http://vim.wikia.com | PASTE: http://vpaste.net/?ft=vim | https://www.vi-improved.org
Sep 12 18:54:02 *	Topic for #vim set by phy1729 (Wed Jun  5 19:23:57 2019)
Sep 12 18:54:02 -ChanServ-	[#vim] vim discussion .. www.vim.org, vim.sf.net, :help
Sep 12 18:54:02 *	Channel #vim url: http://vi-improved.org
Sep 12 20:23:48 <abyx>	when using the Syntastic plugin, how can i determine which path a syntax checker is looking for to run its linting/checking?
Sep 12 20:36:54 <eater9>	Just spent 30 minutes trying to figure out why I was getting a crash with "Caught deadly signal SEGV" on some innocuous files -- turns out they had a BOM in them
Sep 12 20:40:11 <eater9>	Now, why would the BOM make the editor crash?
Sep 12 20:40:32 <osse>	eater9: no reason. i'd say it's a bug. vim usually handles BOM just fine
Sep 12 20:40:42 <romainl>	colloquially known as "BOMB"
Sep 12 20:41:00 <LeoNerd>	Someone set you up the BOM?
Sep 13 07:15:49 *	Disconnected ()
**** ENDING LOGGING AT Fri Sep 13 07:15:49 2019

**** BEGIN LOGGING AT Fri Sep 13 07:16:13 2019

Sep 13 07:16:13 *	Now talking on #vim
Sep 13 07:16:13 *	Topic for #vim is: Can't talk? Register https://freenode.net/kb/answer/registration | Vim 8.1.1467 http://www.vim.org | Don't ask to ask! | Use :help and :helpgrep | WIKI: http://vim.wikia.com | PASTE: http://vpaste.net/?ft=vim | https://www.vi-improved.org
Sep 13 07:16:13 *	Topic for #vim set by phy1729 (Wed Jun  5 19:23:57 2019)
Sep 13 07:16:13 -ChanServ-	[#vim] vim discussion .. www.vim.org, vim.sf.net, :help
Sep 13 07:16:13 *	Channel #vim url: http://vi-improved.org
Sep 13 07:16:23 <wwalker>	I found this, which would explain it, excewpt I don't have that plugin... https://stackoverflow.com/questions/9492683/how-to-config-vim-to-open-a-filename-which-contains-line-and-column-number
Sep 13 07:16:36 <wwalker>	arinov: thank you
Sep 13 07:16:54 <arinov>	wwalker: i did nothing
Sep 13 07:40:55 <davidfetter>	xacktm, I want to add a newline and whatever indents I would have added if I'd been typing with smartindent on.
Sep 13 07:41:52 <Raimondi>	davidfetter: add the newlines and then use :help =
Sep 13 07:41:53 <digmbot>	:help = -> http://vimhelp.appspot.com/change.txt.html#%3D
Sep 13 07:56:42 <wwalker>	arinov: you answered, you don't have to have the answer to get a Thank you :-)
Sep 13 07:57:41 <wwalker>	and it is a bug.  it is a bug in me not expecting that behavior out of something that I've put in my .vim bundles.  I'll figure out which one tomorrow (1:00 AM here)
Sep 13 08:04:33 <rindolf>	davidfetter: hey, long time
Sep 13 08:19:50 <davidfetter>	rindolf, way too long
Sep 13 08:22:51 <rindolf>	davidfetter: sup?
Sep 13 08:24:46 <rindolf>	saraf: heh, i thought you were someone i know whose name is also a. saraf
Sep 13 08:25:06 <rindolf>	but he uses emacs afaik
Sep 13 08:25:08 <davidfetter>	oh, just trying to do a couple of things together that are individually sane: learn C, and come up with something faster than sprintf for outputting integer types in PostgreSQL
Sep 13 08:25:31 <rindolf>	davidfetter: ah
Sep 13 08:25:51 <rindolf>	davidfetter: good luck
Sep 13 08:26:15 <davidfetter>	thanks!
Sep 15 22:38:27 *	Disconnected ()
**** ENDING LOGGING AT Sun Sep 15 22:38:27 2019

**** BEGIN LOGGING AT Sun Sep 15 22:38:53 2019

Sep 15 22:38:53 *	Now talking on #vim
Sep 15 22:38:53 *	Topic for #vim is: Can't talk? Register https://freenode.net/kb/answer/registration | Vim 8.1.1467 http://www.vim.org | Don't ask to ask! | Use :help and :helpgrep | WIKI: http://vim.wikia.com | PASTE: http://vpaste.net/?ft=vim | https://www.vi-improved.org
Sep 15 22:38:53 *	Topic for #vim set by phy1729 (Wed Jun  5 19:23:57 2019)
Sep 15 22:38:53 -ChanServ-	[#vim] vim discussion .. www.vim.org, vim.sf.net, :help
Sep 15 22:38:53 *	Channel #vim url: http://vi-improved.org
Sep 16 00:19:18 *	Disconnected ()
**** ENDING LOGGING AT Mon Sep 16 00:19:18 2019

**** BEGIN LOGGING AT Mon Sep 16 00:19:45 2019

Sep 16 00:19:45 *	Now talking on #vim
Sep 16 00:19:45 *	Topic for #vim is: Can't talk? Register https://freenode.net/kb/answer/registration | Vim 8.1.1467 http://www.vim.org | Don't ask to ask! | Use :help and :helpgrep | WIKI: http://vim.wikia.com | PASTE: http://vpaste.net/?ft=vim | https://www.vi-improved.org
Sep 16 00:19:45 *	Topic for #vim set by phy1729 (Wed Jun  5 19:23:57 2019)
Sep 16 00:19:45 -ChanServ-	[#vim] vim discussion .. www.vim.org, vim.sf.net, :help
Sep 16 00:19:45 *	Channel #vim url: http://vi-improved.org
Sep 16 00:56:03 <Lewix>	yi
Sep 16 00:56:07 <Lewix>	anyone use yadr?
Sep 16 00:56:19 <Lewix>	It's been a few years now, anything better ?
Sep 16 09:05:08 *	Disconnected ()
**** ENDING LOGGING AT Mon Sep 16 09:05:08 2019

**** BEGIN LOGGING AT Mon Sep 16 09:05:35 2019

Sep 16 09:05:35 *	Now talking on #vim
Sep 16 09:05:35 *	Topic for #vim is: Can't talk? Register https://freenode.net/kb/answer/registration | Vim 8.1.1467 http://www.vim.org | Don't ask to ask! | Use :help and :helpgrep | WIKI: http://vim.wikia.com | PASTE: http://vpaste.net/?ft=vim | https://www.vi-improved.org
Sep 16 09:05:35 *	Topic for #vim set by phy1729 (Wed Jun  5 19:23:57 2019)
Sep 16 09:05:35 -ChanServ-	[#vim] vim discussion .. www.vim.org, vim.sf.net, :help
Sep 16 09:05:35 *	Channel #vim url: http://vi-improved.org
Sep 16 09:30:52 <joanna89>	hello
Sep 16 09:31:04 <joanna89>	if I want to delete empty lines
Sep 16 09:31:25 <joanna89>	what should I do to delete empty lines?
Sep 16 09:32:00 <joanna89>	I tried %/^$/d,but all lines were deleted
Sep 16 09:34:28 <joanna89>	g/^$/d works
Sep 16 09:36:22 <steven>	you're welcoem
Sep 16 10:15:10 <sohail-ahmed>	novum: here it is http://vpaste.net/oENMt
Sep 16 12:09:42 <markzen>	l4j0v3t0apl4p3
Sep 16 12:13:16 <depesz>	Password added to dictionary.
Sep 16 12:15:09 <markzen>	hopefully it wasn't a secret pr0n url
Sep 16 12:24:43 <jaggz>	That's not funny I'm leaving.
Sep 16 12:24:46 <jaggz>	;)
Sep 16 12:50:20 <mikedo>	Does vim terminal support session disconnection like, e.g., tmux?
Sep 16 12:51:03 <Pepe_vulgaris>	mikedo: yes
Sep 16 12:52:01 <mikedo>	Thanks @Pepe. Do you have a link to the documentation? I couldn't find it in :h terminal
Sep 16 12:52:02 <digmbot>	:help terminal -> http://vimhelp.appspot.com/terminal.txt.html#terminal
Sep 16 12:52:10 <mikedo>	OK, thanks.
Sep 16 13:11:21 <hauleth>	mikedo: no, it doesn't support it. If Vim closes then all sessions will be closed
Sep 16 15:45:11 *	Disconnected ()
**** ENDING LOGGING AT Mon Sep 16 15:45:11 2019

**** BEGIN LOGGING AT Mon Sep 16 15:45:39 2019

Sep 16 15:45:39 *	Now talking on #vim
Sep 16 15:45:39 *	Topic for #vim is: Can't talk? Register https://freenode.net/kb/answer/registration | Vim 8.1.1467 http://www.vim.org | Don't ask to ask! | Use :help and :helpgrep | WIKI: http://vim.wikia.com | PASTE: http://vpaste.net/?ft=vim | https://www.vi-improved.org
Sep 16 15:45:39 *	Topic for #vim set by phy1729 (Wed Jun  5 19:23:57 2019)
Sep 16 15:45:40 -ChanServ-	[#vim] vim discussion .. www.vim.org, vim.sf.net, :help
Sep 16 15:45:40 *	Channel #vim url: http://vi-improved.org
Sep 16 15:45:42 <lopid>	you are quoting it correctly, right?
Sep 16 15:47:25 <lopid>	a quick test here says you don't need nohup. check the python
Sep 16 15:47:40 <felixcra>	ok thanks a lot
Sep 16 15:47:51 <felixcra>	will check everything again
Sep 16 15:49:54 <felixcra>	Oh I had an issue with the file path, now it works fine...thx again
Sep 16 16:09:03 <jguddas-tr>	there is a way to open things with the file:row:col format?
Sep 16 16:11:26 <lopid>	with a plugin
Sep 16 16:12:14 <jguddas-tr>	i just found https://github.com/wsdjeg/vim-fetch :)
Sep 16 16:26:58 <tsujp>	I'm confused, when it comes to vim what does this sequence of characters represent? <C-n>
Sep 16 16:27:07 <tsujp>	I tried literally typing < then C then - etc and nothing happened
Sep 16 16:27:17 <lopid>	control and n
Sep 16 16:32:54 <steven>	jguddas-tr: FWIW you can use :e +$LINENR $file w/o a plugin, if the line character doesn't matter
Sep 17 10:23:00 *	Disconnected ()
**** ENDING LOGGING AT Tue Sep 17 10:23:00 2019

**** BEGIN LOGGING AT Tue Sep 17 10:23:27 2019

Sep 17 10:23:27 *	Now talking on #vim
Sep 17 10:23:27 *	Topic for #vim is: Can't talk? Register https://freenode.net/kb/answer/registration | Vim 8.1.1467 http://www.vim.org | Don't ask to ask! | Use :help and :helpgrep | WIKI: http://vim.wikia.com | PASTE: http://vpaste.net/?ft=vim | https://www.vi-improved.org
Sep 17 10:23:27 *	Topic for #vim set by phy1729 (Wed Jun  5 19:23:57 2019)
Sep 17 10:23:27 -ChanServ-	[#vim] vim discussion .. www.vim.org, vim.sf.net, :help
Sep 17 10:23:27 *	Channel #vim url: http://vi-improved.org
Sep 17 10:27:38 <whereistejas>	Hey, folks!
Sep 17 10:28:09 <whereistejas>	I want vim to show that it is in "normal" mode, just the way it shows that it is in "insert" mode
Sep 17 10:28:14 <whereistejas>	How do I do that?
Sep 17 10:29:59 <Pepe_vulgaris>	:h 'statusline
Sep 17 10:30:00 <digmbot>	:help 'statusline -> http://vimhelp.appspot.com/options.txt.html#%27statusline%27
Sep 17 10:31:30 <whereistejas>	How can statusline show the mode?
Sep 17 10:31:54 <whereistejas>	Isn't the mode shown in the command mode area?
Sep 17 10:33:17 <Pepe_vulgaris>	not necessarily
Sep 17 10:33:18 <nickspoon>	normal mode is "not in insert or visual or command-line" mode
Sep 17 10:34:12 <whereistejas>	nickspoon: I understandd
Sep 17 10:34:41 <whereistejas>	But, I need that functionality, for the purpose of demonstration
Sep 17 10:35:41 <nickspoon>	Then build a statusline to show it
Sep 17 10:35:56 <Pepe_vulgaris>	whereistejas: airline/powerline does it by default
Sep 17 10:36:20 <Pepe_vulgaris>	that way you don't necessarily have to build your own
Sep 17 10:36:43 <whereistejas>	I agree
Sep 17 10:36:49 <whereistejas>	Pepe_vulgaris: thanks :)
Sep 17 10:36:54 <whereistejas>	nickspoon: thanks:)
Sep 17 10:37:31 <nickspoon>	whereistejas: https://gist.github.com/romainl/58245df413641497a02ffc06fd1f4747 <- there's a very simple statusline, showing a file's modified state
Sep 17 10:37:50 <nickspoon>	you can do something similar with  mode()
Sep 17 14:21:35 <syyyr>	Hello, does something like :keeppatterns but for cmd-line history exist?
Sep 17 14:24:36 <lopid>	i can answer this
Sep 17 14:24:38 <lopid>	i don't know
Sep 17 14:26:50 <markzen>	just run histdel once you're done
Sep 17 14:27:08 <markzen>	:h histdel(
Sep 17 14:27:08 <digmbot>	:help histdel( -> http://vimhelp.appspot.com/eval.txt.html#histdel%28%29
Sep 17 14:27:15 <syyyr>	My usecase is this: I have command, that calls a function, which does :registers and then call feedkeys(":normal! \"p\<Left>")
Sep 17 14:28:09 <syyyr>	So it shows me registers and then prepares a command where I just type name of the registers I want to put
Sep 17 14:29:45 <lopid>	there is a plugin for something like that, which previews the contents of registers whenever you start to do a register command
Sep 17 14:33:05 <syyyr>	I will try histdel
Sep 17 14:49:31 <syyyr>	I have solved the problem with a different approach: with input() and execute
Sep 17 14:57:17 <swimmer>	lopid: that plugin is called vim-peekaboo -> https://github.com/junegunn/vim-peekaboo
Sep 17 15:00:53 <lopid>	that's it
Sep 17 15:04:03 <markzen>	:h ->
Sep 17 15:04:04 <digmbot>	:help -> -> http://vimhelp.appspot.com/options.txt.html#cpo-%3E
Sep 17 15:05:05 <markzen>	recent vim has lua-style methods, apparently
Sep 17 17:42:23 <xaa>	hi, I am looking at the lightline plugin. Is anyone has the config to dislpay Syntastic error in the status line, please ?
Sep 17 17:57:06 <lopid>	makeprg "last set from such and such file, line 30", which is an empty line
Sep 17 18:11:12 <qstrahl>	markzen: Might you be referring to lambas?
Sep 17 18:11:25 <qstrahl>	s/lambas/lambdas
Sep 17 18:16:30 *	xaa found the oslution 
Sep 17 18:29:07 <viking>	how can i write a :s command that uses the contents of a register in a pattern?
Sep 17 18:29:19 <viking>	without actually inserting the contents in the pattern
Sep 17 18:29:30 <viking>	do i need to create a macro to put the contents in?
Sep 17 18:33:27 <lopid>	in the pattern? probably substitute() and getreg()
Sep 17 18:34:17 <viking>	lopid: k, i'll check those out
Sep 17 18:34:18 <viking>	thanks
Sep 17 18:35:04 <m_ben>	or :execute '%s/' . getreg('"') . '/mystring/g'
Sep 17 18:35:29 <viking>	m_ben: sweet
Sep 17 18:35:54 <viking>	thanks
Sep 17 20:33:07 <wild_buffalo>	Hi, I've said no to the spellfile prompt
Sep 17 20:33:16 <wild_buffalo>	Is there a way to make it ask again to download the spellfile?
Sep 17 21:01:07 <plitter>	I'm looking into templating and want to start writing in the file immediately when I start a file that has a template. so f.ex. .sh files should start with the hashbang, and 2 lines down it should start with the cursor and ready to insert, I've tried with autocmd BufNewFile *.sh 0r skeleton | $ | insert, but with the insert I get call FugitiveDetect(expand('<amatch>:p')) on next to last line.
Sep 17 21:23:44 <Antony_>	plitter: `startinsert`
Sep 17 21:26:06 <plitter>	I swear to god that is one of the things I tested...
Sep 17 21:31:04 <plitter>	thanks Antony_
Sep 17 21:36:07 <david2>	hi to all have a question please i have a command that im using for shutting down a buffer :Bdelete weirdly if i bind that to my leaderkey before the buffer close theres like 1 second of delay is there anything i can do for that ? dont have the same problem with saving for example but closing vim or closing a buffer is slow thanks for your help
Sep 17 21:43:19 <Antony_>	plitter: no worries
Sep 17 21:44:04 <nedbat>	david2: the one second delay sounds like it thinks another key might be a different command.
Sep 17 21:44:09 <Antony_>	david2: Another mapping starting with the same sequence perhaps?
Sep 17 21:44:19 <nedbat>	david2: do you have both <leader>d and <leader>dx mapped (for example)
Sep 17 21:44:58 <david2>	nope no leader d
Sep 17 21:45:03 <david2>	or leader dx
Sep 17 21:45:16 <nedbat>	david2: what did you bind it to?
Sep 17 21:45:33 <david2>	i added a leader q for :Bdelete
Sep 17 21:46:18 <david2>	but even when i try to bind :q to leader its slow its not only killing buffer
Sep 17 21:46:26 <nedbat>	david2: i don't know the simple way to save it elsewhere so that you can share it with us, but does :map  show another leader-q mapping?
Sep 17 21:46:30 <nickspoon>	q is a normal mode command, for recording macros
Sep 17 21:46:48 <romainl>	someone is playing with matches
Sep 17 21:46:55 <nickspoon>	so when you enter q for your mapping, Vim waits to see if you are recording a macro
Sep 17 21:47:01 <nickspoon>	before performing your mapping
Sep 17 21:47:49 <nedbat>	nickspoon: leader-q is not the same as q
Sep 17 21:47:59 <Antony_>	^Wq is also only two keystrokes ...
Sep 17 22:43:51 *	Disconnected ()
**** ENDING LOGGING AT Tue Sep 17 22:43:51 2019

**** BEGIN LOGGING AT Tue Sep 17 22:44:16 2019

Sep 17 22:44:16 *	Now talking on #vim
Sep 17 22:44:16 *	Topic for #vim is: Can't talk? Register https://freenode.net/kb/answer/registration | Vim 8.1.1467 http://www.vim.org | Don't ask to ask! | Use :help and :helpgrep | WIKI: http://vim.wikia.com | PASTE: http://vpaste.net/?ft=vim | https://www.vi-improved.org
Sep 17 22:44:16 *	Topic for #vim set by phy1729 (Wed Jun  5 19:23:57 2019)
Sep 17 22:44:16 -ChanServ-	[#vim] vim discussion .. www.vim.org, vim.sf.net, :help
Sep 17 22:44:16 *	Channel #vim url: http://vi-improved.org
**** ENDING LOGGING AT Tue Sep 17 22:58:02 2019

**** BEGIN LOGGING AT Tue Sep 17 22:58:02 2019

