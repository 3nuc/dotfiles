**** BEGIN LOGGING AT Sat Jun 29 16:02:26 2019

cze 29 16:02:26 *	Now talking on ##javascript
cze 29 16:02:26 *	Topic for ##javascript is: JavaScript is *not* Java. | Just ask your question. | Say "!mdn abc" for docs on "abc". | Don't paste code in the channel. | Can't talk? Get registered on freenode ( https://git.io/vaTS2 )
cze 29 16:02:26 *	Topic for ##javascript set by niggler!~niggler@unaffiliated/niggler (Tue Jan 15 07:16:23 2019)
cze 29 16:02:37 *	Ceber (~cerberus@dslb-084-060-225-218.084.060.pools.vodafone-ip.de) has joined
**** ENDING LOGGING AT Sat Jun 29 16:03:08 2019

**** BEGIN LOGGING AT Sat Jun 29 16:03:25 2019

cze 29 16:03:25 *	Now talking on ##javascript
cze 29 16:03:25 *	Topic for ##javascript is: JavaScript is *not* Java. | Just ask your question. | Say "!mdn abc" for docs on "abc". | Don't paste code in the channel. | Can't talk? Get registered on freenode ( https://git.io/vaTS2 )
cze 29 16:03:25 *	Topic for ##javascript set by niggler!~niggler@unaffiliated/niggler (Tue Jan 15 07:16:23 2019)
**** ENDING LOGGING AT Sat Jun 29 16:03:55 2019

**** BEGIN LOGGING AT Sat Jun 29 16:03:55 2019

**** BEGIN LOGGING AT Sat Jun 29 16:04:38 2019

cze 29 16:04:38 *	Now talking on ##javascript
cze 29 16:04:38 *	Topic for ##javascript is: JavaScript is *not* Java. | Just ask your question. | Say "!mdn abc" for docs on "abc". | Don't paste code in the channel. | Can't talk? Get registered on freenode ( https://git.io/vaTS2 )
cze 29 16:04:38 *	Topic for ##javascript set by niggler!~niggler@unaffiliated/niggler (Tue Jan 15 07:16:23 2019)
cze 29 16:04:39 -NickServ-	You are now identified for Threenuc.
cze 29 16:05:10 <devsnek>	MJCD: chromium major number matches chrome major number
cze 29 16:05:10 <devsnek>	MJCD: chromium major number matches chrome major number
cze 29 16:33:56 <nortonandrews>	I want to call an asynchronous function for each element of an array, then join together all results into a final array and return that
cze 29 16:33:56 <nortonandrews>	I want to call an asynchronous function for each element of an array, then join together all results into a final array and return that
cze 29 16:34:04 <nortonandrews>	any pointers? not having much luck trying to string together keywords in google
cze 29 16:34:04 <nortonandrews>	any pointers? not having much luck trying to string together keywords in google
cze 29 16:44:33 <shangul>	Is repost allowed here?
cze 29 16:44:33 <shangul>	Is repost allowed here?
cze 29 16:48:50 <devsnek>	nortonandrews: Promise.all
cze 29 16:48:50 <devsnek>	nortonandrews: Promise.all
cze 29 16:49:09 <nortonandrews>	thanks, will search for that
cze 29 16:49:09 <nortonandrews>	thanks, will search for that
cze 29 16:49:49 <arunkumar413>	Is there any js library to hand craft images
cze 29 16:49:49 <arunkumar413>	Is there any js library to hand craft images
cze 29 16:50:00 <devsnek>	what kind of images
cze 29 16:50:00 <devsnek>	what kind of images
cze 29 16:55:17 <arunkumar413>	png, jpg
cze 29 16:55:18 <arunkumar413>	png, jpg
cze 29 16:56:02 <arunkumar413>	Like I want to control the pixel color, the size of the image, resolution etc
cze 29 16:56:03 <arunkumar413>	Like I want to control the pixel color, the size of the image, resolution etc
cze 29 17:03:46 <thefounder12>	Hi guys. If I were to define a class called "Surgeon2" using a constructor function like so (https://cdn.discordapp.com/attachments/448266774480420865/594543128673910804/ClassUsingFactoryFunction.JPG), would it have any drawbacks compared to using "Class{}"?
cze 29 17:03:46 <thefounder12>	Hi guys. If I were to define a class called "Surgeon2" using a constructor function like so (https://cdn.discordapp.com/attachments/448266774480420865/594543128673910804/ClassUsingFactoryFunction.JPG), would it have any drawbacks compared to using "Class{}"?
cze 29 17:03:59 <thefounder12>	*using a Factory Function
cze 29 17:03:59 <thefounder12>	*using a Factory Function
cze 29 17:05:24 <devsnek>	thefounder12: the current drawback appears to be your misunderstanding of prototypes (no offense meant)
cze 29 17:05:25 <devsnek>	thefounder12: the current drawback appears to be your misunderstanding of prototypes (no offense meant)
cze 29 17:06:12 <thefounder12>	devsnek, I know that each object has a [[prototype]] that stores its various methods and such
cze 29 17:06:12 <thefounder12>	devsnek, I know that each object has a [[prototype]] that stores its various methods and such
cze 29 17:06:26 <primitivMedia>	how do i get unbanned from jquery channel?
cze 29 17:06:26 <primitivMedia>	how do i get unbanned from jquery channel?
cze 29 17:06:37 <devsnek>	thefounder12: your code there is pretty much all wrong
cze 29 17:06:37 <devsnek>	thefounder12: your code there is pretty much all wrong
cze 29 17:06:41 <primitivMedia>	some guy didn't like the way I was asking for help so he banned me a few months ago
cze 29 17:06:42 <primitivMedia>	some guy didn't like the way I was asking for help so he banned me a few months ago
cze 29 17:06:54 <devsnek>	primitivMedia: this isn't the place to ask
cze 29 17:06:54 <devsnek>	primitivMedia: this isn't the place to ask
cze 29 17:07:00 <thefounder12>	devsnek, how so? It creates an object with the required [[prototype]], no?
cze 29 17:07:00 <thefounder12>	devsnek, how so? It creates an object with the required [[prototype]], no?
cze 29 17:07:19 <devsnek>	thefounder12: technically the returned object has the expected prototype yes
cze 29 17:07:19 <devsnek>	thefounder12: technically the returned object has the expected prototype yes
cze 29 17:07:22 <devsnek>	but everything is wrong
cze 29 17:07:22 <devsnek>	but everything is wrong
cze 29 17:08:08 <thefounder12>	the only difference compared to using the "class{}" method is that there is no property in the [[prototype]] called "constructor"
cze 29 17:08:08 <thefounder12>	the only difference compared to using the "class{}" method is that there is no property in the [[prototype]] called "constructor"
cze 29 17:08:11 <devsnek>	you're accessing variables you haven't defined, setting Surgeon2.prototype in the constructor is wrong, you forgot to use `new`
cze 29 17:08:11 <devsnek>	you're accessing variables you haven't defined, setting Surgeon2.prototype in the constructor is wrong, you forgot to use `new`
cze 29 17:08:29 <primitivMedia>	devnesk: I'm asking here because I do not know where else to ask?
cze 29 17:08:29 <primitivMedia>	devnesk: I'm asking here because I do not know where else to ask?
cze 29 17:08:36 <thefounder12>	Yes. I can use "new" and then replace "constructedObject" with "this"
cze 29 17:08:36 <thefounder12>	Yes. I can use "new" and then replace "constructedObject" with "this"
cze 29 17:08:38 <thefounder12>	I know that
cze 29 17:08:38 <thefounder12>	I know that
cze 29 17:08:39 <devsnek>	primitivMedia: well here is the wrong place
cze 29 17:08:39 <devsnek>	primitivMedia: well here is the wrong place
cze 29 17:08:48 <primitivMedia>	how is this the wrong place?
cze 29 17:08:48 <primitivMedia>	how is this the wrong place?
cze 29 17:09:04 <primitivMedia>	I got banned from an irc channel so im in another channel asking how to get unbanned?
cze 29 17:09:04 <primitivMedia>	I got banned from an irc channel so im in another channel asking how to get unbanned?
cze 29 17:09:25 <devsnek>	##javascript has nothing to do with the jquery channel
cze 29 17:09:25 <devsnek>	##javascript has nothing to do with the jquery channel
cze 29 17:09:32 <devsnek>	except for the fact that jquery is written in js
cze 29 17:09:32 <devsnek>	except for the fact that jquery is written in js
cze 29 17:09:32 <primitivMedia>	it's not javascipt related, if that's what you meant my apologies lol still positive my question is valid
cze 29 17:09:32 <primitivMedia>	it's not javascipt related, if that's what you meant my apologies lol still positive my question is valid
cze 29 17:09:43 <primitivMedia>	clearly my question has nothing to do with code?>??
cze 29 17:09:43 <primitivMedia>	clearly my question has nothing to do with code?>??
cze 29 17:09:54 <primitivMedia>	I'm sorry are you just trying to argue with me to argue cuz it seems that way?
cze 29 17:09:54 <primitivMedia>	I'm sorry are you just trying to argue with me to argue cuz it seems that way?
cze 29 17:10:02 <primitivMedia>	I asked a question that is valid
cze 29 17:10:02 <primitivMedia>	I asked a question that is valid
cze 29 17:10:10 <primitivMedia>	you don't know the answer kk cool keep it to yourself
cze 29 17:10:11 <primitivMedia>	you don't know the answer kk cool keep it to yourself
cze 29 17:10:12 <devsnek>	i'm telling you, you will not receive help for jquery channel bans here
cze 29 17:10:12 <devsnek>	i'm telling you, you will not receive help for jquery channel bans here
cze 29 17:10:27 <primitivMedia>	"i'm telling you, you will not receive help for jquery channel bans here
cze 29 17:10:27 <primitivMedia>	"i'm telling you, you will not receive help for jquery channel bans here
cze 29 17:10:31 <primitivMedia>	https://bpaste.net/show/ef1fc0349b03
cze 29 17:10:31 <primitivMedia>	https://bpaste.net/show/ef1fc0349b03
cze 29 17:10:38 <primitivMedia>	Uncaught ReferenceError: addEvent is not defined
cze 29 17:10:38 <primitivMedia>	Uncaught ReferenceError: addEvent is not defined
cze 29 17:11:20 <devsnek>	thefounder12: i'd recommend using a class just so you don't have to manage all the stuff you didn't do right
cze 29 17:11:20 <devsnek>	thefounder12: i'd recommend using a class just so you don't have to manage all the stuff you didn't do right
cze 29 17:11:25 <thefounder12>	devsnek, is the issue me creating an object with [[prototype]]=Object.prototype defining everything and then changing the [[prototype]] of that object in the end to Surgeon2.prototype?
cze 29 17:11:25 <thefounder12>	devsnek, is the issue me creating an object with [[prototype]]=Object.prototype defining everything and then changing the [[prototype]] of that object in the end to Surgeon2.prototype?
cze 29 17:11:43 <devsnek>	you shouldn't assign to S.prototype inside the S constructor
cze 29 17:11:43 <devsnek>	you shouldn't assign to S.prototype inside the S constructor
cze 29 17:11:57 <devsnek>	_name and _department and such aren't defined ever
cze 29 17:11:57 <devsnek>	_name and _department and such aren't defined ever
cze 29 17:12:16 <thefounder12>	ohhh right
cze 29 17:12:16 <thefounder12>	ohhh right
cze 29 17:14:48 <primitivMedia>	no idea what is happening
cze 29 17:14:48 <primitivMedia>	no idea what is happening
cze 29 17:15:11 <thefounder12>	https://cdn.discordapp.com/attachments/448266774480420865/594546356027129857/ClassUsingFactoryFunction.JPG
cze 29 17:15:11 <thefounder12>	https://cdn.discordapp.com/attachments/448266774480420865/594546356027129857/ClassUsingFactoryFunction.JPG
cze 29 17:15:15 <thefounder12>	Now defined, devsnek
cze 29 17:15:15 <thefounder12>	Now defined, devsnek
cze 29 17:15:19 <thefounder12>	oops wait
cze 29 17:15:19 <thefounder12>	oops wait
cze 29 17:15:21 <thefounder12>	wrong url
cze 29 17:15:21 <thefounder12>	wrong url
cze 29 17:16:00 <devsnek>	thefounder12: this does what you want and saves you from having to mess with prototypes https://www.irccloud.com/pastebin/Ivk7U3CC/t.js
cze 29 17:16:00 <devsnek>	thefounder12: this does what you want and saves you from having to mess with prototypes https://www.irccloud.com/pastebin/Ivk7U3CC/t.js
cze 29 17:16:30 <thefounder12>	https://media.discordapp.net/attachments/448266774480420865/594546714866876416/ClassUsingFactoryFunction.JPG?width=720&height=543
cze 29 17:16:30 <thefounder12>	https://media.discordapp.net/attachments/448266774480420865/594546714866876416/ClassUsingFactoryFunction.JPG?width=720&height=543
cze 29 17:16:32 <thefounder12>	this one
cze 29 17:16:32 <thefounder12>	this one
cze 29 17:17:01 <devsnek>	still don't set Surgeon2.prototype inside the Surgeon2
cze 29 17:17:01 <devsnek>	still don't set Surgeon2.prototype inside the Surgeon2
cze 29 17:17:09 <devsnek>	look at this https://www.irccloud.com/pastebin/Ivk7U3CC/t.js
cze 29 17:17:09 <devsnek>	look at this https://www.irccloud.com/pastebin/Ivk7U3CC/t.js
cze 29 17:17:12 <thefounder12>	Yeah, I know that devsnek, but I like to deconstruct the "class{}" syntax
cze 29 17:17:12 <thefounder12>	Yeah, I know that devsnek, but I like to deconstruct the "class{}" syntax
cze 29 17:17:27 <devsnek>	ok the equiv of the class syntax is
cze 29 17:17:27 <devsnek>	ok the equiv of the class syntax is
cze 29 17:17:43 <shangul>	<shangul> How do I sample audio packets with length 10ms?
cze 29 17:17:43 <shangul>	<shangul> How do I sample audio packets with length 10ms?
cze 29 17:17:50 <thefounder12>	can you show me equivalent of class syntax without the class syntax?
cze 29 17:17:50 <thefounder12>	can you show me equivalent of class syntax without the class syntax?
cze 29 17:18:03 <thefounder12>	using get functions and set as well
cze 29 17:18:03 <thefounder12>	using get functions and set as well
cze 29 17:18:59 <thefounder12>	just moving it out of the constructor function is acceptable?
cze 29 17:18:59 <thefounder12>	just moving it out of the constructor function is acceptable?
cze 29 17:19:06 <thefounder12>	let me try something quickly
cze 29 17:19:06 <thefounder12>	let me try something quickly
cze 29 17:19:06 <devsnek>	thefounder12: here https://www.irccloud.com/pastebin/VkcRRHsB/t.js
cze 29 17:19:06 <devsnek>	thefounder12: here https://www.irccloud.com/pastebin/VkcRRHsB/t.js
cze 29 17:19:16 <thefounder12>	oh ok
cze 29 17:19:16 <thefounder12>	oh ok
cze 29 17:20:11 <thefounder12>	ahh I think I see, devsnek
cze 29 17:20:11 <thefounder12>	ahh I think I see, devsnek
cze 29 17:20:36 <thefounder12>	so basically move the prototype outside of the constructor and pass in this using "new"
cze 29 17:20:36 <thefounder12>	so basically move the prototype outside of the constructor and pass in this using "new"
cze 29 17:20:53 <kevinnn>	Hi all, is there anyway to convert javascript's keycode to virtual keycodes?
cze 29 17:20:53 <kevinnn>	Hi all, is there anyway to convert javascript's keycode to virtual keycodes?
cze 29 17:20:56 <kevinnn>	like this: https://www.ibm.com/support/knowledgecenter/en/ssw_aix_71/com.ibm.aix.keyboardtechref/doc/kybdtech/Key.htm
cze 29 17:20:56 <kevinnn>	like this: https://www.ibm.com/support/knowledgecenter/en/ssw_aix_71/com.ibm.aix.keyboardtechref/doc/kybdtech/Key.htm
cze 29 17:21:07 <devsnek>	javascript doesn't have keycodes
cze 29 17:21:07 <devsnek>	javascript doesn't have keycodes
cze 29 17:21:14 <devsnek>	are you talking about browser keypress events?
cze 29 17:21:14 <devsnek>	are you talking about browser keypress events?
cze 29 17:21:27 <kevinnn>	https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/keyCode
cze 29 17:21:27 <kevinnn>	https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/keyCode
cze 29 17:21:32 <kevinnn>	yep it does
cze 29 17:21:32 <kevinnn>	yep it does
cze 29 17:21:40 <devsnek>	ok you're talking about browser keypress events
cze 29 17:21:40 <devsnek>	ok you're talking about browser keypress events
cze 29 17:21:46 <devsnek>	you can make a large map
cze 29 17:21:46 <devsnek>	you can make a large map
cze 29 17:21:49 <kevinnn>	yessir!
cze 29 17:21:49 <kevinnn>	yessir!
cze 29 17:21:53 <kevinnn>	a map?
cze 29 17:21:53 <kevinnn>	a map?
cze 29 17:21:57 <devsnek>	like
cze 29 17:21:57 <devsnek>	like
cze 29 17:22:03 <kevinnn>	is that really the only way?
cze 29 17:22:03 <kevinnn>	is that really the only way?
cze 29 17:22:14 <devsnek>	`const mapOfKeys = { 1337: 123 };`
cze 29 17:22:14 <devsnek>	`const mapOfKeys = { 1337: 123 };`
cze 29 17:22:32 <kevinnn>	why would javascript move away from a pretty standard way of maping keys on a keyboard
cze 29 17:22:32 <kevinnn>	why would javascript move away from a pretty standard way of maping keys on a keyboard
cze 29 17:22:36 <devsnek>	there's nothing built into translate the keycodes to arbitrary ibm keyboard layouts
cze 29 17:22:36 <devsnek>	there's nothing built into translate the keycodes to arbitrary ibm keyboard layouts
cze 29 17:22:37 <kevinnn>	I don't understand
cze 29 17:22:37 <kevinnn>	I don't understand
cze 29 17:22:48 <devsnek>	they don't represent keyboard buttons
cze 29 17:22:48 <devsnek>	they don't represent keyboard buttons
cze 29 17:22:53 <devsnek>	they represent the letter
cze 29 17:22:53 <devsnek>	they represent the letter
cze 29 17:23:30 <kevinnn>	they aren't arbitrary, all linux based operating system map keys out this way. Windows uses keycodes to that are one bit shift away from being compatible with the linux based OS's key code
cze 29 17:23:30 <kevinnn>	they aren't arbitrary, all linux based operating system map keys out this way. Windows uses keycodes to that are one bit shift away from being compatible with the linux based OS's key code
cze 29 17:23:59 <kevinnn>	I wonder if anyone has already created a map...
cze 29 17:23:59 <kevinnn>	I wonder if anyone has already created a map...
cze 29 17:24:12 <kevinnn>	sounds pretty annoying to create one of my own
cze 29 17:24:12 <kevinnn>	sounds pretty annoying to create one of my own
cze 29 17:24:26 <devsnek>	blame whoever made the browsers
cze 29 17:24:26 <devsnek>	blame whoever made the browsers
cze 29 17:24:53 <arunkumar413>	devsnek: I think we can convert the canvas to image
cze 29 17:24:54 <arunkumar413>	devsnek: I think we can convert the canvas to image
cze 29 17:25:16 <arunkumar413>	canvas.toDataURL(mimetype);
cze 29 17:25:16 <arunkumar413>	canvas.toDataURL(mimetype);
cze 29 17:25:40 <devsnek>	yes
cze 29 17:25:40 <devsnek>	yes
cze 29 17:26:07 <devsnek>	you can also use getImageData to go to an arraybuffer
cze 29 17:26:07 <devsnek>	you can also use getImageData to go to an arraybuffer
cze 29 17:26:34 <davve>	kevinnn: if you want portability, look at the character pressed, not the keycode
cze 29 17:26:34 <davve>	kevinnn: if you want portability, look at the character pressed, not the keycode
cze 29 17:27:14 <davve>	in the event
cze 29 17:27:14 <davve>	in the event
cze 29 17:27:39 <kevinnn>	davve: ya I am looking into the character pressed... I am just hoping it abides by basic ascii standards. so like the enter key would also be included
cze 29 17:27:39 <kevinnn>	davve: ya I am looking into the character pressed... I am just hoping it abides by basic ascii standards. so like the enter key would also be included
cze 29 17:27:52 <davve>	enter will always b enter
cze 29 17:27:52 <davve>	enter will always b enter
cze 29 17:28:06 <davve>	or if its "enter" "Enter" i can't remember
cze 29 17:28:06 <davve>	or if its "enter" "Enter" i can't remember
cze 29 17:28:21 <davve>	what you are embarking on seems like madness. :)
cze 29 17:28:21 <davve>	what you are embarking on seems like madness. :)
cze 29 17:28:23 <devsnek>	for keyboard events it's capitalized
cze 29 17:28:23 <devsnek>	for keyboard events it's capitalized
cze 29 17:28:33 <devsnek>	kevinnn: i'm curious, what are you doing
cze 29 17:28:33 <devsnek>	kevinnn: i'm curious, what are you doing
cze 29 17:28:55 <kevinnn>	devsnek, davve you wouldn't believe me if I told you :)
cze 29 17:28:55 <kevinnn>	devsnek, davve you wouldn't believe me if I told you :)
cze 29 17:29:02 <devsnek>	i would
cze 29 17:29:02 <devsnek>	i would
cze 29 17:29:07 <davve>	try us
cze 29 17:29:08 <davve>	try us
cze 29 17:29:12 <davve>	or is it nda?
cze 29 17:29:12 <davve>	or is it nda?
cze 29 17:29:44 <kevinnn>	I am developer and I work at a start up company who make a VDI product. We are trying to make it compatible with a web browser
cze 29 17:29:44 <kevinnn>	I am developer and I work at a start up company who make a VDI product. We are trying to make it compatible with a web browser
cze 29 17:30:08 <devsnek>	oh that's boring
cze 29 17:30:08 <devsnek>	oh that's boring
cze 29 17:30:11 <kevinnn>	lol
cze 29 17:30:11 <kevinnn>	lol
cze 29 17:30:15 <kevinnn>	really?
cze 29 17:30:15 <kevinnn>	really?
cze 29 17:30:21 <devsnek>	yeah been done before
cze 29 17:30:21 <devsnek>	yeah been done before
cze 29 17:30:22 <devsnek>	a lot
cze 29 17:30:22 <devsnek>	a lot
cze 29 17:30:36 <davve>	ah yeah. i think it's cool though
cze 29 17:30:36 <davve>	ah yeah. i think it's cool though
cze 29 17:30:46 <davve>	was hoping for something more exciting :)
cze 29 17:30:46 <davve>	was hoping for something more exciting :)
cze 29 17:30:50 <kevinnn>	not really, citrix being the biggest VDI platform in the world has yet to have a web accessible client
cze 29 17:30:50 <kevinnn>	not really, citrix being the biggest VDI platform in the world has yet to have a web accessible client
cze 29 17:30:54 <devsnek>	ubuntu had a stripped down version of their os running in the browser years ago for a "demo"
cze 29 17:30:54 <devsnek>	ubuntu had a stripped down version of their os running in the browser years ago for a "demo"
cze 29 17:31:10 <devsnek>	are y'all using wasm
cze 29 17:31:10 <devsnek>	are y'all using wasm
cze 29 17:31:16 <kevinnn>	oh really? never heard of that
cze 29 17:31:16 <kevinnn>	oh really? never heard of that
cze 29 17:31:23 <kevinnn>	yep, we are using wasm
cze 29 17:31:23 <kevinnn>	yep, we are using wasm
cze 29 17:31:33 <devsnek>	fun stuff
cze 29 17:31:33 <devsnek>	fun stuff
cze 29 17:31:39 <kevinnn>	thanks :)
cze 29 17:31:39 <kevinnn>	thanks :)
cze 29 17:32:49 <davve>	oh I was thinknig of VHDL
cze 29 17:32:49 <davve>	oh I was thinknig of VHDL
cze 29 17:32:58 <davve>	that actually sounds super cool
cze 29 17:32:58 <davve>	that actually sounds super cool
cze 29 17:32:58 <davve>	!
cze 29 17:32:58 <davve>	!
cze 29 17:33:09 <thefounder12>	devsnek, how would you create the code you sent me without using "new" and "this"?
cze 29 17:33:09 <thefounder12>	devsnek, how would you create the code you sent me without using "new" and "this"?
cze 29 17:33:20 <devsnek>	thefounder12: why
cze 29 17:33:20 <devsnek>	thefounder12: why
cze 29 17:33:48 <thefounder12>	because I'd like to know a bit behind what's happening with "this" and "new"
cze 29 17:33:48 <thefounder12>	because I'd like to know a bit behind what's happening with "this" and "new"
cze 29 17:34:08 <thefounder12>	so I can look without using these keywords, and then look with using them
cze 29 17:34:08 <thefounder12>	so I can look without using these keywords, and then look with using them
cze 29 17:34:27 <thefounder12>	makes it easier for me to understand what is happening
cze 29 17:34:27 <thefounder12>	makes it easier for me to understand what is happening
cze 29 17:34:31 <devsnek>	`new` basically does
cze 29 17:34:31 <devsnek>	`new` basically does
cze 29 17:34:35 <devsnek>	uh
cze 29 17:34:35 <devsnek>	uh
cze 29 17:34:35 <devsnek>	here
cze 29 17:34:35 <devsnek>	here
cze 29 17:35:02 <davve>	i donno why you would want to use new unless you are forced to
cze 29 17:35:02 <davve>	i donno why you would want to use new unless you are forced to
cze 29 17:35:14 <thefounder12>	It creates a blank object without a prototype that gets passed to "this" and passed into the object that gets created?
cze 29 17:35:14 <thefounder12>	It creates a blank object without a prototype that gets passed to "this" and passed into the object that gets created?
cze 29 17:35:16 <devsnek>	davve: uwot
cze 29 17:35:16 <devsnek>	davve: uwot
cze 29 17:35:24 <davve>	:)
cze 29 17:35:24 <davve>	:)
cze 29 17:35:33 <davve>	i write my code in a functional matter
cze 29 17:35:33 <davve>	i write my code in a functional matter
cze 29 17:35:38 <davve>	if i can
cze 29 17:35:38 <davve>	if i can
cze 29 17:35:42 <devsnek>	the cool thing about js
cze 29 17:35:42 <devsnek>	the cool thing about js
cze 29 17:35:51 <devsnek>	is that you don't need to force yourself to a specific paradigm
cze 29 17:35:52 <devsnek>	is that you don't need to force yourself to a specific paradigm
cze 29 17:35:54 <davve>	s/tt/nn/
cze 29 17:35:54 <davve>	s/tt/nn/
cze 29 17:36:06 <davve>	devsnek: indeed
cze 29 17:36:06 <davve>	devsnek: indeed
cze 29 17:36:17 <devsnek>	thefounder12: here https://www.irccloud.com/pastebin/Y8Tf5hIQ/t.js
cze 29 17:36:17 <devsnek>	thefounder12: here https://www.irccloud.com/pastebin/Y8Tf5hIQ/t.js
cze 29 17:36:21 <davve>	and you can overwrite or enhance all the standard functions, which is pretty cool
cze 29 17:36:21 <davve>	and you can overwrite or enhance all the standard functions, which is pretty cool
cze 29 17:36:42 <thefounder12>	I just don't like how it's doing a lot of assignment and object creation behind the scenes by just hitting "new" and using "class{}" without me really understanding what is going on in the background
cze 29 17:36:42 <thefounder12>	I just don't like how it's doing a lot of assignment and object creation behind the scenes by just hitting "new" and using "class{}" without me really understanding what is going on in the background
cze 29 17:36:46 <thefounder12>	I like to know
cze 29 17:36:46 <thefounder12>	I like to know
cze 29 17:36:51 <davve>	and with all teh nice new features, it's one of my favoruite languages for sure
cze 29 17:36:51 <davve>	and with all teh nice new features, it's one of my favoruite languages for sure
cze 29 17:36:57 <devsnek>	look at the link i just sent
cze 29 17:36:57 <devsnek>	look at the link i just sent
cze 29 17:37:08 <thefounder12>	I am
cze 29 17:37:08 <thefounder12>	I am
cze 29 17:38:31 <thefounder12>	I think I see
cze 29 17:38:31 <thefounder12>	I think I see
cze 29 17:38:33 <davve>	thefounder12: so don't use them ! :)
cze 29 17:38:33 <davve>	thefounder12: so don't use them ! :)
cze 29 17:38:54 <devsnek>	heaven forbid using idiomatic js
cze 29 17:38:54 <devsnek>	heaven forbid using idiomatic js
cze 29 17:39:43 <thefounder12>	Well I will use them because they've been created to make code easier to interpret and more managable
cze 29 17:39:43 <thefounder12>	Well I will use them because they've been created to make code easier to interpret and more managable
cze 29 17:39:59 <davve>	it is just a bunch of syntactic sugar anyway, for the ones who feel they need it to abstract their programs
cze 29 17:39:59 <davve>	it is just a bunch of syntactic sugar anyway, for the ones who feel they need it to abstract their programs
cze 29 17:39:59 <thefounder12>	but for my knowledge I want know how to do it the old fashioned way
cze 29 17:39:59 <thefounder12>	but for my knowledge I want know how to do it the old fashioned way
cze 29 17:40:13 <davve>	maybe to ease the pain of porting stuff to js
cze 29 17:40:13 <davve>	maybe to ease the pain of porting stuff to js
cze 29 17:40:37 <devsnek>	davve: if you think abstraction is bad why are you using js at al
cze 29 17:40:37 <devsnek>	davve: if you think abstraction is bad why are you using js at al
cze 29 17:40:39 <davve>	the old fashioned way is like thefounder12 said about prototypes
cze 29 17:40:39 <davve>	the old fashioned way is like thefounder12 said about prototypes
cze 29 17:40:43 <jtnunley>	https://pastebin.com/kfGZxWZq is there anything obviously wrong with this code to send an XHR to a server I'm running? It's sending the XHR fine, but none of the arguments in the FormData (not even name or sessionId) are being sent either
cze 29 17:40:43 <jtnunley>	https://pastebin.com/kfGZxWZq is there anything obviously wrong with this code to send an XHR to a server I'm running? It's sending the XHR fine, but none of the arguments in the FormData (not even name or sessionId) are being sent either
cze 29 17:41:04 <devsnek>	!pastebin
cze 29 17:41:04 <devsnek>	!pastebin
cze 29 17:41:05 <ecmabot>	devsnek: Please paste your code (gist and other paste sites, NOT pastebin.com or Hastebin) or create a running example: see !fiddle. See also !badpastebin !hastebin !nopaste and !mcve
cze 29 17:41:05 <ecmabot>	devsnek: Please paste your code (gist and other paste sites, NOT pastebin.com or Hastebin) or create a running example: see !fiddle. See also !badpastebin !hastebin !nopaste and !mcve
cze 29 17:41:07 <davve>	devsnek: abstraction is fine. i just dont like classes!
cze 29 17:41:07 <davve>	devsnek: abstraction is fine. i just dont like classes!
cze 29 17:41:12 <davve>	and inheritance
cze 29 17:41:12 <davve>	and inheritance
cze 29 17:41:19 <devsnek>	very sad
cze 29 17:41:19 <devsnek>	very sad
cze 29 17:41:44 <davve>	if it's done right it's nice
cze 29 17:41:44 <davve>	if it's done right it's nice
cze 29 17:41:47 <davve>	but that's rarely the case
cze 29 17:41:47 <davve>	but that's rarely the case
cze 29 17:42:19 <davve>	functions are the first class citizens :)
cze 29 17:42:19 <davve>	functions are the first class citizens :)
cze 29 17:42:42 <davve>	in, out. no side effects
cze 29 17:42:43 <davve>	in, out. no side effects
cze 29 17:42:52 <jtnunley>	https://gist.github.com/johnnunley/5dc6edec63270cdb0cdd1e19ca4cb674 here's the code again but as a gist. The server I wrote is receiving the POST request but none of the data
cze 29 17:42:52 <jtnunley>	https://gist.github.com/johnnunley/5dc6edec63270cdb0cdd1e19ca4cb674 here's the code again but as a gist. The server I wrote is receiving the POST request but none of the data
cze 29 17:43:23 <davve>	if you want to restructure your application with different functions, it's trivial. working with objects with multiple levels of inheritance, is a nightmare
cze 29 17:43:23 <davve>	if you want to restructure your application with different functions, it's trivial. working with objects with multiple levels of inheritance, is a nightmare
cze 29 17:43:36 <thefounder12>	ok so devsnek, let me see if I get this. _x = Object.create(X.prototype) --> blank object with [[prototype]]=X.prototype. Then we take this blank object and pass it into the function X with the function parameters 1,2 and 3. I don't get the "or _x" part though
cze 29 17:43:36 <thefounder12>	ok so devsnek, let me see if I get this. _x = Object.create(X.prototype) --> blank object with [[prototype]]=X.prototype. Then we take this blank object and pass it into the function X with the function parameters 1,2 and 3. I don't get the "or _x" part though
cze 29 17:43:38 <thefounder12>	Please explain that part.
cze 29 17:43:39 <thefounder12>	Please explain that part.
cze 29 17:43:50 <jtnunley>	I could also show my server code if that's an issue
cze 29 17:43:50 <jtnunley>	I could also show my server code if that's an issue
cze 29 17:44:40 <devsnek>	thefounder12: if you return `undefined` from a constructor, the default `this` is used (in this case, _x)
cze 29 17:44:40 <devsnek>	thefounder12: if you return `undefined` from a constructor, the default `this` is used (in this case, _x)
cze 29 17:44:50 <devsnek>	but you can return a new object from a constructor to override `this`
cze 29 17:44:50 <devsnek>	but you can return a new object from a constructor to override `this`
cze 29 17:45:22 <davve>	!mdn Object.prototype
cze 29 17:45:22 <davve>	!mdn Object.prototype
cze 29 17:45:23 <jellobot>	davve, Object.prototype, JavaScript - The Object.prototype is a property of the Object constructor. It is also the end of a prototype chain. https://mdn.io/object-prototype
cze 29 17:45:23 <jellobot>	davve, Object.prototype, JavaScript - The Object.prototype is a property of the Object constructor. It is also the end of a prototype chain. https://mdn.io/object-prototype
cze 29 17:46:00 <thefounder12>	hmmm
cze 29 17:46:00 <thefounder12>	hmmm
cze 29 17:46:22 <davve>	ye that wasn't a very interesting page. :P but the prototype chain is something to know about
cze 29 17:46:22 <davve>	ye that wasn't a very interesting page. :P but the prototype chain is something to know about
cze 29 17:47:07 <devsnek>	prototypes confuse everyone
cze 29 17:47:07 <devsnek>	prototypes confuse everyone
cze 29 17:47:15 <davve>	basically having .prototype attribute on your object, it will be available in your instantiated object (using new)
cze 29 17:47:15 <davve>	basically having .prototype attribute on your object, it will be available in your instantiated object (using new)
cze 29 17:47:15 <devsnek>	because of the conflicting names
cze 29 17:47:15 <devsnek>	because of the conflicting names
cze 29 17:47:16 <devsnek>	sad times
cze 29 17:47:16 <devsnek>	sad times
cze 29 17:47:31 <davve>	itself an object which can have methods and attributes and refer itself in the methods using this
cze 29 17:47:31 <davve>	itself an object which can have methods and attributes and refer itself in the methods using this
cze 29 17:47:46 <davve>	once instantiated
cze 29 17:47:46 <davve>	once instantiated
cze 29 17:47:58 <jtnunley>	the .prototype is like what the constructor bases your object on
cze 29 17:47:58 <jtnunley>	the .prototype is like what the constructor bases your object on
cze 29 17:48:04 <jtnunley>	i think
cze 29 17:48:04 <jtnunley>	i think
cze 29 17:48:10 <devsnek>	it's what i put in my paste above
cze 29 17:48:10 <devsnek>	it's what i put in my paste above
cze 29 17:48:25 <devsnek>	Constructor.prototype becomes the prototype of the instance
cze 29 17:48:25 <devsnek>	Constructor.prototype becomes the prototype of the instance
cze 29 17:48:40 <davve>	and the prototype chain is your newly created prototype, pluss all the other ones it inheritated from
cze 29 17:48:40 <davve>	and the prototype chain is your newly created prototype, pluss all the other ones it inheritated from
cze 29 17:48:52 <devsnek>	i'm sad that extending null hasn't been fixed yet
cze 29 17:48:52 <devsnek>	i'm sad that extending null hasn't been fixed yet
cze 29 17:48:54 <davve>	where Object.prototype is the last one
cze 29 17:48:54 <davve>	where Object.prototype is the last one
cze 29 17:49:41 <devsnek>	ljharb: as long as you've got those normative prs for the july meeting, wanna take up pr 1321? :P
cze 29 17:49:41 <devsnek>	ljharb: as long as you've got those normative prs for the july meeting, wanna take up pr 1321? :P
cze 29 17:50:30 <davve>	that's my take on how javascript does prototype based/faked classes
cze 29 17:50:30 <davve>	that's my take on how javascript does prototype based/faked classes
cze 29 17:51:13 <davve>	in the past
cze 29 17:51:13 <davve>	in the past
cze 29 17:51:43 <devsnek>	look at this beauty https://github.com/tc39/ecma262/pull/1321
cze 29 17:51:43 <devsnek>	look at this beauty https://github.com/tc39/ecma262/pull/1321
cze 29 17:52:05 <devsnek>	it would fix `class X extends null {}`
cze 29 17:52:05 <devsnek>	it would fix `class X extends null {}`
cze 29 17:53:39 <jtnunley>	https://gist.github.com/johnnunley/5dc6edec63270cdb0cdd1e19ca4cb674 I added the server code because I feel like it's involved. I'm using the "bodyParser" module in this
cze 29 17:53:40 <jtnunley>	https://gist.github.com/johnnunley/5dc6edec63270cdb0cdd1e19ca4cb674 I added the server code because I feel like it's involved. I'm using the "bodyParser" module in this
cze 29 17:56:07 <jtnunley>	Forgot to add: the console.log line in there always outputs "PRS Request: {}"
cze 29 17:56:07 <jtnunley>	Forgot to add: the console.log line in there always outputs "PRS Request: {}"
cze 29 18:09:08 <deltab>	jtnunley: look at the request in the network panel. Is the data there?
cze 29 18:09:09 <deltab>	jtnunley: look at the request in the network panel. Is the data there?
cze 29 18:09:45 <jtnunley>	deltab: how do i access the network panel?
cze 29 18:09:45 <jtnunley>	deltab: how do i access the network panel?
cze 29 18:10:16 <deltab>	in firefox, ctrl+shift+e
cze 29 18:10:16 <deltab>	in firefox, ctrl+shift+e
cze 29 18:10:31 <deltab>	or open dev tools and click on Network
cze 29 18:10:31 <deltab>	or open dev tools and click on Network
cze 29 18:11:26 <jtnunley>	deltab: it's there
cze 29 18:11:27 <jtnunley>	deltab: it's there
cze 29 18:11:37 <jtnunley>	all the parameters are under Params
cze 29 18:11:37 <jtnunley>	all the parameters are under Params
cze 29 18:11:53 <deltab>	okay, so there's something wrong server-side
cze 29 18:11:53 <deltab>	okay, so there's something wrong server-side
cze 29 18:11:55 <ljharb>	devsnek: lol that’s a big one
cze 29 18:11:55 <ljharb>	devsnek: lol that’s a big one
cze 29 18:12:11 <devsnek>	ljharb: 5m timebox should be reasonable :P
cze 29 18:12:11 <devsnek>	ljharb: 5m timebox should be reasonable :P
cze 29 18:13:16 <thefounder12>	hey devsnek, just quickly https://cdn.discordapp.com/attachments/448266774480420865/594560972778242088/classesUsingDifferentClassFunctions.JPG
cze 29 18:13:16 <thefounder12>	hey devsnek, just quickly https://cdn.discordapp.com/attachments/448266774480420865/594560972778242088/classesUsingDifferentClassFunctions.JPG
cze 29 18:13:17 <deltab>	jtnunley: oh, do you have the right Content-Type for the request?
cze 29 18:13:17 <deltab>	jtnunley: oh, do you have the right Content-Type for the request?
cze 29 18:13:28 <thefounder12>	seems the function I created still works though
cze 29 18:13:28 <thefounder12>	seems the function I created still works though
cze 29 18:13:32 <thefounder12>	why is it so bad if it works?
cze 29 18:13:32 <thefounder12>	why is it so bad if it works?
cze 29 18:13:47 <jtnunley>	deltab: i thought Content-Type was automatically set when you passed FormData in?
cze 29 18:13:47 <jtnunley>	deltab: i thought Content-Type was automatically set when you passed FormData in?
cze 29 18:14:04 <devsnek>	thefounder12: it's just doing the wrong things
cze 29 18:14:04 <devsnek>	thefounder12: it's just doing the wrong things
cze 29 18:14:06 <thefounder12>	surgeonMunro01 is created using the one I made with prototype in function and suregonMunro02 with the one you made
cze 29 18:14:06 <thefounder12>	surgeonMunro01 is created using the one I made with prototype in function and suregonMunro02 with the one you made
cze 29 18:14:11 <devsnek>	that it works is basically "luck"
cze 29 18:14:11 <devsnek>	that it works is basically "luck"
cze 29 18:14:34 <deltab>	jtnunley: I think so too, but I'd check just in case I'm wrong
cze 29 18:14:34 <deltab>	jtnunley: I think so too, but I'd check just in case I'm wrong
cze 29 18:15:09 <jtnunley>	it says "Content-Type	
cze 29 18:15:09 <jtnunley>	it says "Content-Type	
cze 29 18:15:11 <jtnunley>	text/html; charset=utf-8"
cze 29 18:15:11 <jtnunley>	text/html; charset=utf-8"
cze 29 18:15:30 <deltab>	in the request headers?
cze 29 18:15:30 <deltab>	in the request headers?
cze 29 18:15:39 <thefounder12>	devsnek, so it's more than likely the javascript engine used by firefox just being sophisticated enough to work despite the bs code?
cze 29 18:15:39 <thefounder12>	devsnek, so it's more than likely the javascript engine used by firefox just being sophisticated enough to work despite the bs code?
cze 29 18:15:49 <devsnek>	thefounder12: it would work in every engine
cze 29 18:15:49 <devsnek>	thefounder12: it would work in every engine
cze 29 18:15:56 <devsnek>	it's just also bs code
cze 29 18:15:56 <devsnek>	it's just also bs code
cze 29 18:15:59 <devsnek>	both things can be true
cze 29 18:15:59 <devsnek>	both things can be true
cze 29 18:16:00 <jtnunley>	wait no thats the response header
cze 29 18:16:00 <jtnunley>	wait no thats the response header
cze 29 18:16:01 <thefounder12>	oh ok
cze 29 18:16:01 <thefounder12>	oh ok
cze 29 18:16:06 <jtnunley>	request header is "Content-Type	
cze 29 18:16:06 <jtnunley>	request header is "Content-Type	
cze 29 18:16:07 <jtnunley>	multipart/form-data"
cze 29 18:16:07 <jtnunley>	multipart/form-data"
cze 29 18:16:18 <primitivMedia>	Uncaught ReferenceError: addEvent is not defined
cze 29 18:16:18 <primitivMedia>	Uncaught ReferenceError: addEvent is not defined
cze 29 18:16:34 <deltab>	jtnunley: does the body parser you're using handle multipart/form-data?
cze 29 18:16:35 <deltab>	jtnunley: does the body parser you're using handle multipart/form-data?
cze 29 18:16:38 <primitivMedia>	https://bpaste.net/show/8b89463c93c1
cze 29 18:16:38 <primitivMedia>	https://bpaste.net/show/8b89463c93c1
cze 29 18:16:57 <primitivMedia>	    try $('#pay').on('submit', doPay);
cze 29 18:16:57 <primitivMedia>	    try $('#pay').on('submit', doPay);
cze 29 18:17:35 <jtnunley>	deltab: i'm using the body-parser module in node.js
cze 29 18:17:35 <jtnunley>	deltab: i'm using the body-parser module in node.js
cze 29 18:18:52 <jtnunley>	which i'm not sure if it does?
cze 29 18:18:52 <jtnunley>	which i'm not sure if it does?
cze 29 18:18:54 <deltab>	"This does not handle multipart bodies, due to their complex and typically large nature."
cze 29 18:18:54 <deltab>	"This does not handle multipart bodies, due to their complex and typically large nature."
cze 29 18:19:01 <deltab>	https://github.com/expressjs/body-parser
cze 29 18:19:01 <deltab>	https://github.com/expressjs/body-parser
cze 29 18:19:08 <thefounder12>	Well the function creates an object with properties set by the parameters of the function. Then it sets the prototype property of the function to be an object with a bunch of methods in them. We then say that we want these methods to be the [[prototype]] of the constructed object rather than the methods just in Object.prototype, so we change it, and then we output that. Logic seems sound.
cze 29 18:19:08 <thefounder12>	Well the function creates an object with properties set by the parameters of the function. Then it sets the prototype property of the function to be an object with a bunch of methods in them. We then say that we want these methods to be the [[prototype]] of the constructed object rather than the methods just in Object.prototype, so we change it, and then we output that. Logic seems sound.
cze 29 18:19:47 <jtnunley>	Is there a body parser module for express.js that does handle it?
cze 29 18:19:47 <jtnunley>	Is there a body parser module for express.js that does handle it?
cze 29 18:19:58 <deltab>	it has a list of alternatives; or you can try switching the form data to application/x-www-form-urlencoded
cze 29 18:19:58 <deltab>	it has a list of alternatives; or you can try switching the form data to application/x-www-form-urlencoded
cze 29 18:20:45 <deltab>	(if that's possible)
cze 29 18:20:45 <deltab>	(if that's possible)
cze 29 18:21:14 <jtnunley>	then wouldn't i have to switch it to a GET request? It's possible im just sending strings ints and booleans
cze 29 18:21:14 <jtnunley>	then wouldn't i have to switch it to a GET request? It's possible im just sending strings ints and booleans
cze 29 18:21:40 <deltab>	no, you can use that encoded as the body of a POST
cze 29 18:21:40 <deltab>	no, you can use that encoded as the body of a POST
cze 29 18:21:58 <deltab>	in an html form it's controlled by the enctype attribute
cze 29 18:21:58 <deltab>	in an html form it's controlled by the enctype attribute
cze 29 18:22:08 <deltab>	aha, "You can also pass it directly to the URLSearchParams constructor if you want to generate query parameters"
cze 29 18:22:08 <deltab>	aha, "You can also pass it directly to the URLSearchParams constructor if you want to generate query parameters"
cze 29 18:23:09 <deltab>	so oyu have two options: change the server, or change the client
cze 29 18:23:10 <deltab>	so oyu have two options: change the server, or change the client
cze 29 18:23:21 <jtnunley>	i'll roll with changing the client
cze 29 18:23:21 <jtnunley>	i'll roll with changing the client
cze 29 18:24:21 <deltab>	https://developer.mozilla.org/en-US/docs/Web/API/URLSearchParams/URLSearchParams
cze 29 18:24:21 <deltab>	https://developer.mozilla.org/en-US/docs/Web/API/URLSearchParams/URLSearchParams
cze 29 18:25:16 <deltab>	you'll need to set the content-type of the request, I think
cze 29 18:25:16 <deltab>	you'll need to set the content-type of the request, I think
cze 29 18:25:39 <jtnunley>	I added req.setRequestHeader("Content-Type", "application/x-www-form-urlencoded");
cze 29 18:25:39 <jtnunley>	I added req.setRequestHeader("Content-Type", "application/x-www-form-urlencoded");
cze 29 18:25:45 <deltab>	unless it recognizes URLSearchParams
cze 29 18:25:45 <deltab>	unless it recognizes URLSearchParams
cze 29 18:27:27 <jtnunley>	deltab: it's working now, I got rid of the FormData and just did new URLSearchParams(args) instead
cze 29 18:27:27 <jtnunley>	deltab: it's working now, I got rid of the FormData and just did new URLSearchParams(args) instead
cze 29 18:27:30 <jtnunley>	thank you!
cze 29 18:27:30 <jtnunley>	thank you!
cze 29 18:27:55 <deltab>	great!
cze 29 18:27:55 <deltab>	great!
cze 29 18:29:28 <deltab>	ah, it does set the request type automatically for URLSearchParams
cze 29 18:29:29 <deltab>	ah, it does set the request type automatically for URLSearchParams
cze 29 18:30:12 <thefounder12>	devsnek, I see now. I am doing so much unnecessary bs to get to the same result that you are getting to. I am creating an object with a [[prototype]]=Object.prototype and then assigning all properties needed and then assigning the prototype property of the function with alll the methods I need. Finally, I then change the [[prototype]] to Surgeon2.prototype from Object.prototype and return
cze 29 18:30:13 <thefounder12>	devsnek, I see now. I am doing so much unnecessary bs to get to the same result that you are getting to. I am creating an object with a [[prototype]]=Object.prototype and then assigning all properties needed and then assigning the prototype property of the function with alll the methods I need. Finally, I then change the [[prototype]] to Surgeon2.prototype from Object.prototype and return
cze 29 18:30:13 <thefounder12>	the object.
cze 29 18:30:13 <thefounder12>	the object.
cze 29 18:30:28 <jtnunley>	deltab: no i added the setRequestHeader('content-type' arg
cze 29 18:30:28 <jtnunley>	deltab: no i added the setRequestHeader('content-type' arg
cze 29 18:30:30 <deltab>	https://fetch.spec.whatwg.org/#concept-bodyinit-extract
cze 29 18:30:31 <deltab>	https://fetch.spec.whatwg.org/#concept-bodyinit-extract
cze 29 18:30:31 <thefounder12>	Whereas I can just assign the object straight off with the correct prototype
cze 29 18:30:31 <thefounder12>	Whereas I can just assign the object straight off with the correct prototype
cze 29 18:30:45 <thefounder12>	and pass in everything that is required with new
cze 29 18:30:45 <thefounder12>	and pass in everything that is required with new
cze 29 18:30:57 <deltab>	jtnunley: looks like it should mwork without that too
cze 29 18:30:57 <deltab>	jtnunley: looks like it should mwork without that too
cze 29 18:31:10 <jtnunley>	cool beans
cze 29 18:31:10 <jtnunley>	cool beans
cze 29 18:33:18 <lintguy>	Hallo!
cze 29 18:33:18 <lintguy>	Hallo!
cze 29 18:33:36 <lintguy>	devsnek?
cze 29 18:33:36 <lintguy>	devsnek?
cze 29 18:33:48 <devsnek>	lintguy: huh?
cze 29 18:33:48 <devsnek>	lintguy: huh?
cze 29 18:33:55 <lintguy>	Hallo Abbot!
cze 29 18:33:55 <lintguy>	Hallo Abbot!
cze 29 18:34:00 <devsnek>	i'm not abbot
cze 29 18:34:00 <devsnek>	i'm not abbot
cze 29 18:34:11 <lintguy>	Geesh, not seem men in tights?
cze 29 18:34:11 <lintguy>	Geesh, not seem men in tights?
cze 29 18:34:15 <lintguy>	seen*
cze 29 18:34:15 <lintguy>	seen*
cze 29 18:34:42 <lintguy>	devsnek: you usually know everything, what's your thoughts on RxJS?
cze 29 18:34:43 <lintguy>	devsnek: you usually know everything, what's your thoughts on RxJS?
cze 29 18:34:49 <lintguy>	Or observables in general
cze 29 18:34:49 <lintguy>	Or observables in general
cze 29 18:35:08 <lintguy>	I saw it was only suggested in 2017 and still non-functional on stage 1 of ECMAscript.
cze 29 18:35:09 <lintguy>	I saw it was only suggested in 2017 and still non-functional on stage 1 of ECMAscript.
cze 29 18:35:19 <lintguy>	But it offers so very many advantages
cze 29 18:35:19 <lintguy>	But it offers so very many advantages
cze 29 18:39:46 <deltab>	primitivMedia: I don't see a definition for addEvent there. Is it from a library?
cze 29 18:39:46 <deltab>	primitivMedia: I don't see a definition for addEvent there. Is it from a library?
cze 29 18:40:16 <primitivMedia>	https://bpaste.net/show/8b89463c93c1
cze 29 18:40:16 <primitivMedia>	https://bpaste.net/show/8b89463c93c1
cze 29 18:40:46 <primitivMedia>	this is my only library, the mercadopago payment gateway documents are garbage and they don't have good support and don't operate in english
cze 29 18:40:46 <primitivMedia>	this is my only library, the mercadopago payment gateway documents are garbage and they don't have good support and don't operate in english
cze 29 18:40:56 <primitivMedia>	I followed their instructions and they only require this library
cze 29 18:40:56 <primitivMedia>	I followed their instructions and they only require this library
cze 29 18:41:05 <primitivMedia>	<script src="https://secure.mlstatic.com/sdk/javascript/v1/mercadopago.js"></script>
cze 29 18:41:05 <primitivMedia>	<script src="https://secure.mlstatic.com/sdk/javascript/v1/mercadopago.js"></script>
cze 29 18:41:19 <primitivMedia>	unless I go the SDK composer route which I am trying t avoid atm
cze 29 18:41:19 <primitivMedia>	unless I go the SDK composer route which I am trying t avoid atm
cze 29 18:41:56 <deltab>	you can probably change that line to  document.querySelector('#pay').addEventListener('submit', doPay);
cze 29 18:41:56 <deltab>	you can probably change that line to  document.querySelector('#pay').addEventListener('submit', doPay);
cze 29 18:44:57 <primitivMedia>	That gives me 0 errors!
cze 29 18:44:57 <primitivMedia>	That gives me 0 errors!
cze 29 18:45:33 <primitivMedia>	mercadopago.js:1 Cross-Origin Read Blocking (CORB) blocked cross-origin response https://sdkmetrics.mercadopago.com.br/?referer=https%3A//beta.unsocialise.com with MIME type text/html. 4032768 for more details.
cze 29 18:45:33 <primitivMedia>	mercadopago.js:1 Cross-Origin Read Blocking (CORB) blocked cross-origin response https://sdkmetrics.mercadopago.com.br/?referer=https%3A//beta.unsocialise.com with MIME type text/html. 4032768 for more details.
cze 29 18:45:54 <primitivMedia>	I do have these, but I'm not sure if that's for me to resolve
cze 29 18:45:54 <primitivMedia>	I do have these, but I'm not sure if that's for me to resolve
cze 29 18:47:04 <iamtheworstdev>	Some day, in the year 2312, there will be a javascript implementation library for a service, any service, that is 100% complete and documented
cze 29 18:47:04 <iamtheworstdev>	Some day, in the year 2312, there will be a javascript implementation library for a service, any service, that is 100% complete and documented
cze 29 18:47:18 <deltab>	'metrics' sounds like it's for them to track where the script is used
cze 29 18:47:18 <deltab>	'metrics' sounds like it's for them to track where the script is used
cze 29 18:48:05 <primitivMedia>	so are you saying ignore these?
cze 29 18:48:05 <primitivMedia>	so are you saying ignore these?
cze 29 20:06:05 *	Disconnected ()
**** ENDING LOGGING AT Sat Jun 29 20:06:05 2019

cze 29 20:06:05 *	Disconnected ()
**** ENDING LOGGING AT Sat Jun 29 20:06:05 2019

**** BEGIN LOGGING AT Sat Jun 29 20:06:32 2019

cze 29 20:06:32 *	Now talking on ##javascript
cze 29 20:06:32 *	Topic for ##javascript is: JavaScript is *not* Java. | Just ask your question. | Say "!mdn abc" for docs on "abc". | Don't paste code in the channel. | Can't talk? Get registered on freenode ( https://git.io/vaTS2 )
cze 29 20:06:32 *	Topic for ##javascript set by niggler!~niggler@unaffiliated/niggler (Tue Jan 15 07:16:23 2019)
**** BEGIN LOGGING AT Sat Jun 29 20:06:33 2019

cze 29 20:06:33 *	Now talking on ##javascript
cze 29 20:06:33 *	Topic for ##javascript is: JavaScript is *not* Java. | Just ask your question. | Say "!mdn abc" for docs on "abc". | Don't paste code in the channel. | Can't talk? Get registered on freenode ( https://git.io/vaTS2 )
cze 29 20:06:33 *	Topic for ##javascript set by niggler!~niggler@unaffiliated/niggler (Tue Jan 15 07:16:23 2019)
cze 29 20:07:22 <velix>	GreenJello: functions... I am stupid. I mean "objects".
cze 29 20:07:22 <velix>	GreenJello: functions... I am stupid. I mean "objects".
cze 29 20:07:45 <velix>	I just took a heap shot and playing with it now
cze 29 20:07:45 <velix>	I just took a heap shot and playing with it now
cze 29 20:08:10 <velix>	It's hard to find the right variable, since it has other names.
cze 29 20:08:10 <velix>	It's hard to find the right variable, since it has other names.
cze 29 20:23:27 <velix>	Anyone with an idea, how to find an object by its variable name ?
cze 29 20:23:27 <velix>	Anyone with an idea, how to find an object by its variable name ?
cze 29 20:33:15 <afawfweaf>	global variable?
cze 29 20:33:15 <afawfweaf>	global variable?
cze 30 14:13:35 *	Disconnected ()
**** ENDING LOGGING AT Sun Jun 30 14:13:35 2019

cze 30 14:13:35 *	Disconnected ()
**** ENDING LOGGING AT Sun Jun 30 14:13:35 2019

**** BEGIN LOGGING AT Sun Jun 30 14:13:59 2019

cze 30 14:13:59 *	Now talking on ##javascript
cze 30 14:13:59 *	Topic for ##javascript is: JavaScript is *not* Java. | Just ask your question. | Say "!mdn abc" for docs on "abc". | Don't paste code in the channel. | Can't talk? Get registered on freenode ( https://git.io/vaTS2 )
cze 30 14:14:00 *	Topic for ##javascript set by niggler!~niggler@unaffiliated/niggler (Tue Jan 15 07:16:23 2019)
**** BEGIN LOGGING AT Sun Jun 30 14:14:01 2019

cze 30 14:14:01 *	Now talking on ##javascript
cze 30 14:14:01 *	Topic for ##javascript is: JavaScript is *not* Java. | Just ask your question. | Say "!mdn abc" for docs on "abc". | Don't paste code in the channel. | Can't talk? Get registered on freenode ( https://git.io/vaTS2 )
cze 30 14:14:01 *	Topic for ##javascript set by niggler!~niggler@unaffiliated/niggler (Tue Jan 15 07:16:23 2019)
cze 30 15:05:55 *	Disconnected ()
**** ENDING LOGGING AT Sun Jun 30 15:05:55 2019

cze 30 15:05:55 *	Disconnected ()
**** ENDING LOGGING AT Sun Jun 30 15:05:55 2019

**** BEGIN LOGGING AT Sun Jun 30 15:06:20 2019

cze 30 15:06:20 *	Now talking on ##javascript
cze 30 15:06:20 *	Topic for ##javascript is: JavaScript is *not* Java. | Just ask your question. | Say "!mdn abc" for docs on "abc". | Don't paste code in the channel. | Can't talk? Get registered on freenode ( https://git.io/vaTS2 )
cze 30 15:06:20 *	Topic for ##javascript set by niggler!~niggler@unaffiliated/niggler (Tue Jan 15 07:16:23 2019)
**** BEGIN LOGGING AT Sun Jun 30 15:06:22 2019

cze 30 15:06:22 *	Now talking on ##javascript
cze 30 15:06:22 *	Topic for ##javascript is: JavaScript is *not* Java. | Just ask your question. | Say "!mdn abc" for docs on "abc". | Don't paste code in the channel. | Can't talk? Get registered on freenode ( https://git.io/vaTS2 )
cze 30 15:06:22 *	Topic for ##javascript set by niggler!~niggler@unaffiliated/niggler (Tue Jan 15 07:16:23 2019)
cze 30 15:38:24 *	Disconnected ()
**** ENDING LOGGING AT Sun Jun 30 15:38:24 2019

cze 30 15:38:24 *	Disconnected ()
**** ENDING LOGGING AT Sun Jun 30 15:38:24 2019

**** BEGIN LOGGING AT Sun Jun 30 15:38:49 2019

cze 30 15:38:49 *	Now talking on ##javascript
cze 30 15:38:49 *	Topic for ##javascript is: JavaScript is *not* Java. | Just ask your question. | Say "!mdn abc" for docs on "abc". | Don't paste code in the channel. | Can't talk? Get registered on freenode ( https://git.io/vaTS2 )
cze 30 15:38:49 *	Topic for ##javascript set by niggler!~niggler@unaffiliated/niggler (Tue Jan 15 07:16:23 2019)
**** BEGIN LOGGING AT Sun Jun 30 15:38:50 2019

cze 30 15:38:50 *	Now talking on ##javascript
cze 30 15:38:50 *	Topic for ##javascript is: JavaScript is *not* Java. | Just ask your question. | Say "!mdn abc" for docs on "abc". | Don't paste code in the channel. | Can't talk? Get registered on freenode ( https://git.io/vaTS2 )
cze 30 15:38:50 *	Topic for ##javascript set by niggler!~niggler@unaffiliated/niggler (Tue Jan 15 07:16:23 2019)
cze 30 16:25:06 *	Disconnected ()
**** ENDING LOGGING AT Sun Jun 30 16:25:06 2019

cze 30 16:25:06 *	Disconnected ()
**** ENDING LOGGING AT Sun Jun 30 16:25:06 2019

**** BEGIN LOGGING AT Sun Jun 30 16:25:30 2019

cze 30 16:25:30 *	Now talking on ##javascript
cze 30 16:25:30 *	Topic for ##javascript is: JavaScript is *not* Java. | Just ask your question. | Say "!mdn abc" for docs on "abc". | Don't paste code in the channel. | Can't talk? Get registered on freenode ( https://git.io/vaTS2 )
cze 30 16:25:30 *	Topic for ##javascript set by niggler!~niggler@unaffiliated/niggler (Tue Jan 15 07:16:23 2019)
**** BEGIN LOGGING AT Sun Jun 30 16:25:31 2019

cze 30 16:25:31 *	Now talking on ##javascript
cze 30 16:25:31 *	Topic for ##javascript is: JavaScript is *not* Java. | Just ask your question. | Say "!mdn abc" for docs on "abc". | Don't paste code in the channel. | Can't talk? Get registered on freenode ( https://git.io/vaTS2 )
cze 30 16:25:31 *	Topic for ##javascript set by niggler!~niggler@unaffiliated/niggler (Tue Jan 15 07:16:23 2019)
cze 30 16:25:48 <thykka>	puchacz, with CSS
cze 30 16:25:48 <thykka>	puchacz, with CSS
cze 30 16:26:05 <Deide>	If you want to act on the database result, you have to do it asynchronously
cze 30 16:26:05 <Deide>	If you want to act on the database result, you have to do it asynchronously
cze 30 16:26:27 <puchacz>	thykka - what css properties? and should I attach svg element to the same parent as canvas?
cze 30 16:26:27 <puchacz>	thykka - what css properties? and should I attach svg element to the same parent as canvas?
cze 30 16:27:04 <SigSegOwl>	Deide i know but typescript is complaining that i can't return Promise<boolean> , it has to be boolean
cze 30 16:27:04 <SigSegOwl>	Deide i know but typescript is complaining that i can't return Promise<boolean> , it has to be boolean
cze 30 16:27:08 <MJCD>	you write it to the canvas
cze 30 16:27:08 <MJCD>	you write it to the canvas
cze 30 16:27:24 <MJCD>	or use css animation instead of js I think was their point
cze 30 16:27:24 <MJCD>	or use css animation instead of js I think was their point
cze 30 16:27:46 <MJCD>	avoids the use of canvases entirely
cze 30 16:27:46 <MJCD>	avoids the use of canvases entirely
cze 30 16:27:58 <Deide>	SigSegOwl, you can compose a synchronous set of functions to work on the result, but you're never going to "make the result synchronous".
cze 30 16:27:58 <Deide>	SigSegOwl, you can compose a synchronous set of functions to work on the result, but you're never going to "make the result synchronous".
cze 30 16:27:59 <MJCD>	SigSegOwl, await <stuff>
cze 30 16:27:59 <MJCD>	SigSegOwl, await <stuff>
cze 30 17:53:06 *	Disconnected ()
**** ENDING LOGGING AT Sun Jun 30 17:53:06 2019

cze 30 17:53:06 *	Disconnected ()
**** ENDING LOGGING AT Sun Jun 30 17:53:06 2019

**** BEGIN LOGGING AT Sun Jun 30 17:53:29 2019

cze 30 17:53:29 *	Now talking on ##javascript
cze 30 17:53:29 *	Topic for ##javascript is: JavaScript is *not* Java. | Just ask your question. | Say "!mdn abc" for docs on "abc". | Don't paste code in the channel. | Can't talk? Get registered on freenode ( https://git.io/vaTS2 )
cze 30 17:53:29 *	Topic for ##javascript set by niggler!~niggler@unaffiliated/niggler (Tue Jan 15 07:16:23 2019)
**** BEGIN LOGGING AT Sun Jun 30 17:53:32 2019

cze 30 17:53:32 *	Now talking on ##javascript
cze 30 17:53:32 *	Topic for ##javascript is: JavaScript is *not* Java. | Just ask your question. | Say "!mdn abc" for docs on "abc". | Don't paste code in the channel. | Can't talk? Get registered on freenode ( https://git.io/vaTS2 )
cze 30 17:53:32 *	Topic for ##javascript set by niggler!~niggler@unaffiliated/niggler (Tue Jan 15 07:16:23 2019)
lip 01 09:27:28 *	Disconnected ()
**** ENDING LOGGING AT Mon Jul  1 09:27:28 2019

lip 01 09:27:28 *	Disconnected ()
**** ENDING LOGGING AT Mon Jul  1 09:27:28 2019

**** BEGIN LOGGING AT Mon Jul  1 09:27:53 2019

lip 01 09:27:53 *	Now talking on ##javascript
lip 01 09:27:53 *	Topic for ##javascript is: JavaScript is *not* Java. | Just ask your question. | Say "!mdn abc" for docs on "abc". | Don't paste code in the channel. | Can't talk? Get registered on freenode ( https://git.io/vaTS2 )
lip 01 09:27:53 *	Topic for ##javascript set by niggler!~niggler@unaffiliated/niggler (Tue Jan 15 07:16:23 2019)
**** BEGIN LOGGING AT Mon Jul  1 09:27:54 2019

lip 01 09:27:54 *	Now talking on ##javascript
lip 01 09:27:54 *	Topic for ##javascript is: JavaScript is *not* Java. | Just ask your question. | Say "!mdn abc" for docs on "abc". | Don't paste code in the channel. | Can't talk? Get registered on freenode ( https://git.io/vaTS2 )
lip 01 09:27:54 *	Topic for ##javascript set by niggler!~niggler@unaffiliated/niggler (Tue Jan 15 07:16:23 2019)
lip 01 09:31:44 <diverdude>	Hi, I have this grid: https://jsfiddle.net/p9bLgrqw/8/  where its possible to drag a red div around w. mouse. It works when dragging right, down, up but for some reason not left. What am I missing here?
lip 01 09:31:44 <diverdude>	Hi, I have this grid: https://jsfiddle.net/p9bLgrqw/8/  where its possible to drag a red div around w. mouse. It works when dragging right, down, up but for some reason not left. What am I missing here?
lip 01 09:44:52 *	Disconnected ()
**** ENDING LOGGING AT Mon Jul  1 09:44:52 2019

lip 01 09:44:52 *	Disconnected ()
**** ENDING LOGGING AT Mon Jul  1 09:44:52 2019

**** BEGIN LOGGING AT Mon Jul  1 09:45:18 2019

lip 01 09:45:18 *	Now talking on ##javascript
lip 01 09:45:18 *	Topic for ##javascript is: JavaScript is *not* Java. | Just ask your question. | Say "!mdn abc" for docs on "abc". | Don't paste code in the channel. | Can't talk? Get registered on freenode ( https://git.io/vaTS2 )
lip 01 09:45:18 *	Topic for ##javascript set by niggler!~niggler@unaffiliated/niggler (Tue Jan 15 07:16:23 2019)
**** BEGIN LOGGING AT Mon Jul  1 09:45:20 2019

lip 01 09:45:20 *	Now talking on ##javascript
lip 01 09:45:20 *	Topic for ##javascript is: JavaScript is *not* Java. | Just ask your question. | Say "!mdn abc" for docs on "abc". | Don't paste code in the channel. | Can't talk? Get registered on freenode ( https://git.io/vaTS2 )
lip 01 09:45:20 *	Topic for ##javascript set by niggler!~niggler@unaffiliated/niggler (Tue Jan 15 07:16:23 2019)
lip 01 09:45:47 <lilltiger>	Is there a smart way to order a set of javascript object in the order of one of the object members?
lip 01 09:45:47 <lilltiger>	Is there a smart way to order a set of javascript object in the order of one of the object members?
lip 01 09:54:12 <diverdude>	fixed
lip 01 09:54:12 <diverdude>	fixed
lip 01 09:55:16 <CssNoob>	Is anyone here using bookshelf/knex postgres?
lip 01 09:55:16 <CssNoob>	Is anyone here using bookshelf/knex postgres?
lip 01 10:01:35 <sinclair>	CssNoob, not anymore \o/
lip 01 10:01:35 <sinclair>	CssNoob, not anymore \o/
lip 01 10:01:43 <sinclair>	well, postgres a little
lip 01 10:01:43 <sinclair>	well, postgres a little
lip 01 10:01:55 <sinclair>	knex, not a chance
lip 01 10:01:55 <sinclair>	knex, not a chance
lip 01 10:02:00 <cdunklau>	lilltiger: do you mean an array
lip 01 10:02:00 <cdunklau>	lilltiger: do you mean an array
lip 01 10:02:06 <cdunklau>	or like, actually a Set
lip 01 10:02:06 <cdunklau>	or like, actually a Set
lip 01 10:04:47 <cdunklau>	assuming an array, arr.sort((a, b) => { if (a.prop < b.prop) { return -1 } else if (a.prop > b.prop) { return 1 } else { return 0 }})
lip 01 10:04:47 <cdunklau>	assuming an array, arr.sort((a, b) => { if (a.prop < b.prop) { return -1 } else if (a.prop > b.prop) { return 1 } else { return 0 }})
lip 01 10:05:20 <cdunklau>	that's ugly :( why isn't there a cmp() global :D
lip 01 10:05:20 <cdunklau>	that's ugly :( why isn't there a cmp() global :D
lip 01 10:06:44 <CssNoob>	sinclair, why are you not using anymore?
lip 01 10:06:44 <CssNoob>	sinclair, why are you not using anymore?
lip 01 10:06:57 <sinclair>	node tech
lip 01 10:06:57 <sinclair>	node tech
lip 01 10:07:04 <CssNoob>	what do you mean?
lip 01 10:07:05 <CssNoob>	what do you mean?
lip 01 10:07:10 <CssNoob>	still using postgres?
lip 01 10:07:10 <CssNoob>	still using postgres?
lip 01 10:08:04 <cdunklau>	dadv: well, if only ascii, you're looking at maximum 7 bits per char
lip 01 10:08:04 <cdunklau>	dadv: well, if only ascii, you're looking at maximum 7 bits per char
lip 01 10:08:23 <cdunklau>	dadv: if it's more limited (say only alphanum), you could compress it further
lip 01 10:08:23 <cdunklau>	dadv: if it's more limited (say only alphanum), you could compress it further
lip 01 10:08:38 <dadv>	cdunklau: I prefer something like LZMA
lip 01 10:08:38 <dadv>	cdunklau: I prefer something like LZMA
lip 01 10:08:59 <cdunklau>	dadv: base64 might be enough
lip 01 10:08:59 <cdunklau>	dadv: base64 might be enough
lip 01 10:09:15 <dadv>	base64 increases size, not decreases
lip 01 10:09:15 <dadv>	base64 increases size, not decreases
lip 01 10:09:17 <cdunklau>	or...
lip 01 10:09:17 <cdunklau>	or...
lip 01 10:09:19 <cdunklau>	derp
lip 01 10:09:20 <cdunklau>	derp
lip 01 10:09:28 <sinclair>	CssNoob, because its awful
lip 01 10:09:28 <sinclair>	CssNoob, because its awful
lip 01 10:09:29 <dadv>	LZMA+base64 should be fine, though
lip 01 10:09:29 <dadv>	LZMA+base64 should be fine, though
lip 01 10:09:45 <CssNoob>	T__T
lip 01 10:09:45 <CssNoob>	T__T
lip 01 10:09:47 <cdunklau>	dadv: okay but there isn't a "stdlib" LZMA thing
lip 01 10:09:47 <cdunklau>	dadv: okay but there isn't a "stdlib" LZMA thing
lip 01 10:09:53 <cdunklau>	dadv: can you load libs?
lip 01 10:09:53 <cdunklau>	dadv: can you load libs?
lip 01 10:09:58 <CssNoob>	what ORM are you using? sinclair
lip 01 10:09:58 <CssNoob>	what ORM are you using? sinclair
lip 01 10:10:46 <sinclair>	CssNoob, Entity Framework Core
lip 01 10:10:46 <sinclair>	CssNoob, Entity Framework Core
lip 01 10:10:47 <dadv>	cdunklau: not sure but I can embeedd libs to my generated JS code
lip 01 10:10:47 <dadv>	cdunklau: not sure but I can embeedd libs to my generated JS code
lip 01 10:11:22 *	CssNoob tricky
lip 01 10:11:22 *	CssNoob tricky
lip 01 10:11:53 <dadv>	LZMA-JS has MIT license, so that should not be a problem
lip 01 10:11:53 <dadv>	LZMA-JS has MIT license, so that should not be a problem
lip 01 10:12:31 <sinclair>	CssNoob, im tempted to build similar tooling for node, its like REALLY REALLY tempting to do that
lip 01 10:12:31 <sinclair>	CssNoob, im tempted to build similar tooling for node, its like REALLY REALLY tempting to do that
lip 01 10:12:42 <cdunklau>	dadv: right, but i'm wondering how big the lib will be :)
lip 01 10:12:42 <cdunklau>	dadv: right, but i'm wondering how big the lib will be :)
lip 01 10:12:45 <sinclair>	CssNoob, but i won't
lip 01 10:12:45 <sinclair>	CssNoob, but i won't
lip 01 10:17:30 <jaziz>	!callback
lip 01 10:17:30 <jaziz>	!callback
lip 01 10:17:31 <ecmabot>	jaziz: A function `f` you pass to another function `g`, as an argument, expecting to be called when `g` is done with its work, and wants to continue the execution of the program with its computed value (i.e.: where you'd use `return`). Compare `function add(a, b){ return a + b }` with `function add(a, b, Return){ Return(a + b) }`. See !cps
lip 01 10:17:31 <ecmabot>	jaziz: A function `f` you pass to another function `g`, as an argument, expecting to be called when `g` is done with its work, and wants to continue the execution of the program with its computed value (i.e.: where you'd use `return`). Compare `function add(a, b){ return a + b }` with `function add(a, b, Return){ Return(a + b) }`. See !cps
lip 01 10:18:12 <jaziz>	is this definition referring callbacks in the asynchronous sense or callbacks in general?
lip 01 10:18:12 <jaziz>	is this definition referring callbacks in the asynchronous sense or callbacks in general?
lip 01 10:18:21 <jaziz>	I've seen them used as terms for passed functions in higher order functions
lip 01 10:18:21 <jaziz>	I've seen them used as terms for passed functions in higher order functions
lip 01 10:18:28 <jaziz>	callbacks, I mean
lip 01 10:18:28 <jaziz>	callbacks, I mean
lip 01 10:20:31 <dadv>	cdunklau: lzma-d.js is less than 32K
lip 01 10:20:31 <dadv>	cdunklau: lzma-d.js is less than 32K
lip 01 10:20:35 <cdunklau>	yay
lip 01 10:20:35 <cdunklau>	yay
lip 01 10:21:13 <cdunklau>	jaziz: callback tends to imply that the thing will call your function when it's done with some task
lip 01 10:21:13 <cdunklau>	jaziz: callback tends to imply that the thing will call your function when it's done with some task
lip 01 10:21:26 <cdunklau>	so yeah async
lip 01 10:21:26 <cdunklau>	so yeah async
lip 01 10:21:30 <jaziz>	ah got it
lip 01 10:21:30 <jaziz>	ah got it
lip 01 10:21:49 <jaziz>	yeah, been looking around at articles/YT vids reading about callbacks for a base before I move on to promises
lip 01 10:21:49 <jaziz>	yeah, been looking around at articles/YT vids reading about callbacks for a base before I move on to promises
lip 01 10:22:02 <jaziz>	but it seems a lot of these guys just use it as a synonym for higher order functions
lip 01 10:22:02 <jaziz>	but it seems a lot of these guys just use it as a synonym for higher order functions
lip 01 10:22:47 <cdunklau>	jaziz: i'm not surprised the term got corrupted :)
lip 01 10:22:47 <cdunklau>	jaziz: i'm not surprised the term got corrupted :)
lip 01 10:22:57 <jaziz>	so all event handlers are async right?
lip 01 10:22:57 <jaziz>	so all event handlers are async right?
lip 01 10:23:11 <jaziz>	as in, they take a callback function
lip 01 10:23:11 <jaziz>	as in, they take a callback function
lip 01 10:23:12 <cdunklau>	jaziz: i can't really answer that
lip 01 10:23:13 <cdunklau>	jaziz: i can't really answer that
lip 01 10:23:21 <jaziz>	y'know like
lip 01 10:23:21 <jaziz>	y'know like
lip 01 10:23:23 <cdunklau>	ill-defined terms :)
lip 01 10:23:23 <cdunklau>	ill-defined terms :)
lip 01 10:23:35 <jaziz>	button = (some element found by id)
lip 01 10:23:35 <jaziz>	button = (some element found by id)
lip 01 10:23:38 <cdunklau>	jaziz: but sure, an addEventListener('click', f)
lip 01 10:23:38 <cdunklau>	jaziz: but sure, an addEventListener('click', f)
lip 01 10:23:48 <cdunklau>	you could call `f` a callback
lip 01 10:23:48 <cdunklau>	you could call `f` a callback
lip 01 10:23:48 <jaziz>	yea something like that
lip 01 10:23:48 <jaziz>	yea something like that
lip 01 10:23:51 <jaziz>	mm
lip 01 10:23:51 <jaziz>	mm
lip 01 10:23:56 <cdunklau>	or, probably better, "event handler"
lip 01 10:23:56 <cdunklau>	or, probably better, "event handler"
lip 01 10:24:03 <jaziz>	right haha
lip 01 10:24:03 <jaziz>	right haha
lip 01 10:24:18 <jaziz>	yeah, haven't done much in the way of actual js coding, just been reading
lip 01 10:24:18 <jaziz>	yeah, haven't done much in the way of actual js coding, just been reading
lip 01 10:36:00 <grr12314>	yea callback is something like a one-time event handler
lip 01 10:36:00 <grr12314>	yea callback is something like a one-time event handler
lip 01 10:36:41 <MJCD>	that's like, reverse order to me
lip 01 10:36:42 <MJCD>	that's like, reverse order to me
lip 01 10:37:14 <MJCD>	event handlers are usually given a function to be called later - thus the name "callback"
lip 01 10:37:14 <MJCD>	event handlers are usually given a function to be called later - thus the name "callback"
lip 01 10:39:12 <grr12314>	its really fun to try to program with no "return", only cps
lip 01 10:39:12 <grr12314>	its really fun to try to program with no "return", only cps
lip 01 10:40:03 <MJCD>	sounds nasty
lip 01 10:40:03 <MJCD>	sounds nasty
lip 01 10:40:16 <MJCD>	that's how you end up 8 levels of nesting
lip 01 10:40:16 <MJCD>	that's how you end up 8 levels of nesting
lip 01 10:40:19 <MJCD>	xD
lip 01 10:40:19 <MJCD>	xD
lip 01 10:40:29 <grr12314>	the fact that it is possible is very interesting tho
lip 01 10:40:30 <grr12314>	the fact that it is possible is very interesting tho
lip 01 10:41:03 <MJCD>	Possible !== Advisable, ofcourse
lip 01 10:41:03 <MJCD>	Possible !== Advisable, ofcourse
lip 01 10:41:21 <grr12314>	!cps
lip 01 10:41:21 <grr12314>	!cps
lip 01 10:41:21 <ecmabot>	grr12314: Continuation-Passing style is the formal term for the "callback-based" approach to programming. CPS is a heavily used idiom in JavaScript to deal with asynchronous programming. See http://matt.might.net/articles/by-example-continuation-passing-style/
lip 01 10:41:21 <ecmabot>	grr12314: Continuation-Passing style is the formal term for the "callback-based" approach to programming. CPS is a heavily used idiom in JavaScript to deal with asynchronous programming. See http://matt.might.net/articles/by-example-continuation-passing-style/
lip 01 10:41:23 <MJCD>	if JS had first class tail call support
lip 01 10:41:23 <MJCD>	if JS had first class tail call support
lip 01 10:41:28 <MJCD>	there'd be no issue
lip 01 10:41:28 <MJCD>	there'd be no issue
lip 01 10:41:33 <MJCD>	but, it doesn't, so there is
lip 01 10:41:33 <MJCD>	but, it doesn't, so there is
lip 01 10:56:17 <kapilp>	how to know if object is a class or an instance of the class?
lip 01 10:56:17 <kapilp>	how to know if object is a class or an instance of the class?
lip 01 11:00:58 <grr12314>	!mdn instanceof
lip 01 11:00:58 <grr12314>	!mdn instanceof
lip 01 11:01:00 <jellobot>	grr12314, instanceof, JavaScript - The instanceof operator tests whether the prototype property of a constructor appears anywhere in the prototype chain of an object. https://mdn.io/instanceof
lip 01 11:01:00 <jellobot>	grr12314, instanceof, JavaScript - The instanceof operator tests whether the prototype property of a constructor appears anywhere in the prototype chain of an object. https://mdn.io/instanceof
lip 01 11:04:33 <cdunklau>	kapilp: ideally, don't be in the situation where you have to check
lip 01 11:04:33 <cdunklau>	kapilp: ideally, don't be in the situation where you have to check
lip 01 11:11:05 <kapilp>	thanks
lip 01 11:11:05 <kapilp>	thanks
lip 01 11:21:19 <kapilp>	how to only set cookies to /admin/* pages?
lip 01 11:21:19 <kapilp>	how to only set cookies to /admin/* pages?
lip 01 11:22:48 <stennowork>	kapilp, https://developer.mozilla.org/en-US/docs/Web/HTTP/Cookies#Scope_of_cookies
lip 01 11:22:48 <stennowork>	kapilp, https://developer.mozilla.org/en-US/docs/Web/HTTP/Cookies#Scope_of_cookies
lip 01 11:23:05 <stennowork>	so set cookie attribute Path to /admin
lip 01 11:23:05 <stennowork>	so set cookie attribute Path to /admin
lip 01 11:23:50 <kapilp>	thanks a lot
lip 01 11:23:50 <kapilp>	thanks a lot
lip 01 11:41:08 <BeerLover>	I am having an issue with jest mock's toHaveBeenCalledTimes and toHaveBeenCalledWith. https://gist.github.com/abhyuditjain/55e9d24a543676edb48994264499cbe4. Basically, the test calls don't match with the logic implemented
lip 01 11:41:08 <BeerLover>	I am having an issue with jest mock's toHaveBeenCalledTimes and toHaveBeenCalledWith. https://gist.github.com/abhyuditjain/55e9d24a543676edb48994264499cbe4. Basically, the test calls don't match with the logic implemented
lip 01 11:47:12 <sinclair>	https://www.zdnet.com/article/a-hacker-is-wiping-git-repositories-and-asking-for-a-ransom/
lip 01 11:47:12 <sinclair>	https://www.zdnet.com/article/a-hacker-is-wiping-git-repositories-and-asking-for-a-ransom/
lip 01 11:48:24 <fuchstronaut>	how does one lint HTML templates?
lip 01 11:48:24 <fuchstronaut>	how does one lint HTML templates?
lip 01 11:48:43 <ycon_>	Hi all, my node.js build script isn't adding my .json files. How do I tell the build script to explictly include them?
lip 01 11:48:43 <ycon_>	Hi all, my node.js build script isn't adding my .json files. How do I tell the build script to explictly include them?
lip 01 11:49:42 <fuchstronaut>	ycon_: show us the source
lip 01 11:49:42 <fuchstronaut>	ycon_: show us the source
lip 01 11:50:06 <ycon_>	fuchstronaut: my build script is just "build": "babel src --out-dir dist",
lip 01 11:50:06 <ycon_>	fuchstronaut: my build script is just "build": "babel src --out-dir dist",
lip 01 11:52:16 <fuchstronaut>	ycon_: Babel is a tool for transpilation from JS to JS (older version). There is no point in using babel on JSON files
lip 01 11:52:16 <fuchstronaut>	ycon_: Babel is a tool for transpilation from JS to JS (older version). There is no point in using babel on JSON files
lip 01 11:53:15 <fuchstronaut>	you will need another script that runs over your src folder and copies the JSON files to dist/
lip 01 11:53:15 <fuchstronaut>	you will need another script that runs over your src folder and copies the JSON files to dist/
lip 01 11:54:40 <igeni>	how do i prefent the default form submit when ussing this code: https://dpaste.de/1QAA
lip 01 11:54:40 <igeni>	how do i prefent the default form submit when ussing this code: https://dpaste.de/1QAA
lip 01 11:54:53 <igeni>	it submits the form twice in chrome
lip 01 11:54:53 <igeni>	it submits the form twice in chrome
lip 01 11:55:00 <igeni>	not in safari do
lip 01 11:55:00 <igeni>	not in safari do
lip 01 11:55:40 <igeni>	<input type="submit" name="Submit" value="Subchat verdiensten naar que" class="submit" onclick="check3();">
lip 01 11:55:40 <igeni>	<input type="submit" name="Submit" value="Subchat verdiensten naar que" class="submit" onclick="check3();">
lip 01 11:55:50 <igeni>	wrong one , but it nearly the same button
lip 01 11:55:50 <igeni>	wrong one , but it nearly the same button
lip 01 11:56:41 <ycon_>	fuchstronaut: so what should by build script be? I've just made all the json files into .js instead, with export default
lip 01 11:56:41 <ycon_>	fuchstronaut: so what should by build script be? I've just made all the json files into .js instead, with export default
lip 01 11:56:51 <ycon_>	are you saying to remove the babel part on the build script?
lip 01 11:56:51 <ycon_>	are you saying to remove the babel part on the build script?
lip 01 12:00:28 <feelextra>	Hello! I'm trying to use the IntersectionObserver API in order to trigger some action when an element is visible in the viewport. As far as I understood, the callback I supply to IntersectionObserver will only be called when the observed target is visible, however from my attempt it seems that the callback is triggered initially when the target is not visible yet.
lip 01 12:00:28 <feelextra>	Hello! I'm trying to use the IntersectionObserver API in order to trigger some action when an element is visible in the viewport. As far as I understood, the callback I supply to IntersectionObserver will only be called when the observed target is visible, however from my attempt it seems that the callback is triggered initially when the target is not visible yet.
lip 01 12:01:10 <feelextra>	here's my (minimal!) attempt. if you could spot any silly mistake of mine I would appreciate you pointing it out to me: https://codesandbox.io/s/intersection-observer-playgrounds-nrkh9
lip 01 12:01:10 <feelextra>	here's my (minimal!) attempt. if you could spot any silly mistake of mine I would appreciate you pointing it out to me: https://codesandbox.io/s/intersection-observer-playgrounds-nrkh9
lip 01 12:01:50 <feelextra>	It's using React Hooks
lip 01 12:01:50 <feelextra>	It's using React Hooks
lip 01 12:22:16 <gde33>	a dedace later... https://youtu.be/X9eRLElSW1c
lip 01 12:22:17 <gde33>	a dedace later... https://youtu.be/X9eRLElSW1c
lip 01 12:22:28 <jaziz>	if I've got one js file I'm using do I just call it "scripts.js?"
lip 01 12:22:28 <jaziz>	if I've got one js file I'm using do I just call it "scripts.js?"
lip 01 12:22:53 <gde33>	jaziz: a.js
lip 01 12:22:53 <gde33>	jaziz: a.js
lip 01 12:23:12 <jaziz>	oh really?
lip 01 12:23:12 <jaziz>	oh really?
lip 01 12:23:26 <jaziz>	I mean I've done that many times, but it was just to put a bs name out there
lip 01 12:23:26 <jaziz>	I mean I've done that many times, but it was just to put a bs name out there
lip 01 12:23:27 <gde33>	not sure if =".js" works actually, if it does it would be even better
lip 01 12:23:27 <gde33>	not sure if =".js" works actually, if it does it would be even better
lip 01 12:23:50 <gde33>	be a modern javascript dev and go for the largest possible payload
lip 01 12:23:50 <gde33>	be a modern javascript dev and go for the largest possible payload
lip 01 12:23:56 <jaziz>	hm
lip 01 12:23:56 <jaziz>	hm
lip 01 12:24:28 <gde33>	if you can spend those few bytes to push the size of things just over the edge you can have an even even slower page
lip 01 12:24:28 <gde33>	if you can spend those few bytes to push the size of things just over the edge you can have an even even slower page
lip 01 12:24:29 <Alexendoo>	gde33: That's trying too hard to be clever, .js is a valid filename but would likely not be interpreted as a js extension by editors, and will also be a hidden file
lip 01 12:24:29 <Alexendoo>	gde33: That's trying too hard to be clever, .js is a valid filename but would likely not be interpreted as a js extension by editors, and will also be a hidden file
lip 01 12:24:48 <gde33>	enough words about this
lip 01 12:24:48 <gde33>	enough words about this
lip 01 12:24:48 <Swahili>	Q: I'm having some issue with peer dependencies when I npm install a private npm package. I run the npm build script to generate distribution file and publish to my npm private repo (while, I keep the dist it out of my git repo); how to avoid peer dependencies and make sure that my build packs everything required?
lip 01 12:24:48 <Swahili>	Q: I'm having some issue with peer dependencies when I npm install a private npm package. I run the npm build script to generate distribution file and publish to my npm private repo (while, I keep the dist it out of my git repo); how to avoid peer dependencies and make sure that my build packs everything required?
lip 01 12:28:50 <feelextra>	Update: just found solution for my issue, apparently this is a limitation of IntersectionObserver, as described in: https://stackoverflow.com/questions/47737137/intersection-observer-api-fires-callback-even-element-is-not-in-view
lip 01 12:28:50 <feelextra>	Update: just found solution for my issue, apparently this is a limitation of IntersectionObserver, as described in: https://stackoverflow.com/questions/47737137/intersection-observer-api-fires-callback-even-element-is-not-in-view
lip 01 12:35:08 <ycon_>	Anyone using heroku here? Is there a way to tell it to use my build script? Logs tell me it runs npm start...
lip 01 12:35:08 <ycon_>	Anyone using heroku here? Is there a way to tell it to use my build script? Logs tell me it runs npm start...
lip 01 12:45:28 <stennowork>	n> Math.min(...["001","23","113"])
lip 01 12:45:28 <stennowork>	n> Math.min(...["001","23","113"])
lip 01 12:45:29 <jellobot>	(okay) 1
lip 01 12:45:29 <jellobot>	(okay) 1
lip 01 12:45:38 <stennowork>	oh
lip 01 12:45:38 <stennowork>	oh
lip 01 12:45:52 <stennowork>	implicitely cast to Number? thats a bit surprising
lip 01 12:45:53 <stennowork>	implicitely cast to Number? thats a bit surprising
lip 01 12:45:57 <cdunklau>	yaaaay JS!
lip 01 12:45:57 <cdunklau>	yaaaay JS!
lip 01 12:46:01 <stennowork>	haha
lip 01 12:46:01 <stennowork>	haha
lip 01 12:46:57 <stennowork>	well, that is a bit silly
lip 01 12:46:57 <stennowork>	well, that is a bit silly
lip 01 12:47:05 <stennowork>	i guess i shouldn't use Math.min here
lip 01 12:47:06 <stennowork>	i guess i shouldn't use Math.min here
lip 01 12:47:34 <stennowork>	n> ["2013","1999","2020"].sort()
lip 01 12:47:34 <stennowork>	n> ["2013","1999","2020"].sort()
lip 01 12:47:36 <jellobot>	(okay) [ '1999', '2013', '2020' ]
lip 01 12:47:36 <jellobot>	(okay) [ '1999', '2013', '2020' ]
lip 01 12:47:48 <stennowork>	well that will work i guess
lip 01 12:47:48 <stennowork>	well that will work i guess
lip 01 12:50:54 <BeerLover>	If any of you use jest, I am having an issue with jest mock's toHaveBeenCalledTimes and toHaveBeenCalledWith. https://gist.github.com/abhyuditjain/55e9d24a543676edb48994264499cbe4. Basically, the test calls don't match with the logic implemented
lip 01 12:50:54 <BeerLover>	If any of you use jest, I am having an issue with jest mock's toHaveBeenCalledTimes and toHaveBeenCalledWith. https://gist.github.com/abhyuditjain/55e9d24a543676edb48994264499cbe4. Basically, the test calls don't match with the logic implemented
lip 01 12:51:41 <jaziz>	what's a good package for automatically updating webpages when working in sublime?
lip 01 12:51:41 <jaziz>	what's a good package for automatically updating webpages when working in sublime?
lip 01 12:52:03 <stennowork>	jaziz, are you using webpack-dev-server ?
lip 01 12:52:03 <stennowork>	jaziz, are you using webpack-dev-server ?
lip 01 12:52:21 <jaziz>	stennowork, dunno what that is, so guessing not
lip 01 12:52:21 <jaziz>	stennowork, dunno what that is, so guessing not
lip 01 12:53:01 <sinclair>	service workers are a weird programming model
lip 01 12:53:01 <sinclair>	service workers are a weird programming model
lip 01 12:53:23 <jaziz>	for now I'm just saving in sublime, going to webpage, refreshing, etc
lip 01 12:53:23 <jaziz>	for now I'm just saving in sublime, going to webpage, refreshing, etc
lip 01 12:53:25 <jaziz>	getting cumberson
lip 01 12:53:25 <jaziz>	getting cumberson
lip 01 12:53:30 <jaziz>	*cumbersome
lip 01 12:53:30 <jaziz>	*cumbersome
lip 01 12:53:41 <stennowork>	how about http://gcollazo.github.io/BrowserRefresh-Sublime/
lip 01 12:53:42 <stennowork>	how about http://gcollazo.github.io/BrowserRefresh-Sublime/
lip 01 12:55:07 <jaziz>	stennowork, oo will take a look
lip 01 12:55:07 <jaziz>	stennowork, oo will take a look
lip 01 12:55:27 <jaziz>	also this seems to be the most popular one on package control
lip 01 12:55:27 <jaziz>	also this seems to be the most popular one on package control
lip 01 12:55:28 <jaziz>	https://packagecontrol.io/packages/LiveReload
lip 01 12:55:28 <jaziz>	https://packagecontrol.io/packages/LiveReload
lip 01 12:56:24 <stennowork>	you have to be careful then because you have to inject dev code to your sources
lip 01 12:56:24 <stennowork>	you have to be careful then because you have to inject dev code to your sources
lip 01 12:59:09 <jaziz>	hm
lip 01 12:59:09 <jaziz>	hm
lip 01 12:59:27 <jaziz>	maybe I won't use these tools lmao
lip 01 12:59:27 <jaziz>	maybe I won't use these tools lmao
lip 01 13:01:07 <stennowork>	n> [+null, +undefined]
lip 01 13:01:08 <stennowork>	n> [+null, +undefined]
lip 01 13:01:09 <jellobot>	(okay) [ 0, NaN ]
lip 01 13:01:09 <jellobot>	(okay) [ 0, NaN ]
lip 01 13:01:11 <stennowork>	dayum
lip 01 13:01:12 <stennowork>	dayum
lip 01 13:16:49 <Swahili>	Q: I'm having some issue with peer dependencies when I npm install a private npm package. I run the npm build script to generate distribution file and publish to my npm private repo (while, I keep the dist it out of my git repo); how to avoid peer dependencies and make sure that my build packs everything required?
lip 01 13:16:49 <Swahili>	Q: I'm having some issue with peer dependencies when I npm install a private npm package. I run the npm build script to generate distribution file and publish to my npm private repo (while, I keep the dist it out of my git repo); how to avoid peer dependencies and make sure that my build packs everything required?
lip 01 13:18:32 <Swahili>	If I start a new npm init project and npm install the private package, I get two peer dependencies to install manually; when in the context of a an older project, I get more peer dependencies
lip 01 13:18:32 <Swahili>	If I start a new npm init project and npm install the private package, I get two peer dependencies to install manually; when in the context of a an older project, I get more peer dependencies
lip 01 13:19:10 <Swahili>	since I'm publishing the package with the distribution directory, I expect to have everything I need already in there
lip 01 13:19:10 <Swahili>	since I'm publishing the package with the distribution directory, I expect to have everything I need already in there
lip 01 13:19:19 <Swahili>	Any hints or tips that might help me solve this?
lip 01 13:19:19 <Swahili>	Any hints or tips that might help me solve this?
lip 01 13:37:14 <lintguy>	What is this issue called? https://repl.it/repls/CandidEnchantingAgents Is it a race condition? Is it a scope issue? Is it a shared state issue?..
lip 01 13:37:15 <lintguy>	What is this issue called? https://repl.it/repls/CandidEnchantingAgents Is it a race condition? Is it a scope issue? Is it a shared state issue?..
lip 01 13:37:33 <lintguy>	(The data messes up quickly over time)
lip 01 13:37:33 <lintguy>	(The data messes up quickly over time)
lip 01 13:42:34 <grr12314>	it is called "dont use globals"
lip 01 13:42:34 <grr12314>	it is called "dont use globals"
lip 01 13:42:35 <cdunklau>	lintguy: gonna bet race
lip 01 13:42:35 <cdunklau>	lintguy: gonna bet race
lip 01 13:42:53 <cdunklau>	oh
lip 01 13:42:53 <cdunklau>	oh
lip 01 13:42:54 <cdunklau>	lol
lip 01 13:42:54 <cdunklau>	lol
lip 01 13:43:01 <cdunklau>	lintguy: yeah all those promises are running at oncce
lip 01 13:43:01 <cdunklau>	lintguy: yeah all those promises are running at oncce
lip 01 13:43:04 <cdunklau>	so it's shared state
lip 01 13:43:04 <cdunklau>	so it's shared state
lip 01 13:43:25 <grr12314>	hm nvm the global "a" is set to the same value everywhere so its not that
lip 01 13:43:26 <grr12314>	hm nvm the global "a" is set to the same value everywhere so its not that
lip 01 13:44:05 <stennowork>	n> Number.isNaN(null)
lip 01 13:44:05 <stennowork>	n> Number.isNaN(null)
lip 01 13:44:06 <jellobot>	(okay) false
lip 01 13:44:06 <jellobot>	(okay) false
lip 01 13:44:06 <lintguy>	To me it looks like a shared state issue, the logObj still keeps the same object reference.
lip 01 13:44:06 <lintguy>	To me it looks like a shared state issue, the logObj still keeps the same object reference.
lip 01 13:44:33 <cdunklau>	grr12314: Log is global, the IIFEs all run
lip 01 13:44:33 <cdunklau>	grr12314: Log is global, the IIFEs all run
lip 01 13:45:05 <lintguy>	So logObj would behave like a global, right?
lip 01 13:45:05 <lintguy>	So logObj would behave like a global, right?
lip 01 13:45:05 <grr12314>	yea but its normal to have a global log. so i guess it is called "working as intended" :p
lip 01 13:45:05 <grr12314>	yea but its normal to have a global log. so i guess it is called "working as intended" :p
lip 01 13:46:00 <lintguy>	Changing to class, prototype or local variable to hold the log of course doesn't have this issue.
lip 01 13:46:00 <lintguy>	Changing to class, prototype or local variable to hold the log of course doesn't have this issue.
lip 01 13:47:03 <cdunklau>	lintguy: you understand that the loops are all running in "parallel" right?
lip 01 13:47:03 <cdunklau>	lintguy: you understand that the loops are all running in "parallel" right?
lip 01 13:48:24 <avu>	you mean: concurrently :P
lip 01 13:48:24 <avu>	you mean: concurrently :P
lip 01 13:48:48 <lintguy>	Yes, I'm aware, it simulates running a node script.
lip 01 13:48:48 <lintguy>	Yes, I'm aware, it simulates running a node script.
lip 01 13:48:51 <grr12314>	the quotes make it right
lip 01 13:48:51 <grr12314>	the quotes make it right
lip 01 13:50:00 <lintguy>	I didn't understand that this could happen in node until i tested it during load.
lip 01 13:50:00 <lintguy>	I didn't understand that this could happen in node until i tested it during load.
lip 01 13:50:01 <cdunklau>	lintguy: okay, so yeah, they're all hitting this global object and even if it's entirely deterministic (which i doubt), it's going to be damn hard for any human to follow the execution flow
lip 01 13:50:01 <cdunklau>	lintguy: okay, so yeah, they're all hitting this global object and even if it's entirely deterministic (which i doubt), it's going to be damn hard for any human to follow the execution flow
lip 01 13:51:56 <grr12314>	it is mostly deterministic. i mean even if the exact timing isn't, so the interleaving pattern might differ, the logs relevant to each separate function are unaffected by the others. so "working ok"
lip 01 13:51:57 <grr12314>	it is mostly deterministic. i mean even if the exact timing isn't, so the interleaving pattern might differ, the logs relevant to each separate function are unaffected by the others. so "working ok"
lip 01 13:53:09 <lintguy>	The thing is, I've not learnt that this could be an issue, where is this an example?
lip 01 13:53:09 <lintguy>	The thing is, I've not learnt that this could be an issue, where is this an example?
lip 01 13:53:46 <grr12314>	it is not an issue
lip 01 13:53:46 <grr12314>	it is not an issue
lip 01 13:53:59 <lintguy>	Apparently, it is, once you hit a lot of requests on node.
lip 01 13:53:59 <lintguy>	Apparently, it is, once you hit a lot of requests on node.
lip 01 13:54:34 <lintguy>	One the front-end, sure, it's not going to be an issue.
lip 01 13:54:34 <lintguy>	One the front-end, sure, it's not going to be an issue.
lip 01 13:55:10 <cdunklau>	lintguy: multithreading with shared state has similar challenges
lip 01 13:55:10 <cdunklau>	lintguy: multithreading with shared state has similar challenges
lip 01 13:55:25 <grr12314>	its not an issue any more than any other parallel processes logging to the same location
lip 01 13:55:25 <grr12314>	its not an issue any more than any other parallel processes logging to the same location
lip 01 13:55:27 <cdunklau>	with JS, it's a bit nicer since you're not going to cause a segfault
lip 01 13:55:27 <cdunklau>	with JS, it's a bit nicer since you're not going to cause a segfault
lip 01 13:55:58 <lintguy>	cdunklau: you mean collissions aren't detected in js but are in others?
lip 01 13:55:58 <lintguy>	cdunklau: you mean collissions aren't detected in js but are in others?
lip 01 13:56:34 <grr12314>	you can either make a log viewer that can filter by request, or re-engineer the log functionality to only write once per request
lip 01 13:56:34 <grr12314>	you can either make a log viewer that can filter by request, or re-engineer the log functionality to only write once per request
lip 01 13:56:43 <grr12314>	what collisions?
lip 01 13:56:43 <grr12314>	what collisions?
lip 01 13:57:36 <lintguy>	grr12314: Or just create a new instance on every request https://repl.it/repls/SpeedyPiercingFrontend
lip 01 13:57:36 <lintguy>	grr12314: Or just create a new instance on every request https://repl.it/repls/SpeedyPiercingFrontend
lip 01 13:59:26 <cdunklau>	lintguy: i don't know what you mean by collisions
lip 01 13:59:26 <cdunklau>	lintguy: i don't know what you mean by collisions
lip 01 14:02:01 <cdunklau>	lintguy: if you give a bunch of kids a single chalkboard, there will be chaos, yes
lip 01 14:02:01 <cdunklau>	lintguy: if you give a bunch of kids a single chalkboard, there will be chaos, yes
lip 01 14:02:39 <cdunklau>	if you give each kid their own chalkboard, Alice won't draw all over Bob's spaceship
lip 01 14:02:39 <cdunklau>	if you give each kid their own chalkboard, Alice won't draw all over Bob's spaceship
lip 01 14:03:24 <stennowork>	yeah man single-threaded event loop ftw
lip 01 14:03:24 <stennowork>	yeah man single-threaded event loop ftw
lip 01 14:03:40 <stennowork>	no race conditions, no memory violations
lip 01 14:03:40 <stennowork>	no race conditions, no memory violations
lip 01 14:03:49 <stennowork>	no 'joining'
lip 01 14:03:50 <stennowork>	no 'joining'
lip 01 14:07:57 <lintguy>	stennowork: First time hearing about single-threaded event loops, do you have any good resources about it?
lip 01 14:07:57 <lintguy>	stennowork: First time hearing about single-threaded event loops, do you have any good resources about it?
lip 01 14:08:17 <stennowork>	sure, its how javascript works
lip 01 14:08:17 <stennowork>	sure, its how javascript works
lip 01 14:08:22 <lintguy>	:-P
lip 01 14:08:22 <lintguy>	:-P
lip 01 14:08:32 <stennowork>	maybe this helps already: https://developer.mozilla.org/en-US/docs/Web/JavaScript/EventLoop
lip 01 14:08:32 <stennowork>	maybe this helps already: https://developer.mozilla.org/en-US/docs/Web/JavaScript/EventLoop
lip 01 14:09:55 <stennowork>	APic, o/
lip 01 14:09:56 <stennowork>	APic, o/
lip 01 14:10:07 <APic>	\o
lip 01 14:10:07 <APic>	\o
lip 01 14:10:43 <cdunklau>	lintguy: see also "reactor pattern"
lip 01 14:10:43 <cdunklau>	lintguy: see also "reactor pattern"
lip 01 14:11:00 <cdunklau>	JS's event loop is a bit... more... than just a reactor, but that's the general idea
lip 01 14:11:00 <cdunklau>	JS's event loop is a bit... more... than just a reactor, but that's the general idea
lip 01 14:11:48 <davve>	event dispatcher pattern?
lip 01 14:11:48 <davve>	event dispatcher pattern?
lip 01 14:11:50 <lintguy>	I found RxJS, which seems like a better way to handle synchronous events when handling promises.
lip 01 14:11:50 <lintguy>	I found RxJS, which seems like a better way to handle synchronous events when handling promises.
lip 01 14:12:01 <lintguy>	*observables
lip 01 14:12:01 <lintguy>	*observables
lip 01 14:18:36 <diverdude>	Given this example: https://jsfiddle.net/e0xpvr8a/ how would you use elementFromPoint to get a reference to the grid div so that i can change backgroundcolor?
lip 01 14:18:36 <diverdude>	Given this example: https://jsfiddle.net/e0xpvr8a/ how would you use elementFromPoint to get a reference to the grid div so that i can change backgroundcolor?
lip 01 14:19:20 <davve>	javascripts cuncurrency model: single threaded operation :D
lip 01 14:19:20 <davve>	javascripts cuncurrency model: single threaded operation :D
lip 01 14:20:23 <lintguy>	I've only worked with PHP on the server-side before, so, never had this issue.
lip 01 14:20:23 <lintguy>	I've only worked with PHP on the server-side before, so, never had this issue.
lip 01 14:24:01 <Simplar>	https://jsfiddle.net/bhzj67w9/ please tell me why isn't it working in some browsers. I can't hear the song actually playing if I'm running it from another computer.
lip 01 14:24:01 <Simplar>	https://jsfiddle.net/bhzj67w9/ please tell me why isn't it working in some browsers. I can't hear the song actually playing if I'm running it from another computer.
lip 01 14:24:54 <lintguy>	Simplar: https://caniuse.com/#search=audio
lip 01 14:24:54 <lintguy>	Simplar: https://caniuse.com/#search=audio
lip 01 14:25:20 <stennowork>	i think chromium is a bit restrictive regarding autoplay
lip 01 14:25:20 <stennowork>	i think chromium is a bit restrictive regarding autoplay
lip 01 14:25:26 <stennowork>	s/chromium/chrome
lip 01 14:25:26 <stennowork>	s/chromium/chrome
lip 01 14:25:40 <Simplar>	I'm not *auto*playing it, actually.
lip 01 14:25:40 <Simplar>	I'm not *auto*playing it, actually.
lip 01 14:25:46 <Simplar>	I'm firing a play() function
lip 01 14:25:46 <Simplar>	I'm firing a play() function
lip 01 14:26:28 <cdunklau>	lintguy: so you didn't have to deal with this at all, with PHP you almost certainly couldn't have such a situation because your code just runs once per request
lip 01 14:26:28 <cdunklau>	lintguy: so you didn't have to deal with this at all, with PHP you almost certainly couldn't have such a situation because your code just runs once per request
lip 01 14:26:38 <cdunklau>	unless my PHP knowledge is very out of date
lip 01 14:26:38 <cdunklau>	unless my PHP knowledge is very out of date
lip 01 14:26:41 <stennowork>	also php doesn't have coroutines
lip 01 14:26:42 <stennowork>	also php doesn't have coroutines
lip 01 14:27:11 <stennowork>	Simplar, Audio() is _only_ supported by FF
lip 01 14:27:11 <stennowork>	Simplar, Audio() is _only_ supported by FF
lip 01 14:27:18 <stennowork>	Simplar, https://developer.mozilla.org/en-US/docs/Web/API/HTMLAudioElement
lip 01 14:27:18 <stennowork>	Simplar, https://developer.mozilla.org/en-US/docs/Web/API/HTMLAudioElement
lip 01 14:27:28 <stennowork>	see section 'Browser compatibility'
lip 01 14:27:28 <stennowork>	see section 'Browser compatibility'
lip 01 14:27:32 <lintguy>	cdunklau: That seems ot be the case if it's FPM, multi-threaded.
lip 01 14:27:32 <lintguy>	cdunklau: That seems ot be the case if it's FPM, multi-threaded.
lip 01 14:27:43 <Simplar>	How can I deploy a cross browser audio playing then?
lip 01 14:27:43 <Simplar>	How can I deploy a cross browser audio playing then?
lip 01 14:28:32 <Alexendoo>	That's not the case here, even IE supports new Audio()
lip 01 14:28:32 <Alexendoo>	That's not the case here, even IE supports new Audio()
lip 01 14:28:59 <lintguy>	Simplar: html5 audio element i think
lip 01 14:28:59 <lintguy>	Simplar: html5 audio element i think
lip 01 14:29:01 <Simplar>	They why could it not play on my request from a mac chrome?
lip 01 14:29:01 <Simplar>	They why could it not play on my request from a mac chrome?
lip 01 14:29:11 <stennowork>	Alexendoo, oh hm right
lip 01 14:29:11 <stennowork>	Alexendoo, oh hm right
lip 01 14:29:12 <Alexendoo>	It's probably prevented by the autoplay policy
lip 01 14:29:12 <Alexendoo>	It's probably prevented by the autoplay policy
lip 01 14:29:23 <stennowork>	the Audio() interface itself is defined by any browser
lip 01 14:29:23 <stennowork>	the Audio() interface itself is defined by any browser
lip 01 14:29:28 <lintguy>	^ right, it was changed
lip 01 14:29:28 <lintguy>	^ right, it was changed
lip 01 14:29:28 <Simplar>	so if i press the button and go .play() will be good?
lip 01 14:29:28 <Simplar>	so if i press the button and go .play() will be good?
lip 01 14:29:32 <cdunklau>	lintguy: how do you handle state across multiple requests in PHP? sessions and a DB, right?
lip 01 14:29:32 <cdunklau>	lintguy: how do you handle state across multiple requests in PHP? sessions and a DB, right?
lip 01 14:29:43 <stennowork>	Simplar, shoudl work, yes
lip 01 14:29:43 <stennowork>	Simplar, shoudl work, yes
lip 01 14:29:45 <lintguy>	cdunklau: yeah, sessions and db.
lip 01 14:29:45 <lintguy>	cdunklau: yeah, sessions and db.
lip 01 14:29:48 <Simplar>	let me try
lip 01 14:29:48 <Simplar>	let me try
lip 01 14:29:49 <stennowork>	another issue could be CORS-related
lip 01 14:29:49 <stennowork>	another issue could be CORS-related
lip 01 14:30:17 <lintguy>	cdunklau: going to node has given a ton of headaches, php is incredibly forgiving...
lip 01 14:30:17 <lintguy>	cdunklau: going to node has given a ton of headaches, php is incredibly forgiving...
lip 01 14:30:22 <stennowork>	in which case you have to add a crossorigin attribute
lip 01 14:30:22 <stennowork>	in which case you have to add a crossorigin attribute
lip 01 14:30:30 <lintguy>	cdunklau: but I'm sure it's making me a better dev
lip 01 14:30:30 <lintguy>	cdunklau: but I'm sure it's making me a better dev
lip 01 14:30:49 <cdunklau>	lintguy: since node is the whole process instead of apache running your code when it gets a request, you do have to be concerned with this stuff, yes
lip 01 14:30:49 <cdunklau>	lintguy: since node is the whole process instead of apache running your code when it gets a request, you do have to be concerned with this stuff, yes
lip 01 14:31:16 <lintguy>	cdunklau: I tried looking for common node pitfalls, this didn't come up...
lip 01 14:31:16 <lintguy>	cdunklau: I tried looking for common node pitfalls, this didn't come up...
lip 01 14:31:23 <stennowork>	n> -1%2
lip 01 14:31:23 <stennowork>	n> -1%2
lip 01 14:31:24 <jellobot>	(okay) -1
lip 01 14:31:24 <jellobot>	(okay) -1
lip 01 14:31:29 <stennowork>	n> -2%2
lip 01 14:31:30 <stennowork>	n> -2%2
lip 01 14:31:31 <jellobot>	(okay) -0
lip 01 14:31:31 <jellobot>	(okay) -0
lip 01 14:31:32 <cdunklau>	lintguy: it's not limited to node, it's like, any language besides PHP :)
lip 01 14:31:32 <cdunklau>	lintguy: it's not limited to node, it's like, any language besides PHP :)
lip 01 14:31:35 <stennowork>	lol
lip 01 14:31:36 <stennowork>	lol
lip 01 14:31:59 <lintguy>	cdunklau: Have to start somewhere :P
lip 01 14:31:59 <lintguy>	cdunklau: Have to start somewhere :P
lip 01 14:32:06 <cdunklau>	lintguy: for sure!
lip 01 14:32:06 <cdunklau>	lintguy: for sure!
lip 01 14:32:22 <lintguy>	I try to focus on one area instead of… well… multiple.
lip 01 14:32:22 <lintguy>	I try to focus on one area instead of… well… multiple.
lip 01 14:32:28 <cdunklau>	but you'll notice how there aren't any desktop or mobile apps written in PHP :)
lip 01 14:32:28 <cdunklau>	but you'll notice how there aren't any desktop or mobile apps written in PHP :)
lip 01 14:32:52 <cdunklau>	there are plenty written in (mostly) JS
lip 01 14:32:52 <cdunklau>	there are plenty written in (mostly) JS
lip 01 14:33:02 <lintguy>	cdunklau: these days there's react native, so, neither is JS :P
lip 01 14:33:02 <lintguy>	cdunklau: these days there's react native, so, neither is JS :P
lip 01 14:33:04 <cdunklau>	or java, or obj-c, or python, or....
lip 01 14:33:04 <cdunklau>	or java, or obj-c, or python, or....
lip 01 14:33:24 <lintguy>	There's a reason I'm going away from PHP
lip 01 14:33:24 <lintguy>	There's a reason I'm going away from PHP
lip 01 14:33:38 <nwoob>	In this code https://gist.github.com/sevastos/5804803 LINE 56 this.request.params , what is value of this?
lip 01 14:33:38 <nwoob>	In this code https://gist.github.com/sevastos/5804803 LINE 56 this.request.params , what is value of this?
lip 01 14:33:43 <stennowork>	i heard java will get native coroutines soon
lip 01 14:33:43 <stennowork>	i heard java will get native coroutines soon
lip 01 14:34:30 <stennowork>	nwoob, `this` is the caller of the callback function
lip 01 14:34:30 <stennowork>	nwoob, `this` is the caller of the callback function
lip 01 14:35:05 <stennowork>	n> 1.5%2
lip 01 14:35:05 <stennowork>	n> 1.5%2
lip 01 14:35:06 <jellobot>	(okay) 1.5
lip 01 14:35:06 <jellobot>	(okay) 1.5
lip 01 14:35:26 <nwoob>	stennowork: I tried to wrap the function in request() https://pastebin.com/raw/ani4ap04 and this got undefined. How will I get the this ?
lip 01 14:35:26 <nwoob>	stennowork: I tried to wrap the function in request() https://pastebin.com/raw/ani4ap04 and this got undefined. How will I get the this ?
lip 01 14:35:28 <stennowork>	n> 2.5%2
lip 01 14:35:29 <stennowork>	n> 2.5%2
lip 01 14:35:30 <jellobot>	(okay) 0.5
lip 01 14:35:30 <jellobot>	(okay) 0.5
lip 01 14:36:35 <nwoob>	stennowork: last function s3.createMultipart
lip 01 14:36:35 <nwoob>	stennowork: last function s3.createMultipart
lip 01 14:36:50 <nwoob>	and I wrapped it in request() how will the get this?
lip 01 14:36:50 <nwoob>	and I wrapped it in request() how will the get this?
lip 01 14:37:04 <cdunklau>	lintguy: so the solution here is "obsessively avoid global mutable state"
lip 01 14:37:04 <cdunklau>	lintguy: so the solution here is "obsessively avoid global mutable state"
lip 01 14:37:06 <nwoob>	in s3.createmultipart
lip 01 14:37:06 <nwoob>	in s3.createmultipart
lip 01 14:37:07 <stennowork>	what do you expect `this` to be?
lip 01 14:37:07 <stennowork>	what do you expect `this` to be?
lip 01 14:37:25 <cdunklau>	lintguy: turns out this tends to make your code easier to test too
lip 01 14:37:25 <cdunklau>	lintguy: turns out this tends to make your code easier to test too
lip 01 14:37:32 <lintguy>	cdunklau: Obviously :-) I just wanted to understand the why and how.
lip 01 14:37:32 <lintguy>	cdunklau: Obviously :-) I just wanted to understand the why and how.
lip 01 14:37:36 <stennowork>	n> (()=>console.log(this))()
lip 01 14:37:36 <stennowork>	n> (()=>console.log(this))()
lip 01 14:37:37 <jellobot>	(okay) Object [global] {   global: [Circular],   clearInterval: [Function: clearInterval],   clearTimeout: [Function: clearTimeout],   setInterval: [Function: setInterval],   setTimeout: [Function: setTimeout] { [Symbol(util.promisify.custom)]: [Function] },   queueMicrotask: [Function: queueMicrotask],   clearImmediate: [Function: clearImmediate],   setImmediate: [Function: setImmediate ...
lip 01 14:37:37 <jellobot>	(okay) Object [global] {   global: [Circular],   clearInterval: [Function: clearInterval],   clearTimeout: [Function: clearTimeout],   setInterval: [Function: setInterval],   setTimeout: [Function: setTimeout] { [Symbol(util.promisify.custom)]: [Function] },   queueMicrotask: [Function: queueMicrotask],   clearImmediate: [Function: clearImmediate],   setImmediate: [Function: setImmediate ...
lip 01 14:37:41 <nwoob>	I think in the github code which i'm referencing `this` is global
lip 01 14:37:41 <nwoob>	I think in the github code which i'm referencing `this` is global
lip 01 14:37:43 <nwoob>	stennowork:
lip 01 14:37:43 <nwoob>	stennowork:
lip 01 14:37:47 <stennowork>	yes
lip 01 14:37:47 <stennowork>	yes
lip 01 14:38:14 <cdunklau>	lintguy: it's one of those things that doesn't have a single answer, or even a finite set of answers
lip 01 14:38:14 <cdunklau>	lintguy: it's one of those things that doesn't have a single answer, or even a finite set of answers
lip 01 14:38:17 <nwoob>	I don't know how to pass global this to s3.create in my code
lip 01 14:38:17 <nwoob>	I don't know how to pass global this to s3.create in my code
lip 01 14:38:20 <nwoob>	stennowork:
lip 01 14:38:20 <nwoob>	stennowork:
lip 01 14:38:39 <cdunklau>	lintguy: gotta get concrete. if you have a specific situation, tell us about it, don't use a proxy
lip 01 14:38:39 <cdunklau>	lintguy: gotta get concrete. if you have a specific situation, tell us about it, don't use a proxy
lip 01 14:40:54 *	Disconnected ()
**** ENDING LOGGING AT Mon Jul  1 14:40:54 2019

lip 01 14:40:54 *	Disconnected ()
**** ENDING LOGGING AT Mon Jul  1 14:40:54 2019

**** BEGIN LOGGING AT Mon Jul  1 14:41:17 2019

lip 01 14:41:17 *	Now talking on ##javascript
lip 01 14:41:17 *	Topic for ##javascript is: JavaScript is *not* Java. | Just ask your question. | Say "!mdn abc" for docs on "abc". | Don't paste code in the channel. | Can't talk? Get registered on freenode ( https://git.io/vaTS2 )
lip 01 14:41:17 *	Topic for ##javascript set by niggler!~niggler@unaffiliated/niggler (Tue Jan 15 07:16:23 2019)
lip 01 14:41:20 <Simplar>	is audio file loading automatically when i specify audio src?
**** BEGIN LOGGING AT Mon Jul  1 14:41:21 2019

lip 01 14:41:21 *	Now talking on ##javascript
lip 01 14:41:21 *	Topic for ##javascript is: JavaScript is *not* Java. | Just ask your question. | Say "!mdn abc" for docs on "abc". | Don't paste code in the channel. | Can't talk? Get registered on freenode ( https://git.io/vaTS2 )
lip 01 14:41:21 *	Topic for ##javascript set by niggler!~niggler@unaffiliated/niggler (Tue Jan 15 07:16:23 2019)
lip 01 14:41:29 <stennowork>	yes
lip 01 14:41:30 <stennowork>	yes
lip 01 14:41:44 <stennowork>	setting the src of a media element causes it to download
lip 01 14:41:44 <stennowork>	setting the src of a media element causes it to download
lip 01 14:41:52 <cdunklau>	lintguy: now, i'm not in the immutable-everything camp
lip 01 14:41:53 <cdunklau>	lintguy: now, i'm not in the immutable-everything camp
lip 01 14:41:54 <Simplar>	and how can i display % progress of download?
lip 01 14:41:54 <Simplar>	and how can i display % progress of download?
lip 01 14:42:07 <Simplar>	how can i obtain/update current percentage?
lip 01 14:42:07 <Simplar>	how can i obtain/update current percentage?
lip 01 14:42:14 <lintguy>	cdunklau: I'm getting there, but it's creating a shit ton of verbosity
lip 01 14:42:14 <lintguy>	cdunklau: I'm getting there, but it's creating a shit ton of verbosity
lip 01 14:42:32 <lintguy>	cdunklau: a normal top-down function can become double the code, easily
lip 01 14:42:32 <lintguy>	cdunklau: a normal top-down function can become double the code, easily
lip 01 14:42:34 <cdunklau>	lintguy: but wrapping up related state in an object is a good middle ground
lip 01 14:42:34 <cdunklau>	lintguy: but wrapping up related state in an object is a good middle ground
lip 01 14:42:47 <Simplar>	myAudio.progress = function() { /* do stuff */ } ?
lip 01 14:42:47 <Simplar>	myAudio.progress = function() { /* do stuff */ } ?
lip 01 14:42:48 <cdunklau>	the mutable part isn't the bad part, the global part is
lip 01 14:42:49 <cdunklau>	the mutable part isn't the bad part, the global part is
lip 01 14:42:58 <lintguy>	cdunklau: What do you mean?
lip 01 14:42:58 <lintguy>	cdunklau: What do you mean?
lip 01 14:43:17 <stennowork>	Simplar, just bind a listener to the 'progress' event
lip 01 14:43:17 <stennowork>	Simplar, just bind a listener to the 'progress' event
lip 01 14:43:19 <cdunklau>	lintguy: if i call a method on an object, and it mutates that object, it's cool
lip 01 14:43:19 <cdunklau>	lintguy: if i call a method on an object, and it mutates that object, it's cool
lip 01 14:43:30 <Simplar>	so, AddEventListener, right?
lip 01 14:43:31 <Simplar>	so, AddEventListener, right?
lip 01 14:43:34 <stennowork>	yes
lip 01 14:43:34 <stennowork>	yes
lip 01 14:44:43 *	Disconnected ()
**** ENDING LOGGING AT Mon Jul  1 14:44:43 2019

lip 01 14:45:03 *	Disconnected ()
**** BEGIN LOGGING AT Sat Aug 31 11:19:15 2019

Aug 31 11:19:15 *	Now talking on ##javascript
Aug 31 11:19:15 *	Topic for ##javascript is: JavaScript is *not* Java. | Just ask your question. | Say "!mdn abc" for docs on "abc". | Don't paste code in the channel. | Can't talk? Get registered on freenode ( https://git.io/vaTS2 )
Aug 31 11:19:15 *	Topic for ##javascript set by niggler!~niggler@unaffiliated/niggler (Tue Jan 15 07:16:23 2019)
Aug 31 11:19:50 <theskillwithin>	https://youtu.be/IQPjxFDDGcg
Aug 31 11:20:42 <hmw_metalab>	WTH. Just tested my program with Edge, DragDrop not working... why do they always have to be different?
Aug 31 11:21:31 <hmw_metalab>	Also, saving state and resuming the VM doesn't help much, Windows is notices it and does some slow reloging. WTH
Aug 31 11:21:52 <hmw_metalab>	does some slow logging in again*
Aug 31 11:21:54 <theskillwithin>	u doin react?
Aug 31 11:22:01 <hmw_metalab>	Nah, pure JS
Aug 31 11:22:04 <theskillwithin>	ahh
Aug 31 11:22:42 <hmw_metalab>	and my Pulldown menus won't expand, either... *sighs*
Aug 31 11:22:52 <theskillwithin>	dang lotta shit
Aug 31 11:23:06 <theskillwithin>	btw i love react-select
Aug 31 11:23:14 <theskillwithin>	blah nvm
Aug 31 11:24:14 <hmw_metalab>	I am rather green when it comes to JS, I just recently started to learn it properly. I want to know it well, before I take a look at frameworks.
Aug 31 11:24:52 <theskillwithin>	i like it
Aug 31 11:25:01 <hmw_metalab>	I need getting used to certain syntactic stuff and programming patterns, too.
Aug 31 11:25:17 <hmw_metalab>	Promises make me slightly dizzy
Aug 31 11:25:23 <theskillwithin>	hmw_metalab could u give a middle finger to jquery real quick
Aug 31 11:26:18 <hmw_metalab>	I looked at it few years ago and found it nice, but I am a purist. I made my owh $ function, which I recently rewrote to use querySelector
Aug 31 11:26:38 <hmw_metalab>	People always think, I use frameworks. How embarassing
Aug 31 11:26:53 <theskillwithin>	i was going for a more of  FUCK JQUERY
Aug 31 11:27:04 <theskillwithin>	i can do my own selectors mom
Aug 31 11:27:21 <hmw_metalab>	I don't really know it. Back then, at a quick glance, I thought it being lightweight in comparison.
Aug 31 11:27:35 <theskillwithin>	its useless now
Aug 31 11:27:50 <hmw_metalab>	I don't miss anything in JS actually
Aug 31 11:28:12 <hmw_metalab>	I like the convenience of writing element.$(findstuff in this), so I made a wrapper
Aug 31 11:28:51 <hmw_metalab>	also, JS allows unicode for identifiers, I would never have guessed, that one is allowed to name a function $ or even use an emoji
Aug 31 11:29:00 <hmw_metalab>	I like using greek letters for maths
Aug 31 11:29:17 <theskillwithin>	ya fuck jquery
Aug 31 11:30:30 <hmw_metalab>	Well... I miss strict typing
Aug 31 11:30:43 <hmw_metalab>	But I hear, there are tools for this, transpilers or something
Aug 31 11:30:44 <theskillwithin>	im sad ur on windows
Aug 31 11:30:49 <hmw_metalab>	I am not!
Aug 31 11:30:53 <theskillwithin>	oh good!!!
Aug 31 11:30:57 <hmw_metalab>	I just tried my current project in a VM
Aug 31 11:31:39 <hmw_metalab>	Windows is so annoying. When I resume the machine state, Windows has apparently logged me out and takes a while before I can continue. Even the browser is gone.
Aug 31 11:31:43 <theskillwithin>	hell yeah like webpack and babel and module loading and hell ya
Aug 31 11:32:06 <theskillwithin>	vagrant can be annoying on windows as well
Aug 31 11:32:08 <hmw_metalab>	What happened to "saving machine state"
Aug 31 11:32:24 <theskillwithin>	idk that might be above my head hehe
Aug 31 11:32:34 *	hmw_metalab is just ranting a little
Aug 31 11:32:47 <hmw_metalab>	I always get annoyed, when I have to deal with this stuff :)
Aug 31 11:33:03 <theskillwithin>	work for a good company
Aug 31 11:33:15 <theskillwithin>	then u can be pissed off at a good company then
Aug 31 11:33:19 <hmw_metalab>	Heheh
Aug 31 11:33:32 <hmw_metalab>	I am self-employed, so I can only hate myself
Aug 31 11:34:03 <theskillwithin>	nice
Aug 31 11:34:28 <theskillwithin>	if u ever need help my rate is $70/hr
Aug 31 11:34:29 <hmw_metalab>	Working on a private project atm, though
Aug 31 11:36:04 <theskillwithin>	if its a moonshot project and does react i might be onboard for ownership
Aug 31 11:37:19 <theskillwithin>	we all hate outselfs =[
Aug 31 11:40:34 <hmw_metalab>	Well. My project exploded a little. I just wanted a better UI for an old program, I want to rewrite. https://i.imgur.com/UNCxYZ1.png
Aug 31 11:41:26 <hmw_metalab>	My calculator crashes. I am refactoring atm
Aug 31 11:42:26 <theskillwithin>	ur writing a calculator?
Aug 31 11:42:49 <theskillwithin>	are u in highschool?
Aug 31 11:43:10 <hmw_metalab>	I am making a DE with a bunch of tools. Perhaps I can get rid of my real DE and just use X + Chromium + WUI
Aug 31 11:43:51 <theskillwithin>	welp thats above my head
Aug 31 11:43:58 <hmw_metalab>	I don't think, they make THIS kind of calculator in highschool. I is a remake of my real TI-34
Aug 31 11:44:21 <hmw_metalab>	(take a look, it is rather complicated)
Aug 31 11:44:47 <theskillwithin>	umm i don't have to take a look that making a  TI-39 is complicated
Aug 31 11:45:05 <theskillwithin>	34*
Aug 31 11:45:16 <theskillwithin>	cuz it... is.
Aug 31 11:45:19 <hmw_metalab>	:)
Aug 31 11:46:11 <theskillwithin>	u fuckin badass
Aug 31 11:47:11 <theskillwithin>	lol when i was in hs, i was like, ok how can i write c++ program to do this and print out the steps
Aug 31 11:48:01 <theskillwithin>	but i was retarded in hs
Aug 31 11:48:10 <hmw_metalab>	Who wasn't? *g*
Aug 31 11:49:07 <hmw_metalab>	oh, my clock says 31th *blushes*
Aug 31 11:49:35 <hmw_metalab>	lol, ok, silly bug
Aug 31 11:49:39 <theskillwithin>	i had "add" so i was redarded
Aug 31 11:51:10 <theskillwithin>	if i could go back in time, id tell myself.  school doesn't matter and college is bs.
Aug 31 11:53:29 <theskillwithin>	now im in charge of people who completed college,  and their in debt from college loans
Aug 31 11:53:47 <hmw_metalab>	Yeah, that sucks
Aug 31 11:53:49 <theskillwithin>	hehe and i dripped out
Aug 31 11:53:53 <theskillwithin>	dropped out
Aug 31 11:56:00 <theskillwithin>	hmw_metalab sucks for them... also sucks for me somtiems cuz i gotta teach em some things...
Aug 31 11:56:06 <theskillwithin>	well i love teaching...
Aug 31 11:56:13 <hmw_metalab>	;)
Aug 31 11:56:20 <theskillwithin>	i love teaching
Aug 31 11:56:22 <theskillwithin>	but
Aug 31 11:56:39 <theskillwithin>	if its like 1-2 years and ur still a junior dev....
Aug 31 11:56:49 <theskillwithin>	maybe i suck at teaching
Aug 31 11:56:57 <theskillwithin>	or maybe u dont put in the effort
Aug 31 11:57:23 <hmw_metalab>	People learn programming in 2 years??
Aug 31 11:57:35 <hmw_metalab>	and then go to work with their "skill"??
Aug 31 11:57:49 <hmw_metalab>	No wonder, every piece of software is so borken
Aug 31 11:58:28 <theskillwithin>	absolutly not.  but still a junior dev needs to come into accepting everything absorbing knowlege, and doing work outside of work to learn
Aug 31 11:58:40 <hmw_metalab>	I suppose so
Aug 31 11:58:46 <theskillwithin>	just like i did working 12 hour days
Aug 31 11:59:40 <theskillwithin>	a junior dev after 2 years... i mean cmon thats frusterating.
Aug 31 12:00:07 <theskillwithin>	i tried. was with u sometimes till 1am
Aug 31 12:00:23 <theskillwithin>	maybe im a bad teacher
Aug 31 12:02:11 <theskillwithin>	coding is not everyones life
Aug 31 12:02:41 <theskillwithin>	which is fair
Aug 31 12:04:00 <theskillwithin>	its my life =]
Aug 31 12:08:38 <theskillwithin>	side projects,  they come in spirts seems like...   sometimes im so busy, turning down a ton...  and other times bored
Aug 31 13:13:10 <celphi>	.
Aug 31 13:16:32 <MJCD>	,
Aug 31 13:20:28 <Cypris>	ES6 Classes, is it possible to set class variables (this.example = "value") using a method that would allow example to be a string in a variable (like how you can do var x = []; name = "example"; x[name] = "value"; ) ?
Aug 31 13:25:40 <Maxdamantus>	Cypris: yes.
Aug 31 13:26:03 <Maxdamantus>	`this` is not special in classes.
Aug 31 13:41:05 <celphi>	What?
Aug 31 13:41:22 <celphi>	What do you mean not special?
Aug 31 13:41:39 <Maxdamantus>	Not special relative to in other functions.
Aug 31 13:42:01 <Maxdamantus>	It still just evaluates to some value, probably an object.
Aug 31 13:42:20 <Maxdamantus>	and of course you can use subscripts on objects.
Aug 31 13:42:40 <celphi>	`this` has meaning in constructors
Aug 31 13:43:16 <Maxdamantus>	Okay, it's special in constructors.
Aug 31 13:43:37 <Maxdamantus>	actually .. is it?
Aug 31 13:43:40 <englosh>	what should I do?  document.onkeydown = function(event) { ... }   or   document.addEventListener('keydown', on_key_down, false); ?
Aug 31 13:43:57 *	Maxdamantus suspects it isn't.
Aug 31 13:44:03 <celphi>	depends on goal englosh
Aug 31 13:44:10 <englosh>	well both do the same
Aug 31 13:44:13 <Maxdamantus>	unless they've done something really weird to make it pseudo-behave like Java.
Aug 31 13:44:21 <englosh>	my goal is to have an onkeydown event
Aug 31 13:44:25 <celphi>	both are not same englosh
Aug 31 13:44:39 <celphi>	ctrl + R
Aug 31 13:44:39 <englosh>	don't they do the same thing?
Aug 31 13:44:47 <celphi>	keypress on ctrl
Aug 31 13:45:11 <celphi>	would fire first
Aug 31 13:45:24 <celphi>	err keydown
Aug 31 13:45:38 <celphi>	oh wait im misreading your statement
Aug 31 13:45:44 <celphi>	use eventlistener
Aug 31 13:45:54 <celphi>	your former one gets overwritten
Aug 31 13:45:59 <celphi>	the latter one stacks
Aug 31 13:46:16 <englosh>	doesnt it only get overwritten when I set document.onkeydown again?
Aug 31 13:46:27 <celphi>	right- but it's outdated
Aug 31 13:46:41 <celphi>	you dont want someone to accidently overwrite it
Aug 31 13:46:46 <celphi>	later down road
Aug 31 13:47:01 <englosh>	who besides me? I will take care not to overwrite i
Aug 31 13:47:02 <englosh>	t
Aug 31 13:47:11 <celphi>	well you asked which is better
Aug 31 13:47:24 <celphi>	what you decide to use is up to you now
Aug 31 13:47:40 <englosh>	hmm I wondered if there's maybe a performance difference
Aug 31 13:48:05 <celphi>	marginal
Aug 31 13:48:43 <celphi>	Maxdamantus: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Classes
Aug 31 13:49:51 <Maxdamantus>	celphi: okay, so what's special about it?
Aug 31 13:50:14 <celphi>	it has meaning.
Aug 31 13:50:34 <Maxdamantus>	celphi: yes, it has the same meaning as in any other function.
Aug 31 13:50:43 <Maxdamantus>	!this @ celphi
Aug 31 13:50:43 <ecmabot>	celphi: A function call of the form `a.b()` calls the function with `this` being the value of `a`; in a call of the form `f()`, `this` will be `undefined`, which is turned into the global object if the function wasn't defined in strict mode. Note that arrow functions and functions produced by `Function.prototype.bind` ignore the passed `this` value. https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/this
Aug 31 13:51:01 <Maxdamantus>	It's just a value somehow specified by the caller.
Aug 31 13:51:15 <celphi>	not true
Aug 31 13:51:24 <Maxdamantus>	Counterexample?
Aug 31 13:51:29 <celphi>	arrow functions
Aug 31 13:51:58 <celphi>	n> function(){ console.log(this); }
Aug 31 13:51:59 <jellobot>	(fail) SyntaxError: Function statements require a function name
Aug 31 13:52:18 <celphi>	well doesnt work on here but in brower it will show global object
Aug 31 13:52:22 <celphi>	*browser
Aug 31 13:52:29 <celphi>	arrow function does not
Aug 31 13:52:36 <Maxdamantus>	arrow functions have already specified their `this` value.
Aug 31 13:52:42 <englosh>	celphi: the document.onkeydown method is much faster: http://jsben.ch/BdceI
Aug 31 13:53:15 <englosh>	889 ms and 29515 ms
Aug 31 13:54:10 <Maxdamantus>	englosh: anyway, the issue is about classes, not arrow functions. My !this factoid already provides an explanation of arrow functions.
Aug 31 13:54:41 <celphi>	@englosh the benchmark you sent me freezes my computer
Aug 31 13:54:52 <englosh>	just wait a bit
Aug 31 13:54:56 <englosh>	took like 10 seconds for me
Aug 31 13:55:35 <celphi>	that could be lag
Aug 31 13:55:46 <celphi>	the difference isnt that big
Aug 31 13:57:14 <celphi>	@englosh https://stackoverflow.com/questions/6348494/addeventlistener-vs-onclick
Aug 31 13:57:41 <englosh>	ah ive been looking for a question like this
Aug 31 13:58:13 <celphi>	Plus-- it seems your former solution doesnt handle errors propery
Aug 31 13:58:16 <celphi>	*properly
Aug 31 13:58:34 <englosh>	what errors?
Aug 31 13:58:49 <englosh>	neither really handle anything
Aug 31 13:59:12 <paule32>	hello
Aug 31 13:59:19 <celphi>	Just read all the arguments on page
Aug 31 13:59:26 <celphi>	You'll see what im talking about
Aug 31 13:59:33 <celphi>	Hi Paule32
Aug 31 13:59:45 <paule32>	i have a function in foo.js, how can i import functions in main module file?
Aug 31 13:59:55 <paule32>	celphi: you are pascal programmer?
Aug 31 14:00:09 <celphi>	No. This is a JavaScript room
Aug 31 14:00:35 <paule32>	i think on your nik, i was pascaler for years ago
Aug 31 14:00:42 <paule32>	but not the topic, ok
Aug 31 14:00:57 <celphi>	oh ok
Aug 31 14:01:46 <paule32>	have you idea of my post?
Aug 31 14:02:17 <celphi>	What post?
Aug 31 14:02:24 <paule32>	i have a function in foo.js, how can i import functions in main module file?
Aug 31 14:02:57 <celphi>	name of function?
Aug 31 14:03:02 <paule32>	i did: export function foo() { } in bar.js
Aug 31 14:03:26 <paule32>	in main.js: import { foo } from "./bar.js"
Aug 31 14:03:39 <celphi>	i use a different method
Aug 31 14:04:00 <celphi>	i use module.exports = { nameoffunction };
Aug 31 14:04:02 <celphi>	and
Aug 31 14:04:02 <paule32>	js debugger give me error, that foo is not found
Aug 31 14:04:36 <celphi>	say you have 2 files
Aug 31 14:04:47 <celphi>	main and foo
Aug 31 14:04:57 <celphi>	and function bar you want to import
Aug 31 14:05:25 <celphi>	inside foo i would do: `module.exports = { bar };
Aug 31 14:05:33 <paule32>	main.js is the "main" javascript module file, bar.js shall the "import" file, and "foo" the function in bar,js
Aug 31 14:05:49 <celphi>	inside main i would do `const { bar } = require("./bar");`
Aug 31 14:06:08 <englosh>	well I will use document.onsomething = ... for now until I need more than one function to be called on that event
Aug 31 14:06:14 <paule32>	ok, thx, i will try out
Aug 31 14:06:18 <englosh>	and I don't really need the error handling either
Aug 31 14:06:37 <celphi>	it's outdated :P
Aug 31 14:07:06 <celphi>	plus some websites block it
Aug 31 14:07:09 <celphi>	@englosh
Aug 31 14:07:30 <englosh>	I will use that on my own website
Aug 31 14:07:55 <englosh>	so it doesnt really affect me. And what do you mean with outdated? It's deprecated and might be removed in some browsers, somewhere?
Aug 31 14:08:16 <paule32>	functions that i want to export, don't need parameter arguments in module.exports = { .. }; ?
Aug 31 14:09:12 <celphi>	I'm not aware of it being deprecated,. and likely never will be because so much legacy code use it,. but some sites now block it to make XSS harder. ie. Content-Security-Policy
Aug 31 14:09:30 <celphi>	no parameters paule32
Aug 31 14:09:37 <celphi>	just function name
Aug 31 14:09:45 <paule32>	ok thx
Aug 31 14:09:53 <paule32>	and import, too ?
Aug 31 14:09:56 <englosh>	you mean they block it like you can't use it in the javascript console of that website?
Aug 31 14:09:57 <celphi>	right
Aug 31 14:10:15 <celphi>	right@paule32
Aug 31 14:10:19 <paule32>	thx
Aug 31 14:10:54 <paule32>	is there a dependcies system, so i can look, if module1 was running before module2
Aug 31 14:12:09 <celphi>	@paule32 i typically just define all my stuff at top
Aug 31 14:13:21 <celphi>	https://usercontent.irccloud-cdn.com/file/jn7tHQMy/image.png
Aug 31 14:14:58 <celphi>	this allow all these functions to be used within this file
Aug 31 14:15:31 <celphi>	you're going to need to use a webpack
Aug 31 14:15:47 <celphi>	i use watchify/ browserify
Aug 31 14:23:39 <paule32>	celphi: http://dpaste.com/2CP2GRA
Aug 31 14:26:35 <paulcarroty>	crap, new version of mongodb driver has tons of undocumented changes
Aug 31 14:27:20 <salcedo>	damn people still use mongodb?
Aug 31 14:27:48 <paulcarroty>	welcome to 2019, bro
Aug 31 14:28:26 <salcedo>	heh so i had this poor guy who needed mongodb fixed
Aug 31 14:28:43 <salcedo>	had all missing collections.
Aug 31 14:29:15 <salcedo>	and they did some code change at the same time that they thought caused it. version mismatch or something.
Aug 31 14:30:00 <salcedo>	it turned out to be some prior dev they had hired that didn't work out went in there and deleted all the collections
Aug 31 14:30:05 <salcedo>	and they had 0 backups
Aug 31 14:30:47 <celphi>	mysql ftw
Aug 31 14:31:41 <salcedo>	i'm reading about couchdb right now seems legit
Aug 31 14:32:03 <celphi>	it is
Aug 31 14:32:31 <celphi>	redis is good to
Aug 31 14:32:34 <celphi>	*too
Aug 31 14:33:15 <paulcarroty>	couch is proprietary now?
Aug 31 14:35:58 <paulcarroty>	"and they had 0 backups" well, this is the mentally problem, not technical
Aug 31 14:40:33 <paule32>	now, i have:
Aug 31 14:40:35 <paule32>	import * as utils from "./utils.js";
Aug 31 14:40:49 <paule32>	var size = utils.getTextWidth("File", "Arial 12pt");
Aug 31 14:41:11 <paule32>	error: utils is not defined
Aug 31 14:43:10 <celphi>	i dont use import paule32 so i cant really help with that
Aug 31 14:43:14 <celphi>	i use require
Aug 31 14:43:24 <paule32>	is that jquery?
Aug 31 14:43:44 <celphi>	no.
Aug 31 14:43:49 <paule32>	ok
Aug 31 14:44:18 <celphi>	jquery is for browser only
Aug 31 14:45:12 <celphi>	you'll need browserify.
Aug 31 14:45:49 <gehn>	you can use cheerio as a jquery like replacement in node.js
Aug 31 14:47:55 <celphi>	interesting
Aug 31 14:48:27 <celphi>	hows it going gehn
Aug 31 14:49:16 <gehn>	sup, good, same ol same ol mostly
Aug 31 14:49:20 <gehn>	eat sleep code
Aug 31 14:49:25 <gehn>	minus the eating and sleeping part usually
Aug 31 14:49:45 <satoriprints>	hiya
Aug 31 14:51:18 <satoriprints>	damn there
Aug 31 14:54:52 <salcedo>	paulcarroty: couchdb is apache project i think the proprietary thing is couchbase ?
Aug 31 14:56:07 <celphi>	lol gehn
Aug 31 14:57:57 <paule32>	does someone use import ?
Aug 31 14:59:21 <paule32>	in file1:  export class TUtils { }
Aug 31 14:59:28 <paule32>	in file2:  var utils = new TUtils();
Aug 31 14:59:50 <paule32>	in file main.js:
Aug 31 15:00:14 <paule32>	import { TUtils } from "./utils.js";
Aug 31 15:00:14 <paule32>	import { Tfoo  } from "./file2.js";
Aug 31 15:00:40 <paule32>	ehm, utils.js shall file1
Aug 31 15:01:19 <paule32>	then in main.js:  var size = new TUtils();
Aug 31 15:01:45 <paule32>	debugger:  TUtils is not defined
Aug 31 15:05:07 <paulcarroty>	salcedo, right, entangled their names
Aug 31 15:19:20 <haptiK>	morning. i <3 javascript
Aug 31 15:23:11 <gehn>	javascript <3 you
Aug 31 15:35:09 <haptiK>	gehn: YAY!
Aug 31 15:35:12 <haptiK>	\o/
Aug 31 16:01:15 <weijunli>	im just trying something weird but theres any way native way to run calc.exe purely with js?
Aug 31 16:04:09 <Alexendoo>	weijunli: sure, https://copy.sh/v86/?profile=windows95
Aug 31 16:07:16 <Alexendoo>	weijunli: Though I'm guessing that's not what you actually meant, do you mean like launch it from a webpage, from a node app?
Aug 31 16:09:14 <biberao>	hi i wonder why this works on the webconsole of firefox even though it says undefined "const el = document.querySelector("#cool");" but on a separate .js file the web console says its null.
Aug 31 16:12:55 <celphi>	biberao: can you screenshot it?
Aug 31 16:13:08 <celphi>	Not really sure what you're saying.
Aug 31 16:14:14 <biberao>	like i added that constant to access the id of a div
Aug 31 16:14:50 <celphi>	can you screenshot it?
Aug 31 16:14:58 <biberao>	in the console of my browser i issue el.style.color="red"; it changes the div color to red but on the separate js file it doesnt
Aug 31 16:15:05 <biberao>	weird
Aug 31 16:15:09 <biberao>	let me do one more test
Aug 31 16:15:40 <biberao>	hum still doesnt work
Aug 31 16:15:43 <biberao>	let me paste the js file
Aug 31 16:16:42 <biberao>	celphi: http://dpaste.com/23MZJJ9
Aug 31 16:17:38 <celphi>	I need a screenshot of where you see undefined and null.
Aug 31 16:17:52 <celphi>	The informatin you're providing is not enough to help you.
Aug 31 16:18:43 <biberao>	ok
Aug 31 16:19:24 <biberao>	ill do it when i get back then thank you very much
Aug 31 16:29:59 <dsol>	Any way I can get the actual resolved url from xhr? For example If I request /portal and I get redirected to /portal/ can I get the redirected url?
Aug 31 16:34:38 <amosbird>	hello
Aug 31 16:35:09 <amosbird>	how can I build a all-in-one binary of https://github.com/smrook/leetcode-cli ?
Aug 31 16:39:10 <Alexendoo>	dsol: https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/responseURL
Aug 31 16:39:32 <Alexendoo>	dsol: Well, not sure how you'd do it for IE though
Aug 31 16:43:08 <Solak>	hmm, would it be better using prototypes with function-parameter-lists over RMP with less parameters passed to a function?
Aug 31 16:43:51 <four33>	good morning
Aug 31 16:45:44 <Solak>	I mean, in general.
Aug 31 16:47:01 <Solak>	in this case the functions are relatively small, so rmp isn't extremely resource-consuming.
Aug 31 16:49:16 <dsol>	Alexendoo: thanks!
Aug 31 16:53:55 <laravel7>	is there programming irc in german?
Aug 31 16:58:52 <crst>	Hi guys! Ist this the right way to do named parameter destructuring with inherited classes? https://jsfiddle.net/v7dperjx/
Aug 31 17:00:25 <paule32>	hello
Aug 31 17:00:34 <paule32>	some news, since i was away?
Aug 31 17:01:13 <hypercore>	if i want to allow a user to write a document, what type of document should i use and how should i store it?
Aug 31 17:01:25 <hypercore>	and i want it to be more flexible than just a text document
Aug 31 17:01:42 <paule32>	window.write();
Aug 31 17:01:51 <hypercore>	so maybe an html document that users can edit using w WYSIWYG editor
Aug 31 17:02:08 <paule32>	window.write("<html>...");
Aug 31 17:02:23 <hypercore>	paule32: and how would i store it in my db?
Aug 31 17:02:26 <paule32>	or: <canvas> for graph
Aug 31 17:02:43 <paule32>	getElementById .height
Aug 31 17:03:04 <paule32>	for db, you could use browser store
Aug 31 17:03:25 <paule32>	normal, browser don't allow write to disc
Aug 31 17:03:49 <paule32>	so, you could "post" it with a <form> to a server db
Aug 31 17:04:31 <paule32>	all verify on client side, goes away, so i prefer server verify for datas
Aug 31 17:05:39 <paule32>	<a href="/store.php?id='hyper'&data1=1234">testlink</a>
Aug 31 17:07:21 <paule32>	or, you support cookies
Aug 31 17:07:34 <paule32>	as temporary data
Aug 31 17:07:40 <paule32>	devil
Aug 31 17:08:25 <paule32>	or, you store data as email, and send it to...
Aug 31 17:08:55 <paule32>	or, you use electron, but this an other topic
Aug 31 17:09:19 <crst>	It isn't... So how do you address the value of key 'z'? https://jsfiddle.net/v7dperjx/1/ (named parameter destructuring with inherited classes)
Aug 31 17:09:52 <paule32>	me?
Aug 31 17:10:46 <crst>	paule32: you? Ah, I was responding to my question above if this is the right approach, which it isn't
Aug 31 17:11:50 <paule32>	i have figure out, that google chrome does other things as firefox as opera ...
Aug 31 17:12:20 <paule32>	and electron is ... you can access memory, write data ... no secure
Aug 31 17:13:36 <paule32>	i don't like google, if you ask me, but it has the greates search engine, wich work nearly good
Aug 31 17:15:00 <paule32>	and binding to some big firms can be devlish
Aug 31 17:15:16 <weijunli>	The service worker navigation preload request was cancelled before 'preloadResponse' settled. If you intend to use 'preloadResponse', use waitUntil() or respondWith() to wait for the promise to settle.
Aug 31 17:15:24 <weijunli>	can this error be related to <body onload /> ?
Aug 31 17:15:51 <paule32>	you want a preloader?
Aug 31 17:16:02 <paule32>	use an animated picture - gif?
Aug 31 17:19:55 <weijunli>	paule32, i want to init some stuff with js as soon as the page loads
Aug 31 17:20:13 <weijunli>	thats why im using onload=
Aug 31 17:22:04 <paule32>	you can include a js-file and declare function pageOnLoad, at <body onload="pageOnLoad">  this must be load the js-file in which the function pageOnLoad exists
Aug 31 17:22:16 <paule32>	you include this in the <head> section
Aug 31 17:22:41 <paule32>	<script type="text/javascript" src="./test2.js"></script>
Aug 31 17:23:14 <paule32>	or you bundle all in one file by using <script> /* your stuff */ </script>
Aug 31 17:56:40 <stenno>	rip aws
Aug 31 17:56:58 <stenno>	that will cause some overtime for quite some people on a satuerday...
Aug 31 18:31:53 <sinclair>	hypercore, possibly the most straight forward, easy to grok (for programmers at least) format for text, us markdown
Aug 31 18:32:05 <sinclair>	*is markdown
Aug 31 18:32:34 <sinclair>	i mean, i don't know why people need anything else really. Markdown is pretty tops.
Aug 31 18:38:09 <celphi>	stenno what do you mean by that
Aug 31 19:05:09 <graingert>	!inline @ paule32
Aug 31 19:05:09 <ecmabot>	paule32: Inline event handlers are essentially `eval` inside HTML markup - they're bad practice and result in poorly factored, hard-to-manage code. Seriously consider attaching your events with JavaScript, instead, eg: https://developer.mozilla.org/en/DOM/element.addEventListener
Aug 31 19:05:53 <graingert>	weijunli: don't use the onload html attribute
Aug 31 19:06:03 <graingert>	weijunli: or any html attr starting with "on"
Aug 31 19:34:44 <celphi>	graingert: i think your inline question was meant for englosh
Aug 31 19:35:04 <graingert>	??
Aug 31 19:35:25 <celphi>	well your inline event handlers statement
Aug 31 19:35:39 <celphi>	it was englosh who asked about it
Aug 31 19:37:09 <graingert>	16:15:25 <weijunli> can this error be related to <body onload /> ?
Aug 31 19:37:09 <graingert>	16:22:05 <paule32> you can include a js-file and declare function pageOnLoad, at <body onload="pageOnLoad">  this must be load the js-file in which the function pageOnLoad exists
Aug 31 19:37:14 <graingert>	celphi: ^
Aug 31 19:37:53 <celphi>	oh right-- i didnt see that one. Well your suggestion answers two questions haha
Aug 31 19:38:04 <graingert>	that's why it's in the bot loool
Aug 31 19:38:24 <celphi>	haha
Aug 31 19:50:57 <salad>	idk if this has been posted today but lol https://i.redd.it/66l7t5k7oqj31.jpg
Aug 31 19:59:32 <innovati>	what's the best way for Deno to read JSON from a file?
Aug 31 20:01:02 <graingert>	Deno?
Aug 31 20:01:18 <innovati>	https://deno.land
Aug 31 20:02:28 <graingert>	innovati: https://github.com/denoland/deno/blob/master/js/io.ts
Aug 31 20:02:59 <innovati>	you're saying read it as any regular file from a file system and parse as JSON, rather than some kind of importing?
Aug 31 20:03:03 <graingert>	https://deno.land/typedoc/classes/deno.file.html
Aug 31 20:06:07 <prussian>	Oh, deno is still a thing?
Aug 31 20:11:09 <innovati>	it feels SO GOOD
Aug 31 20:12:01 <four33>	why use deno over node?
Aug 31 20:12:04 <paule32>	hello, where the mistake:  http://dpaste.com/15ZBYP1
Aug 31 20:12:14 <innovati>	deno supports ES modules :3
Aug 31 20:12:22 <innovati>	the same code you write in Deno runs in browsers
Aug 31 20:12:35 <innovati>	(well, not the IO stuff, but the same modules)
Aug 31 20:13:11 <four33>	doesn't that generally apply to node, though?
Aug 31 20:13:31 <four33>	it's all JS in the end
Aug 31 20:14:10 <four33>	ah, reading the manual now
Aug 31 20:14:15 <four33>	import from URL seems really aewsome
Aug 31 20:14:16 <four33>	awesome*
Aug 31 20:14:56 <four33>	but it has a dependency on node :P
Aug 31 20:15:00 <innovati>	yeah, before I had the question of "should I release as CJS? a classic browser script? an es module?" and supporting 3 formats sometimes, now I realize it can be Node/classic script and Deno/ES module
Aug 31 20:15:08 <innovati>	how so?
Aug 31 20:15:25 <four33>	it says it right there in the "Prerequisites"
Aug 31 20:15:33 <four33>	to build, Rust, Node, Python 2
Aug 31 20:15:41 <innovati>	to build or to run
Aug 31 20:15:45 <innovati>	those are very different
Aug 31 20:16:00 <four33>	still has a dependency on node...
Aug 31 20:16:01 <innovati>	it's made by the Node creator BTW
Aug 31 20:16:17 <innovati>	just with a decade of what he learned from Node applied toward a clean slate project
Aug 31 20:18:15 <four33>	interesting
Aug 31 20:18:18 <four33>	I may have to look into this
Aug 31 20:18:50 <four33>	interesting that it's written with Rust, too... Rust has recently infiltrated my workplace, lots of people intersted in it
Aug 31 20:19:43 <salcedo>	not sure what all the hype about rust is yet
Aug 31 20:21:30 <innovati>	It's modern, and supposed to be safe. I'm not an expert but it's supposed to be good for systems level development
Aug 31 20:21:53 <innovati>	Rust also compiled to WASM well, so I imagine many people wanting to use WASM in browser the future may pick up Rust to help get the job done!
Aug 31 20:22:06 <innovati>	that's probably why I'll check out Rust eventually :3
Aug 31 20:22:11 <devsnek>	wasm is pretty neat
Aug 31 20:23:15 <innovati>	This talk really lays out an interesting possible roadmap for JS and WASM https://www.destroyallsoftware.com/talks/the-birth-and-death-of-javascript
Aug 31 20:23:35 <innovati>	I can't wait until we get to living in the second half of this talk
Aug 31 20:24:07 <innovati>	right now we do OS -> Native APIs -> Browser -> DOM, and we build a lot of web apps for native OS
Aug 31 20:25:00 <innovati>	what happens when we flip to OS -> DOM -> Native APIs via WASM. Small performance hit for all native APIs but browser-based stuff runs faster
Aug 31 20:25:00 <innovati>	and at some point it feels like we might make that flip
Aug 31 20:34:42 <four33>	salcedo: I think the Rust hype is really around the ease of use, and the safety it provides
Aug 31 20:36:29 <four33>	the ownership model takes a bit of time to wrap your head around, but it's just really easy to write performant low-level code without worrying too much about the pitfalls that come with your Cs and C++s
Aug 31 20:49:35 <crst>	innovati: How are you doing? Do you have an idea how to pass b to the object? https://jsfiddle.net/v7dperjx/2/
Aug 31 20:49:58 <innovati>	I don't do much with classes :/
Aug 31 20:50:24 <crst>	No prob!
Aug 31 20:51:56 <GreenJello>	celphi, super({a})
Aug 31 20:51:59 <GreenJello>	crst*
Aug 31 20:52:38 <celphi>	Yo
Aug 31 20:53:07 <GreenJello>	hi :-)
Aug 31 20:53:20 <crst>	GreenJello: Are you sure? https://jsfiddle.net/v7dperjx/3/
Aug 31 20:53:37 <celphi>	:D
Aug 31 20:53:46 <GreenJello>	crst, well, you're also overwriting the property on the line after super()
Aug 31 20:54:28 <GreenJello>	crst, I'm not sure what your code is trying to od
Aug 31 20:54:30 <GreenJello>	do*
Aug 31 20:55:04 <GreenJello>	super({}) would do the same thing in this case
Aug 31 20:56:45 <crst>	GreenJello: Yeah, that's also an aspect that weirds me out, I'm not sure how to handle the super(). I'm trying to get named parameters working with class inheritance and ran into absolutely massive issues.
Aug 31 20:58:15 <crst>	GreenJello: Do you mean this https://jsfiddle.net/v7dperjx/4/ ?
Aug 31 20:58:49 <GreenJello>	crst, yeah, that'll set this.a to 0 in App, and then set it to 88 in Thing
Aug 31 20:59:22 <crst>	I've spent the last 6 hours on the issue...
Aug 31 20:59:36 <GreenJello>	crst, I don't know what the issue is
Aug 31 21:00:02 <crst>	line 19
Aug 31 21:01:06 <GreenJello>	crst, oh, https://jsfiddle.net/brigand/75h8warp/ ?
Aug 31 21:02:13 <crst>	GreenJello: Thanks! I seem to get it now. Let me fix my app and see if it works out. brb
Aug 31 21:05:44 <crst>	GreenJello: Ah wait, does this mean I need to re-add everything from the parent class also into the super? Can I avoid doing this?
Aug 31 21:06:09 <GreenJello>	crst, it depends on what the actual code looks like
Aug 31 21:07:05 <crst>	GreenJello: Why? isn't it just about the args?
Aug 31 21:09:04 <GreenJello>	crst, there are different ways to write it
Aug 31 21:09:53 <GreenJello>	crst, for example, you might name specific properties that Thing wants to handle, and use `...rest` to get the remaining properties and pass those to super
Aug 31 21:11:08 <GreenJello>	that only really works if you want to do the defaults in App, rather than Thing setting the defaults
Aug 31 21:11:57 <crst>	GreenJello: Sure, that's an option. But normally the parent gets the args without doing anything and you only add the ones you add or overwrite in the child, isn't it?
Aug 31 21:11:58 <GreenJello>	for some arguments you might need special code, e.g. to set a default value when something is null, rather than just when it's undefined
Aug 31 21:12:17 <GreenJello>	crst, it depends
Aug 31 21:19:26 <crst>	GreenJello: We're talking only when using named params?
Aug 31 21:20:51 <GreenJello>	crst, this would mostly apply to multiple positional arguments as well
Aug 31 21:21:10 <GreenJello>	you just introduce order there
Aug 31 21:23:54 <crst>	GreenJello: Ok I see, I don't have any such cases really and everything works fine with positional arguments where I only need to add the args needed in super()
Aug 31 21:24:51 <crst>	With named args I haven't found a way to not redeclare everything from the parent in super
Aug 31 21:25:26 <GreenJello>	crst, well, you could do constructor(params) { super(params); const { c, d } = params; this.c = c;
Aug 31 21:25:52 <GreenJello>	but then you can't set a default for 'a' in Thing
Aug 31 21:26:31 <GreenJello>	there isn't really a perfect solution that works for all situations, but repeating them seems fine if you need to do so
Aug 31 21:29:22 <crst>	GreenJello: Then you have to manually take care of the same behavior in multiple places, all flexibility lost :( Arrgg... So close
Aug 31 21:29:41 <qswz>	Object.assign(this, {a, b})
Aug 31 21:31:51 <crst>	qswz: I'v tried that today as well without success, can you implement it in the fiddle? https://jsfiddle.net/v7dperjx/4/
Aug 31 21:37:16 <qswz>	n> class A{constructor(o){Object.assign(this,o)}} let x=new A({a:1, b:2}); x
Aug 31 21:37:18 <jellobot>	(okay) A { a: 1, b: 2 }
Aug 31 21:37:51 <stenno>	that doesn't seem like agood idea
Aug 31 21:38:04 <qswz>	what could go wrong
Aug 31 21:41:22 <jadax>	do any of you know/use https://github.com/keplergl/kepler.gl/blob/master/docs/api-reference/overview.md ? I'm curious if it's ever being used for real time maps
Aug 31 21:41:23 <qswz>	n> class A{constructor(o){Object.assign(this,o)}} class B extends A{constructor({foo=5, bar=6, ...o}){super(o); Object.assign(this,{foo,bar})}} let b=new B({x:1, y:2, foo:2}); b @ crst
Aug 31 21:41:25 <jellobot>	crst, B { x: 1, y: 2, foo: 2, bar: 6 }
Aug 31 21:41:30 <jadax>	or only offline maps
Aug 31 21:41:37 <jadax>	as rendering might take some time
Aug 31 21:49:51 <madprops>	i can use a .catch in a promise result without using .then?
Aug 31 21:50:05 <crst>	qswz: So then the parent isn't defined but takes just about anything upon instantiation?
Sep 02 08:51:42 *	Disconnected ()
**** ENDING LOGGING AT Mon Sep  2 08:51:42 2019

**** BEGIN LOGGING AT Mon Sep  2 08:52:09 2019

Sep 02 08:52:09 *	Now talking on ##javascript
Sep 02 08:52:09 *	Topic for ##javascript is: JavaScript is *not* Java. | Just ask your question. | Say "!mdn abc" for docs on "abc". | Don't paste code in the channel. | Can't talk? Get registered on freenode ( https://git.io/vaTS2 )
Sep 02 08:52:09 *	Topic for ##javascript set by niggler!~niggler@unaffiliated/niggler (Tue Jan 15 07:16:23 2019)
Sep 02 08:58:58 <grr12314>	mutationobserver seems weird for a resize event... do browsers change some attributes on the textarea when you resize it?
Sep 02 08:59:56 <grr12314>	anyway, checking its size on mousemove/mouseup and window's resize events seem more appropriate to me
Sep 02 09:01:52 <grr12314>	wow i didnt even know about this ResizeObserver thing
Sep 02 09:05:49 *	Disconnected ()
**** ENDING LOGGING AT Mon Sep  2 09:05:49 2019

**** BEGIN LOGGING AT Mon Sep  2 09:06:12 2019

Sep 02 09:06:12 *	Now talking on ##javascript
Sep 02 09:06:12 *	Topic for ##javascript is: JavaScript is *not* Java. | Just ask your question. | Say "!mdn abc" for docs on "abc". | Don't paste code in the channel. | Can't talk? Get registered on freenode ( https://git.io/vaTS2 )
Sep 02 09:06:12 *	Topic for ##javascript set by niggler!~niggler@unaffiliated/niggler (Tue Jan 15 07:16:23 2019)
Sep 02 09:09:23 <grr12314>	anyway, if they are positioned next to each other, you can probably give them same height with some css like flex or height: 100% on the textarea neighbors
Sep 02 09:16:39 <grr12314>	you can also just pick some of the resize observer polyfills out there, a google search turns up 3 options here
Sep 02 09:37:54 *	Disconnected ()
**** ENDING LOGGING AT Mon Sep  2 09:37:54 2019

**** BEGIN LOGGING AT Mon Sep  2 09:38:17 2019

Sep 02 09:38:17 *	Now talking on ##javascript
Sep 02 09:38:17 *	Topic for ##javascript is: JavaScript is *not* Java. | Just ask your question. | Say "!mdn abc" for docs on "abc". | Don't paste code in the channel. | Can't talk? Get registered on freenode ( https://git.io/vaTS2 )
Sep 02 09:38:17 *	Topic for ##javascript set by niggler!~niggler@unaffiliated/niggler (Tue Jan 15 07:16:23 2019)
Sep 02 09:51:51 <thykka>	let's take feross' terrible plugin out from the awesome list! https://github.com/sorrycc/awesome-javascript/pull/629
Sep 02 09:52:38 <theskillwithin>	https://youtu.be/8PAtFsJY5q0
Sep 02 09:57:28 <stennowork>	lol nice
Sep 02 09:57:53 *	stennowork gives a thumbs up
Sep 02 10:00:16 <kristian_>	stennowork: how can I send messages like that? (the "thumbs up" one)
Sep 02 10:00:49 <dodobrain>	kristian_, you start your message with /me ...   so you type in your (client without quotes) "/me hides"
Sep 02 10:02:03 *	kristian_ yaay
Sep 02 10:02:10 <kristian_>	dodobrain: thx :))
Sep 02 10:02:13 <dodobrain>	took you a while to type that!
Sep 02 10:02:23 *	kristian_ hands dodobrain a beer
Sep 02 10:02:30 *	dodobrain prefers tea
Sep 02 10:02:37 *	kristian_ has no tea
Sep 02 10:02:41 <kristian_>	XD
Sep 02 10:02:46 <dodobrain>	:)
Sep 02 10:03:29 <theskillwithin>	i am the machine
Sep 02 10:07:28 <stennowork>	lol
Sep 02 10:17:57 <stennowork>	oh they removed the 'funding' thing from standardjs already
Sep 02 10:24:30 <ashnur>	stennowork: ads are banned from the console now
Sep 02 10:24:34 <ashnur>	finaly
Sep 02 10:24:40 <stennowork>	eh
Sep 02 10:24:55 <stennowork>	basically it was good for the community because now people hate standardjs even more
Sep 02 10:25:07 <ashnur>	hmm?
Sep 02 10:25:22 <ashnur>	you let your own judgement cloud your perception ;)
Sep 02 10:25:26 <stennowork>	unfortunately you can't just switch linters mid-project without it making a mess
Sep 02 10:35:21 <livcd>	what is standardjs ?
Sep 02 10:39:11 <stennowork>	livcd, nothing ...
Sep 02 10:39:29 <stennowork>	an attempt at a linter standard
Sep 02 10:46:31 <stennowork>	livcd, and its very... opinionated and controversal
Sep 02 10:48:17 <ashnur>	not very, mostly it is ignored
Sep 02 10:52:14 <qswz>	When you're supposed to add CSP headers, but you don't care: res.setHeader('Content-Security-Policy', "default-src 'self' 'unsafe-inline' 'unsafe-eval' https:")
Sep 02 10:52:18 <qswz>	hah
Sep 02 10:52:36 <stennowork>	:/
Sep 02 10:53:11 <qswz>	it stupid, but it works
Sep 02 11:07:05 <qswz>	IISBIWTIAS (if it's stupid but it works, then it ain't stupid)
Sep 02 11:07:12 <qswz>	that acronym is ugly
Sep 02 11:08:14 <theskillwithin>	if it works, then by definiion isn't stupid?
Sep 02 11:09:00 <theskillwithin>	https://youtu.be/jv9sDn_2XkI
Sep 02 11:20:14 <thomas_25>	anyone aware of a change in Chrome or Mac OS (Mojave) that prevents threads to utilize all logical cores of the CPU?
Sep 02 11:20:46 <thomas_25>	my software stopped using 4 (logical, 2 physical) cores and now it only uses 2
Sep 02 11:21:12 <thomas_25>	afaik i didn't make any changes to my code that'd lead to this and recently i was forced to upgrade to mojave... so there are a few variables
Sep 02 11:21:35 <thomas_25>	in the chrome dev tools i see that i have initialized 4 threads (as dictated by navigator.hardwareConcurrency)
Sep 02 11:22:19 <graingert>	thomas_25: you're using workers?
Sep 02 11:22:32 <thomas_25>	is there any other way to have threads?
Sep 02 11:22:34 <graingert>	thomas_25: you probably are not allowed to share a core with other origins
Sep 02 11:23:33 <thomas_25>	i didn't get what you mean
Sep 02 11:23:39 <graingert>	thomas_25: which part
Sep 02 11:23:49 <thomas_25>	what do you mean by core
Sep 02 11:23:59 <graingert>	thomas_25: a phsyical cpu core
Sep 02 11:24:21 <thomas_25>	i can see there are 4 threads (as can be observed in dev tools), i communicate with them, i pass them jobs to do and all 4 of them seem to be sending replies but in OS monitoring tools I see that only two logical cores are used
Sep 02 11:24:34 <graingert>	yep do you have other tabs open?
Sep 02 11:24:42 <thomas_25>	sure MANY
Sep 02 11:24:45 <thomas_25>	:)
Sep 02 11:25:08 <thomas_25>	BUT... the app that is in question runs in a seperate browser process (canary)
Sep 02 11:25:16 <thomas_25>	so THAT browser doesn't have any other tabs
Sep 02 11:25:24 <graingert>	try --disable-web-security
Sep 02 11:25:34 <thomas_25>	the question is.. are there any recent chagnes
Sep 02 11:25:48 <thomas_25>	because this code was able to use ALL the cores in any computer i've tested
Sep 02 11:25:50 <graingert>	yes loads
Sep 02 11:25:57 <thomas_25>	shit
Sep 02 11:26:01 <graingert>	they re-enabled SAB I believe
Sep 02 11:26:13 <thomas_25>	chrome reenabled SAB for many months
Sep 02 11:26:15 <graingert>	and part of that was hardening core locality
Sep 02 11:26:16 <thomas_25>	i'm using it
Sep 02 11:26:49 <graingert>	also they're limiting cpu usage to stop miners using your browser
Sep 02 11:26:57 <theskillwithin>	i wont be ur beast of burdon
Sep 02 11:27:07 <ashnur>	bourbon?
Sep 02 11:27:16 <graingert>	burdeen?
Sep 02 11:28:07 <thomas_25>	uses 2 cores even with disable-web-security
Sep 02 11:28:20 <graingert>	hue
Sep 02 11:28:52 <graingert>	thomas_25: maybe you'r no longer allowed to share a core with the host browser process?
Sep 02 11:28:56 <graingert>	you're*
Sep 02 11:29:13 <theskillwithin>	https://youtu.be/RlV-ZFyVH3c
Sep 02 11:29:53 <grr12314>	what if you only got 1 core?
Sep 02 11:29:56 <thomas_25>	maybe it's just me did something stupid
Sep 02 11:30:06 <graingert>	thomas_25: do you have a Pi?
Sep 02 11:30:18 <thomas_25>	 i do but at home
Sep 02 11:30:23 <graingert>	thomas_25: it doesn't do speculative execution and so you should be able to safely use all the cores
Sep 02 11:30:28 <graingert>	thomas_25: is it a multicore pi?
Sep 02 11:30:41 <thomas_25>	multi logical core yes
Sep 02 11:30:51 <graingert>	grr12314: I've no idea. I assume if you've got a 1 core intel you're totally fucked
Sep 02 11:30:51 <thomas_25>	but i don't remember the exact specs but i remember seeing multiple cores in htop
Sep 02 11:31:02 <graingert>	thomas_25: which version is it lol
Sep 02 11:31:10 <grr12314>	its a stupid restriction. i dont believe it is real
Sep 02 11:31:24 <grr12314>	sharing a core has no impact on security
Sep 02 11:33:02 <graingert>	grr12314: you know about spectre?
Sep 02 11:33:47 <thomas_25>	graingert i don't even remember that, man :)
Sep 02 11:33:55 <graingert>	grr12314: https://www.chromium.org/Home/chromium-security/site-isolation
Sep 02 11:33:56 <thomas_25>	it's in a box stored away for some time
Sep 02 11:34:01 <grr12314>	yes, and its a non-issue with no real exploits and a 1 to a million chance of getting useful data
Sep 02 11:35:07 <graingert>	https://security.googleblog.com/2018/07/mitigating-spectre-with-site-isolation.html
Sep 02 11:35:17 <graingert>	grr12314: maybe it doesn't do anything with core locality then
Sep 02 11:35:19 <grr12314>	also it doesnt even affect js as theres no way to make a branch that would read foreign process data in it
Sep 02 11:36:50 <sinclair>	grr12314, well, 1 in 1 million, there's a lot of browsers on the internet
Sep 02 11:37:08 <sinclair>	grr12314, and a lot of page loads, with 1 page load === 1 running of executable code
Sep 02 11:37:31 <sinclair>	grr12314, yeah, moz i believe are still holding back due to speculative execution issues
Sep 02 11:38:50 <sinclair>	grr12314, you would think that speculative execution would be a terrible idea....i mean the name itself implies 'significant potential for risk'
Sep 02 11:38:58 <sinclair>	thanks Intel
Sep 02 11:39:00 <grr12314>	no it doesnt
Sep 02 11:39:18 <grr12314>	because i dont mind stealing data from myself on my own computer
Sep 02 11:40:02 <theskillwithin>	best day in my life https://youtu.be/aGRnokznTF0
Sep 02 11:43:22 <theskillwithin>	https://youtu.be/ZRXGsPBUV5g
Sep 02 11:43:28 <thomas_25>	ok at leats the problem is not me
Sep 02 11:43:29 <thomas_25>	https://jsfiddle.net/MTJ27/81/
Sep 02 11:43:44 <thomas_25>	this which has been reported previously to be using all cores... also uses 2 cores on my system
Sep 02 11:43:46 <thomas_25>	how about you?
Sep 02 11:43:55 <thomas_25>	DISCLAIMER: it will start running immediately
Sep 02 11:44:02 <thomas_25>	(no side effects though)
Sep 02 11:44:08 <sinclair>	grr12314, makes a difference to me
Sep 02 11:44:15 <qswz>	graingert: do you use https: in CSP header, to not bother putting every single allowed origins
Sep 02 11:44:26 <graingert>	no lol
Sep 02 11:44:29 <graingert>	just allow self
Sep 02 11:44:31 <qswz>	but it's paunful
Sep 02 11:44:33 <graingert>	or allow your cdn
Sep 02 11:44:38 <thomas_25>	so... either 1) chrome changed thread affinity 2) mac mojave started reporting CPU usage weirdly
Sep 02 11:44:40 <graingert>	you should only have one allowed origin
Sep 02 11:44:41 <qswz>	you must have thord-party stuff
Sep 02 11:44:45 <qswz>	third*
Sep 02 11:44:45 <graingert>	no
Sep 02 11:44:48 <qswz>	beh
Sep 02 11:44:53 <graingert>	just download the 3rd party stuff in ci
Sep 02 11:45:06 <grr12314>	thomas_25 that uses all 4 logical cores for me
Sep 02 11:45:13 <qswz>	I have stripe, braintree, google, intercom, ..
Sep 02 11:45:14 <grr12314>	oh, mac
Sep 02 11:45:16 <thomas_25>	chrome version?
Sep 02 11:45:22 <graingert>	qswz: lol rip
Sep 02 11:45:22 <grr12314>	sorry then, im on windows
Sep 02 11:45:36 <grr12314>	76
Sep 02 11:45:39 <graingert>	qswz: there's a browser addon to discover them
Sep 02 11:45:49 <qswz>	ok
Sep 02 11:45:52 <graingert>	qswz: but really you should keep it to a minium
Sep 02 11:45:57 <sinclair>	thomas_25, that is using all 8 logical cores this side
Sep 02 11:46:02 <thomas_25>	76.0.3809.132 on mac SEEMS to be using 2 cores
Sep 02 11:46:07 <thomas_25>	sinclair mac?
Sep 02 11:46:17 <sinclair>	nope, windows
Sep 02 11:46:22 <qswz>	the rule of thumb is don't use mac
Sep 02 11:46:30 <theskillwithin>	fuck u
Sep 02 11:46:34 <sinclair>	thomas_25, i doubt there is thread affinity going on
Sep 02 11:46:43 <grr12314>	lol its 4 threads, using 8 cores? :p
Sep 02 11:47:09 <sinclair>	well, if there was thread affinity, you pin execution to a thread, that isn't the case
Sep 02 11:47:15 <theskillwithin>	i don't know a single pro in person that uses windows
Sep 02 11:47:21 <sinclair>	er, pin execution to a core,
Sep 02 11:47:27 <thomas_25>	navigator.hardwareConcurrency tells me 4.
Sep 02 11:47:38 <thomas_25>	i create 4 workers and they all work just fine
Sep 02 11:47:45 <thomas_25>	but 2 logical cores are used of 4
Sep 02 11:47:50 <sinclair>	theskillwithin, you don't know many people then
Sep 02 11:47:53 <thomas_25>	same with firefox and chrome
Sep 02 11:47:54 <qswz>	navigator.hardwareConcurrency
Sep 02 11:47:55 <qswz>	8
Sep 02 11:47:59 <qswz>	linux is a beast
Sep 02 11:48:03 <theskillwithin>	sinclair  well there are about 70 people in my office
Sep 02 11:48:08 <qswz>	upgrade your mac to linux, for free
Sep 02 11:48:11 <sinclair>	theskillwithin, are they all on Mac?
Sep 02 11:48:15 <theskillwithin>	yes
Sep 02 11:48:21 <thomas_25>	this could be.. Mojave reporting CPU usage errorously
Sep 02 11:48:23 *	sinclair gags a bit
Sep 02 11:48:40 <graingert>	qswz: https://github.com/c0nrad/caspr
Sep 02 11:48:40 <theskillwithin>	some on linux machines
Sep 02 11:48:47 <thomas_25>	or Chrome and FF both leaves the affinity settings to OS and Mac Mojave does it like this
Sep 02 11:49:08 <sinclair>	theskillwithin, i don't want to get into an OS war, i like Windows as much as i like Linux, who cares
Sep 02 11:49:20 <theskillwithin>	sinclair on my team we wont evren allow a windows machien,  not going to waste our time setting up deploy shit for u
Sep 02 11:49:21 <sinclair>	its an OS, not a religion
Sep 02 11:49:28 <thomas_25>	looks like Mac is the culprit for sure... but I don't know if it is the reporting of CPU usage that is erronous or the affinity implementation... maybe it is working just fine but the CPU usage report is shit
Sep 02 11:49:38 <qswz>	graingert: ok interesting
Sep 02 11:49:46 <sinclair>	theskillwithin, then your company is full of idiots and zealots
Sep 02 11:49:49 <grr12314>	what if y ou start two chromes?
Sep 02 11:49:50 <qswz>	https://securityheaders.com/ is useful too
Sep 02 11:49:52 <sinclair>	would not work there
Sep 02 11:49:59 <theskillwithin>	sinclair nah this is common in the industry
Sep 02 11:50:05 <sinclair>	no its not
Sep 02 11:50:11 <sinclair>	next conversation please
Sep 02 11:50:17 <theskillwithin>	lol
Sep 02 11:50:25 <graingert>	qswz: but google analytics definitely works if you just download the file and self host it
Sep 02 11:50:40 <graingert>	qswz: most of them will btw
Sep 02 11:50:46 <qswz>	it's unecessery struggle
Sep 02 11:50:47 <theskillwithin>	sinclair we could even ask major peeps in js chan, well when its not 4am..
Sep 02 11:50:53 <sinclair>	theskillwithin, https://gs.statcounter.com/os-market-share
Sep 02 11:51:00 <qswz>	I trust google
Sep 02 11:51:19 <sinclair>	stare it that, then stop talking to me about your retarded Windows hatred...its dumb, i don't care
Sep 02 11:51:20 <theskillwithin>	sinclair lol but what about devs
Sep 02 11:51:24 <qswz>	but yea, got it, wil allow origins
Sep 02 11:51:31 <thomas_25>	grr12314 good question.. still seems that 2 logical cores are used instead of 4. (one instance is running in Chrome thye other one is in Canary(
Sep 02 11:51:47 <thomas_25>	grr12314 the remaining 2 logical cores seem to have minimal activity
Sep 02 11:53:32 <grr12314>	thomas_25 maybe use nwjs or electron instead of pure chrome, and then if it still bugs switch to node worker api instead of the browser one
Sep 02 11:54:00 <thomas_25>	https://gyazo.com/e481ccf173d434508884ef9138feff91
Sep 02 11:55:01 <grr12314>	thats with the no-op loop right, not just your real workload?
Sep 02 11:55:09 <grr12314>	the jsfiddle
Sep 02 11:55:19 <thomas_25>	real workload
Sep 02 11:56:18 <grr12314>	maybe your real workload has some bottleneck on a resource that's shared between the logical cores or something
Sep 02 11:56:25 <theskillwithin>	btw i consider corporations a joke, and ur lower level then that hahaha
Sep 02 11:57:42 <thomas_25>	it's the same with fiddle example
Sep 02 11:57:56 <qswz>	just navigator.hardwareConcurrency = 16
Sep 02 11:58:01 <qswz>	max power
Sep 02 11:58:19 <thomas_25>	lol
Sep 02 11:58:24 <thomas_25>	free core!
Sep 02 11:59:57 <weijunli>	how can i set these headers https://dpaste.de/YMvk/raw - with xmlhttprequest?
Sep 02 12:00:07 <qswz>	!fetch @ weijunli
Sep 02 12:00:08 <ecmabot>	weijunli: window.fetch - a standard way to make HTTP requests and get a Promise http://mdn.io/Using_Fetch. For older browsers (IE*) see !polyfill
Sep 02 12:00:18 <theskillwithin>	dammit u beat me to it
Sep 02 12:00:34 <qswz>	those are things you set on the server-side btw
Sep 02 12:03:58 *	Disconnected ()
**** ENDING LOGGING AT Mon Sep  2 12:03:58 2019

**** BEGIN LOGGING AT Mon Sep  2 12:04:25 2019

Sep 02 12:04:25 *	Now talking on ##javascript
Sep 02 12:04:25 *	Topic for ##javascript is: JavaScript is *not* Java. | Just ask your question. | Say "!mdn abc" for docs on "abc". | Don't paste code in the channel. | Can't talk? Get registered on freenode ( https://git.io/vaTS2 )
Sep 02 12:04:25 *	Topic for ##javascript set by niggler!~niggler@unaffiliated/niggler (Tue Jan 15 07:16:23 2019)
Sep 02 12:04:41 <weijunli>	those are the headers i want when `window.location=url/step1()`
Sep 02 12:04:54 <weijunli>	i need to put these headers on step1(xmlhttp)
Sep 02 12:06:17 <theskillwithin>	consult ur backend
Sep 02 12:06:54 <stennowork>	one last time: those are headers that are returned with the response. you CANNOT set those headers with xmlhttprequest
Sep 02 12:07:12 <theskillwithin>	uh oh
Sep 02 12:07:12 <qswz>	they need a http tutorial
Sep 02 12:07:20 <qswz>	developers basics
Sep 02 12:07:52 <qswz>	https://nodejs.org/docs/v12.0.0/api/http.html#http_response_setheader_name_value
Sep 02 12:08:01 <qswz>	typically that's what you use on nodejs
Sep 02 12:08:18 <theskillwithin>	boom sauce
Sep 02 12:08:24 <theskillwithin>	https://youtu.be/Gz5mI6tqm_Q
Sep 02 12:08:44 <thomas_25>	hmm when i'm running a VM, host OS (Mac) reports CPU usage on all logical cores -- meaning the CPU reporting is ok.
Sep 02 12:09:01 <weijunli>	theskillwithin, basically my idea is when the user clicks on a button he will fetch automatically a file. thats why I was using those headers
Sep 02 12:09:35 <qswz>	lol
Sep 02 12:09:57 <theskillwithin>	this is not a hard thing
Sep 02 12:09:57 <weijunli>	qswz, btw u cant expect everyone to be a webdev, im just trying to implement something
Sep 02 12:10:05 <weijunli>	for testing
Sep 02 12:10:11 <qswz>	weijunli: you're not a webdev?
Sep 02 12:10:21 <stennowork>	and we were telling you 3 times why it doesn't work
Sep 02 12:10:25 <qswz>	there's no webdev around you?
Sep 02 12:10:36 <qswz>	hire one maybe
Sep 02 12:10:48 <qswz>	or spend a few month learning it
Sep 02 12:12:01 <theskillwithin>	https://youtu.be/FFDYuO53BUk
Sep 02 12:12:22 <weijunli>	qswz, gimme money to hire 1
Sep 02 12:12:23 <weijunli>	be helpful
Sep 02 12:12:25 <theskillwithin>	qswz we can be nice tho and help peoplz
Sep 02 12:13:11 <theskillwithin>	well wtf do u want i forgot
Sep 02 12:14:53 <stennowork>	some day, when i will be op in ##javascript, i will start a reign of terror
Sep 02 12:15:14 <stennowork>	with #html-like strictness
Sep 02 12:15:15 <theskillwithin>	that wont ever happen but ok
Sep 02 12:16:13 <stennowork>	it will be glorious
Sep 02 12:16:13 <theskillwithin>	never
Sep 02 12:16:19 <theskillwithin>	ever never
Sep 02 12:16:45 <theskillwithin>	and esp cuz of ur motives
Sep 02 12:16:49 <theskillwithin>	lol
Sep 02 12:17:03 <theskillwithin>	i am fren w some ops
Sep 02 12:19:15 <qswz>	there will be a js quizz before ntering the room
Sep 02 12:19:22 <qswz>	:p
Sep 02 12:19:28 <theskillwithin>	lol
Sep 02 12:19:36 <stennowork>	maybe not that much but something like that
Sep 02 12:20:03 <charolastra>	is #html notorious? is it the new #debian.de?
Sep 02 12:20:20 <stennowork>	it is strict but that also makes it pleasant
Sep 02 12:20:32 <qswz>	what's with Deutch Debian?
Sep 02 12:20:45 <theskillwithin>	never even herad of that chan tbh
Sep 02 12:20:50 <stennowork>	about 70% of questions are simply answered by 'with css. join #css'
Sep 02 12:21:17 <qswz>	a fun one is #bash, 90% questions are answered with their facts list
Sep 02 12:21:29 <charolastra>	in #debian.de they used to kick you if you didn't write your real name in your IRC client profile
Sep 02 12:21:38 <theskillwithin>	i used to be teh css master, i was known for answering css questions
Sep 02 12:23:41 <stennowork>	de people tend to be more strict regarding quite a few things
Sep 02 12:24:00 <stennowork>	i like the strictness of #html, it helps you focusing on exactly the topic
Sep 02 12:24:24 <theskillwithin>	lol
Sep 02 12:24:30 <stennowork>	also you can tell people to rtfm easily, because the standard is actually pretty simple to read
Sep 02 12:24:46 <theskillwithin>	just ops imposing their power cuz it feels good to them
Sep 02 12:25:29 <theskillwithin>	kinda sad really
Sep 02 12:27:05 <theskillwithin>	iv never even heard of html chan
Sep 02 12:30:12 <grr12314>	me too, but i just googled up and she's cute
Sep 02 12:30:42 <theskillwithin>	whos cute?
Sep 02 12:30:50 <grr12314>	html chan
Sep 02 12:31:54 <stennowork>	:I
Sep 02 12:32:24 <theskillwithin>	i got excited, a cute girl.  NOPE
Sep 02 12:33:39 <theskillwithin>	 https://youtu.be/UyOg0mt2R2k
Sep 02 12:34:58 <grr12314>	no, https://youtu.be/sZKZNWGBCC0
Sep 02 12:36:23 <theskillwithin>	that girl looks like 16 years old... wtf
Sep 02 12:37:32 <theskillwithin>	wtf
Sep 02 12:37:47 <theskillwithin>	thats gross
Sep 02 12:38:46 <theskillwithin>	https://youtu.be/AfuCLp8VEng
Sep 02 12:42:22 <theskillwithin>	grr12314 thats what ur into?
Sep 02 12:42:32 <qswz>	stupid sexy html chan
Sep 02 12:43:09 <theskillwithin>	i keep hearing about html chan now, but never been in it
Sep 02 12:43:59 <stennowork>	anime was a mistake
Sep 02 12:46:31 <theskillwithin>	tbh idk what anime is
Sep 02 12:46:38 <theskillwithin>	is it porn?
Sep 02 12:48:46 <theskillwithin>	stennowork can't we just all watch normal porn where someones stepping on ur balls
Sep 02 12:49:47 <theskillwithin>	that was supposed to be a joke...
Sep 02 12:52:59 <theskillwithin>	u even try dmt bru
Sep 02 13:01:46 <thomas_25>	bleh.. chrome on windows blocks new clipboard api
Sep 02 13:01:52 <thomas_25>	don't even ask for permission
Sep 02 13:02:45 <grr12314>	whats new clipoard api and whats old one?
Sep 02 13:56:00 *	Disconnected ()
**** ENDING LOGGING AT Mon Sep  2 13:56:00 2019

**** BEGIN LOGGING AT Mon Sep  2 13:56:26 2019

Sep 02 13:56:26 *	Now talking on ##javascript
Sep 02 13:56:26 *	Topic for ##javascript is: JavaScript is *not* Java. | Just ask your question. | Say "!mdn abc" for docs on "abc". | Don't paste code in the channel. | Can't talk? Get registered on freenode ( https://git.io/vaTS2 )
Sep 02 13:56:26 *	Topic for ##javascript set by niggler!~niggler@unaffiliated/niggler (Tue Jan 15 07:16:23 2019)
Sep 02 13:59:36 <qswz>	just wait till mac switches to Arm
Sep 02 14:00:33 <stennowork>	lol
Sep 02 14:00:39 <deniska>	they'll probably just cave in at some point, and put iPad in a clamshell chassy
Sep 02 14:00:45 <stennowork>	RISCV perfect instruction set for an OS
Sep 02 14:01:44 <stennowork>	my gf does stuff with CPUs so i pick up a few things every now and then
Sep 02 14:08:49 <SuperTyp>	hi all,
Sep 02 14:08:52 <SuperTyp>	date.setTime(+ date + (days * 86400000));
Sep 02 14:10:03 <SuperTyp>	the missing summand resolves to what in JS?
Sep 02 14:10:05 <SuperTyp>	0?
Sep 02 14:10:17 <stennowork>	here, '+' is a unary operator
Sep 02 14:10:33 <stennowork>	`+foo` means typecast foo to Number
Sep 02 14:10:41 <stennowork>	n> +'123'
Sep 02 14:10:43 <jellobot>	(okay) 123
Sep 02 14:10:44 <grr12314>	lol "missing summand" and you even managed to decypher it
Sep 02 14:10:48 <stennowork>	:P
Sep 02 14:10:50 <grr12314>	people really are awesome
Sep 02 14:11:15 <SuperTyp>	thx stennowork
Sep 02 14:11:58 <SuperTyp>	grr12314: what do you mean? I feel attacked :O
Sep 02 14:12:35 <Kirjava>	~define summand
Sep 02 14:12:42 <stennowork>	wrong channel :P
Sep 02 14:12:50 <Kirjava>	"a quantity to be added to another."
Sep 02 14:12:51 <grr12314>	never heared the word... but looking up its actually a common phrase in school textbooks
Sep 02 14:12:58 <Kirjava>	yeah, colour me surprised
Sep 02 14:13:31 <stennowork>	yes, summands are operands with are summed to form the sum
Sep 02 14:13:50 <stennowork>	summand is for addition what factor is for multiplication
Sep 02 14:14:30 <grr12314>	feel free to attack me back for "heared" too :p  i don't mind
Sep 02 14:14:41 <stennowork>	grr12314, pls git gut :D
Sep 02 14:14:54 <stennowork>	did u not pay attention at school or what :v :v
Sep 02 14:14:57 <stennowork>	am i doing it right
Sep 02 14:15:05 <grr12314>	+1
Sep 02 14:15:08 <stennowork>	thx
Sep 02 14:15:48 <SuperTyp>	grr12314: ah now I got it
Sep 02 14:15:55 <SuperTyp>	stennowork: love you
Sep 02 14:16:02 <stennowork>	np lol
Sep 02 14:16:10 <stennowork>	no need for strong feelings
Sep 02 14:16:25 <SuperTyp>	don't worry I share love easily
Sep 02 14:16:32 <stennowork>	hehe
Sep 02 14:18:28 <stennowork>	'summand' is the same word in german so it was easy for me to figure taht out
Sep 02 14:23:19 <TeddyMurray>	how do i turn the images loaded into the DOM into a binary string?
Sep 02 14:25:24 <stennowork>	what do you mean binary string
Sep 02 14:25:56 <stennowork>	you can load it into a canvas and then use toDataURL to get the b64 representatino
Sep 02 14:26:50 <TeddyMurray>	hmm, i mean i want to take the images inside the DOM and turn them into a string to be sent somewhere
Sep 02 14:27:05 <MJCD>	!mdn object
Sep 02 14:27:07 <jellobot>	MJCD, Object, JavaScript - The Object constructor creates an object wrapper. https://mdn.io/object
Sep 02 14:27:08 <MJCD>	lel
Sep 02 14:27:20 <MJCD>	!mdn html object
Sep 02 14:27:22 <jellobot>	MJCD, <object> - HTML: Hypertext Markup Language | MDN - The HTML <object> element represents an external resource, which can be treated as an image, a nested browsing context, or a resource to be handled by a plugin. https://mdn.io/html-object
Sep 02 14:27:39 <MJCD>	nb; not what you want
Sep 02 14:27:45 <grr12314>	"inside the dom" you dont get images, just image tags that reference external urls
Sep 02 14:27:47 <MJCD>	not what anyone wants
Sep 02 14:28:04 <MJCD>	TeddyMurray, generally you use an image/binary 'loader'
Sep 02 14:28:12 <MJCD>	which base64's it for you
Sep 02 14:28:18 <MJCD>	etc
Sep 02 14:28:21 <TeddyMurray>	okay.. thanks mjcd
Sep 02 14:28:27 <grr12314>	if you want the actual file data instead of its url, you can fetch() it\
Sep 02 14:28:35 <MJCD>	indeed
Sep 02 14:28:38 <TeddyMurray>	grr12314, fetch it?
Sep 02 14:28:44 <TeddyMurray>	can you link me to that method
Sep 02 14:28:50 <grr12314>	!mdn fetch
Sep 02 14:28:51 <jellobot>	grr12314, Using Fetch, DOM - The Fetch API provides a JavaScript interface for accessing and manipulating parts of the HTTP pipeline, such as requests and responses. It also provides a global fetch() method that provides an easy, logical way to fetch resources asynchronously across the network. https://mdn.io/fetch
Sep 02 14:28:52 <MJCD>	that's not really any advantage over <img> tho
Sep 02 14:28:55 <TeddyMurray>	thanks
Sep 02 14:28:57 <MJCD>	for an image haha
Sep 02 14:29:08 <TeddyMurray>	you guys have no idea what im working on, and i have to be vague as possible sorry
Sep 02 14:29:10 <stennowork>	and filereader
Sep 02 14:29:12 <grr12314>	or xhr
Sep 02 14:29:22 <MJCD>	stennowork, ye
Sep 02 14:29:54 <celphi>	I think he’s talking about base64 string
Sep 02 14:30:27 <grr12314>	base64 string is 3/4 longer than necessery
Sep 02 14:30:31 <celphi>	And is likely trying to store in a database
Sep 02 14:30:36 <TeddyMurray>	lol
Sep 02 14:30:53 <TeddyMurray>	okay ill tell you guys what im building in about an hour, nothing said here was close =/\
Sep 02 14:30:54 <celphi>	It’s 1/3 longer I thought
Sep 02 14:31:17 <grr12314>	yea ok your math fu is better than mine
Sep 02 14:32:44 <celphi>	37% apparently., so I’m wrong too
Sep 02 14:33:06 <grr12314>	and yea, depending on what you mean by "to be sent somewhere" you might need base64 or just a blob url instead of "binary string"
Sep 02 14:33:35 <celphi>	Use amazon s3 buckets
Sep 02 14:33:36 <TeddyMurray>	https://developer.mozilla.org/en-US/docs/Web/API/FileReader/readAsBinaryString
Sep 02 14:34:00 <celphi>	Amazon api is simplest solution and probably fastest
Sep 02 14:34:20 <qswz>	do you have AWS shares?
Sep 02 14:34:32 <celphi>	Lol no
Sep 02 14:34:53 <celphi>	I don’t gamble my money in stock market
Sep 02 14:36:01 <stennowork>	aws died over the weekend
Sep 02 14:36:07 <stennowork>	on saturday?
Sep 02 14:36:16 <celphi>	What do you mean?
Sep 02 14:36:20 <grr12314>	if it got resurrected all is fine
Sep 02 14:36:40 <celphi>	My site uses it. Seems to be working to me
Sep 02 14:36:54 <stennowork>	there was a regional outage two days ago
Sep 02 14:37:09 <stennowork>	https://www.bleepingcomputer.com/news/technology/reddit-experiencing-outage-due-to-amazon-aws-issue/
Sep 02 14:37:45 <stennowork>	our roguelike-related server was down too
Sep 02 14:37:49 <celphi>	Yeah but they have more than 1 server
Sep 02 14:37:53 <stennowork>	and with 'our' i don't mean 'mine'
Sep 02 14:37:59 <stennowork>	celphi, excuse me?
Sep 02 14:38:14 <celphi>	Not everyone was affected
Sep 02 14:38:22 <celphi>	Who uses aws
Sep 02 14:38:25 <stennowork>	no, it was 'regional'
Sep 02 14:38:34 <stennowork>	regional means that it only happens in certain AWS regions
Sep 02 14:38:50 <celphi>	So when you say died you mean a specific time and region
Sep 02 14:39:04 <stennowork>	yes, as i stated
Sep 02 14:39:22 <celphi>	You added that yeah
Sep 02 14:39:35 <celphi>	You originally said aws died over weekend
Sep 02 14:39:39 <qswz>	there should be a prioritization of web content, during those outages, for exmple social networks don't matter
Sep 02 14:39:51 <celphi>	^ lol
Sep 02 14:39:52 <stennowork>	yes, that was the specific time restriction
Sep 02 14:40:06 <stennowork>	<stennowork> there was a regional outage two days ago
Sep 02 14:40:13 <stennowork>	that was the regional restriction
Sep 02 14:40:19 <celphi>	Yeah afterwards:P
Sep 02 14:40:41 <stennowork>	after what
Sep 02 14:41:03 <celphi>	Lol nvm
Sep 02 14:41:10 <celphi>	Not worth the argument
Sep 02 14:41:36 <stennowork>	ok
Sep 02 14:42:07 <MJCD>	social networks are web content
Sep 02 14:42:08 <MJCD>	:|
Sep 02 14:42:16 <MJCD>	gosh qswz sure does say some things
Sep 02 14:43:33 <graingert>	MJCD: web content refers exclusively to data from physics experiments
Sep 02 14:43:56 <MJCD>	lol
Sep 02 14:44:15 <MJCD>	all web content except the people qswz doesn't like
Sep 02 14:45:37 <stennowork>	i will have to check out briar as a new IM
Sep 02 15:04:28 <majorana_fermion>	hello
Sep 02 15:05:14 <majorana_fermion>	im having issues serving static files via the express.static middleware can anyone please assit?
Sep 02 15:10:03 <ponyrider>	majorana_fermion: what is the error?
Sep 02 15:12:55 <Solak>	hmm, does each object litteral indeed inherit a rather huge list of functions from the prototype-chain?
Sep 02 15:13:49 <stennowork>	n> ({a: 23}).__proto__
Sep 02 15:13:51 <jellobot>	(okay) {}
Sep 02 15:14:31 <stennowork>	naked object literals don't inherit from any prototype i think
Sep 02 15:14:48 <stennowork>	POJSOs
Sep 02 15:15:18 <Solak>	stennowork: are they like plain object.create(null)?
Sep 02 15:15:33 <interop_madness>	does anyone know of a debounce function that supports a scenario where both leading and trailing debouncing is needed? e.g. a 300ms debounced function is called every 100ms for five times, the result is three calls to that function at T+0, T+300ms and T+500ms
Sep 02 15:15:49 <stennowork>	hmm actually
Sep 02 15:16:17 <stennowork>	i guess it still inherits from the Object prototype?
Sep 02 15:16:24 <stennowork>	so you get a few boring methods
Sep 02 15:16:27 <Solak>	I guess one of the problems I have with js is that it is difficult to decide which 'property' fits the use.
Sep 02 15:16:42 <interop_madness>	underscore can do leading and trailing, but only one of them (bool parameter during construction) and i can't just create it twice as that would double-fire events in my scenario
Sep 02 15:16:47 <stennowork>	n> ({a: 23}).isPrototypeOf(Object)
Sep 02 15:16:48 <jellobot>	(okay) false
Sep 02 15:16:50 <stennowork>	hmm
Sep 02 15:16:54 <stennowork>	err
Sep 02 15:17:11 <stennowork>	n> ({a: 23}.__proto__).isPrototypeOf(Object)
Sep 02 15:17:12 <jellobot>	(okay) true
Sep 02 15:17:37 <stennowork>	Solak, what do you mean with that?
Sep 02 15:18:22 <majorana_fermion>	ponyrider thanks for the reply. well im trying to serve some images from a folder "public" but instead my code does do this but runs this No static files find! . see here https://pasteboard.co/Ivy0yEv.png. what could i be doing wrong here
Sep 02 15:18:44 <majorana_fermion>	s/does/doesnt
Sep 02 15:20:44 <Solak>	stennowork: ok, that was an odd expression, sorry. What I meant is that js has so many ways of handling a specific problem that it is hard to decide what to use. I.e.: object literal , revealed module pattern, prototype-based.
Sep 02 15:22:00 <ponyrider>	majorana_fermion: app.use('/static', express.static(path.join(__dirname, 'public'))) << --- this the the example shown on the site
Sep 02 15:22:21 <ponyrider>	majorana_fermion: https://expressjs.com/en/starter/static-files.html
Sep 02 15:28:44 <Solak>	stennowork: another example: js has properties that can be set to 'private', but should I focus on that? Or just accept that a common constructor like var x = function(a, b) { this.A = a; this.B = b; }; works?
Sep 02 15:32:16 <ponyrider>	!let
Sep 02 15:32:16 <ecmabot>	ponyrider: The let statement provides a way to associate values with variables within the scope of a block, without affecting the values of like-named variables outside the block. Always prefer it to `var`, but prefer `const` when you don't change the variable binding (which should be most of the time).
Sep 02 15:32:40 <ponyrider>	Solak: yes you should !
Sep 02 15:39:21 <celphi>	is there a way to start from back of Map()?
Sep 02 15:39:37 <celphi>	like in c++ it's rbegin()
Sep 02 15:40:58 <celphi>	n> const myMap = new Map([[0,2],[2,4],[4,8]]); myMap;
Sep 02 15:40:59 <jellobot>	(okay) Map { 0 => 2, 2 => 4, 4 => 8 }
Sep 02 15:41:13 <celphi>	how would I start from 4 -> 8
Sep 02 15:41:14 <stennowork>	Sl
Sep 02 15:41:29 <stennowork>	Solak, regarding best practises, i guess its something you will find after a bit of time
Sep 02 15:41:34 <celphi>	since forEach starts with 0->2
Sep 02 15:42:00 <stennowork>	Solak, meanwhile you should pick your experts and trust them :P
Sep 02 15:42:41 <stennowork>	n> const myMap = new Map([[0,2],[2,4],[4,8]]); myMap.reverse()
Sep 02 15:42:43 <jellobot>	(fail) TypeError: myMap.reverse is not a function
Sep 02 15:42:44 <stennowork>	aw
Sep 02 15:42:53 <celphi>	yeah that would be too easy
Sep 02 15:43:31 <stennowork>	n> const myMap = new Map([[0,2],[2,4],[4,8]]); [].reverse.call(myMap)
Sep 02 15:43:32 <jellobot>	(okay) Map { 0 => 2, 2 => 4, 4 => 8 }
Sep 02 15:43:38 <graingert>	!no var @ Solak
Sep 02 15:43:38 <ecmabot>	Solak: `var` defines a variable in the current function-level scope, and should not be used when `const` or `let` are available (see !babel, !const, and !let). Always use a keyword to declare variables, otherwise you will pollute the global scope (a keyword is required in strict mode).
Sep 02 15:43:40 <stennowork>	nope
Sep 02 15:43:44 <celphi>	trying to get `k` largest elements
Sep 02 15:43:56 <celphi>	i know map sorts
Sep 02 15:44:17 <celphi>	largest repeats that is
Sep 02 15:44:29 <Quetzal2_>	Hello :) .
Sep 02 15:44:33 <celphi>	key(value) value(repeats)
Sep 02 15:44:38 <Quetzal2_>	I was considering using Proxy Objects to wrap a graphics library. It's either this or custom classes. One very important and decisive thing is performance. So I wanted to know if there's any difference in, lets say there are 200 Objects used, using Proxies or regular Objects to wrap the ones in the scene. Couldn't find much info about it. Has anyon
Sep 02 15:44:38 <Quetzal2_>	e an idea?
Sep 02 15:48:09 <devsnek>	Quetzal2_: proxies are very slow
Sep 02 15:49:03 <celphi>	first time ive read about them
Sep 02 15:49:14 <celphi>	interesting-- seems like a middleman
Sep 02 15:49:29 <Quetzal2_>	yep, indeed.
Sep 02 15:49:46 <Quetzal2_>	So better wrap the objects myself? Ok. Do you have a reference or something talking about it? Could only find a blogpost.
Sep 02 15:50:00 <devsnek>	talking about what
Sep 02 15:50:45 <stennowork>	just extend ?
Sep 02 15:50:46 <Quetzal2_>	The performance impact of Proxy Objects in Javascript
Sep 02 15:50:50 <celphi>	devsnek: If i had a Map (2 => 3, 4 => 6, 7 => 3) how do you iterate from the end first?
Sep 02 15:51:06 <devsnek>	celphi: you don't
Sep 02 15:51:19 <celphi>	is it not possible?
Sep 02 15:51:22 <devsnek>	Quetzal2_: Google it
Sep 02 15:51:30 <devsnek>	celphi: not at the moment
Sep 02 15:51:44 <devsnek>	there's a proposal for reverse iteration
Sep 02 15:52:51 <stennowork>	you can inverse the sorting though
Sep 02 15:53:15 <celphi>	so here's my problem: i need to return `k` elements with highest repeats. My plan was to insert all into map (value as key) and (repeats as value),. then switch the key/value in another set then grab the last two key/value in set
Sep 02 15:53:21 <Quetzal2_>	devsnek: I did make some research about it. Just wanted to know if someone had some references.
Sep 02 15:53:42 <celphi>	but i dont know how to start from end
Sep 02 15:53:55 <celphi>	i guess i have to iterate the whole thing?
Sep 02 15:54:26 <devsnek>	celphi: exploit jit memory unsafety to read from the end of the map
Sep 02 15:55:00 <celphi>	ok ill google that
Sep 02 15:55:26 <stennowork>	that was a joke?
Sep 02 15:56:06 <celphi>	yeah
Sep 02 15:56:09 <celphi>	lol
Sep 02 15:56:39 <celphi>	i hope so
Sep 02 15:59:54 <celphi>	im reading i can create a custom iterator
Sep 02 16:00:13 <stennowork>	i am getting the feeling that you are over-engineering something here
Sep 02 16:00:16 <MJCD>	!mdn Iterator
Sep 02 16:00:18 <jellobot>	MJCD, Try https://mdn.io/iterator (couldn't fetch metadata)
Sep 02 16:00:22 <MJCD>	stennowork++
Sep 02 16:04:23 <celphi>	probably
Sep 02 16:04:44 <Alexendoo>	If you're thinking Maps sort by their keys celphi they don't, they retain insertion order. Sounds like what you want is to stick them all in an array then sort it, then .slice(-k)
Sep 02 16:05:14 <celphi>	they don't??
Sep 02 16:05:17 <celphi>	ah man
Sep 02 16:05:17 <stennowork>	lol
Sep 02 16:05:24 <celphi>	c++ they do lol
Sep 02 16:06:15 <stennowork>	c++ doesn't make sense anyway
Sep 02 16:06:30 <prometh>	c++ === d
Sep 02 16:06:41 <prometh>	well, maybe ++c
Sep 02 16:07:30 <celphi>	so you're saying with map they're just added like an array does?
Sep 02 16:08:27 <stennowork>	n> new Map([[1,0],[2,1],[0,23]])
Sep 02 16:08:28 <jellobot>	(okay) Map { 1 => 0, 2 => 1, 0 => 23 }
Sep 02 16:08:36 <stennowork>	^ insertion order
Sep 02 16:08:44 <celphi>	n>let myMap = new Map([3, 9]); myMap.set(1,4);myMap;
Sep 02 16:08:45 <jellobot>	(fail) TypeError: Iterator value 3 is not an entry object
Sep 02 16:08:58 <celphi>	n>let myMap = new Map([[3, 9]]); myMap.set(1,4);myMap;
Sep 02 16:08:59 <jellobot>	(okay) Map { 3 => 9, 1 => 4 }
Sep 02 16:09:07 <celphi>	dang-
Sep 02 16:09:16 <celphi>	is that same with set?
Sep 02 16:09:23 <devsnek>	yes
Sep 02 16:09:26 <prometh>	n> new Map(Object.fromEntries({a:1, 0:7}))
Sep 02 16:09:28 <jellobot>	(fail) TypeError: object is not iterable (cannot read property Symbol(Symbol.iterator))
Sep 02 16:09:35 <prometh>	oh yeah
Sep 02 16:09:43 <devsnek>	for all intents and purposes, set is an array, and map is an array of arrays
Sep 02 16:09:45 <prometh>	n> new Map(Object.entries({a:1, 0:7}))
Sep 02 16:09:47 <jellobot>	(okay) Map { '0' => 7, 'a' => 1 }
Sep 02 16:10:09 <celphi>	wow that's so different
Sep 02 16:10:29 <devsnek>	it's cuz prometh made the object backward
Sep 02 16:10:37 <devsnek>	indexed keys before named keys
Sep 02 16:11:15 <prometh>	"new backup for 883 days" -- i haven't been using time machine
Sep 02 16:11:33 <devsnek>	the key is to not need backups
Sep 02 16:11:37 <MJCD>	prometh, lool
Sep 02 16:11:50 <devsnek>	if all your data is already in the cloud it's not a problem
Sep 02 16:12:10 <prometh>	amputee pr0n?
Sep 02 16:12:39 <celphi>	n> let myObj = { 3: 6 }; myObj[1] =8; myObj;
Sep 02 16:12:40 <jellobot>	(okay) { '1': 8, '3': 6 }
Sep 02 16:12:47 <celphi>	so objects sort?
Sep 02 16:12:56 <celphi>	but not map
Sep 02 16:12:56 <stennowork>	no
Sep 02 16:12:57 <devsnek>	"sort"
Sep 02 16:13:01 <stennowork>	objects are insertion order too
Sep 02 16:13:08 <devsnek>	they have a well defined key iteration order
Sep 02 16:13:11 <stennowork>	its just that numeral keys get sorted before named keys
Sep 02 16:13:25 <stennowork>	or iterated over, rather
Sep 02 16:13:25 <devsnek>	first are indexed keys from low to high
Sep 02 16:13:29 <celphi>	ok but they dont work like arrays
Sep 02 16:13:31 <devsnek>	then string keys
Sep 02 16:13:34 <devsnek>	then symbol keys
Sep 02 16:13:45 <celphi>	ok cool
Sep 02 16:13:46 <stennowork>	in php, you have even insertion order for arrays
Sep 02 16:13:57 <devsnek>	same in all languages with arrays
Sep 02 16:14:12 <stennowork>	no
Sep 02 16:14:12 <celphi>	well js is different with keys
Sep 02 16:14:19 <celphi>	js turns it into a string
Sep 02 16:14:25 <celphi>	(it = key)
Sep 02 16:14:30 <stennowork>	n> const foo = []; foo[3] = 'hello'; foo[0] = 'world'; foo
Sep 02 16:14:32 <jellobot>	(okay) [ 'world', <2 empty items>, 'hello' ]
Sep 02 16:15:08 <devsnek>	oh I thought you were talking about the order of the elements
Sep 02 16:15:18 <devsnek>	why would key insertion time matter
Sep 02 16:15:29 <celphi>	yeah but php treats keys different too iirc
Sep 02 16:15:30 <stennowork>	...time?
Sep 02 16:15:42 <celphi>	numerical keys in js are strings
Sep 02 16:15:47 <devsnek>	🕝 time
Sep 02 16:15:50 <stennowork>	n> const foo = []; foo[3] = 'hello'; foo[0] = 'world'; Object.keys(foo)
Sep 02 16:15:51 <jellobot>	(okay) [ '0', '3' ]
Sep 02 16:15:57 <stennowork>	not insertion order ^
Sep 02 16:16:02 <devsnek>	I know
Sep 02 16:16:06 <stennowork>	ok godo
Sep 02 16:16:29 <MJCD>	insertion order is just a general guide rule no?
Sep 02 16:16:37 <stennowork>	no, its specced since es6
Sep 02 16:16:38 <MJCD>	it's not actually in the spec ?
Sep 02 16:16:41 <MJCD>	ah
Sep 02 16:17:00 <devsnek>	it's defined in a very prose way
Sep 02 16:17:17 <devsnek>	"non-indexed string properties of O in insertion order"
Sep 02 16:17:55 <celphi>	n> const foo = []; foo[3] = 'hello'; foo[0] = 'world'; foo;
Sep 02 16:17:56 <jellobot>	(okay) [ 'world', <2 empty items>, 'hello' ]
Sep 02 16:18:02 <stennowork>	n> Object.keys({ 3: 'foo', 0: 'bar' })
Sep 02 16:18:03 <jellobot>	(okay) [ '0', '3' ]
Sep 02 16:18:07 <stennowork>	woop
Sep 02 16:18:13 <celphi>	so maybe it's Object.keys() that returns sorted order?
Sep 02 16:18:20 <stennowork>	no
Sep 02 16:18:24 <stennowork>	lol
Sep 02 16:18:34 <stennowork>	now devsnek explained it too
Sep 02 16:18:44 <devsnek>	it all comes from OrdinaryOwnPropertyNames
Sep 02 16:19:05 <celphi>	i dont get it- why would the object show a different order than the Object.keys()
Sep 02 16:19:21 <devsnek>	wut
Sep 02 16:19:27 <celphi>	n> const foo = []; foo[3] = 'hello'; foo[0] = 'world';
Sep 02 16:19:28 <jellobot>	(okay) 'world'
Sep 02 16:19:32 <stennowork>	because its an indexed key
Sep 02 16:19:35 <celphi>	n> const foo = []; foo[3] = 'hello'; foo[0] = 'world'; foo;
Sep 02 16:19:37 <jellobot>	(okay) [ 'world', <2 empty items>, 'hello' ]
Sep 02 16:20:03 <celphi>	oh nvm i misread it
Sep 02 16:26:24 <stennowork>	GreenJello, around?
Sep 02 16:27:11 <stennowork>	GreenJello, could you consider bringing jellobot into #angularjs? i talked with a channel op and they are fine with it
Sep 02 16:28:10 <qswz>	!npm emoji-time
Sep 02 16:28:11 <jellobot>	qswz, emoji-time@2.2.5: time in emoji - https://www.npmjs.com/package/emoji-time
Sep 02 16:29:30 <qswz>	some useless npm package among others
Sep 02 16:30:56 <qswz>	n> let o={}; o[2]=1; o[1]=1; o[3]=1; o[11]=1; o.Z=1; o.a=1; o.A=1; o
Sep 02 16:30:57 <stennowork>	nice qswz
Sep 02 16:30:57 <jellobot>	(okay) { '1': 1, '2': 1, '3': 1, '11': 1, Z: 1, a: 1, A: 1 }
Sep 02 16:55:41 <grr12314>	https://2ality.com/2015/10/property-traversal-order-es6.html
Sep 02 16:59:19 <qswz>	I need to download some motivation
Sep 02 16:59:48 <qswz>	where can I curl some
Sep 02 17:00:06 <grr12314>	interestingly, https://stackoverflow.com/questions/30076219/does-es6-introduce-a-well-defined-order-of-enumeration-for-object-properties says that engines can not follow that for a bunch of important cases tho
Sep 02 17:00:15 <MJCD>	does anyone have a good alternative for cpanels webdisk
Sep 02 17:00:23 <MJCD>	to let users mount their ssh shares
Sep 02 17:00:27 <MJCD>	in windows
Sep 02 17:00:32 <Alexendoo>	There's a stage something or other proposal to make for-in follow it
Sep 02 17:00:32 <MJCD>	without third party software
Sep 02 17:01:06 <MJCD>	Alexendoo, it shouldn't be related to any one functionality/syntax
Sep 02 17:01:18 <MJCD>	it's a global behavior assuming you're still talking about the same thing
Sep 02 17:02:04 <Alexendoo>	https://github.com/tc39/proposal-for-in-order
Sep 02 17:03:55 <qswz>	oh a fixed for in, would be good
Sep 02 17:04:13 <qswz>	a for in that don't go in prototype for example
Sep 02 17:05:30 <qswz>	n> class A{a=1} class B extends A{b=1}; for (let k in new B()) console.log(k)
Sep 02 17:05:32 <jellobot>	(okay) a b undefined
Sep 02 17:05:48 <TeddyMurray>	hi guys
Sep 02 17:06:04 <qswz>	n> class A{a=1} class B extends A{b=1}; Object.keys(new B())
Sep 02 17:06:06 <jellobot>	(okay) [ 'a', 'b' ]
Sep 02 17:06:06 <TeddyMurray>	hi MJCD and stennowork :) i finished what i was making, how are you doing?
Sep 03 10:14:12 *	Disconnected ()
**** ENDING LOGGING AT Tue Sep  3 10:14:12 2019

**** BEGIN LOGGING AT Tue Sep  3 10:14:38 2019

Sep 03 10:14:38 *	Now talking on ##javascript
Sep 03 10:14:38 *	Topic for ##javascript is: JavaScript is *not* Java. | Just ask your question. | Say "!mdn abc" for docs on "abc". | Don't paste code in the channel. | Can't talk? Get registered on freenode ( https://git.io/vaTS2 )
Sep 03 10:14:38 *	Topic for ##javascript set by niggler!~niggler@unaffiliated/niggler (Tue Jan 15 07:16:23 2019)
Sep 03 10:31:05 <RenjieAbarai>	Heya guys! Can any one help me on this? I have this code here that observes if a specific textarea element is being resized and then calls this function `inner_resize()`. My issue with this code https://paste.ofcode.org/JhWrcVAwVzmDhYUtPk4D3K
Sep 03 10:38:59 <niggler>	im assuming that worked dodobrain thx
Sep 03 10:39:25 <dodobrain>	no worries.. i vaguely remember doing something similar and looked online for it
Sep 03 10:43:16 <niggler>	heh the first thing everyone looks for
Sep 03 11:01:27 <helofromme>	Morning!
Sep 03 11:02:06 <niggler>	5 am ugh
Sep 03 11:02:39 <helofromme>	Crazy
Sep 03 11:02:40 <MJCD>	still up niggler?
Sep 03 11:02:49 <MJCD>	I was looking for you the other day
Sep 03 11:02:56 <MJCD>	for excel homework >:)
Sep 03 11:02:56 <niggler>	yeah i took a break for the labor day holiday
Sep 03 11:03:01 <niggler>	but now i gotta catch up
Sep 03 11:03:26 <MJCD>	I am just about to set up a znc on my offsite server in the US if you want a login
Sep 03 11:03:31 <MJCD>	makes irc much simplers
Sep 03 11:03:41 <MJCD>	and I dont wanna leave you damn memos
Sep 03 11:03:42 <MJCD>	lol
Sep 03 11:04:44 <niggler>	lol
Sep 03 11:04:53 <niggler>	i should just spring for irccloud
Sep 03 11:05:01 <niggler>	you can always shoot an email
Sep 03 11:05:38 <MJCD>	same bs as memos
Sep 03 11:05:42 <MJCD>	its a chat medium lol
Sep 03 11:05:51 <MJCD>	if I wanted to ask and wait i'd post on SO or other
Sep 03 11:06:03 <MJCD>	basically i'm your wife now
Sep 03 11:06:06 <MJCD>	pay attention tome
Sep 03 11:06:10 <niggler>	lol
Sep 03 11:06:18 <MJCD>	(but the znc is free if you want it)
Sep 03 11:06:26 <niggler>	email has the added advantage of reaching when computer is not available
Sep 03 11:06:29 <stennowork>	why don't you have labour holiday on 1st of may like any other country
Sep 03 11:06:46 <helofromme>	I applied for a job as a senior dev. The company want me to take various coding tests for about a day before I even get the interview. What... What is your guys thoughts about this? I mean i would be fine with it if I was a fresh grad..
Sep 03 11:06:51 <niggler>	labor day is a disappointing exercise anyway
Sep 03 11:07:08 <MJCD>	helofromme, ehh
Sep 03 11:07:11 <niggler>	"This Labor Day, US Workers One-Third Poorer Than in 2003—While Top 1% Now Two-Times Richer "
Sep 03 11:07:21 <MJCD>	fitting in with the team is like 40% of any job
Sep 03 11:07:32 <MJCD>	leading them as a senior, 60%
Sep 03 11:07:48 <helofromme>	Exactly. And I dont even know more about the job than what is written on their web
Sep 03 11:08:02 <niggler>	helofromme: you have a choice
Sep 03 11:08:04 <ashnur>	znc is incredibly good, i just wish i could search the logs
Sep 03 11:08:09 <niggler>	you can either not put up with their nonsense
Sep 03 11:08:11 <MJCD>	because job ads/roles are more complicated than that these days
Sep 03 11:08:15 <MJCD>	best experienced
Sep 03 11:08:20 <niggler>	or try to get the job
Sep 03 11:08:23 <MJCD>	ashnur, I don't see why you can't
Sep 03 11:08:35 <MJCD>	its configurable on the server to log or not
Sep 03 11:08:38 <MJCD>	using the web interface
Sep 03 11:08:47 <niggler>	you can't negotiate your way out of a requirement like that helofromme
Sep 03 11:08:48 <ashnur>	MJCD: i just simply haven't had the time to dive to the bottom of that particular well
Sep 03 11:08:54 <helofromme>	just seems a bit harsh to have me waste so much time to prove that I can something that years of expeirences on my resume already proves
Sep 03 11:08:54 <MJCD>	then you can search using any tool
Sep 03 11:08:59 <MJCD>	even just browser as plaintext
Sep 03 11:09:02 <niggler>	resume means nothing
Sep 03 11:09:11 <MJCD>	means little
Sep 03 11:09:15 <ashnur>	i woul rather have something somewhat private than that MJCD
Sep 03 11:09:15 <niggler>	means nothing
Sep 03 11:09:24 <ashnur>	more*
Sep 03 11:09:30 <MJCD>	it's a rough description of what they can expect historically
Sep 03 11:09:32 <niggler>	if it actually mattered, the programming tests wouldn't be necessary
Sep 03 11:09:39 <MJCD>	errr
Sep 03 11:09:47 <MJCD>	no 1 test gets anyone a job
Sep 03 11:09:50 <MJCD>	nor any 1 document
Sep 03 11:09:52 <niggler>	imho the tests exist because no other indicator works
Sep 03 11:10:01 <MJCD>	the tests don't either
Sep 03 11:10:04 <niggler>	industry would be better off with proper licensure
Sep 03 11:10:08 <MJCD>	unless they can google
Sep 03 11:10:16 <MJCD>	and even then
Sep 03 11:10:23 <MJCD>	its a test of if they can google or not...
Sep 03 11:10:25 <MJCD>	like..
Sep 03 11:10:27 <MJCD>	lol
Sep 03 11:10:27 <ashnur>	helofromme: are you in dire need of work and are they the only option?
Sep 03 11:10:29 <Alexendoo>	ashnur: Kind of hacky but I use the shell + alias modules to create a grep command
Sep 03 11:10:30 <niggler>	you have to have a certain baseline knowledge to know what you need to search for
Sep 03 11:10:37 <helofromme>	ashnur absolutly not.
Sep 03 11:10:39 <MJCD>	lol in the end its simple
Sep 03 11:10:43 <MJCD>	that's their process
Sep 03 11:10:45 <MJCD>	take it or leave it
Sep 03 11:10:49 <niggler>	^^
Sep 03 11:10:54 <ashnur>	Alexendoo: i don't want to always have to ssh in just for this
Sep 03 11:10:55 <helofromme>	ashnur but they seemed like a cool place you know
Sep 03 11:10:56 <MJCD>	there's no right answer
Sep 03 11:11:08 <ashnur>	helofromme: then tell them to find some other person with their homework
Sep 03 11:11:09 <niggler>	every place seems like a cool place
Sep 03 11:11:21 <niggler>	tests have their use, keep that in mind
Sep 03 11:11:34 <ashnur>	helofromme: you must question the management quality, why do they think this is appropriate.
Sep 03 11:11:42 <Alexendoo>	ashnur: The ZNC modules, I then do /grep #channel pattern in an IRC client and get a response in a PM
Sep 03 11:11:54 <niggler>	ashnur: its not that simple and i think we discussed this
Sep 03 11:11:58 <ashnur>	from the outside, they never share their internal struggles. bad hiring practice means bad management.
Sep 03 11:12:21 <niggler>	tests are useful for figuring out if you are adept at the idioms your team uses
Sep 03 11:12:29 <niggler>	aka can you hit the ground running
Sep 03 11:12:45 <ashnur>	Alexendoo: oh, i misunderstood you. but that means lots of rtfm for me still. but thanks for the pointer!
Sep 03 11:13:06 <ashnur>	niggler: not that kind of test that takes long time.
Sep 03 11:13:58 <niggler>	my JS test primarily looks at stuff like regular expressions and general operators
Sep 03 11:14:01 <ashnur>	niggler: it is useful, but it is also a practice that externalizes the cost of learning your idioms to some educational system
Sep 03 11:14:06 <ashnur>	which is stealing, so fuck them
Sep 03 11:14:21 <niggler>	isn't that what the concept of "experience" is?
Sep 03 11:14:23 <ashnur>	no, you should pay the time you brainfuck your employee so they understand you :)
Sep 03 11:14:59 <niggler>	the "resume" if you take it at face value is externalizing the cost of learning tasks mildly related to the job
Sep 03 11:15:08 <ashnur>	experience that is independent of business imperatives doesn't actually require a day of testing
Sep 03 11:15:09 <helofromme>	niggler you said people negotitate themselves to avoid the test?
Sep 03 11:15:27 <niggler>	the test is non-negotiable
Sep 03 11:15:44 <niggler>	either you do the test or you dont get to move on
Sep 03 11:16:06 <niggler>	the only situation in which you could negotiate the test is if the company is desperate to hire you
Sep 03 11:16:47 <ashnur>	some basic test, yes. so that you filter out all the people who really have no clue. but with someone of experience, I want to know how they approach complex problems not complicated ones. i don't believe in taylorism being a good thing.
Sep 03 11:16:58 <helofromme>	so you really ask your candidates to spend a day doing tests before they even met you?
Sep 03 11:19:00 <niggler>	i.e. either you are extremely
Sep 03 11:19:29 <niggler>	either you are extremely good, you are recommended by business partners, or they can't find anyone
Sep 03 11:19:46 <niggler>	those are really the only three circumstances under which you could negotiate your way out of taking a coding test
Sep 03 11:20:01 <niggler>	nepotism falling under category 2
Sep 03 11:20:26 <niggler>	helofromme: the internet has created a dynamic where any person can spam resumes to a bunch of companies for near zero cost
Sep 03 11:24:20 <niggler>	and companies use automated filters and the like to combat that
Sep 03 11:25:06 <helofromme>	im not a spammer
Sep 03 11:25:12 <helofromme>	And thats pretty obvious for them, lol
Sep 03 11:26:00 <niggler>	at some point, you can't deal with the scale of resumes you receive
Sep 03 11:26:04 <niggler>	as a single person
Sep 03 11:26:16 <niggler>	so you standardize the hiring process a bit
Sep 03 11:26:26 <niggler>	need to check X Y Z boxes on a resume
Sep 03 11:26:36 <niggler>	ask some questions, because resume alone doesn't suffice
Sep 03 11:26:54 <niggler>	the solution is a true licensure but there's strong pushback
Sep 03 11:27:26 <niggler>	basically, everything that's great about javascript and the web (basically free entry) is a problem that rears its ugly head elsewhere
Sep 03 11:28:30 <helofromme>	Well i dont agree. In every company I worked in there have been very few people applying for the open jobs
Sep 03 11:28:59 <helofromme>	And if it has been someone that is not relevant at all, they have just been filtered out directly
Sep 03 11:37:12 <pycer>	stennowork: hi
Sep 03 11:37:22 <stennowork>	...hi?
Sep 03 11:37:28 <stennowork>	do i know you?
Sep 03 11:37:40 <niggler>	lol
Sep 03 11:39:30 <SuperTyp>	if I have several script tags on my page, let's say the second one throws an error, the other will the scripts after not be executed?
Sep 03 11:40:22 <niggler>	yes SuperTyp
Sep 03 11:40:28 <Revan>	damn, registered
Sep 03 11:40:29 <SuperTyp>	thx niggler
Sep 03 11:40:30 <niggler>	err
Sep 03 11:40:47 <niggler>	sorry i misread, subsequent script tags will be executed
Sep 03 11:41:13 <niggler>	you can test this manually
Sep 03 11:41:36 <SuperTyp>	niggler: is it possible that some (depending on what) won't?
Sep 03 11:41:53 <niggler>	type="module" behavior might be different
Sep 03 11:42:07 <grr12314>	they will. but they may error themselves if something they depend on from the other script didn't get set
Sep 03 11:42:10 <niggler>	but plain old script tags definitely run
Sep 03 11:42:52 <SuperTyp>	because I have a portlet (liferay) it executes some javascript it throws an error (moment timezone not found),  and somewhere down the page a template that basically just does $(".my-class").show();
Sep 03 11:43:00 <SuperTyp>	and it just doesn't get executed
Sep 03 11:43:15 <niggler>	is that script part also erroring?
Sep 03 11:43:18 <niggler>	to be clear
Sep 03 11:43:23 <SuperTyp>	no
Sep 03 11:43:36 <SuperTyp>	so I fixed the first error and now it shows
Sep 03 11:43:41 <grr12314>	how do you figure its not executed?
Sep 03 11:43:48 <SuperTyp>	and I thought it's strange behavior
Sep 03 11:43:57 <grr12314>	what if it is executed, and it just has no visible effect
Sep 03 11:43:58 <SuperTyp>	grr12314: the modal isn't showing
Sep 03 11:44:08 <grr12314>	like, there isn't anything to show yet
Sep 03 11:44:14 <SuperTyp>	grr12314: I checked the display attribute and it stays "none"
Sep 03 11:44:21 <niggler>	<script>throw new Error(); console.log(1+1);</script><script>console.log(2+2);</script> will print 4 but not print 2
Sep 03 11:44:35 <grr12314>	the .my-class thing is still not in the document
Sep 03 11:44:53 <niggler>	to verify SuperTyp can you put a console.log just before that line
Sep 03 11:46:05 <pycer>	stennowork: you dont know me. but i know u
Sep 03 11:46:15 <pycer>	stennowork: i will find you and i will **** you
Sep 03 11:46:19 <stennowork>	:D
Sep 03 11:46:25 <pycer>	kiss*
Sep 03 11:46:26 <pycer>	XD
Sep 03 11:46:31 <niggler>	is a boot in order?
Sep 03 11:46:32 <grr12314>	eew
Sep 03 11:46:37 <stennowork>	i don't really know
Sep 03 11:46:51 <stennowork>	this is getting a bit too stupid
Sep 03 11:46:54 <niggler>	ehh just to be safe
Sep 03 11:46:59 <niggler>	pycer stop being stupid
Sep 03 11:47:05 *	ChanServ gives channel operator status to niggler
Sep 03 11:47:08 *	niggler has kicked pycer from ##javascript (pycer)
Sep 03 11:47:10 <SuperTyp>	niggler: will do yes
Sep 03 11:47:13 *	ChanServ removes channel operator status from niggler
Sep 03 11:48:07 <SuperTyp>	stennowork pycer: y'all good in here?
Sep 03 11:48:57 <grr12314>	prefer tekken over taken
Sep 03 11:49:02 <stennowork>	i don't even know what that was about
Sep 03 11:49:05 <stennowork>	strange
Sep 03 11:49:16 <grr12314>	you mean you didn't even kidnap his daughter?
Sep 03 11:49:29 <stennowork>	no...
Sep 03 11:49:58 <stennowork>	oh was that an arlington road reference
Sep 03 11:50:02 <stennowork>	or whatsitcalled
Sep 03 11:50:18 <stennowork>	yes
Sep 03 11:50:33 <niggler>	are they still making tekken games?
Sep 03 11:50:54 <niggler>	woah tekken 72017
Sep 03 11:50:59 <grr12314>	every so often
Sep 03 11:51:03 <niggler>	boo no switch version
Sep 03 11:51:11 <stennowork>	evo moment #14232
Sep 03 11:51:13 <niggler>	gotta stick with the classic MK11
Sep 03 11:51:17 <niggler>	or smash bros
Sep 03 11:51:49 <stennowork>	smash bros on N64?
Sep 03 11:51:50 <stennowork>	good times
Sep 03 11:51:54 <stennowork>	i always lost
Sep 03 11:52:05 <niggler>	smash bros 64 had a massive balance problem
Sep 03 11:52:08 <stennowork>	my friend picked fox and then he stunlocked me with his laser gun
Sep 03 11:52:08 <niggler>	kirby was OP
Sep 03 11:52:33 <niggler>	but the modern games are not balanced well
Sep 03 11:53:02 <niggler>	i think the problem is that you can either balance for casual play or balance for tournaments, and ssbu does neither
Sep 03 11:54:04 <niggler>	smash is reminiscent of javascript in many ways, the standardization committee keeps adding new features/fighters without thinking about utility/balance
Sep 03 11:54:19 <MJCD>	what happened to chrome just letting you click the padlock and set gmail as the mailto handler
Sep 03 11:54:21 <niggler>	maybe smash is the true ECMASport
Sep 03 11:54:27 <MJCD>	it was an extension
Sep 03 11:54:31 <MJCD>	then it was native
Sep 03 11:54:35 <MJCD>	now its gone again seemingly
Sep 03 11:54:59 <MJCD>	doesn't appear to be in site settings anywhere anymore
Sep 03 11:56:20 <niggler>	its under handlers
Sep 03 11:56:42 <niggler>	site settings .. handlers //
Sep 03 11:57:01 <niggler>	then there's an option "Allow sites to ask to become default handlers for protocols"
Sep 03 11:59:22 <MJCD>	the entire settings thing has been redesigned
Sep 03 11:59:33 <MJCD>	there is no handlers section for me
Sep 03 11:59:47 <niggler>	what version
Sep 03 11:59:48 <MJCD>	Version 76.0.3809.132
Sep 03 11:59:57 <niggler>	yeah im in the same one
Sep 03 12:00:29 <MJCD>	all I have is Payment Handlers
Sep 03 12:00:30 <niggler>	chrome://settings/handlers does that link work for you?
Sep 03 12:00:52 <MJCD>	oh, yeah
Sep 03 12:01:00 <MJCD>	but uhh
Sep 03 12:01:02 <MJCD>	if I press back
Sep 03 12:01:33 <MJCD>	ehh
Sep 03 12:01:38 <MJCD>	basically I have no button for that
Sep 03 12:01:40 <MJCD>	seemingly
Sep 03 12:01:40 <niggler>	the sequence is
Sep 03 12:01:46 <niggler>	chrome://settings/system
Sep 03 12:01:49 <MJCD>	ok
Sep 03 12:01:56 <niggler>	under "Privacy and Security"
Sep 03 12:02:03 <niggler>	there's a "Site Settings" thing
Sep 03 12:02:09 <MJCD>	oh
Sep 03 12:02:11 <MJCD>	that's um
Sep 03 12:02:13 <niggler>	that redirects you to chrome://settings/content
Sep 03 12:02:14 <MJCD>	an odd place
Sep 03 12:02:20 <niggler>	now under there, scroll down and you'll see "handlers"
Sep 03 12:02:21 <MJCD>	but it was odd that I had it blocked
Sep 03 12:02:33 <niggler>	you probably blocked it once
Sep 03 12:02:49 <MJCD>	bam, all fixed
Sep 03 12:02:54 <MJCD>	idk why i'd do that is all
Sep 03 12:03:06 <MJCD>	it's been my preference since it was an extension
Sep 03 12:03:08 <MJCD>	haha
Sep 03 12:03:12 <MJCD>	anyway
Sep 03 12:03:16 <MJCD>	all fixed, thanks for that
Sep 03 12:03:32 <niggler>	reminds me of this oddity with VLC: https://forum.videolan.org/viewtopic.php?t=149652
Sep 03 12:03:34 <MJCD>	I hate this it's like
Sep 03 12:03:37 <MJCD>	i'm doing 1 thing
Sep 03 12:03:48 <MJCD>	then it snowballs to fixing mailto link handling
Sep 03 12:03:53 <MJCD>	and 12332943 other things
Sep 03 12:03:58 <MJCD>	it never ends
Sep 03 12:03:59 <niggler>	`VLC already requests this permission when used for the first time. But if you click "deny" (or the equivalent button) once, macOS will remember this and will not ask again.`
Sep 03 12:04:02 <MJCD>	you can relate i'm sure
Sep 03 12:04:18 <niggler>	oh im facing a semi-related issue
Sep 03 12:04:34 <niggler>	trying to elicit the mailto behavior with a hand-crafted MSG
Sep 03 12:05:03 <niggler>	still haven't come to a satisfactory solution, basically its easy to programmatically generate the right type of MSG file with rich text, attachments etc
Sep 03 12:05:25 <niggler>	but mailto links automatically trigger the mail handler, it doesn't seem to be possible to do the same with a message file
Sep 03 12:06:25 <niggler>	and IE provides msSaveOrOpenBlob and msSaveBlob but no msOpenBlob :(
Sep 03 12:09:13 <coucoutocard>	hi! I'm trying to do a POST request with ajax instead of a form. Is that the correct way? https://pastebin.com/cLDKFUV1
Sep 03 12:09:48 <coucoutocard>	the success function does execute, but the request doesn't seem to be processed server-side
Sep 03 12:11:38 <ashnur>	niggler: best use of your time? :)
Sep 03 12:11:59 <niggler>	i gave it the time it merited, decided it wasn't possible and moved on
Sep 03 12:12:22 <niggler>	full disclosure: someone came across one of my packages and asked for assistance with this
Sep 03 12:12:25 <ashnur>	i wouldn't have even tried, because even if it's possible, not really worth the effort
Sep 03 12:12:34 <ashnur>	niggler: i assumed so much
Sep 03 12:12:36 <niggler>	which is actually pretty cool, because i didn't think anyone would put 2 and 2 together
Sep 03 12:13:12 <grr12314>	coucoutocard log the result? or just see it in the dev tools network tab
Sep 03 12:14:08 <niggler>	the MSG file format is one of those OLE based formats and i think https://github.com/sheetjs/js-cfb might be the only standalone JS library for it
Sep 03 12:14:20 <ashnur>	niggler: well, not even you would pick such a task for a hobby project. :D
Sep 03 12:14:20 <grr12314>	if it responds with 200 and even some content, "request doesn't seem to be processed server-side" doesn't quite add up
Sep 03 12:14:34 <niggler>	nah i love that kind of stuff
Sep 03 12:14:46 <ashnur>	i know, but you would've picked something more general probably
Sep 03 12:15:21 <niggler>	thats not how it works, you pick something specific first, then generalize it in a direction that interests you
Sep 03 12:15:40 <ashnur>	exactly, and you already have lots of things ongoing so
Sep 03 12:16:14 <niggler>	oh "MSG" is a natural next step if you're starting from binary OLE-based file formats
Sep 03 12:16:31 <niggler>	iirc dxf does something similar (autocad)
Sep 03 12:16:58 <niggler>	but the next step would most likely be doc or ppt
Sep 03 12:17:26 <ashnur>	i only care for distributed file systems
Sep 03 12:17:45 <ashnur>	the rest is too hardware specific =)
Sep 03 12:17:53 <niggler>	you're talking about the future
Sep 03 12:22:00 <coucoutocard>	grr12314 how can I log the result?
Sep 03 12:22:59 <grr12314>	console.log the success callback parameter?
Sep 03 12:23:14 <coucoutocard>	(if I don't include the token for instance, I get a 419 status code which means the token is missing -- so I do hit the endpoint)
Sep 03 12:27:23 <linuxconformer>	if i have a .container of width 800px, and at the top of this element i
Sep 03 12:27:24 <linuxconformer>	have a navbar (100% width, so also 800px) with position sticky, how can i
Sep 03 12:27:24 <linuxconformer>	 get this navbar to be 100% width when it is in it's "sticky" phase?
Sep 03 12:28:01 <linuxconformer>	i've tried changing the navbar from position: sticky to position: absolute, but if i set top: 0 for this navbar, it's not appearing
Sep 03 12:28:25 <coucoutocard>	ok grr12314 I added logging in my Laravel controller and values do arrive to the controller
Sep 03 12:28:31 <coucoutocard>	so the problem lies somewhere else :-)
Sep 03 12:28:32 <coucoutocard>	thank you!
Sep 03 12:29:30 <grr12314>	#css
Sep 03 12:29:44 <linuxconformer>	got it
Sep 03 12:52:55 <pyzozord>	hi does anyone know how can i check current memory limit in node.js?
Sep 03 12:54:08 <qswz>	n> process.memoryUsage
Sep 03 12:54:09 <jellobot>	(okay) [Function: memoryUsage]
Sep 03 12:55:30 <pyzozord>	n> process.memoryUsage()
Sep 03 12:55:31 <jellobot>	(okay) { rss: 30769152, heapTotal: 4734976, heapUsed: 2514472, external: 788869 }
Sep 03 12:55:34 <pyzozord>	ncie thx!
Sep 03 12:56:07 <qswz>	see also node --max_old_space_size ..
Sep 03 12:56:41 <qswz>	I think it's 1gb by default more or les
Sep 03 12:57:25 <qswz>	value is in mb, node --max_old_space_size=8182 for example for8gb
Sep 03 13:08:32 <niggler>	its in MB, and there's some sort of limit above which the parameter is useless
Sep 03 13:08:37 <niggler>	that limit changes between releases
Sep 03 13:11:01 <SuperTyp>	let's get some foood
Sep 03 13:12:38 <Rashad>	Hello. Is it possible to do this: array.includes([any,of,these,values]); ?
Sep 03 13:13:21 <qswz>	nope
Sep 03 13:13:24 <qswz>	use .some
Sep 03 13:13:31 <qswz>	hmm
Sep 03 13:14:21 <qswz>	if you use Set and https://github.com/tc39/proposal-set-methods, set.intersect([any,of,these,values])
Sep 03 13:14:31 <Rashad>	Found array.some
Sep 03 13:14:36 <Rashad>	Yup!
Sep 03 13:14:39 <Rashad>	Thanks qswz
Sep 03 13:14:56 <qswz>	else [any,of,these,values].some(x => array.includes(x))
Sep 03 13:15:03 <qswz>	a bit ugly
Sep 03 13:15:12 <Rashad>	Ah... I was looking at Set... I didn't know that proposal exists
Sep 03 13:15:27 <qswz>	Rashad: what's the context where it's used?
Sep 03 13:15:57 <pyzozord>	hi i was just asking about node.js total available memory. Are you guys sure it's process.memoryUsage()?
Sep 03 13:16:08 <pyzozord>	i only see there "heapTotal"
Sep 03 13:16:24 <pyzozord>	n> console.log(process.memoryUsage());
Sep 03 13:16:25 <jellobot>	(okay) {   rss: 30851072,   heapTotal: 4734976,   heapUsed: 2516752,   external: 790085 } undefined
Sep 03 13:16:43 <qswz>	Did you check the docs?
Sep 03 13:16:48 <qswz>	https://nodejs.org/api/process.html#process_process_memoryusage
Sep 03 13:16:56 <qswz>	that's first step
Sep 03 13:17:15 <Rashad>	qswz: I want to test if at least one of (two) values is either null or undefined: [v1, v2].some(x => [undefined, null].includes(x));
Sep 03 13:17:31 <qswz>	Rashad: I'm asking for the real-world use case
Sep 03 13:17:42 <qswz>	like the 5 lines before and after that code
Sep 03 13:17:45 <pyzozord>	qswz: Ok so from the docs it looks like this is indeed showing the total memory available to v8 with the heapTotal. Do i understand that correctly?
Sep 03 13:17:49 <qswz>	and what the code is doing
Sep 03 13:18:23 <qswz>	pyzozord: you want the mem available or the mem used?
Sep 03 13:19:00 <Rashad>	qswz: I am refactoring my code here: https://stackoverflow.com/a/41431685/2468508
Sep 03 13:19:15 <pyzozord>	qswz: total available, im fighting with `FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory` error. It's strange because it happens in gitlab but doesnt on my local machine
Sep 03 13:20:13 <pyzozord>	qswz: I found a workaround already with --max_old_space_size, but I'm trying to understand why it doesn't happen on my local machine
Sep 03 13:20:24 <Rashad>	qswz: I want to test if an object's property is another object using (object[key].constructor === Object), but that throws when object[key] === null or undefined.
Sep 03 13:20:36 <Rashad>	qswz: The refactor is a complete rewrite.
Sep 03 13:21:35 <Rashad>	qswz: The reason I use that method for testing something is an object is because it is readable and seems the most consistent for testing any type, except of course null and undefined which become special cases.
Sep 03 13:22:21 <Rashad>	e.g.: ([]).constructor === Array; will always work for an array and only work for arrays.
Sep 03 13:22:30 <grr12314>	it doesnt work with extended classes
Sep 03 13:22:31 <Alexendoo>	pyzozord: heapTotal can grow. For example, in your case it would be mighty inconvenient if node was limited to ~5MB
Sep 03 13:22:36 <grr12314>	why not just instanceof
Sep 03 13:22:46 <Alexendoo>	pyzozord: The os module has functions for getting free/total memory
Sep 03 13:22:53 <Rashad>	>[] instanceof Object
Sep 03 13:22:58 <Rashad>	> [] instanceof Object
Sep 03 13:23:14 <Rashad>	oops
Sep 03 13:24:14 <Rashad>	n> [] instanceof Object
Sep 03 13:24:15 <jellobot>	(okay) true
Sep 03 13:24:44 <qswz>	pyzozord: so see what we said above about --max_old_space_size
Sep 03 13:24:50 <Rashad>	And so you need to test `[] instanceof Array;` before any test for `instanceof Object`.
Sep 03 13:24:56 <qswz>	if you missed it, for some strange reaon
Sep 03 13:25:22 <qswz>	pyzozord: check if the machines you run it on have enough RAM
Sep 03 13:26:04 <qswz>	cat /proc/meminfo
Sep 03 13:29:13 <pyzozord>	qswz: what's the mac subtitute?
Sep 03 13:29:28 <qswz>	no idea
Sep 03 13:30:05 <qswz>	try "free -m"
Sep 03 13:30:50 <niggler>	sinclair: you still around?
Sep 03 13:31:39 <qswz>	nah, he left the orbit
Sep 03 13:31:47 <niggler>	had a typescript question
Sep 03 13:31:55 <qswz>	shoot
Sep 03 13:32:06 <niggler>	any simple example of a library that supports both nodejs and browser bundles
Sep 03 13:32:44 <niggler>	trying to write a library in ts and generate a standalone browser script, an es6 thing suitable for bundling and a cjs bundle for nodejs
Sep 03 13:34:06 <niggler>	normally would just write ES5 but probably a good idea to try something different
Sep 03 13:36:35 <qswz>	you could generate a umd bundle
Sep 03 13:37:18 <niggler>	that satisfies some of it, but are umd bundles tree shakable?
Sep 03 13:37:22 <qswz>	that would work for cjs and standalone browser
Sep 03 13:38:10 <niggler>	goal i guess is to get TS to generate both the individual JS modules and the bundle
Sep 03 13:38:56 <niggler>	oh then the answer would be two tsconfig.json
Sep 03 13:39:06 <qswz>	ok, I don't know (other than by using webpack)
Sep 03 13:46:49 <pyzozord>	that still doesnt answer my question. I just checked os.totalmem() with and without the --max_old_space flag and it's exactly the same
Sep 03 13:48:00 <pyzozord>	why it is complainging about memory heap on gitlab when it's without --max_old_space flag, but does not on my local machine
Sep 03 13:58:15 <sinclair>	niggler, i iz around
Sep 03 13:58:23 <sinclair>	niggler, what is your TS question?
Sep 03 13:58:36 <niggler>	about structuring this project
Sep 03 13:58:41 <niggler>	but decided to just look at how rxjs does it
Sep 03 13:58:52 <dognosewhiskers>	In general, whenever an update to a language (such as JavaScript or PHP) breaks existing code, people get understandably upset. After all, they made this thing for this other thing and now the other thing suddenly changes, forcing them to redo a bunch of work. Why, then, do they (the language authors/maintainers) kind of "freeze" the old version inside of any and all new versions, so that it can be "activated" for code that uses the old
Sep 03 13:58:52 <dognosewhiskers>	version of the language? Wouldn't this lead to extreme stability with code that never breaks? I assume there must be some major reason why this isn't done more often (or at all, as it seems)?
Sep 03 13:59:03 <sinclair>	niggler, its a open ended topic
Sep 03 13:59:17 <sinclair>	niggler, whatever works is the 'current state of the art'
Sep 03 13:59:31 <dognosewhiskers>	Dammit. I meant to ask: ... Why, then, do they (the language authors/maintainers) *NOT* kind of "freeze" the old
Sep 03 13:59:36 <niggler>	yeah trying to find the best way to write code once and have it build a node module, a standalone browser library and a set of modules suitable for tree shaking (esm)
Sep 03 14:00:18 <sinclair>	niggler, but mostly, its common to have .... ./src ./bin and then your stuff gets compiled into the bin
Sep 03 14:00:40 <niggler>	yeah rxjs literally has 9 tsconfig.json files
Sep 03 14:00:57 <sinclair>	niggler, most projects i have use 2 of them
Sep 03 14:01:10 <sinclair>	for in ./src, the other in ./test (or ./spec)
Sep 03 14:01:26 <niggler>	someone much more adept at TS than me figured this is the best approach
Sep 03 14:01:37 <sinclair>	niggler, in terms of tree shaking, don't worry about it, just compile your library as commonjs, and publish that
Sep 03 14:01:51 <sinclair>	niggler, there is no best approach
Sep 03 14:02:20 <niggler>	i could go back to make + cat
Sep 03 14:02:41 <sinclair>	there are mostly just approaches that kind work for the thing your building.....i hate that aspect tbh, there is no guidance to get things aligned with node for various advanced things you may need to do
Sep 03 14:02:45 <sinclair>	just wing it
Sep 03 14:04:58 <deadbeat>	dognosewhiskers: no real experience, just my thoughts: you might *want* to force users to adapt, because the changes relate to security issues. You would have to ship version in versions in versions, duplicating lots of stuff. you would need to setup some version detection logic.
Sep 03 14:16:39 <Woet>	dognosewhiskers: the old stuff is "frozen" - no one is forcing you to update your PHP.
Sep 03 14:17:06 <Woet>	dognosewhiskers: if you code everything properly, you can survive several major upgrades without anything breaking.
Sep 03 14:19:04 <niggler>	dognosewhiskers: its a balancing act
Sep 03 14:19:11 <niggler>	break too much stuff and people won't upgrade
Sep 03 14:25:59 <pyzozord>	ugh nevermind, it was happening on my local machine too
Sep 03 14:26:58 <interop_madness>	i'm having a problem with debouncing and i was wondering if someone knows a solution: i have a case where debouncing a keypress event on the leading edge results in the ultimate keypress events not being handled, and debouncing on the trailing edge results in lags. basically i need some kind of "best of both worlds" debouncing. any ideas?
Sep 03 14:27:46 <MikeD_>	"the ultimate keypress event"
Sep 03 14:28:16 <interop_madness>	yes, the last in a sequence of events relevant to debouncing
Sep 03 14:29:01 <MikeD_>	ikr, it's still an amusing phrase out of context
Sep 03 14:30:19 <qswz>	https://gist.github.com/caub/da489a286b0098d0fcd799b66a252196#file-debounce-throttle-js
Sep 03 14:31:08 <dognosewhiskers>	Woet: "no one is forcing you to update your PHP." <-- Well, it's not a person but a logical fact that forces one to upgrade in practice (security).
Sep 03 14:31:24 <qswz>	do you need a mix between debounce and throtlle?
Sep 03 14:31:26 <dognosewhiskers>	(Also, I read deadbeat's message. Just have nothing to comment on it.)
Sep 03 14:32:09 <dognosewhiskers>	Woet: I have so far never had something break which I remember in PHP, but I was thinking of things like when PHP removed the register_globals defaulting to on, etc.
Sep 03 14:32:17 <qswz>	dognosewhiskers: I don't understand why you're upset
Sep 03 14:32:23 <dognosewhiskers>	qswz: Not upset.
Sep 03 14:32:30 <qswz>	dognosewhiskers: do you pay for this language/lib?
Sep 03 14:32:35 <qswz>	ok sorry then
Sep 03 14:32:52 <interop_madness>	qswz, not sure, maybe i'll explain my scenario further:
Sep 03 14:32:58 <qswz>	they dont maitain old versions, because it's time and efforts
Sep 03 14:33:48 <dognosewhiskers>	qswz: Well, my point was that they would "bake it in" and run it in some sort of separated, virtualized manner just for old code which was made for that version of the language. Like APIs which often support "freezing" to a specific version/date.
Sep 03 14:34:00 <stennowork>	imagine php had babel
Sep 03 14:34:12 <Woet>	dognosewhiskers: way too much effort
Sep 03 14:34:26 <Woet>	dognosewhiskers: Zend sells LTS support for the people that want it.
Sep 03 14:34:28 <dognosewhiskers>	Woet: I suppose...
Sep 03 14:34:33 <Woet>	https://www.zend.com/en/support-center/support/php-long-term-support
Sep 03 14:34:48 <qswz>	dognosewhiskers: you always need to update for new security pathces
Sep 03 14:34:53 <interop_madness>	qswz, i have a form where people type stuff in a textarea. i need to highlight if the text inside textarea has changed and i need to store what has effectively been typed in sessionStorage. for reasons that suck but are irrelevant to this discussion, the first task is expensive, so i can't execute it on every keypress. but i need to get note of the last key the person typed in this textarea.
Sep 03 14:34:56 <dognosewhiskers>	I was always confused about what Zend is and how it relates to PHP. Appears to be the "commercial branch" of PHP or something.
Sep 03 14:35:06 <stennowork>	is zend still the authority regarding a php standard?
Sep 03 14:35:26 <stennowork>	dognosewhiskers, zend does a reference implementation of PHP
Sep 03 14:35:29 <qswz>	old unmaintained version -> vulnerable
Sep 03 14:35:38 <qswz>	most of the time
Sep 03 14:35:58 <interop_madness>	qswz, currently i'm doing leading debouncing on keypress and that works fine but if the user types the last few characters fast, they miss in the sessionStorage
Sep 03 14:36:04 <qswz>	interop_madness: I think I write a debounceThrottle once
Sep 03 14:36:13 <qswz>	wrote*
Sep 03 14:36:18 <qswz>	not too hard
Sep 03 14:36:21 <interop_madness>	qswz, on the other side, if i were to do trailing debouncing, there would be a visible lag
Sep 03 14:36:59 <interop_madness>	qswz, how did you do it, algorithmically speaking?
Sep 03 14:37:14 <qswz>	basically just merge the 2 functions I linked
Sep 03 14:37:35 <qswz>	let me demo it
Sep 03 14:38:03 <interop_madness>	my idea was to have a leading debounce function, and register a setTimeout handler for every key, considering it might be the last and check in the timeout handler if it was, and if so, do an extra call for that function (if it was omitted)
Sep 03 14:39:13 <MikeD_>	the craziness that we do so people don't have to hit a save button (smh)
Sep 03 14:39:24 <interop_madness>	yeah -.-
Sep 03 14:39:46 <interop_madness>	requirement for a SPA when people type long essays in the textarea and click the browser's back button
Sep 03 14:40:10 <interop_madness>	onbeforeunload won't work on fragment navigation and hashchange is raised after the fact
Sep 03 14:40:17 <MikeD_>	when do we ever get to list requirements for minimal user competence?  (i know, i know)
Sep 03 14:40:49 <interop_madness>	to be fair it might happen to a user if they fail to focus and type away and hit backspace
Sep 03 15:11:57 <lintguy>	FYI: https://bugzilla.mozilla.org/show_bug.cgi?id=1429522#c45
Sep 03 15:12:11 <lintguy>	Firefox lowered power usage 3x with latest build
Sep 03 15:12:28 <lintguy>	(On Mac)
Sep 03 15:12:45 <rnmhdn>	I've made a vuejs application with a django rest framework api backends
Sep 03 15:12:50 <rnmhdn>	-s
Sep 03 15:13:09 <rnmhdn>	when I login, my server correctly gives me csrf and sessionid cookies
Sep 03 15:13:10 <stennowork>	django is still around?
Sep 03 15:13:18 <rnmhdn>	stennowork: fuck off please
Sep 03 15:13:22 <lintguy>	What's django?
Sep 03 15:13:23 <stennowork>	rnmhdn, use credentials: 'include' for fetch-
Sep 03 15:13:25 <rnmhdn>	omg
Sep 03 15:13:26 <stennowork>	oh never mind
Sep 03 15:13:36 <stennowork>	forget this please
Sep 03 15:13:43 <lintguy>	Ok
Sep 03 15:14:07 <rnmhdn>	I'm using axios to talk to the api
Sep 03 15:14:21 <lintguy>	pretty sure i read about axios not long ago
Sep 03 15:14:23 <rnmhdn>	how can I make axios always send these two cookies after the user has logged in?
Sep 03 15:14:54 <lintguy>	Ah, yes I did: https://www.reddit.com/r/javascript/comments/cp5qhm/askjs_the_sad_state_of_axios/
Sep 03 15:15:02 <rnmhdn>	stennowork: I tried to do axios.defaults.withCredentials = true
Sep 03 15:15:46 <rnmhdn>	but then it gives me error that (Reason: Credential is not supported if the CORS header ‘Access-Control-Allow-Origin’ is ‘*’)
Sep 03 15:16:03 <qswz>	axios, django
Sep 03 15:16:09 <qswz>	too many bad choices
Sep 03 15:16:12 <lintguy>	You have to be on the same domain or the browser will block it
Sep 03 15:16:21 <qswz>	fetch, nodejs were the right solutions
Sep 03 15:16:46 <lintguy>	qswz: words of wisdom
Sep 03 15:18:07 <lintguy>	rnmhdn: withCredentials probably works, but the cross origin projection in the browser is blocking external requests.
Sep 03 15:18:26 <rnmhdn>	my vuejs is on s3
Sep 03 15:18:32 <rnmhdn>	my backend is on ec2
Sep 03 15:19:04 <lintguy>	They need to be on the same domain.
Sep 03 15:19:08 <rnmhdn>	U should put my backend on one of my subdomains?
Sep 03 15:19:16 <rnmhdn>	I
Sep 03 15:19:19 <niggler>	is module field in package.json still recommended
Sep 03 15:19:36 <lintguy>	rnmhdn: I hope you're not authenticating on the front-end towards S3
Sep 03 15:19:50 <rnmhdn>	can U elaborate?
Sep 03 15:20:13 <lintguy>	S3 should only be used to host front-end code/images/resource, public data
Sep 03 15:21:01 <lintguy>	rnmhdn: have you applied a SSL cert to your back-end?
Sep 03 15:21:18 <lintguy>	rnmhdn: or connecting directly to IP?
Sep 03 15:21:39 <lintguy>	Bbl, gym-time
Sep 03 15:33:32 <qswz>	lol vuejs also
Sep 03 15:33:58 <stennowork>	whats wrong with vue?
Sep 03 15:34:00 <qswz>	ok sorry for trolling
Sep 03 15:35:49 <ZenZerg>	Why does my firefox console sometimes act like I'm typing free text and not commands
Sep 03 15:36:30 <stennowork>	because you are doing it wrong?
Sep 03 15:37:23 <ZenZerg>	?
Sep 03 15:38:45 <Alexendoo>	ZenZerg: You mean like it creates newlines?
Sep 03 15:39:14 <ZenZerg>	maybe, I'm aware you can use shift+enter to do multiline
Sep 03 15:39:31 <ZenZerg>	but I can type in nonsense and it doesn't respons
Sep 03 15:39:42 <ZenZerg>	where it usually gives me 'sdfsx' is not defined
Sep 03 15:39:58 <Alexendoo>	It'll do that automatically if you have any unpaired parenthesis or anything like that
Sep 03 15:40:32 <ZenZerg>	I don't think that's the issue
Sep 03 15:40:48 <englosh>	is there a way to read a file besides using XMLHttpRequest and FileReader?
Sep 03 15:40:53 <Alexendoo>	Can you screenshot it ZenZerg?
Sep 03 15:41:17 <stennowork>	englosh, define 'read a file'
Sep 03 15:41:29 <stennowork>	fetch can get filse
Sep 03 15:41:38 <englosh>	ah fetch too
Sep 03 15:41:44 <ZenZerg>	https://imgur.com/a/A9N5Mu5
Sep 03 15:42:34 <ZenZerg>	refreshing the page doesn't fix it but closing the browser does
Sep 03 15:42:48 <ZenZerg>	considering i suck at javascript, it's pretty jarring to have to do that so many times
Sep 03 15:43:22 <Alexendoo>	ZenZerg: That would happen if you accidentally created an infinite loop somewhere, is the page otherwise responsive?
Sep 03 15:43:32 <ZenZerg>	yes
Sep 03 15:43:54 <qswz>	interop_madness: working on it https://repl.it/@caub/debounttle
Sep 03 15:44:07 <qswz>	I'm making a test now
Sep 03 15:44:11 <Alexendoo>	hmm interesting, is this page public ZenZerg?
Sep 03 15:45:10 <ZenZerg>	no, there's not much to the file though - just a couple tables and a for loop that's not defined yet and i'm trying to figure out why
Sep 03 15:45:28 <stennowork>	... a 'for loop that is not defined'?
Sep 03 15:45:40 <stennowork>	i assume you are running into an infinite loop somewhere lol
Sep 03 15:45:45 <stennowork>	just show your code
Sep 03 15:45:49 <ZenZerg>	I'll double check, sec
Sep 03 15:45:54 <stennowork>	having us guessing will not help anyone
Sep 03 15:46:12 <ZenZerg>	would that persist through a page refresh though?
Sep 03 15:46:25 <ZenZerg>	theres nothing firing on load as far as I know
Sep 03 15:46:25 <stennowork>	if you reload the page with the same javascript? yes
Sep 03 15:46:29 <qswz>	is there a term for the condition where someone ask a question assuming people know all the context?
Sep 03 15:47:26 <interop_madness>	qswz, thanks. i'm also looking at the other throttle/debounce functions you linked to jsfiddle on your gist you posted earlier
Sep 03 15:47:43 <DnzAtWrk>	http://www.commitstrip.com/en/2017/05/22/a-story-about-callbacks/
Sep 03 15:47:45 <ZenZerg>	that's the part that confuses me, why is it still running on reload if it's just a function fired by a button
Sep 03 15:47:46 <DnzAtWrk>	how I feel right now :P
Sep 03 15:48:49 <DnzAtWrk>	why aren't images included with the on load event
Sep 03 15:48:50 <ZenZerg>	looks like you were right, the loop structure was fine but there was a console.log() that isn't coming out right
Sep 03 15:48:56 <stennowork>	DnzAtWrk, i know that one
Sep 03 15:49:02 <ZenZerg>	..which I"m trying to debug by using the console ><
Sep 03 15:50:19 <Alexendoo>	ZenZerg: If you create an infinite loop, you can't actually refresh the page. If you're testing something on localhost where everything loads fast anyway, you may not notice it doesn't actually happen
Sep 03 15:51:00 <prometh>	DnzAtWrk: images _are_ included in load/onload events
Sep 03 15:51:08 <ZenZerg>	that's possible, I'm using the same code and it doesn't give me the problem now though
Sep 03 15:52:04 <DnzAtWrk>	<img src="image.png" onload="ready=true" />
Sep 03 15:52:07 <DnzAtWrk>	take that common sense
Sep 03 15:52:25 <prometh>	...
Sep 03 15:52:53 <prometh>	why are you writing xhtml?
Sep 03 15:54:45 <ZenZerg>	I had ()'s instead of [], I wonder how many times someone has had to debug a syntax error
Sep 03 15:56:08 <stennowork>	could've just shared your code too but apparently thats something you just don't do, regardless of how often it gets requestsed
Sep 03 15:56:33 <notchris>	o/
Sep 03 15:57:07 <DnzAtWrk>	hmmm
Sep 03 15:57:07 <stennowork>	o7
Sep 03 15:57:12 <DnzAtWrk>	defer doesn't seem to act like on load
Sep 03 15:57:17 <DnzAtWrk>	jachused
Sep 03 15:57:47 <englosh>	is it really not possible to list all filenames of a folder in JavaScript? I mean I can already easily access a specific file with XMLHttpRequest, why can't I just as well list all the files of a folder? there's really no security vulnerability here
Sep 03 15:57:48 <ZenZerg>	I have no problem sharing the code, but I'm trying to learn why the browser acts that way
Sep 03 15:58:00 <notchris>	can you make a fiddle / share the code?
Sep 03 15:58:11 <englosh>	I mean, just the filenames
Sep 03 15:58:24 <Alexendoo>	You mean files from the server englosh?
Sep 03 15:58:42 <stennowork>	FTP directory listiiiiiiiiings
Sep 03 15:58:49 <englosh>	hmm I guess they will later be a on a server?
Sep 03 15:59:01 <stennowork>	you mean from your own filesystem or what?
Sep 03 15:59:11 <stennowork>	like from the browser filesystem?
Sep 03 16:00:02 <englosh>	well from a specific URL
Sep 03 16:00:12 <englosh>	e.g. mywebsite.com/textures/texture1.png
Sep 03 16:00:20 <englosh>	everyone can access that easily
Sep 03 16:00:30 <englosh>	and I want to access all texture filenames in mywebsite.com/textures
Sep 03 16:00:50 <Alexendoo>	That's entirely up to your website to expose
Sep 03 16:00:57 <prometh>	englosh: then set up a file server
Sep 03 16:01:19 <prometh>	englosh: it's generally a security risk, though, as it can be used to find vulnerabilities
Sep 03 16:01:36 <englosh>	well I won't have anything in that folder but textures
Sep 03 16:01:50 <notchris>	then make a json file listing all the files
Sep 03 16:01:51 <prometh>	then create a dir listing for that dir
Sep 03 16:02:11 <englosh>	and it doesnt make any sense to make that private because if you really want to access those you can still do that by reading the memory of the game once the textures are loaded
Sep 03 16:02:26 <notchris>	or make a request to an api that uses fs to pull the listing and sends back an object
Sep 03 16:02:32 <prometh>	create a restful endpoint, or something
Sep 03 16:02:38 <prometh>	put a php file
Sep 03 16:02:47 <prometh>	start a file server and limit access to that dir
Sep 03 16:02:51 <prometh>	lots of options
Sep 03 16:03:51 <englosh>	I just want to avoid having to hardcode all the filenames in my code
Sep 03 16:04:11 <prometh>	that's fine
Sep 03 16:04:11 <stennowork>	englosh, url paths do not neccessarily correspond with directory pathes
Sep 03 16:04:40 <stennowork>	i.e. from knowing an image url you cannot actually deduce anything in regard to other files
Sep 03 16:04:42 <prometh>	engl
Sep 03 16:04:47 <stennowork>	you could, but not reliably
Sep 03 16:05:34 <notchris>	how many files are we talking?
Sep 03 16:05:39 <notchris>	< 20 id say just hardcode
Sep 03 16:06:22 <englosh>	 well could be more over time
Sep 03 16:07:02 <notchris>	i guess its a comparison between the effort to setup something semi-difficult compared to just hardcoding 20 things initially
Sep 03 16:10:16 <DnzAtWrk>	firefox has really tightened up the file:// security lately
Sep 03 16:10:20 <DnzAtWrk>	I both like and hate it
Sep 03 16:11:02 <DnzAtWrk>	Would like to use an image in the same directory as the .html file and get the contents
Sep 03 16:11:06 <DnzAtWrk>	it's now forbidden
Sep 03 16:11:11 <DnzAtWrk>	need a local server I guess :P
Sep 03 16:11:20 <englosh>	yeah that's what I'm doing too
Sep 03 16:11:36 <DnzAtWrk>	and I understand exactly why they did it
Sep 03 16:11:39 <DnzAtWrk>	it was a massive hole
Sep 03 16:12:02 <DnzAtWrk>	open the wrong file.html and it could steal data from your computer
Sep 03 16:12:28 <notchris>	all your anime, exposed
Sep 03 16:12:43 <DnzAtWrk>	yes, totally safe for work
Sep 03 16:13:27 <notchris>	mozilla, stealing your anime
Sep 03 16:13:37 <ZenZerg>	I don't like the idea of hardcoding things like that, is there a way to do that in pure javascript?
Sep 03 16:13:38 <prometh>	maybe they're looking for new logo ideas?
Sep 03 16:14:12 <prometh>	really, all they need to do is add a laser to the dinosaur
Sep 03 16:14:20 <notchris>	i thought it was a fox
Sep 03 16:14:23 <salcedo>	people use firefox?
Sep 03 16:14:28 <notchris>	no
Sep 03 16:14:43 <notchris>	not since their CEO harassed their employees
Sep 03 16:14:47 <prometh>	!
Sep 03 16:14:49 <notchris>	(ex-ceo)
Sep 03 16:14:49 <salcedo>	wait wut
Sep 03 16:14:51 <ZenZerg>	my brain trailed off into things I know, but something about calling a python script to generate an array for it sounds messy
Sep 03 16:14:53 <prometh>	yeah, wut
Sep 03 16:15:00 <notchris>	yeah mozilla had the creator of JS as their ceo
Sep 03 16:15:05 <notchris>	and he made some terrible remakes
Sep 03 16:15:07 <notchris>	remarks*
Sep 03 16:15:21 <salcedo>	when/where was this? lol
Sep 03 16:15:25 <notchris>	a couple years back
Sep 03 16:15:33 <prometh>	link plz
Sep 03 16:15:43 <salcedo>	so that made people stop using FF?
Sep 03 16:16:00 <notchris>	https://www.forbes.com/sites/quora/2014/04/11/did-mozilla-ceo-brendan-eich-deserve-to-be-removed-from-his-position-due-to-his-support-for-proposition-8/#106b22302158
Sep 03 16:16:03 <ZenZerg>	some people are really political about things and boycott over any reason they can find
Sep 03 16:16:05 <notchris>	probably not
Sep 03 16:16:08 <notchris>	i mean
Sep 03 16:16:15 <ZenZerg>	I can't imagine most people being like that
Sep 03 16:16:20 <DnzAtWrk>	well, they'll be sad when they find out there are bad people everywhere
Sep 03 16:16:22 <notchris>	it would be like boycotting react because of FB and not because its Vues lesser
Sep 03 16:16:24 <DnzAtWrk>	serving them coffee
Sep 03 16:16:28 <DnzAtWrk>	etc.
Sep 03 16:16:34 <salcedo>	ZenZerg: well. there's a healthy line to draw.
Sep 03 16:16:50 <salcedo>	deciding not to use FF becasue the CEO said something they don't like sounds stupid
Sep 03 16:17:05 <ZenZerg>	I agree with that, I won't buy from some companies because of what they openly support
Sep 03 16:17:38 <salcedo>	not using python-language-server because it's coded by palantir? yeah i can totally dig that. fuck palantir.
Sep 03 16:18:15 <notchris>	I mean Facebook has stolen tons of data / exposed data
Sep 03 16:18:16 <prometh>	i don't support humanity
Sep 03 16:18:20 <notchris>	but people use React
Sep 03 16:18:21 <salcedo>	ofc now i'm probably on a list now. lol
Sep 03 16:18:32 <notchris>	but FB  != react devs really
Sep 03 16:18:34 <DnzAtWrk>	Why does React ring my dramaballs
Sep 03 16:18:35 <salcedo>	notchris: that is an excellent point.
Sep 03 16:18:35 <notchris>	its just unfortunate
Sep 03 16:18:43 <DnzAtWrk>	bells*
Sep 03 16:18:45 <DnzAtWrk>	god damn
Sep 03 16:18:45 <notchris>	Walmart made HAPI js
Sep 03 16:18:47 <Alexendoo>	ZenZerg: If you want to include a large list of URLs you can have webpack (or whatever other bundler) do it, but unless it's annoying to maintain I would just hardcode it
Sep 03 16:18:48 <notchris>	but people use that
Sep 03 16:18:56 <prometh>	CEOs are overpaid
Sep 03 16:19:04 <notchris>	AirBnB had its share of issues
Sep 03 16:19:05 <notchris>	too
Sep 03 16:19:07 <salcedo>	and tons of people use airbnb style guide and stuff lol
Sep 03 16:19:09 <prometh>	let's just eliminate capitalism
Sep 03 16:19:10 <notchris>	It just shows
Sep 03 16:19:12 <niggler>	firefox created its own demise
Sep 03 16:19:13 <notchris>	Developers > CEOs
Sep 03 16:19:19 <DnzAtWrk>	And why do people keep using the term AirBnB for everything
Sep 03 16:19:21 <DnzAtWrk>	it's so confusing
Sep 03 16:19:26 <notchris>	Bcause of Lint
Sep 03 16:19:29 <prometh>	DnzAtWrk: kleenex
Sep 03 16:19:29 <notchris>	and standards
Sep 03 16:19:39 <notchris>	prometh: TISSUES
Sep 03 16:19:43 <niggler>	notchris: using react is implicitly supporting FB
Sep 03 16:19:43 <prometh>	;)
Sep 03 16:19:44 <notchris>	(issues)
Sep 03 16:19:51 <notchris>	@niggler I agree
Sep 03 16:19:51 <prometh>	got an issue? here's a tissue.
Sep 03 16:19:53 <niggler>	esp since there are compelling alternatives like vue
Sep 03 16:19:55 <notchris>	but it depends
Sep 03 16:19:57 <prussian>	how is using react supporting facebook?
Sep 03 16:19:57 <DnzAtWrk>	I support facebook by getting an oculus quest
Sep 03 16:19:58 <prussian>	lol
Sep 03 16:20:00 <DnzAtWrk>	freaking love it
Sep 03 16:20:05 <notchris>	React was made by Facebook
Sep 03 16:20:12 <notchris>	and its downloads give FB publicity
Sep 03 16:20:15 <prometh>	oculus doesn't have foveated rendering, goddamnit
Sep 03 16:20:20 <prussian>	I guess
Sep 03 16:20:22 <salcedo>	niggler: yeah but what happens if you decide to use something like quasar or any component set for vue that is based off of material design?
Sep 03 16:20:24 <DnzAtWrk>	foveated?
Sep 03 16:20:27 <salcedo>	niggler: are you then supporting google?
Sep 03 16:20:31 <prometh>	depth-of-field
Sep 03 16:20:32 <notchris>	Im not saying React devs have the same vlues
Sep 03 16:20:34 <prussian>	as if anyone is reading MIT licenses in downloaded bundles
Sep 03 16:20:35 <notchris>	Thats unfair
Sep 03 16:20:36 <notchris>	But
Sep 03 16:20:43 <DnzAtWrk>	oh my god
Sep 03 16:20:45 <DnzAtWrk>	that's amazing
Sep 03 16:20:52 <DnzAtWrk>	eye tracking for reduced detail
Sep 03 16:20:57 <DnzAtWrk>	see, it's the eye tracking which is amazing
Sep 03 16:21:02 <DnzAtWrk>	who gives a shit about level of detail
Sep 03 16:21:03 <prometh>	yep, but also for blurred depths
Sep 03 16:21:07 <DnzAtWrk>	I want FOV
Sep 03 16:21:09 <niggler>	i think as individuals we vote with our wallets and our choices
Sep 03 16:21:11 <DnzAtWrk>	ingame
Sep 03 16:21:13 <prometh>	level of detail is important because of performance
Sep 03 16:21:21 <prometh>	4k vr is expensive
Sep 03 16:21:37 <niggler>	it's hard to deny that adtech funded material ui salcedo
Sep 03 16:21:46 <thykka>	i try to not support facebook.. no whatsapp, no instagram, no nothing they've made, not even yarn
Sep 03 16:22:03 <notchris>	I mean they just bought it
Sep 03 16:22:09 <notchris>	They made only some of those things
Sep 03 16:22:17 <prussian>	ya, but why? one thing to refuse to use their service, but I hardly see a problem in consuming a free and opensource library or software from them
Sep 03 16:22:31 <niggler>	nah its implicit support
Sep 03 16:22:33 <notchris>	Well, Facebook has ads on those open source projects
Sep 03 16:22:42 <prometh>	thykka: npmjs.com/haunted
Sep 03 16:22:44 <notchris>	So your inadvertently helping FB
Sep 03 16:22:47 <salcedo>	niggler: that doesn't automatically mean i should not use good software if it's good?
Sep 03 16:22:50 <prussian>	I... see
Sep 03 16:23:13 <salcedo>	should i not use github if i hate microsoft?
Sep 03 16:23:17 <notchris>	I prefaced this with the fact that FB developers do not share FBs views
Sep 03 16:23:19 <thykka>	probably not
Sep 03 16:23:27 <thykka>	salcedo, plenty of people left github after the announcement
Sep 03 16:23:38 <prometh>	announcement?
Sep 03 16:23:44 <niggler>	many of us knew that would happen once github announced vc funding
Sep 03 16:23:49 <thykka>	that ms is acquiring github
Sep 03 16:23:57 <niggler>	github couldn't possibly hit the numbers on their own
Sep 03 16:24:15 <notchris>	And besides, githubs acting CEO is the husband of a prominent contributer to Vue and the OS community
Sep 03 16:24:16 <salcedo>	github has always been a proprietary platform
Sep 03 16:24:20 <niggler>	we're going to see something similar with npm soon
Sep 03 16:24:33 <thykka>	salcedo, proprietary is one thing, owned by ms is another
Sep 03 16:24:35 <niggler>	soon may be years
Sep 03 16:24:45 <prometh>	isn't vue mostly chinese?
Sep 03 16:24:45 <salcedo>	niggler: i def agree on the npm thing
Sep 03 16:24:48 <DeltaHeavy>	salcedo Companies as large as Microsoft are best thought of a collection of multiple smaller companies. I don't like everything MS is doing and used to loathe them but especially for the past while they've been quite awesome in many respects.
Sep 03 16:24:50 <notchris>	no @prometh
Sep 03 16:24:59 <niggler>	npm took too much money for it to just fizzle out
Sep 03 16:25:03 <DeltaHeavy>	prometh Still has a significant base outside of that, but it's more popular than React in Vue.
Sep 03 16:25:14 <DeltaHeavy>	notchris It is isn't it?
Sep 03 16:25:21 <notchris>	@DeltaHeavy What isnt what?
Sep 03 16:25:37 <DeltaHeavy>	Vue is far more popular in China than it is here.
Sep 03 16:25:45 <notchris>	They teach it in elementary schools in China
Sep 03 16:25:52 <notchris>	but idk, it depends
Sep 03 16:26:02 <notchris>	There are more English Vue libraries than non-english
Sep 03 16:26:05 <salcedo>	DeltaHeavy: right on. it's having your cake and eating it too.
Sep 03 16:26:08 <niggler>	id bet on vue tbh
Sep 03 16:26:12 <notchris>	And more English that Chinese/English
Sep 03 16:26:15 <DeltaHeavy>	React and Vue are big across the glob but Vue seems to be bigger in China and React more so in Europe and North America.
Sep 03 16:26:40 <DeltaHeavy>	Well English is the #1 language to learn generally speaking including in China.
Sep 03 16:26:43 <niggler>	better stated as vue is the dominant player in chinese-speaking JS communities and react is the dominant player in english-speaking JS communities
Sep 03 16:26:45 <DnzAtWrk>	any way to ensure order of load events for multiple scripts?
Sep 03 16:26:53 <DnzAtWrk>	I'd assume they would be called in the order they were added
Sep 03 16:26:54 <DeltaHeavy>	Developer communities regardless of what peoples first lanugage is tend to be English.
Sep 03 16:27:03 <niggler>	not true
Sep 03 16:27:12 <DeltaHeavy>	I don't hold that view strongly.
Sep 03 16:27:41 <niggler>	like how this is english, there are similar JS chats in simplified chinese
Sep 03 16:27:42 <notchris>	Vue has an open letter with comparisons between Vue / React and others, with input from React developers. They all obviously share / bounce ideas and concepts
Sep 03 16:28:04 <notchris>	So it matters less whom uses which really
Sep 03 16:28:20 <DeltaHeavy>	niggler I understand that, but a OSS project consisting of primarily Chinese people that tries to reach a global audience will likely prioritize English when possible I would think.
Sep 03 16:28:40 <prometh>	microsoft created a lot of new ideas that are now standardized in js and css
Sep 03 16:28:47 <prometh>	facebook has created a lot with react
Sep 03 16:28:50 <notchris>	like HALO
Sep 03 16:28:54 <DeltaHeavy>	I do find React has a better ecosystem of libraries over Vue. That by far is the primary reason I reach for React over Vue.
Sep 03 16:28:54 <niggler>	more complex than that
Sep 03 16:28:56 <devsnek>	communists are trying to take over America using cheap Chinese websites
Sep 03 16:29:10 <thykka>	!
Sep 03 16:29:10 <notchris>	.tk
Sep 03 16:29:17 <DeltaHeavy>	niggler I'd think so but generally speaking I"d think it's true. Not sure of myself though.
Sep 03 16:29:42 <devsnek>	that's because react is a library and vue is a framework
Sep 03 16:29:53 <notchris>	similar
Sep 03 16:29:55 <devsnek>	react is a building block, vue is the whole building
Sep 03 16:30:04 <salcedo>	"communist are trying to take over America using cheap Chinese websites" <-- rofl! love this.
Sep 03 16:30:06 <niggler>	in the same way that bilingual people translate english docs to chinese, bilingual people translate chinese docs to english, that's the core flow between the ecosystems
Sep 03 16:30:12 <salcedo>	the sarcasm is gold
Sep 03 16:30:46 <salcedo>	most of the chinese websites i visit run angular
Sep 03 16:30:53 <DeltaHeavy>	Eh, I find the "is it a lib or framework" to not be a useful distinction. Vue and React do just about the same amount of stuff responsibility wise IME. Vue just has more features about how to change and access and compute data.
Sep 03 16:31:02 <devsnek>	it's a very important distinction
Sep 03 16:31:11 <DeltaHeavy>	What does Vue concern itself with that React doesn't?
Sep 03 16:31:36 <devsnek>	frameworks are an entire flow concerning how your app is built, the structure, etc
Sep 03 16:31:37 <DeltaHeavy>	They both don't care about HTTP requests / where your data comes from, they both largely just care about the DOM and the data around it after it's already in memory.
Sep 03 16:31:42 <devsnek>	libraries just provide apis
Sep 03 16:31:50 <DeltaHeavy>	I don't think Vue dictates any more of your app's flow than React.
Sep 03 16:32:09 <notchris>	according to both the Vue / React devs:
Sep 03 16:32:12 <notchris>	`maintain focus in the core library, with concerns such as routing and global state management handled by companion libraries`
Sep 03 16:32:13 <DeltaHeavy>	Frameworks still just provide APIs but the use of those APIs tends to influence the general architecture of your app.
Sep 03 16:32:34 <DeltaHeavy>	Don't you still need `vue-router`?
Sep 03 16:32:34 <devsnek>	vue actually has a source layout though
Sep 03 16:32:43 <bberry>	for storing/organizing/downloading ~100 MB files, is there any difference using GCP vs AWS vs Azure?  The use-case for the files is the server will be storing them in the cloud, broadcasting to our devices a new file is ready for downloading, and those devices will retrieve them from the cloud.
Sep 03 16:32:49 <devsnek>	meanwhile react doesn't even make you use jsx
Sep 03 16:32:51 <notchris>	for anyone interested in the facts: https://vuejs.org/v2/guide/comparison.html
Sep 03 16:32:54 <DeltaHeavy>	devsnek How so? It's been over a year since I've written Vue so I might forget.
Sep 03 16:33:03 <notchris>	rather than generalizations
Sep 03 16:33:04 <DeltaHeavy>	Vue doesn't require you to use `.vue` files either.
Sep 03 16:33:05 <prussian>	bberry: literally any CDN will probably be good enough
Sep 03 16:33:15 <prussian>	akami, etc.
Sep 03 16:33:25 <devsnek>	vue components are html+css+js in a single file
Sep 03 16:33:28 <prussian>	don't think it matters if you choose to use S3 over something else all that much
Sep 03 16:33:30 <bberry>	prussian: yeah probably... honestly i dont have much (or any) knowledge haha
Sep 03 16:33:36 <notchris>	devsnek: its optional
Sep 03 16:33:37 <bberry>	yeah kk, thats what i figured
Sep 03 16:33:56 <devsnek>	notchris: wdym optional
Sep 03 16:34:01 <prussian>	👍
Sep 03 16:34:13 <devsnek>	you can vue.createComponent('h1')?
Sep 03 16:34:23 <notchris>	well just expanding on what you said, you can optionally have those 3 in a component
Sep 03 16:34:26 <notchris>	you could also just have js
Sep 03 16:34:32 <devsnek>	I mean you can split them up yeah
Sep 03 16:34:37 <notchris>	ah okay yea
Sep 03 16:34:43 <Alexendoo>	You actually can do that yes devsnek
Sep 03 16:34:58 <DeltaHeavy>	devsnek You don't have to do that at all
Sep 03 16:35:06 <devsnek>	but the public api is wrapped tightly around that
Sep 03 16:35:10 <DeltaHeavy>	it's the same deal as JSX in my eyes
Sep 03 16:35:13 <notchris>	you could also just do Vue.component
Sep 03 16:35:18 <devsnek>	react doesn't even know if you're using jsx or not
Sep 03 16:35:32 <DeltaHeavy>	You can have a `render` property on a Vue component that holds your "view"
Sep 03 16:35:38 <DeltaHeavy>	Neither does Vue, only the compiler does
Sep 03 16:36:10 <bberry>	ty prussian :D
Sep 03 16:36:19 <devsnek>	perhaps Vue is less framework than I remember
Sep 03 16:36:30 <devsnek>	but the distinction between framework and library still exists
Sep 03 16:36:44 <prometh>	angularjs was a framework.. is angular as well?
Sep 03 16:37:00 <devsnek>	angular is definitely a framework
Sep 03 16:37:31 <prometh>	so google learned nothing... cool.
Sep 03 16:39:22 <DeltaHeavy>	devsnek I agree it can be a useful distinction, though I"d say all frameworks are still libs, and at he level of React / Vue its a hazy distinction IMO
Sep 03 16:39:28 <interop_madness>	qswz, the debouttle implementation seems to do the trick. thanks a lot
Sep 03 16:39:31 <DeltaHeavy>	Angular I'd for sure qualify as one
Sep 03 16:39:45 <Alexendoo>	Is it that useful if nobody can agree on what it means?
Sep 03 16:39:52 <devsnek>	basically I don't use vue
Sep 03 16:39:57 <devsnek>	therefore Vue is bad
Sep 03 16:40:25 <DeltaHeavy>	lol
Sep 03 16:40:42 <DeltaHeavy>	Ecosystem aside I still slightly prefer React
Sep 03 16:41:02 <DeltaHeavy>	Alexendoo There is an agree'd upon definition
Sep 03 16:41:10 <DeltaHeavy>	Angular is 100% one
Sep 03 16:41:31 <Intelo>	how do I do this in short? if(g==="male")let gender = "m"; if(g==="female") let gender = "f" else gender = "u"
Sep 03 16:42:00 <prussian>	as in, as an expression? what's wrong with what you have there?
Sep 03 16:42:22 <Intelo>	prussian,  should be short.
Sep 03 16:42:31 <Intelo>	like turnery or || or : things
Sep 03 16:42:35 <prussian>	also, note that the let will bind it to the scope of the branch block
Sep 03 16:42:36 <DeltaHeavy>	Intelo I'd write it as you have it there
Sep 03 16:42:37 <Intelo>	some js magic
Sep 03 16:42:42 <DeltaHeavy>	But `let gender;` at the top
Sep 03 16:42:53 <prussian>	Intelo: so, as an expression?
Sep 03 16:43:18 <Intelo>	ya
Sep 03 16:43:24 <MikeD_>	why are you trying to handle gender with more than one variable?
Sep 03 16:43:35 <DeltaHeavy>	You'd need nested ternaries to do it as one statement.
Sep 03 16:43:37 <DeltaHeavy>	Which is gross
Sep 03 16:43:55 <englosh>	why do people sometimes use arrays like UInt8Array over a normal array? is it more performant? for example when you only store 1s and 0s in the array (booleans)
Sep 03 16:44:54 <Alexendoo>	Most of the time it's because they're using an API that uses them
Sep 03 16:45:04 <DeltaHeavy>	englosh More performant but it has specific use cases.
Sep 03 16:45:29 <DeltaHeavy>	It's immutable so you can't modify it's contents even IIRC.
Sep 03 16:45:41 <englosh>	also why for example UInt8Array instead of UInt16Array or Int32Array etc.? Does UInt8Array also have the lowest memory usage?
Sep 03 16:45:43 <Alexendoo>	It's very much mutable
Sep 03 16:45:52 <englosh>	oh you can't modify its content. i see
Sep 03 16:45:54 <niggler>	also guarantees values are in a range
Sep 03 16:46:00 <prometh>	why doesn't js have Vectors ?
Sep 03 16:46:01 <devsnek>	types arrays are mutable
Sep 03 16:46:24 <devsnek>	they're also the only place the engines can safely use types like uint8
Sep 03 16:46:39 <devsnek>	they're also guaranteed to be memory aligned
Sep 03 16:46:45 <devsnek>	so all in all they're very fast
Sep 03 16:47:52 <Alexendoo>	prometh: which definition of vector are you asking about?
Sep 03 16:47:59 <devsnek>	englosh: if you're storing only booleans, you can just use a normal array
Sep 03 16:48:20 <prometh>	Alexendoo: fixed type arrays
Sep 03 16:49:05 <devsnek>	you can make Nd arrays very easily
Sep 03 16:49:31 <englosh>	devsnek: I'm generating the booleans with an algorithm
Sep 03 16:49:36 <devsnek>	normal arrays containing either more normal arrays or typed arrays
Sep 03 16:49:41 <devsnek>	englosh: neat
Sep 03 16:50:10 <prometh>	also, fixed-length Vectors
Sep 03 16:50:46 <prometh>	it just seems that they would offer better performance, just as the *int-typed Arrays do
Sep 03 16:51:27 <devsnek>	perhaps
Sep 03 16:51:31 <brool>	arrays are overrated, use linked lists
Sep 03 16:51:46 <devsnek>	some arrays are linked lists
Sep 03 16:51:51 <prometh>	brool: tehy are linked lists, if you splice
Sep 03 16:52:04 <devsnek>	no then they're just large copy operations
Sep 03 16:52:05 <prussian>	just abstract all of the things to the point where you don't care if it's linked or not
Sep 03 16:52:08 <prometh>	and probably unshift, too
Sep 03 16:52:12 <prussian>	yolo
Sep 03 16:52:35 <prometh>	shift, unshift, splice
Sep 03 16:53:10 <notchris>	snap, crackle, pop
Sep 03 16:53:18 <prometh>	they might even convert back to regular simple lists after time... crazy optimizations
Sep 03 16:53:52 <prometh>	the point is, we don't need to care
Sep 03 16:53:56 <prussian>	this
Sep 03 16:54:06 <prussian>	the magic of types
Sep 03 16:54:21 <MikeD_>	don't most 'performance' considerations for huge amounts of booleans use bits an treat whole groups of them as integers?
Sep 03 16:54:35 <bberry>	should i be concerned with the upload bandwidth of my little linode server?  i'd need to be able to upload 100 MB files to thousands of devices...
Sep 03 16:54:46 <brool>	MikeD_: yes
Sep 03 16:54:48 <prussian>	I know C++'s STL made the mistake of making vectors of bool's like bitfields
Sep 03 16:54:54 <prussian>	I really want to murder the person who did that
Sep 03 16:54:55 <bberry>	I'm guessing yes, that id be better served by using S3 or some other CDN
Sep 03 16:56:13 <DeltaHeavy>	prussian Isn't that compiler specific?
Sep 03 16:57:23 <prussian>	specific to the template lib, either way it's called out specially in the spe
Sep 03 16:57:51 <timwis>	Hey all, I'm trying to download a file from my API in CSV format. I setup the API to respond with CSV and Content-Disposition header if the request includes the header `Accept: text/csv`. But I'm starting to think it's not possible for my client JS app to actually download it. I can't include headers on a window.location redirect, and if I do it via XHR, the browser won't initiate the download. Any ideas?
Sep 03 16:58:15 <notchris>	id just do utf
Sep 03 16:58:19 <notchris>	its just csv values right
Sep 03 16:58:44 <timwis>	notchris: huh?
Sep 03 16:59:37 <notchris>	Im saying, you can initiate the dload from a page of the csv if you cant sent it with headers for w/e reaon
Sep 03 17:00:20 <prussian>	uh. for that problem timwis you can create an object url for your CSV blob and then create an anchor tag with a download attr.
Sep 03 17:00:25 <prussian>	I think that should work
Sep 03 17:00:26 <notchris>	ayyyy
Sep 03 17:00:29 <notchris>	prussian++
Sep 03 17:00:33 <prussian>	witht he anchor having the uh...
Sep 03 17:00:41 <prussian>	blob url ofc
Sep 03 17:00:51 <notchris>	yeah you create the anchor and then you can do like .click() on it too on some browsers right?
Sep 03 17:00:56 <timwis>	haha oh no, I was hoping that wasn't the only option 😭
Sep 03 17:00:58 <prussian>	pretty sure
Sep 03 17:01:03 <notchris>	timwis: its an easy option
Sep 03 17:01:12 <prussian>	I mean, there is probably like 10 different ways to skin this cat
Sep 03 17:01:15 <notchris>	true
Sep 03 17:01:26 <prussian>	but download attr anchor tag and the bootiful blob urls are probably the easiest
Sep 03 17:01:30 <timwis>	prussian: actually I think this may be the only one. Can you think of any others?
Sep 03 17:01:46 <prussian>	not at the moment
Sep 03 17:01:49 <DeltaHeavy>	timwis You can do it as a download
Sep 03 17:01:59 <DeltaHeavy>	timwis https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Disposition
Sep 03 17:02:09 <timwis>	You're talking about requesting it via XHR, loading it into memory, converting it to an object, base64 encoding it, and creating an <a> tag for it and clicking that. yeah?
Sep 03 17:02:25 <notchris>	yep
Sep 03 17:02:35 <timwis>	Having to load it all into memory alone is quite less than ideal :/ I made sure the backend is streaming it so it can support large files
Sep 03 17:02:36 <notchris>	or just initiating the click
Sep 03 17:03:07 <timwis>	DeltaHeavy: the server does respond with that tag, when the request is made with an `Accept: text/csv` header. The question is how to include that header in the request
Sep 03 17:03:42 <notchris>	https://www.irccloud.com/pastebin/vGX7bSmQ/
Sep 03 17:03:47 <notchris>	@timwis ^
Sep 03 17:04:24 <timwis>	notchris: the server already does that if the request is made with an `Accept: text/csv` header
Sep 03 17:04:34 <notchris>	then what's the issue
Sep 03 17:04:44 <timwis>	The question is how to include that header in the request
Sep 03 17:04:50 <notchris>	https://www.irccloud.com/pastebin/AkO3OJNP/
Sep 03 17:05:02 <notchris>	timwis: how about that
Sep 03 17:05:19 <timwis>	notchris: that's the response header
Sep 03 17:05:34 <timwis>	The server is responding just fine -- it includes the `Content-disposition` header and the `Content-type: text/csv` header
Sep 03 17:05:38 <prussian>	I don't think blob urls are like data urls
Sep 03 17:05:42 <timwis>	Only when the *request* includes the `Accept: text/csv` header
Sep 03 17:07:40 <notchris>	timwis: im confused, youre saying it happens on upload?
Sep 03 17:08:43 <qswz>	n> let fn=perf_hooks.timerify(console.log); fn(1, 2)
Sep 03 17:08:45 <jellobot>	(fail) TypeError: perf_hooks.timerify is not a function
Sep 03 17:08:49 <timwis>	notchris: no, there's no uploading. The client's *request* must include the `Accept: text/csv` header in order for the server to respond with a CSV file and the appropriate download headers.
Sep 03 17:08:55 <stenno>	n> (zomg=3,()=>zomg)()
Sep 03 17:08:56 <jellobot>	(okay) 3
Sep 03 17:09:03 <qswz>	n> let fn=perf_hooks.performance.timerify(console.log); fn(1, 2)
Sep 03 17:09:05 <jellobot>	(okay) 1 2 undefined
Sep 03 17:09:07 <notchris>	        Accept : "text/csv; charset=utf-8"  "Content-Type": "text/csv; charset=utf-8"
Sep 03 17:09:15 <notchris>	timwis: in the http req?
Sep 03 17:09:33 <timwis>	notchris: the question is how to include the custom headers in the request
Sep 03 17:10:00 <notchris>	are you using XMLHttpRequest or fetch
Sep 03 17:10:18 <notchris>	timwis:
Sep 03 17:11:11 <timwis>	at the moment XHR but I don't think fetch can do it either
Sep 03 17:11:36 <notchris>	https://www.irccloud.com/pastebin/1i2FJjS9/
Sep 03 17:12:58 <notchris>	@timwis
Sep 03 17:14:30 <DeltaHeavy>	timwis You need to include a `Content-Type` header. `Accepts` is a request header, not a response header.
Sep 03 17:14:36 <qswz>	n> var fn=perf_hooks.performance.timerify(console.log); var obs=new perf_hooks.PerformanceObserver(list => {console.log(list.getEntries()[0].duration);obs.disconnect();});obs.observe({ entryTypes: ['function'] });  fn(1, 2)
Sep 03 17:14:37 <jellobot>	(okay) 1 2 2.586793 undefined
Sep 03 17:15:05 <DeltaHeavy>	You need to send that `Content-Disposition` header if you want it to download though. Do you have control of the backend?
Sep 03 17:16:09 <jayjo>	I have built a vue component using vue-cli and built it as a library so i can import the component in separate projects. It builds a umd and a common js bundle. When I import the common js bundle into different projects, I keep getting polyfill errors like "Module not found: Error: Can't resolve 'core-js/modules/es.array-buffer.slice' in ...' - does this mean my importing project does not have the
Sep 03 17:16:16 <jayjo>	correct polyfills?
Sep 03 17:17:53 <notchris>	jayjo: make sure vuecli is up to date and that your core-js / babel settings are correct
Sep 03 17:17:55 <timwis>	notchris DeltaHeavy: I'm trying to download a CSV file; not upload one. The server does respond with the `Content-Disposition` and `Content-Type` header, but only when the request includes the `Accept: text/csv` header. I do have control of the server.
Sep 03 17:18:36 <jayjo>	notchris: will the settings on the building project matter, or only the project that is importing?
Sep 03 17:21:15 <grr12314>	hi, anyone used lit-element recently? it doesn't convert property values to attribute for me, only the other way around. its docs seem to suggest it should work both ways tho...
Sep 03 17:24:14 <shan>	hi, quick question, how do i make my html5 canvas fit the entire viewport and not have scrollbars?
Sep 03 17:27:50 <joeynode>	Is there a system that specialised only in processing import / require to flatten JS? Every tool I can find seems to do a bit of this, a bit of that but isn't focused on just merging resources. The only pickle with it I can see is that JS can be post-processed post merge where as if I also want to import other resources such as images and stylesheets as embedded then then need pre-processing
Sep 03 17:27:50 <joeynode>	(before merge).
Sep 03 17:28:47 <joeynode>	even something that'll just traverge the require / import tree would be enough
Sep 03 17:30:21 <stenno>	webpack ?
Sep 03 17:30:31 <stenno>	joeynode: ^
Sep 03 17:33:45 <prometh>	joeynode: what you're describing is a bundler
Sep 03 17:34:02 <joeynode>	ive tried all these fancy build systems and ive had it up to here with them and their quirks, constant maturity issues, bugs, mysterious errors, doing a little bit of this, a little bit of that unexpectedly, mysterious documentation, shifting sands, bloat, and just being bad at what they're meant to be doing such as not working out which polyfills are needed properly, putting in broken
Sep 03 17:34:02 <joeynode>	polyfills that behave differently and generally just making a mess / taking hours to get simple things done and this unfortunately is not opinion but proof of the pudding
Sep 03 17:34:27 <jayjo>	if I get an error like "Module not found: Error: Can't resolve 'core-js/modules/es.array-buffer.slice' in ... " does it mean I have not loaded correct polyfills?
Sep 03 17:34:28 <prometh>	that sounds like modern js dev to me
Sep 03 17:34:52 <prometh>	or even just dev in general
Sep 03 17:35:00 <prometh>	none of that is specific to a bundler
Sep 03 17:35:13 <joeynode>	Actually I just want something that only traverses the import tree and lets me do things at each step, its the thing bundlers use, im wondering if there's a standard most commonly used library for that or if they're all doing it differently
Sep 03 17:35:54 <prometh>	joeynode: you could try using some core lib or api of webpack/parcel
Sep 03 17:36:00 <qswz>	💚 perf_hooks.PerformanceObserver
Sep 03 17:36:07 <joeynode>	also something's not right because babel should be able to do that but there appears to be limited babel support for processing imports / require
Sep 03 17:36:19 <prometh>	babel is a transpiler, not a bundler
Sep 03 17:36:22 <joeynode>	i tried webpack and parcel, they both failed
Sep 03 17:36:30 <prometh>	joeynode: then write your own ?
Sep 03 17:36:31 <qswz>	!polyfill.io
Sep 03 17:36:31 <ecmabot>	qswz: <script nomodule src="https://polyfill.io/v3/polyfill.js?flags=always&features=default,fetch"></script>
Sep 03 17:36:40 <joeynode>	yeh but babel parsed the AST then traverses it which you need for bundling
Sep 03 17:36:45 <qswz>	light polyfilling ftw
Sep 03 17:36:50 <joeynode>	so not using it means doubling up on parsing
Sep 03 17:37:02 <prometh>	joeynode:  you don't need an ast, you need a dependency graph
Sep 03 17:37:03 <qswz>	recent browsers don't need polyfills
Sep 03 17:37:12 <joeynode>	i did before have a babel plugin for traversing require crudely
Sep 03 17:37:13 <qswz>	which is the reason for polyfill.io
Sep 03 17:37:29 <joeynode>	the best way to produce a dep graph is with the ast parse, otherwise it'll be regex? and zalgo
Sep 03 17:37:44 <prometh>	you can use an ast for the import statements, yes
Sep 03 17:37:50 <qswz>	just use static import
Sep 03 17:38:09 <joeynode>	maybe i should just dig out that ancient babel plugin and update it
Sep 03 17:38:24 <prometh>	what is it that "failed" ?
Sep 03 17:39:02 <joeynode>	parcel likes to just do its own thing and ignores things like babelrc
Sep 03 17:39:12 <prometh>	it doesn't ignore it at al
Sep 03 17:39:25 <joeynode>	webpack is a nest of config and tonnes of plugins / modules that are off varying states of quality, standards, completeness and maintenance states
Sep 03 17:39:32 <joeynode>	proof#s in the pudding :D
Sep 03 17:39:44 <prometh>	*shrug* write you rown
Sep 03 17:40:30 <joeynode>	thats my intent, hence wondering what's the standard for producing at least the import tree starting from a root file
Sep 03 17:40:53 <prometh>	you could look for an import statement regex
Sep 03 17:40:58 <prometh>	or parse a whole ast
Sep 03 17:41:16 <prometh>	and use require.resolve()
Sep 03 17:41:52 <joeynode>	seems like the best then if there's not a standard solution used for that to just rip off a similar babel plugin and optimise that to suit needs, as it'll reuse the AST parse
Sep 03 17:42:23 <joeynode>	im disappointed if people are using regex still in this day and age
Sep 03 17:42:24 <prometh>	maybe... but taking an entry point and recursing through files to emit events is not that difficult
Sep 03 17:42:24 <englosh>	where do I see all the array types there are? or is it only the normal [] array and (U)Int8..64Array?
Sep 03 17:42:52 <prometh>	joeynode: static import statements are easily predictable
Sep 03 17:43:02 <joeynode>	englosh mdn and node documentation would probably cover most scenarios
Sep 03 17:44:02 <englosh>	can you give me link? https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array doesnt even have UInt8Array
Sep 03 17:44:16 <joeynode>	there are a lot of things that use the [] operator for access especially in new standards (arrlike[])
Sep 03 17:44:49 <joeynode>	https://developer.mozilla.org/en-US/docs/Web/JavaScript/Typed_arrays
Sep 03 17:45:18 <englosh>	but that aren't all arrays
Sep 03 17:46:57 <siix>	if you have a $.Deferred() wrapper around an ajax call and you want to only grab certain failures, is there any way to pass on the params from fail(function(xhdr, status, error)) via deferred.reject() so that those values are not lost?
Sep 03 17:48:03 <joeynode>	JS can be annoying like that. If you check the spec I guess. I suspect Array might be distinct by design (IE isArray only works on that) but some people might extend it to do things, things extending array, infinite possibilities, there's also Map which supports the [] access operator I believe.
Sep 03 17:48:27 <siix>	assuming you can't just do    let d = $.Deferred();  $.ajax(...).done(function(data, status, xhdr) { /* filter some */ d.resolve(data, status, xhdr); }).fail(function(xhdr, status, error) { /* filter some */ d.reject(xhdr, status, error); }); return d.promise();
Sep 03 17:48:51 <englosh>	well I guess I will just use the normal array
Sep 03 19:20:42 *	Disconnected ()
**** ENDING LOGGING AT Tue Sep  3 19:20:42 2019

**** BEGIN LOGGING AT Tue Sep  3 19:21:06 2019

Sep 03 19:21:06 *	Now talking on ##javascript
Sep 03 19:21:06 *	Topic for ##javascript is: JavaScript is *not* Java. | Just ask your question. | Say "!mdn abc" for docs on "abc". | Don't paste code in the channel. | Can't talk? Get registered on freenode ( https://git.io/vaTS2 )
Sep 03 19:21:06 *	Topic for ##javascript set by niggler!~niggler@unaffiliated/niggler (Tue Jan 15 07:16:23 2019)
Sep 03 19:21:36 <prussian>	curse port numbers
Sep 03 19:21:41 <prussian>	what a terrible idea
Sep 03 19:23:47 <naeluh>	haha this website is pretty hilarious
Sep 03 19:23:48 *	naeluh https://monitor.firefox.com/scan
Sep 03 19:38:27 <qswz>	n> +3n
Sep 03 19:38:29 <jellobot>	(fail) TypeError: Cannot convert a BigInt value to a number
Sep 03 19:38:43 <qswz>	n> Number(3n)
Sep 03 19:38:45 <jellobot>	(okay) 3
Sep 03 20:25:45 *	Disconnected ()
**** ENDING LOGGING AT Tue Sep  3 20:25:45 2019

**** BEGIN LOGGING AT Tue Sep  3 20:26:12 2019

Sep 03 20:26:12 *	Now talking on ##javascript
Sep 03 20:26:12 *	Topic for ##javascript is: JavaScript is *not* Java. | Just ask your question. | Say "!mdn abc" for docs on "abc". | Don't paste code in the channel. | Can't talk? Get registered on freenode ( https://git.io/vaTS2 )
Sep 03 20:26:12 *	Topic for ##javascript set by niggler!~niggler@unaffiliated/niggler (Tue Jan 15 07:16:23 2019)
Sep 03 20:27:12 <rnmhdn>	do I have to manually store the authentication cookies that backed gives me?
Sep 03 20:27:18 <sillyslux>	you didn't like to call it debottle?
Sep 03 20:27:35 <rnmhdn>	and put it in every request I want to send to server?
Sep 03 20:27:53 <laravel7>	i didnt knew that nox and memu are so much better android emulators in terms of cpu usage in comparing to virtualbox
Sep 03 20:28:11 <GreenJello>	rnmhdn, nope, it shouldn't even be possible to access them from JS
Sep 03 20:28:25 <rnmhdn>	what should I do then?
Sep 03 20:28:29 <GreenJello>	rnmhdn, with some HTTP clients you do need to pass an option to enable cookies, though
Sep 03 20:28:37 <GreenJello>	rnmhdn, the browser manages cookies for you
Sep 03 20:28:40 <rnmhdn>	I'm using axios
Sep 03 20:29:03 <GreenJello>	rnmhdn, you need to enable it in axios; I forget the exact code for it
Sep 03 20:29:20 <GreenJello>	https://codewithhugo.com/pass-cookies-axios-fetch-requests/
Sep 03 20:29:22 <rnmhdn>	I do this
Sep 03 20:29:24 <rnmhdn>	const api = axios.create({  withCredentials: true, });
Sep 03 20:30:09 <GreenJello>	rnmhdn, that's all you need to do; cookies will be sent and received/stored automatically
Sep 03 20:30:24 <rnmhdn>	well, it's not working tho
Sep 03 20:31:00 <GreenJello>	look in dev tools to see the set-cookie response header when you log in, and the 'cookie' request header for API requests
Sep 03 20:31:26 <rnmhdn>	I have three requests
Sep 03 20:31:53 <rnmhdn>	first there is an OPTIONS request which I don't really understand. then there is the post request and it's response there are two cookies
Sep 03 20:32:02 <rnmhdn>	then there is a data request that doesn't have any cookies
Sep 03 20:35:36 <rnmhdn>	and yes I have set-cookie headers in my response
Sep 03 20:35:39 <laravel7>	its just cors
Sep 03 20:36:21 <rnmhdn>	me?
Sep 03 20:36:34 <laravel7>	options request
Sep 03 20:36:48 <rnmhdn>	cool
Sep 03 20:39:43 <rnmhdn>	btw I don't see any cookies in the storage tab of firefox
Sep 03 20:51:27 <qswz>	sillyslux: oh better names, thx haha
Sep 03 20:51:31 <qswz>	name*
Sep 03 20:52:02 <qswz>	sounds a bit alcoholic name:p
Sep 03 20:53:00 <innovati>	qswz call it 'double tap' https://en.wikipedia.org/wiki/Double_tap
Sep 03 20:58:19 <graingert>	like zombies innovati ?
Sep 03 20:59:22 <innovati>	sure
Sep 03 21:00:17 <naeluh>	qswz: hey thank for the git rebase shit it works awesome
Sep 03 21:00:21 <naeluh>	git pull -r
Sep 03 21:00:48 <graingert>	git pull --rebase=interactive btw naeluh
Sep 03 21:00:49 <innovati>	I have a debounce I use where it runs right away, and always makes sure to run once at the end, but between those it debounces according to a minimum threshold. So I always think of that like the double-tap
Sep 03 21:01:06 <naeluh>	graingert: ok cool thnaks!
Sep 03 21:01:27 <prussian>	damn rebasers
Sep 03 21:03:45 <qswz>	nah, just git pull -r and
Sep 03 21:03:47 <qswz>	[rebase]
Sep 03 21:03:48 <qswz>		autoStash = true
Sep 03 21:04:05 <qswz>	in ~/.gitconfig
Sep 03 21:04:14 <qswz>	pull -r or
Sep 03 21:04:15 <qswz>	[pull]
Sep 03 21:04:15 <qswz>		rebase = true
Sep 03 21:04:29 <prussian>	meh. I just accept the merge and if I care pre closing out, I'd rebase.
Sep 03 21:04:48 <qswz>	rebasers are right
Sep 03 21:04:53 <qswz>	mergers are polluters
Sep 03 21:05:00 <qswz>	most of the time
Sep 03 21:05:21 <qswz>	there are special time, where a merge is a bit easier
Sep 03 21:05:24 <prussian>	rebase on pull just makes weird looking history trees
Sep 03 21:05:32 <prometh>	force push
Sep 03 21:05:33 <qswz>	not weird
Sep 03 21:05:35 <prussian>	but, do you man
Sep 03 21:05:40 <qswz>	makes it flatter
Sep 03 21:05:58 <tcsc>	yeah, rebase on pull is better
Sep 03 21:06:05 <qswz>	you say weird because of chronological
Sep 03 21:06:11 <qswz>	but that doesn't matter at all
Sep 03 21:06:18 <prometh>	you get new dates with a force push
Sep 03 21:06:39 <qswz>	the idea is to replay your ork on top of the latest state
Sep 03 21:06:41 <prussian>	it jsutt messes up first parent. but do you man
Sep 03 21:06:44 <tcsc>	what do you mean by new dates. force pushing pushes your local dates to the remote
Sep 03 21:06:58 <prussian>	I prefer keeping first parent so I can just git rebase -i parent easily
Sep 03 21:07:00 <qswz>	prussian: it doesn't touch to shared branches
Sep 03 21:07:03 <qswz>	only yours
Sep 03 21:07:08 <qswz>	it's 100% safe
Sep 03 21:07:18 <prussian>	well... ya
Sep 03 21:07:25 <prometh>	hmm, okay, i'm not sure about the dates now... then do some squashing (interactive rebases) to get new timestamps
Sep 03 21:07:40 <prussian>	but again. it will make doing things like git rebase -i <actual branch point parent> harder
Sep 03 21:08:29 <prussian>	my workflow is just, branch -> do stuff -> more stuff -> take in merges from first parent -> do more stuff maybe? -> pass PR -> rebase -> merge back to first parent
Sep 03 21:08:45 <prussian>	doing pull -r just messes with that subtly
Sep 03 21:09:04 <prometh>	how many feature branches are we tlaking here?
Sep 03 21:09:13 <graingert>	use topological sort not date sort
Sep 03 21:09:14 <prometh>	master -> feature.... do rebases there
Sep 03 21:09:29 <prometh>	master -> feature -> sub-feature .... don't rebase with master here
Sep 03 21:09:38 <graingert>	don't do sub-feature branches
Sep 03 21:09:50 <prometh>	sometimes you have to when splitting a feature with the team
Sep 03 21:10:05 <graingert>	it means you didn't plan well
Sep 03 21:10:16 <prometh>	half-merged features are stupid
Sep 03 21:10:19 <prussian>	anyhow. looks like they call pull -r people "foxtrotters"
Sep 03 21:10:24 <prussian>	according to atlassian
Sep 03 21:10:25 <prussian>	https://blog.developer.atlassian.com/stop-foxtrots-now/
Sep 03 21:10:26 <prussian>	lol
Sep 03 21:10:33 <prussian>	but this explains what I'm saying
Sep 03 21:10:36 <qswz>	atlassian lol
Sep 03 21:10:41 <qswz>	that's not a good source
Sep 03 21:10:49 *	prometh likes sourcetree
Sep 03 21:11:14 <prussian>	funny, everyone at my work seems to hate it
Sep 03 21:11:20 <qswz>	you can find 100 artciles in favor of git rebasing flows bvs 1 against
Sep 03 21:11:26 <graingert>	atlassian is a mercurial crazy place that was forced to use git
Sep 03 21:11:41 <qswz>	ppl not comfortable with git hate rebase
Sep 03 21:11:46 <graingert>	if you've got two people working on a branch don't rebase
Sep 03 21:11:47 <prometh>	i used mercurial once... wasn't terrible
Sep 03 21:11:53 <prussian>	again. git is sort of like a lot of linux stuff. do you man. 10 different ways to skin a cat... etc
Sep 03 21:11:54 <graingert>	but don't have two people working on a branch
Sep 03 21:11:59 <qswz>	they were traumatized by it, or simply are afraid by something they don't know
Sep 03 21:12:10 <prussian>	I'm pretty comfortable doing all sorts of things in git, even doing filter branching to remove binaries.
Sep 03 21:12:18 <qswz>	graingert++ yea don"t reabse if it's shared
Sep 03 21:12:29 <graingert>	if you're not emailing your patches to one singular bdfl you're using git wrong
Sep 03 21:12:32 <prussian>	you can rewrite shared branches. sometimes it's a necessity
Sep 03 21:12:36 <qswz>	that's normal, unless you agree with the other person
Sep 03 21:12:52 <graingert>	sure but out of band comms is bad
Sep 03 21:13:38 <prussian>	qswz: it's not that people are uncomfortable about rebasing, it's more that it can wait til the end of the branch's life and avoid a lot of pain.
Sep 03 21:13:41 <graingert>	just do merges until the feature is done
Sep 03 21:14:04 <graingert>	but really I think you should be live collaborating
Sep 03 21:14:08 <prussian>	fast forwarding does what most people want out of the box anyhow.
Sep 03 21:14:11 <graingert>	on a single history
Sep 03 21:14:11 <qswz>	prussian: true
Sep 03 21:14:18 <graingert>	often you can't fastfoward
Sep 03 21:14:26 <qswz>	but before merging in the main branch , you gotta sync it
Sep 03 21:15:31 <qswz>	my problem is only with PRs with a few Merge 'master' or 'dev' into '123-feat-X'
Sep 03 21:15:35 <prussian>	either way. i'd just recommend against pull -r. you can rebase out the merge commits later anyhow...
Sep 03 21:15:44 <graingert>	cancel the dev branch
Sep 03 21:15:49 <qswz>	but I currently have one like that tho :))
Sep 03 21:15:55 <qswz>	but it's a huge one
Sep 03 21:16:03 <qswz>	99% it's not needed
Sep 03 21:16:20 <graingert>	never seen a good reason for a develop branch
Sep 03 21:16:28 <graingert>	one thing hg got right
Sep 03 21:16:33 <graingert>	"default" branch
Sep 03 21:16:48 <qswz>	graingert: the point is to have merge requests
Sep 03 21:16:56 <graingert>	EMAILS
Sep 03 21:16:59 <graingert>	send EMAILS
Sep 03 21:17:02 <graingert>	to the bdfl
Sep 03 21:17:05 <qswz>	lol
Sep 03 21:17:11 <graingert>	that person does all CR
Sep 03 21:17:14 <graingert>	and all git operations
Sep 03 21:17:15 <pyzozord>	hi guys, i'm looking for a js library that would help me operate and converate days hours minutes and seconds. But I am not looking for a date library. I am working with time so I don't care which month or year it is. As far as I'm concerned each week starts at year 0 and month 0. I need something mega lightweight because it's compute intesive task
Sep 03 21:17:15 <prussian>	gross
Sep 03 21:17:25 <prussian>	no ty on the mailing list crap
Sep 03 21:17:26 <prussian>	thanks
Sep 03 21:17:28 <graingert>	and also merges their own code during the night while nobody is looking
Sep 03 21:17:35 <qswz>	that's the linux way
Sep 03 21:17:40 <qswz>	but that smells archaic
Sep 03 21:17:41 <graingert>	!date-fns @ pyzozord
Sep 03 21:17:41 <ecmabot>	pyzozord: An up and coming moment alternative and all purpose library for dealing with time and date. (See also !moment) More @ https://github.com/date-fns/date-fns
Sep 03 21:17:45 <prussian>	i'm glad the days of being subscribed to thousands of noisy mailing lists are mostly out of my life.
Sep 03 21:17:55 <qswz>	^ haha
Sep 03 21:18:09 <graingert>	pyzozord: date-fns is big.. but it's ESM and supports tree shaking
Sep 03 21:18:15 <pyzozord>	graingert: but that one works on native js date objects and those are pretty heavy and do always have ear and month assigned no?
Sep 03 21:18:27 <thykka>	is performance already a problem?
Sep 03 21:18:27 <prussian>	I'll begrudgingly join ones like busybox's to submit fixes once in awhile, but god I hate it
Sep 03 21:18:33 <graingert>	ear and mouth?
Sep 03 21:18:45 <graingert>	pyzozord: write it in rust and wasm it
Sep 03 21:19:15 <prussian>	also I've had nothing but problems with git formatted diffs.
Sep 03 21:19:17 <graingert>	native date is probably going to be faster because of magic [native code]
Sep 03 21:19:32 <pyzozord>	graingert: i'm looking for something so I don't have to write it myself. Literally i'm looking for something that will simply * 60 * 24 or / 60 / 24 and use Math.floor few times
Sep 03 21:19:34 <prussian>	well. correction, svn's interpretation of git formatted diffs
Sep 03 21:19:56 <prometh>	pyzozord: date-fns probably has a function for that
Sep 03 21:19:59 <graingert>	pyzozord: oh like units
Sep 03 21:20:41 <graingert>	pyzozord: https://github.com/Microsoft/TypeScript/issues/364
Sep 03 21:20:45 <pyzozord>	my task is to generate weekly schedules of tasks. Kinda like an school event planner
Sep 03 21:21:05 <pyzozord>	it's a one week in a vacume outside of space and time. It strats at big bang
Sep 03 21:21:16 <qswz>	use maths
Sep 03 21:21:17 <graingert>	pyzozord: https://github.com/gentooboontoo/js-quantities
Sep 03 21:21:24 <salcedo>	your "task" hehehe should you choose to accept it. it will self-destruct.
Sep 03 21:22:42 <prometh>	pyzozord: what unit do you ultimately need?
Sep 03 21:22:56 <prometh>	i've used npmjs.com/to-miliseconds before
Sep 03 21:23:08 <prometh>	npmjs.com/to-milliseconds
Sep 03 21:23:34 <prometh>	oh..
Sep 03 21:23:35 <phobosoph>	hi
Sep 03 21:23:37 <prometh>	npmjs.com/@sindresorhus/to-milliseconds
Sep 03 21:23:48 <phobosoph>	is there a way to see a progress bar for a HTTP upload in nodejs, not in browser, but cli nodejs?
Sep 03 21:24:01 <jayjo>	is storybook a recommended tool for building a component library?
Sep 03 21:24:10 <prometh>	phobosoph: npmjs.com/gauge
Sep 03 21:25:21 <prometh>	jayjo: sure, it's a handy way to quickly build and preview
Sep 03 21:26:55 <pyzozord>	miliseconds is too much resolution for me. I only are about minutes, not even seconds. And I try to keep it as light on memory and cpu as possible. I'll be crunching big amounts of those thigs. (And yes I know there are better languages etc. This is prototype and I'm writing it in js, and that's it.)
Sep 03 21:27:12 <pyzozord>	*are=care
Sep 03 21:27:37 <prometh>	pyzozord: search npm for similar things... to-minutes, etc.... if you're crunching that much, you could use a Worker()
Sep 03 21:29:40 <phobosoph>	prometh: well, that's for the UI/CLI. But I need an event or something to get the HTTP upload progress
Sep 03 21:30:03 <prometh>	phobosoph: use a stream.. but i personally use npmjs.com/got as it's all done for me
Sep 03 21:35:15 <rnmhdn>	does anyone know axios here?
Sep 03 21:36:18 <phobosoph>	prometh: looks too good to be true, tbh
Sep 03 21:36:27 <phobosoph>	will this also work in node without any browser?
Sep 03 21:36:28 <phobosoph>	on cli?
Sep 03 21:36:40 <prometh>	it's built for node
Sep 03 21:40:32 <pyzozord>	it's amaizing I can't find any good popular library
Sep 03 21:43:08 <rnmhdn>	I send request to /accounts/login
Sep 03 21:43:13 <rnmhdn>	and in the response I have
Sep 03 21:43:15 <rnmhdn>	Set-Cookie
Sep 03 21:43:16 <rnmhdn>	csrftoken=Ku6B9jdQ8sgC6C8uP02b… Path=/; SameSite=Lax; Secure
Sep 03 21:43:37 <rnmhdn>	then I process the response and redirect to newRoute
Sep 03 21:43:52 <rnmhdn>	in the newRoute I check the storage tab and there is no cookie
Sep 03 21:44:20 <rnmhdn>	does redirection/reload remove cookies??? Am I supposed to manually capture cookies from response and store them in browser?
Sep 03 21:47:27 <prussian>	rnmhdn: could try settting path=/ to your cookie
Sep 03 21:47:47 <prussian>	I think there is a caching bug with cookies with redirects
Sep 03 21:47:53 <rnmhdn>	can you elaborate?
Sep 03 21:47:58 <prussian>	can you try in web console turning off all caching?
Sep 03 21:48:03 <prussian>	f12, network tab, etc
Sep 03 21:48:16 <prussian>	if it works. setting path=/ in the cookie should work
Sep 03 21:48:37 <prussian>	https://bugs.chromium.org/p/chromium/issues/detail?id=696204
Sep 03 21:48:41 <prussian>	if that helps
Sep 03 21:48:57 <rnmhdn>	I'm firefox tho
Sep 03 21:48:58 <prussian>	I ran into this quirky stuff myself lately
Sep 03 21:49:05 <prussian>	well... try it anyhow?
Sep 03 21:49:27 <rnmhdn>	cache is disabled in f12
Sep 03 21:49:32 <prussian>	same problem?
Sep 03 21:49:37 <rnmhdn>	I don't exactly understand what I should try
Sep 03 21:49:44 <rnmhdn>	how do I set path=/ in cookie
Sep 03 21:49:50 <rnmhdn>	anyway my cookie seems to have that already
Sep 03 21:49:54 <prussian>	the workflow that causes the cookie and the 302
Sep 03 21:49:55 <rnmhdn>	csrftoken=Ku6B9jdQ8sgC6C8uP02b… Path=/; SameSite=Lax; Secure
Sep 03 21:50:01 <prussian>	that's what you're testing
Sep 03 21:50:01 <prussian>	oh
Sep 03 21:50:13 <prussian>	you already set path then
Sep 03 21:50:15 <prussian>	uh
Sep 03 21:50:19 <rnmhdn>	django did
Sep 03 21:50:21 <rnmhdn>	:D
Sep 03 21:51:29 <prussian>	ya i don't know then.
Sep 03 21:51:44 <prussian>	I know this problem bit me before in set-cookie's on 302
Sep 03 21:51:45 <rnmhdn>	fuck my life
Sep 03 21:52:04 <rnmhdn>	I'm stuck on this shit for 5 hours now
Sep 03 21:52:38 <prussian>	so I'm assuming disabling caching didn't help?
Sep 03 21:52:58 <rnmhdn>	caching was disabled already
Sep 03 21:53:13 <rnmhdn>	right now I'm trying to see what happens if I don't redirect
Sep 03 21:53:15 <horribleprogram>	!ops
Sep 03 21:53:15 <ecmabot>	horribleprogram: The ##javascript ops are: buu inimino gkatsev Agamemnus Maxdamantus dilvie Sorella GreenJello jaawerth niggler. In case of an emergency requiring op attention, activate !emergency
Sep 03 21:53:27 *	ChanServ gives channel operator status to niggler
Sep 03 21:53:40 <niggler>	why horribleprogram
Sep 03 21:53:43 <horribleprogram>	niggler: don't kick me plz, thought that would be a pm
Sep 03 21:54:00 <rnmhdn>	ever without redirect the cookie doesn't appear in the storage tab
Sep 03 21:54:05 <niggler>	someone's getting kicked
Sep 03 21:54:09 <horribleprogram>	First time in the channel, have exactly 30 days to learn JS
Sep 03 21:54:19 <NoiseEee>	rnmhdn: are you using the 'withCredentials' flag?
Sep 03 21:54:49 <horribleprogram>	niggler: I like knowing the ops of a channel, who runs shit ;)
Sep 03 21:54:56 <sillyslux>	horribleprogram, https://tommcfarlin.com/learning-javascript/
Sep 03 21:55:07 <horribleprogram>	I got JS Definitive Guide
Sep 03 21:55:18 <niggler>	im still confused as to why you felt you needed to ping the ops in the first place
Sep 03 21:55:25 <rnmhdn>	NoiseEee: yes
Sep 03 21:55:28 <horribleprogram>	this looks good tho lol cuz it's literally what I needed
Sep 03 21:55:53 <horribleprogram>	niggler: I didn't expect that to ping all the ops, I apologize, won't happen again
Sep 03 21:55:54 <rnmhdn>	import axios from 'axios';
Sep 03 21:55:55 <rnmhdn>	const api = axios.create({ baseURL: 'https://api.domain.world', timeout: 10000, withCredentials: true, });
Sep 03 21:56:16 <rnmhdn>	      api.post('/accounts/login/', payload)
Sep 03 21:56:20 <horribleprogram>	niggler: can I add this was the worse channel entrance I've ever had lol
Sep 03 21:56:25 <horribleprogram>	worst*
Sep 03 21:56:35 <niggler>	sillyslux will decide your fate
Sep 03 21:56:46 <sillyslux>	2nd chance
Sep 03 21:56:51 <horribleprogram>	sweet
Sep 03 21:56:53 <horribleprogram>	ty :)
Sep 03 21:57:00 *	niggler has kicked sinclair from ##javascript (sinclair)
Sep 03 21:57:05 *	ChanServ removes channel operator status from niggler
Sep 03 21:57:13 <sillyslux>	lol, someone has to bite it
Sep 03 21:57:25 <niggler>	he'll be on later
Sep 03 21:58:05 <horribleprogram>	lmfao
Sep 03 21:58:30 <rnmhdn>	I disabled the redirection and it didn't fix anything
Sep 03 21:58:40 <horribleprogram>	okay so I don't get things like "bitwise operators are performed with 32 bit integers"
Sep 03 21:58:42 <rnmhdn>	I still get nothing in my storage tab
Sep 03 21:58:53 <horribleprogram>	and also the concept of NaN, I understand 0/0 evaluates to it, NaN == NaN is false
Sep 03 21:59:30 <horribleprogram>	Also overflow doesn't produce Infinity... Number.MAX_VALUE + 1 should yield infinity, according to this book
Sep 03 22:00:07 <horribleprogram>	yields 1.7976931348623157e+308 in my case
Sep 03 22:00:21 <rnmhdn>	could this be related to access-control-allow-origin flag?
Sep 03 22:00:48 <GreenJello>	rnmhdn, are you making a cross origin request?
Sep 03 22:01:38 <GreenJello>	rnmhdn, you need access-control-allow-credentials for cookies to work on cross-origin requests
Sep 03 22:01:54 <horribleprogram>	so ik there's just one type for ints and floating-point types, but when you do integer overflow, I guess it chances some sort of internal type to float where you lose precision but gain magnitude?
Sep 03 22:01:57 <rnmhdn>	GreenJello: yes
Sep 03 22:02:08 <rnmhdn>	I'm requesting from localhost
Sep 03 22:02:33 <RoseBus>	hello, i'm using dynamic forms along with tempus dominus
Sep 03 22:02:34 <horribleprogram>	Math.pow(2, 64) evaluates to 18446744073709552000, which isn't actually 2 ** 64
Sep 03 22:02:39 <MikeD_>	learning javascript by all the weird edge case nonsense seems like a good way to get past silly screeners but fail at a job
Sep 03 22:02:49 <niggler>	horribleprogram: thats not what MAX_VALUE means
Sep 03 22:02:51 <stenno>	sinclair will maybe not take that lightly
Sep 03 22:02:52 <horribleprogram>	MikeD_: I feel that
Sep 03 22:02:55 <RoseBus>	when i clone a form, jquery is not distinguishing between the new tempus dominus widgets
Sep 03 22:03:42 <rnmhdn>	GreenJello: does the protocol matter in origin
Sep 03 22:04:06 <niggler>	n> Number.MAX_VALUE + Number.MAX_VALUE/100000000000000000
Sep 03 22:04:07 <jellobot>	(okay) 1.7976931348623157e+308
Sep 03 22:04:18 <niggler>	n> Number.MAX_VALUE + Number.MAX_VALUE/10000000000000000
Sep 03 22:04:20 <jellobot>	(okay) Infinity
Sep 03 22:04:34 <horribleprogram>	niggler: what in the hell lol
Sep 03 22:05:04 <niggler>	its an artifact of how floating point numbers work
Sep 03 22:05:08 <niggler>	to understand it
Sep 03 22:05:19 <niggler>	n> Math.log2(100000000000000000)
Sep 03 22:05:20 <jellobot>	(okay) 56.47277761308516
Sep 03 22:05:25 <niggler>	n> Math.log2(10000000000000000)
Sep 03 22:05:26 <jellobot>	(okay) 53.150849518197795
Sep 03 22:05:27 <GreenJello>	rnmhdn, I'm not actually sure; it'd be weird to make a request only differing in protocol
Sep 03 22:05:48 <rnmhdn>	my frontend is not https yes
Sep 03 22:05:50 <niggler>	JS number uses the IEEE-754 floating point double standard
Sep 03 22:05:54 <rnmhdn>	esp on my localhost:D
Sep 03 22:06:02 <rnmhdn>	but my backend is
Sep 03 22:06:07 <horribleprogram>	niggler: iight that's perfect, I'm pretty familiar with 754
Sep 03 22:06:11 <rnmhdn>	https://api.domain.com
Sep 03 22:06:17 <rnmhdn>	front is http://domain.com
Sep 03 22:06:28 <niggler>	64 bits, 52 + implicit one for the mantissa
Sep 03 22:06:50 <horribleprogram>	yeah that's why int precision range is -2 ** 52 to 2 ** 52 inclusive
Sep 03 22:07:24 <horribleprogram>	basically that's the range that numbers can be precise
Sep 03 22:07:45 <niggler>	so the largest number representable in floating point is Number.MAX_VALUE
Sep 03 22:07:55 <niggler>	if you add a small value, its basically a rounding error and the value is unchanged
Sep 03 22:08:07 <horribleprogram>	yeah
Sep 03 22:08:16 <niggler>	but if you add a number large enough, ... to infinity and beyond!
Sep 03 22:08:20 <niggler>	same reason
Sep 03 22:08:28 <niggler>	n> Infinity - Number.MAX_VALUE
Sep 03 22:08:29 <jellobot>	(okay) Infinity
Sep 03 22:08:37 <horribleprogram>	n> (1e200 - 1e200) + 3.14
Sep 03 22:08:39 <jellobot>	(okay) 3.14
Sep 03 22:08:47 <horribleprogram>	n> (1e200 + 3.14) - 1e200
Sep 03 22:08:49 <jellobot>	(okay) 0
Sep 03 22:08:54 <sillyslux>	n> Infinity - Infinity
Sep 03 22:08:55 <jellobot>	(okay) NaN
Sep 03 22:09:12 <horribleprogram>	yeah it makes sense
Sep 03 22:09:13 <niggler>	n> Math.pow(2,53) + 1 == Math.pow(2,53)
Sep 03 22:09:14 <jellobot>	(okay) true
Sep 03 22:09:46 <horribleprogram>	associativity breaks down with floating-point arithmetic, as I just showed you with (1e200 - 1e200) + 3.14 and (1e200 + 3.14) - 1e200
Sep 03 22:10:13 <horribleprogram>	niggler: yeah that actually makes sense
Sep 03 22:10:23 <horribleprogram>	niggler: obviously logically it makes no sense, but from a programming perspective
Sep 03 22:10:38 <GreenJello>	n> (2n ** 200n)  + 1n - (2n ** 200n)
Sep 03 22:10:40 <jellobot>	(okay) 1n
Sep 03 22:11:25 <horribleprogram>	n?
Sep 03 22:11:34 <GreenJello>	horribleprogram, BigInt
Sep 03 22:12:08 <niggler>	!bigint
Sep 03 22:12:09 <Dirak>	woah is that algebra in JS?
Sep 03 22:12:18 <horribleprogram>	n suffix makes a BigInt object?
Sep 03 22:12:18 <niggler>	!mdn bigint
Sep 03 22:12:20 <jellobot>	niggler, BigInt, JavaScript - BigInt is a built-in object that provides a way to represent whole numbers larger than 253 - 1, which is the largest number JavaScript can reliably represent with the Number primitive. BigInt can be used for arbitrarily large integers. https://mdn.io/bigint
Sep 03 22:12:41 <Dirak>	oh wait that's just bigint notation nvm
Sep 03 22:13:00 <horribleprogram>	I think that 253 - 1 part is wrong btw
Sep 03 22:13:08 <GreenJello>	horribleprogram, yeah, though I don't believe it's an object
Sep 03 22:13:28 <horribleprogram>	okay lemme firm up my definition of JS objects then
Sep 03 22:13:33 <horribleprogram>	how is a string a primitive type
Sep 03 22:14:07 <GreenJello>	horribleprogram, immutable strings are primitives in quite a few languages
Sep 03 22:14:18 <sillyslux>	it's automatically wrapped in an object when you try to access String properties
Sep 03 22:14:30 <horribleprogram>	no there's a difference between having syntax for a literal and an object
Sep 03 22:14:42 <sillyslux>	that's call autoboxing i think
Sep 03 22:15:01 <sillyslux>	*called
Sep 03 22:15:19 <phobosoph>	wow
Sep 03 22:15:21 <sillyslux>	same with numbers
Sep 03 22:15:26 <GreenJello>	n> 3n instanceof BigInt
Sep 03 22:15:27 <jellobot>	(okay) false
Sep 03 22:15:30 <phobosoph>	sindrosious got thing supports progress for http uploads in node cli
Sep 03 22:15:32 <GreenJello>	n> typeof 3n
Sep 03 22:15:32 <phobosoph>	https://nodejs.org/api/stream.html#stream_stream_pipeline_streams_callback
Sep 03 22:15:33 <jellobot>	(okay) 'bigint'
Sep 03 22:15:42 <phobosoph>	so I use pipeline to read from a file and POST it to HTTP server
Sep 03 22:15:50 <phobosoph>	I want the response from HTTP server after upload
Sep 03 22:15:56 <phobosoph>	the problem is that I get a DuplexStream object
Sep 03 22:15:57 <GreenJello>	horribleprogram, if it were an object, instanceof would return `true` and typeof would return 'object'
Sep 03 22:16:05 <phobosoph>	and there is no response property, it is undefined for that stream
Sep 03 22:16:10 <phobosoph>	how to get the TO stream?
Sep 03 22:16:11 <horribleprogram>	GreenJello: interesting
Sep 03 22:16:15 <GreenJello>	n> var a = 1n; a.foo = 1; a.foo
Sep 03 22:16:17 <jellobot>	(okay) undefined
Sep 03 22:16:44 <GreenJello>	horribleprogram, also this would work, but it doesn't because this is Object(a).foo = 1; where the boxed BigInt is immediately discarded
Sep 03 22:16:45 <phobosoph>	*DuplexWrapper
Sep 03 22:16:49 <horribleprogram>	okay you can assign arbitrary objects to objects with the x.attr = value syntax
Sep 03 22:17:03 <horribleprogram>	ic
Sep 03 22:17:09 <sillyslux>	n> var a = "1n"; a.foo = 1; a.foo
Sep 03 22:17:10 <jellobot>	(okay) undefined
Sep 03 22:17:46 <horribleprogram>	so BigInts and strings are both primitives
Sep 03 22:18:14 <sillyslux>	normal numbers too
Sep 03 22:18:19 <horribleprogram>	ofc
Sep 03 22:19:03 <sillyslux>	There are 7 primitive data types: string, number, bigint, boolean, null, undefined, and symbol.
Sep 03 22:19:09 <sillyslux>	https://developer.mozilla.org/en-US/docs/Glossary/Primitive
Sep 03 22:20:19 <horribleprogram>	sillyslux: cool, so yeah null and undefined are the only ones that aren't wrapped into an Object
Sep 03 22:21:48 <horribleprogram>	so there's implicit wrapping when you call some sort of .length on a string or something
Sep 03 22:22:12 <sillyslux>	yea... or the .toUpperCase example in mdn
Sep 03 22:22:21 <horribleprogram>	kk
Sep 03 22:22:50 *	horribleprogram puts feet up on desk
Sep 03 22:23:03 <horribleprogram>	iight that was quick, I thought it'd take 30 days
Sep 03 22:23:39 <horribleprogram>	jks aside, .length returns number of UTF-16 code units right?
Sep 03 22:23:54 <mekhami>	having trouble setting up eslint+prettier... is there a better chan for it or should i ask here
Sep 03 22:23:57 <sillyslux>	for strings?
Sep 03 22:24:01 <horribleprogram>	sillyslux: yeah
Sep 03 22:24:13 <sillyslux>	The length property of a String object indicates the length of a string, in UTF-16 code units.
Sep 03 22:24:20 <sillyslux>	https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/length
Sep 03 22:24:37 <horribleprogram>	that's a horrible example
Sep 03 22:24:41 <RoseBus>	hello, for some reason when using .clone() on my form fields, all are incrementing except for my Tempus Dominus widget.  Here is the code I'm using: https://bpaste.net/show/24AH.  Here's what the html looks like: https://bpaste.net/show/5ni5. I expect the id of the field to increment with each clone: e.g. id_form-1-time_start_video_file... id_form-2..., id_form-3..., as do all the other inputs. But for some reason this one input is not
Sep 03 22:24:41 <RoseBus>	incrementing hence when I click a cloned widget it's actually selecting the first form's widget every time.  Forgive me i'm extremely new to JS... i work mostly with python but I've been putting together this django project and now i've come face-to-face with js
Sep 03 22:24:47 <sillyslux>	so... i guess you're right
Sep 03 22:25:00 <horribleprogram>	n> "\uD835\uDC52".length
Sep 03 22:25:02 <jellobot>	(okay) 2
Sep 03 22:25:22 <horribleprogram>	n> "\uD835\uDC52"
Sep 03 22:25:25 <jellobot>	(okay) '𝑒'
Sep 03 22:25:38 <systemfault>	n> '💩'.length
Sep 03 22:25:39 <jellobot>	(okay) 2
Sep 03 22:25:40 <sillyslux>	n> '𝑒'.length
Sep 03 22:25:41 <jellobot>	(okay) 2
Sep 03 22:25:45 <horribleprogram>	LOL
Sep 03 22:25:49 <sillyslux>	n> 'uh'.length
Sep 03 22:25:50 <jellobot>	(okay) 2
Sep 03 22:25:55 <hassoon>	'evening
Sep 03 22:26:10 <horribleprogram>	'💩'.length // HAHAHHAHAHAHHAH
Sep 03 22:26:14 <hassoon>	systemfault: thought for an instant that you're some bot/AI thingy
Sep 03 22:26:24 <systemfault>	I might be
Sep 03 22:26:36 <systemfault>	Time for your ultimate turing test.
Sep 03 22:26:39 <sillyslux>	you're technology
Sep 03 22:26:47 <horribleprogram>	systemfault: oh god, I'm watching Ex Machina atm
Sep 03 22:26:59 <systemfault>	I know!
Sep 03 22:27:06 <horribleprogram>	hahahah :P
Sep 03 22:27:10 <hassoon>	what ?
Sep 03 22:27:24 <hassoon>	<3 mutation observers
Sep 03 22:27:33 <innovati>	oh yeah
Sep 03 22:27:51 <innovati>	and Resize Observer
Sep 03 22:27:52 <systemfault>	I've yet to find a legit use for them... seems that a lot of people use them as a hack
Sep 03 22:28:02 <hassoon>	innovati: you're emitting mutation observers whenever you're typing
Sep 03 22:28:06 <systemfault>	To make old code works when something changes.
Sep 03 22:28:23 <GreenJello>	they're also good for browser extensions
Sep 03 22:28:28 <evulish>	i emit nothing
Sep 03 22:28:31 <GreenJello>	 / user scripts
Sep 03 22:28:32 <hassoon>	innovati: ya haven't really tried them, but i red that they are still a pretty new unsupported thing
Sep 03 22:28:49 <innovati>	what if you want to process every tag in a document…but it's possible new tags could get added after the first parse…Mutation Observer to the rescue
Sep 03 22:28:49 <innovati>	Resize Observer isn't ready yet…but like by Christmas it will be everywhere
Sep 03 22:29:18 <rnmhdn>	GreenJello: do I need to add this to all responses
Sep 03 22:29:30 <rnmhdn>	or only the response to the login post request?
Sep 03 22:29:33 <GreenJello>	RoseBus, so it's based on .children(), but perhaps it's not a direct child?
Sep 03 22:29:50 <rnmhdn>	:rnmhdn, you need access-control-allow-credentials for cookies to work on cross-origin requests 28
Sep 03 22:29:51 <horribleprogram>	hassoon: did you just go from command-line programs to event-handling programs or something? :P
Sep 03 22:29:52 <hassoon>	innovati: meh you can filter the mutation-observer's detected nodes with good tests/algorithms
Sep 03 22:30:03 <GreenJello>	RoseBus, you could do something like $(row).find('[id]') to get all elements with an 'id' attribute, and work out if you want to update it afterwords
Sep 03 22:30:07 <hassoon>	horribleprogram: i don't get your point
Sep 03 22:30:33 <GreenJello>	rnmhdn, all responses and preflight requests
Sep 03 22:30:45 <rnmhdn>	what is preflight request?
Sep 03 22:30:58 <GreenJello>	rnmhdn, well, responses to the OPTIONS preflight request
Sep 03 22:32:06 <GreenJello>	rnmhdn, a preflight request is where the browser asks the server if it can send the actual request you specified
Sep 03 22:32:50 <RoseBus>	GreenJello, okay i'll give that a shot
Sep 03 22:33:02 <GreenJello>	OPTIONS /foo -> check cors headers, and only if good: GET /foo -> check cors headers and only if good: expose the response to JS
Sep 03 22:33:26 <RoseBus>	GreenJello, do i need to preface the [ID] with a .
Sep 03 22:33:46 <GreenJello>	RoseBus, nope, .foo means "has the class 'foo'"
Sep 03 22:33:55 <RoseBus>	ahh okay
Sep 03 22:38:20 <graingert>	rnmhdn: why are you sending requests cross origin?
Sep 03 22:38:35 <rnmhdn>	because I'm testing my frontend on localhost
Sep 03 22:38:41 <graingert>	ok don't do that
Sep 03 22:38:42 <graingert>	proxy it
Sep 03 22:38:53 <graingert>	rnmhdn: are you using webpack-dev-server?
Sep 03 22:39:02 <graingert>	or something like it (create-react-app)
Sep 03 22:39:13 <rnmhdn>	I think webpack-dev-server
Sep 03 22:39:16 <rnmhdn>	hwo do I check?
Sep 03 22:39:22 <graingert>	you'd know
Sep 03 22:39:27 <graingert>	if you were
Sep 03 22:39:28 <rnmhdn>	I'm using vuejs
Sep 03 22:39:35 <rnmhdn>	npm run serve
Sep 03 22:39:46 <graingert>	what does the serve command do?
Sep 03 22:39:49 <rnmhdn>	but I've seen the name webpack-dev-server some places
Sep 03 22:39:55 <graingert>	show your package.json
Sep 03 22:39:58 <rnmhdn>	graingert: it calls the vue-cli serve
Sep 03 22:40:00 <rnmhdn>	:))
Sep 03 22:40:16 <rnmhdn>	    "serve": "vue-cli-service serve",
Sep 03 22:40:21 <graingert>	https://cli.vuejs.org/config/#devserver-proxy
Sep 03 22:41:43 <graingert>	rnmhdn: ^
Sep 03 22:41:47 <graingert>	don't fuck about with cors
Sep 03 22:42:12 <rnmhdn>	but
Sep 03 22:42:19 <graingert>	GreenJello: please don't help people with cors before finding out if they should be using webpack-dev-server proxy
Sep 03 22:42:20 <rnmhdn>	the api is not on localhost
Sep 03 22:42:33 <graingert>	you can proxy to anywhere
Sep 03 22:43:38 <rnmhdn>	so I put     proxy: 'https://api.domain.com'
Sep 03 22:43:46 <graingert>	  devServer: {
Sep 03 22:43:46 <graingert>	    proxy: {'^/api/': 'http://some.not.localhost.example.com'}
Sep 03 22:43:46 <graingert>	  }
Sep 03 22:43:57 <rnmhdn>	in my vue.conf.js
Sep 03 22:44:38 <graingert>	{'^/api/': {target: 'http://some.not.localhost.example.com', changeOrigin: True, ws: True}
Sep 03 22:44:41 <graingert>	}
Sep 03 22:44:45 <graingert>	you might need that rnmhdn ^
Sep 03 22:45:12 <rnmhdn>	me api endpoints are like this:
Sep 03 22:45:24 <rnmhdn>	https://api.domain.com/accounts/login
Sep 03 22:45:32 <graingert>	put them all on /api
Sep 03 22:45:48 <rnmhdn>	https://api.domain.com/api/accounts/login
Sep 03 22:45:50 <rnmhdn>	?
Sep 03 22:45:52 <graingert>	yeah
Sep 03 22:46:34 <rnmhdn>	actually
Sep 03 22:46:38 <rnmhdn>	can I just use a vhost?
Sep 03 22:46:40 <rnmhdn>	:D
Sep 03 22:46:42 <graingert>	you can do all sort of fancy shit: https://github.com/chimurai/http-proxy-middleware#proxycontext-config
Sep 03 22:46:46 <graingert>	vhost?
Sep 03 22:46:52 <rnmhdn>	virtualhost
Sep 03 22:46:58 <graingert>	how would that help
Sep 03 22:47:01 <rnmhdn>	set a name for my localhost
Sep 03 22:47:04 <graingert>	what
Sep 03 22:47:08 <graingert>	no don't do that use the proxy
Sep 03 22:47:24 <graingert>	use the define plugin to set the API url
Sep 03 22:47:53 <rnmhdn>	I'm a little confused
Sep 03 22:48:01 <rnmhdn>	my frontend domain is
Sep 03 22:48:03 <graingert>	https://cli.vuejs.org/guide/webpack.html#chaining-advanced
Sep 03 22:48:04 <rnmhdn>	doamin.com
Sep 03 22:48:10 <graingert>	that's not relevent
Sep 03 22:48:25 <graingert>	you use the devServer proxy to make them all one origin
Sep 03 22:48:37 <rnmhdn>	so if my app also sends a request to twitter.com/api/asda this will proxy that?
Sep 03 22:48:54 <rnmhdn>	it will just match anything that has /api after domain name?
Sep 03 22:48:57 <GreenJello>	graingert, fair point
Sep 03 22:48:57 <graingert>	you have to make requests to "/api..."
Sep 03 22:49:28 <graingert>	ideally in prod your api URI would also be "/api"
Sep 03 22:49:48 <graingert>	but you'd proxy with nginx rather than webpack
Sep 03 22:50:06 <feelextra>	I'm making an open-source file manager in JS, and want to use some nice file icons. Any ideas for a package or resource in the JS/webdev ecosystem that I can use?
Sep 03 22:50:09 <graingert>	rnmhdn: also twitter is a different story. either they set cors headers or they don't you can't get around it
Sep 03 22:50:18 <graingert>	feelextra: there's millions of these
Sep 03 22:50:50 <graingert>	feelextra: https://www.google.com/search?q=open+source+icons+npm
Sep 03 22:51:41 <RenjieAbarai>	Hi! I have this javascript code here that observes if a specific textarea element is being resized and then calls this function `inner_resize()`. It seems a bit hack-ish. As you can see https://paste.ofcode.org/JhWrcVAwVzmDhYUtPk4D3K, we handled each browser differently because of issues we've encountered using `MutationObserver`. Is there a more unified way of handling this?
Sep 03 22:51:42 <GreenJello>	rnmhdn, if you need to talk to another site and can't do it with a CORS-enabled API, you can make an API endpoint that talks to the other site and passes the data back to the client
Sep 03 22:53:37 <rnmhdn>	thanks ppl
Sep 03 22:54:01 <graingert>	RenjieAbarai: if MutationObserver works that means it's client JS that resizes your frame
Sep 03 22:54:09 <graingert>	hook into that
Sep 04 07:55:02 *	Disconnected ()
**** ENDING LOGGING AT Wed Sep  4 07:55:02 2019

**** BEGIN LOGGING AT Wed Sep  4 07:55:27 2019

Sep 04 07:55:27 *	Now talking on ##javascript
Sep 04 07:55:27 *	Topic for ##javascript is: JavaScript is *not* Java. | Just ask your question. | Say "!mdn abc" for docs on "abc". | Don't paste code in the channel. | Can't talk? Get registered on freenode ( https://git.io/vaTS2 )
Sep 04 07:55:27 *	Topic for ##javascript set by niggler!~niggler@unaffiliated/niggler (Tue Jan 15 07:16:23 2019)
Sep 04 07:55:32 <niggler>	https://www.npmjs.com/package/logit could be commandeered
Sep 04 07:55:34 <ljharb>	if you don't get the reference you're just the wrong age
Sep 04 07:55:35 <Nes173>	l0gg3r
Sep 04 07:55:42 <niggler>	got it
Sep 04 07:55:43 <MJCD>	no need to commandeer anything
Sep 04 07:55:43 <niggler>	https://www.npmjs.com/package/logolas
Sep 04 07:55:50 <MJCD>	most of these are modular
Sep 04 07:55:57 <niggler>	^^ available and you can load up your README with LOTR references
Sep 04 07:56:00 <ashnur>	Cabin better than Sentry niggler ?
Sep 04 07:56:05 <ljharb>	logolas is good
Sep 04 07:56:06 <Nes173>	lol
Sep 04 07:56:18 <ljharb>	`logolas.andMyAxe()`
Sep 04 07:56:22 <MJCD>	ashnur, "better" is a relative term with niggler
Sep 04 07:56:30 <MJCD>	"better" === "not mainstream"
Sep 04 07:56:34 <niggler>	better is always subjective
Sep 04 07:56:34 <MJCD>	^_^
Sep 04 07:56:40 <ashnur>	i like niggler's betters
Sep 04 07:56:43 <MJCD>	relative, not subjective
Sep 04 07:56:51 <MJCD>	ashnur, good maybe you two should like
Sep 04 07:56:51 <ashnur>	i trust his judgement
Sep 04 07:56:52 <MJCD>	get married
Sep 04 07:57:04 <ashnur>	no, i mean like this, accross an ocean
Sep 04 07:57:09 <MJCD>	Married.js
Sep 04 07:57:16 <MJCD>	later adding multiprocessing
Sep 04 07:57:20 <MJCD>	Married.WithChildren
Sep 04 07:57:36 <ashnur>	MJCD: can you answer my question then? or want to continue with the non-sense? :)
Sep 04 07:57:48 <MJCD>	ashnur, it's unanswerable
Sep 04 07:57:51 <MJCD>	!better @ ashnur
Sep 04 07:57:51 <ecmabot>	ashnur: Asking if X is better than Y? You are the best person to determine this for your exact needs. Ideally, read up on the features and drawbacks of X *AND* Y (google, mdn, stackoverflow, etc) and then if you have any specific points you would like explained - ask about that instead.
Sep 04 07:58:00 <ashnur>	MJCD: then stop trying
Sep 04 07:58:10 <MJCD>	when i'm dead.
Sep 04 07:58:26 <ashnur>	do you have cats?
Sep 04 07:58:47 <MJCD>	one. I keep having to say to my girlfriend about things she wants to do
Sep 04 07:58:54 <MJCD>	"that's how you end up with 20 cats"
Sep 04 07:59:28 <ashnur>	would you be so kind and install a webcam so that we can see "when you dead" if the cat eats from your body. this is a myth i am strangely curious about
Sep 04 08:00:01 <ljharb>	pretty sure it's not a myth, there's many documented cases
Sep 04 08:00:07 <ljharb>	cats are adorably murderous carnivores
Sep 04 08:01:24 <ashnur>	dunno about adorably. more like coldly. with an attitude.
Sep 04 08:01:49 <ashnur>	i need some reviews on these logging platforms, need to install something
Sep 04 08:04:14 <sinclair>	ashnur, just console.log
Sep 04 08:04:21 <MJCD>	they will have eaten my face before the webcams motion activation even triggers
Sep 04 08:04:25 <MJCD>	and you wont know its me
Sep 04 08:04:27 <MJCD>	so no point
Sep 04 08:05:08 <MJCD>	gosh he is just such a special little man though
Sep 04 08:05:13 <sinclair>	ashnur, if you console.log, then all ya gotta do is pipe stdout to disk
Sep 04 08:05:13 <MJCD>	abuse rescue
Sep 04 08:05:32 <MJCD>	I wouldn't want anyone else to eat me when i'm gone <3
Sep 04 08:05:49 <sinclair>	ashnur, and....you can attach some clever thing to read from stdout and pipe to remote logging service, like datadog, or kabana or whatever.
Sep 04 08:06:26 <sinclair>	console.log, console.warn, console.error are your logging levels
Sep 04 08:06:33 <sinclair>	n> console.error('nope')
Sep 04 08:06:34 <jellobot>	(okay) nope undefined
Sep 04 08:06:56 <sinclair>	n> process.stdout.write('foo')
Sep 04 08:06:57 <jellobot>	(okay) footrue
Sep 04 08:07:02 <sinclair>	n> process.stderr.write('foo')
Sep 04 08:07:04 <jellobot>	(okay) footrue
Sep 04 08:08:06 <ljharb>	MJCD: you're aware that cats carry a brain parasite that infects humans and makes them more prone to dangerous thrillseeking behavior
Sep 04 08:08:21 <ljharb>	MJCD: that parasite's infection rate is also highly correlated with world cup victories
Sep 04 08:08:22 <MJCD>	lol, that's me, always thrillseeking
Sep 04 08:08:38 <MJCD>	I know they have a parasite that took 40% of the vision in one of my eyes
Sep 04 08:08:45 <MJCD>	little fuckers
Sep 04 08:09:02 <MJCD>	and my right eye out of all the options
Sep 04 08:09:02 <ashnur>	sinclair: i can't pipe to disk from browser
Sep 04 08:09:13 <ashnur>	but good idea otherwise
Sep 04 08:09:16 <MJCD>	ashnur, sure you can it's called "Save page"
Sep 04 08:09:19 <MJCD>	:P
Sep 04 08:09:31 <ashnur>	MJCD: that's not me, that's someone else
Sep 04 08:09:34 <sinclair>	n> for(let i = 0; i < 512; i++) process.stdout.write(String.fromCharCode(Math.floor(Math.random() * 255)))
Sep 04 08:09:36 <jellobot>	(okay) 3\Ð¯Ió;jH¼VUaSº§ÒhµuèN3tÖByÒ&6Ìä*MÂHmÓF mdÛÇ]Ø(ÝÚ=à.ö¿É±QºÅ~d£íºf(
Sep 04 08:09:48 <sinclair>	is it really ok?
Sep 04 08:09:57 <MJCD>	:|
Sep 04 08:10:53 <sinclair>	n> (new Date())
Sep 04 08:10:55 <jellobot>	(okay) 2019-09-04T06:10:54.101Z
Sep 04 08:11:53 <sinclair>	ashnur, you could log to a socket
Sep 04 08:12:12 <sinclair>	ashnur, or attach the devtools debugger
Sep 04 08:12:16 <sinclair>	or whatever
Sep 04 08:12:21 <ashnur>	sinclair: in production?
Sep 04 08:13:06 <sinclair>	ashnur, um, there are 'things' you can use that trace exceptions happening on a web page, im not sure you want to log all things
Sep 04 08:13:27 <sinclair>	ashnur, unless you want to be swimming in an ocean of unstructured, logs
Sep 04 08:14:00 <sinclair>	ashnur, last place i was at was using https://rollbar.com/error-tracking/javascript/
Sep 04 08:14:35 <sinclair>	ashnur, with exceptions piped into slack channels for everyone in the team to read and ponder the nature of software
Sep 04 08:15:01 <ashnur>	sinclair: you remember where this discussion started?
Sep 04 08:15:19 *	sinclair checks the logs
Sep 04 08:16:16 <ashnur>	https://www.npmjs.com/package/cabin
Sep 04 08:16:18 <niggler>	if an API's docs are open source is the API also covered under the same license (aka can someone replicate it)
Sep 04 08:16:41 <ashnur>	the API interface is not something that can be regulated i think
Sep 04 08:16:49 <ashnur>	damn, sorry for word repetition
Sep 04 08:18:25 <sinclair>	aww
Sep 04 10:15:33 *	Disconnected ()
**** ENDING LOGGING AT Wed Sep  4 10:15:33 2019

**** BEGIN LOGGING AT Wed Sep  4 10:15:56 2019

Sep 04 10:15:56 *	Now talking on ##javascript
Sep 04 10:15:56 *	Topic for ##javascript is: JavaScript is *not* Java. | Just ask your question. | Say "!mdn abc" for docs on "abc". | Don't paste code in the channel. | Can't talk? Get registered on freenode ( https://git.io/vaTS2 )
Sep 04 10:15:56 *	Topic for ##javascript set by niggler!~niggler@unaffiliated/niggler (Tue Jan 15 07:16:23 2019)
Sep 04 10:16:06 <lintguy>	Yes, I use cloudflare access for security/vpn
Sep 04 10:16:30 <lintguy>	It supports SSH as well, so terminals and file-transfer work
Sep 04 10:16:54 <lintguy>	https://code.visualstudio.com/docs/remote/ssh
Sep 04 10:17:24 <lintguy>	Or https://github.com/cdr/code-server if you want the devs to just code directly in the browser
Sep 04 10:18:26 <lintguy>	Each developer get their own LXC container with a complete vscode environment pre-setup with all tools like git, node, npm etc.
Sep 04 10:18:32 <rnmhdn>	do you know
Sep 04 10:18:38 <rnmhdn>	the security implications
Sep 04 10:18:48 <rnmhdn>	of running my frontend on S3?
Sep 04 10:19:02 <lintguy>	There's none, it's just static files.
Sep 04 10:19:31 <rnmhdn>	so why is everyone telling me I should use a propper webserver and shit?
Sep 04 10:20:49 <lintguy>	If you have webpacked the code, there's no reason to
Sep 04 10:21:15 <lintguy>	My vue code is webpacked and served directly form cloudflare cache
Sep 04 10:22:06 <lintguy>	The only way to make front-end code vulnerable, is by vulnerabilities in how the code is executed. For example, a bad NPM package imports an external JS file
Sep 04 10:22:41 <lintguy>	Then there's prototype pollution, but that's rare
Sep 04 10:22:48 <lintguy>	jQuery had one of those recently :)
Sep 04 10:23:45 <lintguy>	By avoiding to have a webserver for the front-end code, you remove a large vector of attacks.
Sep 04 10:23:50 <rnmhdn>	afaik the webpack proxy I want to use workd like this
Sep 04 10:24:05 <rnmhdn>	that i setup my http client to sent api requests to /api
Sep 04 10:24:09 <lintguy>	If it is only for local development, it should be fine.
Sep 04 10:24:27 <rnmhdn>	and then I tell webpack to use api.mydomain.world instead of /api
Sep 04 10:24:43 <lintguy>	The issue with dev servers is that they run ALL of the code, so it's a larger attack vector compared to serving only the webpacked files on apache for example.
Sep 04 10:24:48 <lintguy>	(With no DB)
Sep 04 10:25:20 <rnmhdn>	is there any such thing I can use in S3?
Sep 04 10:25:31 <rnmhdn>	someone told me that I should use /api for all my requests
Sep 04 10:25:34 <lintguy>	You're on linux, just install apache2 if you want to serve it.
Sep 04 10:25:38 <rnmhdn>	then in tdevserver I use webpack proxy
Sep 04 10:25:44 <rnmhdn>	and in dep I sue nginx proxy
Sep 04 10:25:45 <lintguy>	The default install will install on localhost and place files in /var/www
Sep 04 10:26:18 <rnmhdn>	but they didn't know i deploy to S3
Sep 04 10:26:43 <lintguy>	The files are treated the same on S3 as they are on apache2
Sep 04 10:27:18 <lintguy>	If you want to use a proxy, you can easily do that with apache2 too
Sep 04 10:27:21 <rnmhdn>	so can I create a proxy for my deployed S3 code so that it will use api.mydomain.world for /apir requesets?
Sep 04 10:27:44 <rnmhdn>	lintguy: I don't understand why you are talking about apache :-"
Sep 04 10:28:13 <rnmhdn>	I don't want to setup a webserer on my localhost
Sep 04 10:28:21 <rnmhdn>	I already have webpack-dev-server and it's good enough for me
Sep 04 10:28:27 <lintguy>	You don't need a proxy for that, just change the hostsfile
Sep 04 10:28:54 <rnmhdn>	but I want my developers to just clone and run
Sep 04 10:29:00 <lintguy>	ip-to-S3 frontend.mydomain.com
Sep 04 10:29:00 <rnmhdn>	I don't want them to change their hosts file
Sep 04 10:29:17 <lintguy>	Then you need a dev VPS
Sep 04 10:29:24 <rnmhdn>	you are not understanding my question
Sep 04 10:29:26 <lintguy>	There's no way around that :)
Sep 04 10:29:34 <rnmhdn>	please focus for one secont
Sep 04 10:29:40 <lintguy>	Sure
Sep 04 10:29:45 <ki9a>	I'm trying to instantiate random types from webassembly (so through a helper); Given a variable that contains XMLHttpRequest, how do I do what effectively does 'new'? https://jsfiddle.net/pyf3cwLo/
Sep 04 10:29:45 <rnmhdn>	here is what I want to do in localhost:
Sep 04 10:30:02 <rnmhdn>	I give /api as my BaseUrl to axios
Sep 04 10:30:17 <rnmhdn>	and I send all my api requests through axios and I use axios only for my own api requests
Sep 04 10:30:32 <rnmhdn>	the development server I use is webpack-dev-server
Sep 04 10:30:47 <rnmhdn>	It has an option to create a proxy like this:
Sep 04 10:31:04 <rnmhdn>	    proxy: {
Sep 04 10:31:06 <rnmhdn>	      '^/api/': {
Sep 04 10:31:08 <rnmhdn>	        target: 'https://api.abc.world/api',
Sep 04 10:31:10 <rnmhdn>	        ws: true,
Sep 04 10:31:12 <rnmhdn>	        changeOrigin: true,
Sep 04 10:31:14 <rnmhdn>	      },
Sep 04 10:31:21 <rnmhdn>	so whatever request I make that starts with /api
Sep 04 10:31:54 <ki9a>	x.apply(new x()); where x is XMLHttpRequest gives Constructor XMLHttpRequest requires 'new'
Sep 04 10:31:57 <rnmhdn>	webpack will know and modifies the origin header and forwards the request to the target you see
Sep 04 10:32:06 <rnmhdn>	but then when I deploy to S3
Sep 04 10:32:16 <rnmhdn>	and open my site in browser
Sep 04 10:32:20 <asl97>	here is probably a dumb question, I want to handle checkbox's checked exclusive with javascript but using checkbox.onclick = ()=>{el.checked = !el.checked} result in it getting checked by default and unchecked on javascript side, returning false to prevent default doesn't help.
Sep 04 10:32:40 <rnmhdn>	I see that it tries to send api reqeusts to abc.world/api (abc.world is the domain for my abc)
Sep 04 10:32:48 <rnmhdn>	since I have initialized axios with /abc
Sep 04 10:33:26 <rnmhdn>	I'm wondering if I can make such a proxy in S3 that it will forward the abc.world/api requests to api.abc.world/
Sep 04 10:33:54 <rnmhdn>	this way I can deploy the exact same code to S3 and also use it on localhost without any further configurations
Sep 04 10:34:09 <rnmhdn>	lintguy: I'm done:D
Sep 04 10:35:50 <lintguy>	Not sure how that would work, considering that the cookies for with will be issued to the domain and root of the back-end configuration.
Sep 04 10:39:20 <rnmhdn>	can you elaborate?
Sep 04 10:41:05 <lintguy>	If you configured the back-end to work on front.domain.com and you suddenly auth from dev.domain.com, you won't be able to authenticate because the cookies won't be sent.
Sep 04 10:41:42 <lintguy>	Even if the cookies are sent, they apply to a different domain so back-end won't use them.
Sep 04 10:42:14 <rnmhdn>	but I haven't configured my backend to work with any domain
Sep 04 10:42:26 <rnmhdn>	but it sends the cookies both to localhost and S3
Sep 04 10:42:53 <rnmhdn>	the only probelem is that on localhost the cookies don't get embedded in every following request I send
Sep 04 10:42:55 <lintguy>	It actually stored the cookies locally.
Sep 04 10:43:09 <rnmhdn>	what did?
Sep 04 10:43:14 <lintguy>	And you can see in the browser console what domain those cookies apply to.
Sep 04 10:44:04 <asl97>	I guess I just have to keep track of the state of the checkboxes rather than rely on the checkbox.checked
Sep 04 10:45:32 <lintguy>	asl97: Sorry, I haven't used checkboxes on vanilla JS for ages
Sep 04 10:48:05 <thykka>	asl97, what are you trying to accomplish?
Sep 04 10:48:59 <rnmhdn>	do I need cloudfront for making my S3 https? lintguy
Sep 04 10:49:29 <lintguy>	rnmhdn: Or cloudflare, I prefer cloudflare.
Sep 04 10:53:33 <rnmhdn>	Password fields present on an insecure (http://) page. This is a security risk that allows user login credentials to be stolen.
Sep 04 10:53:46 <rnmhdn>	I don't want to keep my front on http
Sep 04 10:54:14 <rnmhdn>	but I'm wondering if passowrds can be stolen if my front is http and my backend that receives the post reqeust is https
Sep 04 10:58:31 <rnmhdn>	lintguy: your solution worked.
Sep 04 10:58:37 <rnmhdn>	my cookies are working now.
Sep 04 10:59:02 <rnmhdn>	but there is a stupid problem now
Sep 04 10:59:05 <rnmhdn>	:|
Sep 04 11:00:24 <rnmhdn>	http://localhost:8080/ works just fine
Sep 04 11:00:28 <rnmhdn>	but I get [vue-router] Failed to resolve async component default: ChunkLoadError: Loading chunk somescript failed.
Sep 04 11:00:31 <rnmhdn>	(error: http://local.mydomain.world:8080/somescript.js)
Sep 04 11:00:38 <rnmhdn>	in http://local.mydomain.world:8080/
Sep 04 11:00:45 <rnmhdn>	fuck my life.
Sep 04 11:01:54 <rnmhdn>	however, I can easily open  http://local.mydomain.world:8080/somescript.js in my browser
Sep 04 11:04:36 <asl97>	thykka, trying to get clicking on the checkbox to work when the div which contain the checkbox is toggling the `checkbox.checked`
Sep 04 11:10:03 <asl97>	I could use stopPropagation but then I would also have to bind the handlers on the div to the checkbox too
Sep 04 11:12:50 <asl97>	or a simple hack by firing `checkbox.checked = !checkbox.checked;` to undo default on the checkbox before the handlers on the div runs
Sep 04 11:19:11 <Industrial>	Hi. Is there a pattern/method for splitting an array into multiple arrays given a predicate?
Sep 04 11:19:29 <grr12314>	groupby?
Sep 04 11:20:17 <grr12314>	there is groupby in lodash
Sep 04 11:22:22 <ashnur>	Industrial: reduce
Sep 04 11:24:38 <thykka>	n> [1, '2', 3, '4', '5', 6].reduce((acc, item) => { if (!acc[typeof item]) acc[typeof item] = []; acc[typeof item].push(item); return acc; }, {})
Sep 04 11:24:40 <jellobot>	(okay) { number: [ 1, 3, 6 ], string: [ '2', '4', '5' ] }
Sep 04 11:26:31 <grr12314>	n> [1, '2', 3, '4', '5', 6].reduce((acc, item) => ({...acc, [typeof item]:[...acc[typeof item]||[], item]}), {})
Sep 04 11:26:32 <jellobot>	(okay) { number: [ 1, 3, 6 ], string: [ '2', '4', '5' ] }
Sep 04 11:44:44 <lintguy>	rnmhdn: sounds like the path to the chinks are failing
Sep 04 11:44:49 <lintguy>	fhuicnks*
Sep 04 11:53:49 <rnmhdn>	lintguy: this is the last msg I got :fhuicnks*
Sep 04 11:54:24 <rnmhdn>	lintguy: can you elaborate?
Sep 04 11:56:01 <rnmhdn>	I have this in the html that loads to my browser: <link href="/somescript.js" rel="prefetch">
Sep 04 11:57:19 <qswz>	!orm
Sep 04 12:02:00 <qswz>	!ORM
Sep 04 12:02:20 <qswz>	!learn ORM=Object-Relational-Messing
Sep 04 12:02:20 <ecmabot>	qswz: Learned `ORM`.
Sep 04 12:09:40 <howdoi>	Messing heh heh
Sep 04 12:19:27 <hmw_metalab>	ORM is fun! ORM is love!
Sep 04 12:23:13 <ashnur>	lol
Sep 04 12:36:45 <bjorngi>	Is there a way to print the memory reference?
Sep 04 12:39:33 <DnzAtWrk>	oh thank god there is currentTransform
Sep 04 12:40:00 <DnzAtWrk>	and no bjorngi
Sep 04 12:40:03 <DnzAtWrk>	I've asked that before
Sep 04 12:40:07 <DnzAtWrk>	you can't get the actual reference
Sep 04 12:40:20 <DnzAtWrk>	shame because it could be useful
Sep 04 12:41:13 <bjorngi>	DnzAtWrk: Thanks! That is a shame.
Sep 04 12:41:36 <DnzAtWrk>	it kinda makes sense from a user-friendliness point of view
Sep 04 12:41:52 <DnzAtWrk>	hiding the technical details
Sep 04 12:42:31 <bjorngi>	Sure, but under some expremental flag you should be able to see some internals.
Sep 04 12:42:55 <bjorngi>	So it wont be used in production, but debuggable.
Sep 04 12:43:57 <DnzAtWrk>	I would assume a concern is that different implementations of js may deal with references in different ways
Sep 04 12:44:02 <DnzAtWrk>	and may mislead the user
Sep 04 12:45:05 <bjorngi>	Could be a generated value, not an actual memory address, but I see the point.
Sep 04 12:45:06 <DnzAtWrk>	some may be 32 vs 64 bit for example
Sep 04 12:45:12 <DnzAtWrk>	though I doubt references are 32 bit
Sep 04 12:46:04 <DnzAtWrk>	doesn't really make sense on a 64-bit architecture I believe
Sep 04 12:46:09 <DnzAtWrk>	*shrug*
Sep 04 12:47:47 <bjorngi>	Thinking that chrome has heap snapshop possibilities with memory addr. allocation it's really more confusing being able to show it in code. Maybe I just need to learn to use Chromes memory devtools. Kind of messy :p
Sep 04 12:48:30 <DnzAtWrk>	maybe a bit
Sep 04 12:48:36 <DnzAtWrk>	good enough for debugging allocations
Sep 04 12:48:42 <DnzAtWrk>	use the timeline tool
Sep 04 12:49:08 <niggler>	is there an actual spec for the canvas api
Sep 04 13:12:47 <graingert>	niggler: yes lol
Sep 04 13:14:02 <niggler>	there's some living standard
Sep 04 13:14:17 <niggler>	https://html.spec.whatwg.org/multipage/canvas.html#2dcontext
Sep 04 13:20:28 <graingert>	so
Sep 04 13:20:32 <graingert>	that's a legit standard
Sep 04 13:22:45 <graingert>	niggler: ^
Sep 04 13:25:24 <graingert>	niggler: https://www.reddit.com/r/javascript/comments/5swe9b/what_is_the_difference_between_the_w3c_and_the/
Sep 04 13:25:48 <nwoob>	In react when I pass props in functional component and destructure it like function Button({a,b,c, ...props}){ <button {...props} }
Sep 04 13:25:52 <nwoob>	is this the correct way
Sep 04 13:26:39 <niggler>	so it seems like the w3c are the real w3fools
Sep 04 13:26:49 <niggler>	at least if that top comment is taken at face value
Sep 04 13:27:39 <qswz>	nwoob: sur
Sep 04 13:28:01 <niggler>	youre missing a return or something nwoob
Sep 04 13:29:06 <nwoob>	qswz: if we are destructuring props in argument then why do we need to destructure in <button
Sep 04 13:29:06 <graingert>	niggler: correct?
Sep 04 13:29:18 <nwoob>	like we have function({...props})
Sep 04 13:29:21 <graingert>	nwoob: use arrow functions for functional components
Sep 04 13:29:37 <graingert>	if you have only one statement in a function it should be arrow
Sep 04 13:29:56 <nwoob>	one statement meaning
Sep 04 13:31:26 <niggler>	function f(x) { return x + 1; }
Sep 04 13:31:34 <niggler>	is better written as (x) => x+1
Sep 04 13:32:54 <nwoob>	I have many it like this https://pastebin.com/raw/RQSEj1Vw
Sep 04 13:33:15 <niggler>	yeah its fine
Sep 04 13:33:44 <graingert>	but that console.log isn't going to be there in production
Sep 04 13:34:21 <graingert>	you shouldn't need to use ` with classNames
Sep 04 13:34:39 <niggler>	its a crude attempt to include two classes
Sep 04 13:35:08 <niggler>	the first one based on that function call, the second one being styles[variant]
Sep 04 13:40:18 <graingert>	classNames should do that out the box tho
Sep 04 13:40:29 <graingert>	nwoob: ^
Sep 04 13:41:22 <graingert>	nwoob: className={classNames(styles.buttonStyle, className, styles[variant])}
Sep 04 13:41:51 <graingert>	should just work
Sep 04 13:42:13 <MJCD>	boop
Sep 04 13:44:16 <graingert>	nwoob: ...
Sep 04 13:46:16 <kaushal_>	Hi
Sep 04 13:49:04 <nwoob>	graingert: ok I'll change the className thanks :)
Sep 04 13:54:40 <nwoob>	I am making alias and I get this error `baseUrl` can only be set to `src` or `node_modules`. Create React App does not support other values at this time.
Sep 04 13:55:35 <nwoob>	This is my jsconfig file https://pastebin.com/raw/hB8dnKwx
Sep 04 13:55:56 <graingert>	aliases?
Sep 04 13:56:09 <graingert>	nwoob: what's the for?
Sep 04 13:56:23 <graingert>	nwoob: just use relative imports for everything
Sep 04 13:57:04 <nwoob>	like when importing we do import something from "../../component/name"
Sep 04 13:57:24 <nwoob>	so I can just do from "component/name"
Sep 04 14:04:48 <devnull_>	!paste
Sep 04 14:04:48 <ecmabot>	devnull_: Please paste your code (gist and other paste sites, NOT pastebin.com or Hastebin) or create a running example: see !fiddle. See also !badpastebin !hastebin !nopaste and !mcve
Sep 04 14:05:33 <robdrake>	!badpastebin
Sep 04 14:05:33 <ecmabot>	robdrake: Don't use pastebin.com, Ads, Spamfilters, Captcha, Adds whitespace, Slow, Ugly, No comment/fork/annotate, Breaks copy/paste, Blocked for some people, etc. See !paste and !fiddle
Sep 04 14:07:08 <devnull_>	https://jsfiddle.net/snm1ok4w/ Can someone explain the different between this both things? the bar getX() assigned to the prototype (being shared). while Foo - getX() registered in the instance level (Am i correct?) I saw a code which uses the Foo() approach? what advantages it gives?
Sep 04 14:10:52 <robdrake>	!hastebin
Sep 04 14:10:53 <ecmabot>	robdrake: https://hastebin.com/about.md
Sep 04 14:11:04 <robdrake>	!nopaste
Sep 04 14:11:04 <ecmabot>	robdrake: Show some code, but don't paste it to the channel. Use sites like gist.github.com or dpaste.com. Ideally it should be executable, see !paste
Sep 04 14:11:23 <gehn>	!code
Sep 04 14:11:23 <ecmabot>	gehn: Show some code, but don't paste it on the channel. You can provide a test case we can run and help you with your problem with http://jsfiddle.net , http://jsbin.com , or http://requirebin.com . Sites like http://gist.github.com/ and http://bpaste.net are cool too.
Sep 04 14:11:32 <robdrake>	ok that is all clear
Sep 04 14:11:51 <devnull_>	> x + 1
Sep 04 14:12:11 <devnull_>	n> 1 + 1
Sep 04 14:12:13 <jellobot>	(okay) 2
Sep 04 14:21:01 <thykka>	n> [x, x+x, x-x, x+1, x-1]
Sep 04 14:21:03 <jellobot>	(fail) ReferenceError: x is not defined
Sep 04 14:27:56 <ashnur>	hah
Sep 04 14:29:57 <weijunli>	may you guys gimme an help with this https://dpaste.de/JTyb#L24,25,29,40
Sep 04 14:33:30 <ashnur>	no
Sep 04 14:33:35 <ashnur>	!nopaste
Sep 04 14:33:36 <ecmabot>	ashnur: Show some code, but don't paste it to the channel. Use sites like gist.github.com or dpaste.com. Ideally it should be executable, see !paste
Sep 04 14:34:34 <ashnur>	maybe
Sep 04 14:35:34 <kidosatori>	Is `await` guaranteed to "pause" execution until the next tick of the event loop, or does something like `const x = await Promise.resolve(5);` just translate to `const x = 5;`?
Sep 04 14:35:53 <ashnur>	weijunli what is the problem though? code looks well organized but in an un-idiomatic way
Sep 04 14:36:15 <ashnur>	kidosatori: second
Sep 04 14:36:55 <kidosatori>	ashnur: Thanks :)
Sep 04 14:37:00 <ashnur>	there is no pause of execution, either there is something on the stack and then we take it and eval it, or there isn't so we wait
Sep 04 14:37:18 <weijunli>	ashnur, the uploadFiles still dont know whats the server&path to upload the files
Sep 04 14:37:22 <weijunli>	where should I put that info
Sep 04 14:37:37 <weijunli>	L24 doesnt do anything because /stage3 doesnt exist
Sep 04 14:37:39 <ashnur>	weijunli: i think you should welcome new javascript knowledge first
Sep 04 14:37:50 <ashnur>	especially about promises and such
Sep 04 14:38:03 <weijunli>	ashnur, im just interested in making it work not going into idiomatic rules yet
Sep 04 14:38:11 <ashnur>	ok, let me think then
Sep 04 14:40:28 <ashnur>	weijunli: i think you are calling uploadFiles too early, no?
Sep 04 14:40:37 <prometh>	n> 5 @ prometh
Sep 04 14:40:39 <jellobot>	prometh, 5
Sep 04 14:40:39 <ashnur>	shouldn't you wait for something before you call it?
Sep 04 14:41:14 <weijunli>	ashnur, ye I have a setTimeOut function above this code
Sep 04 14:41:41 <prometh>	n> a=()=>{await Promise.resolve(5); console.log('a')}; b=()=>{console.log('b')}; a(); b(); @ kidosatori
Sep 04 14:41:42 <jellobot>	kidosatori, SyntaxError: await is only valid in async function
Sep 04 14:41:51 <prometh>	n> a=async()=>{await Promise.resolve(5); console.log('a')}; b=()=>{console.log('b')}; a(); b(); @ kidosatori
Sep 04 14:41:53 <jellobot>	kidosatori, b a undefined
Sep 04 14:43:48 <ashnur>	weijunli: so, you want to know what to write in the action? but you can choose anything and need advice, or have you tried something and it doesn't work? I am not quite sure I understand you
Sep 04 14:43:50 <kidosatori>	prometh: I am aware. My question was more whether something like `async () => { while (true) { await Promise.resolve(); } }` was going to be equivalent to `function() { while (true) { ; } }`
Sep 04 14:44:13 <prometh>	no, Promise.resolve() is next tick
Sep 04 14:44:51 <weijunli>	ashnur, when clicking on ´action´ how does it know what sever to upload it to? Thats what Im asking
Sep 04 14:45:44 <ashnur>	weijunli: you can write what you want?
Sep 04 14:46:45 <weijunli>	ashnur, here is my previous paste https://dpaste.de/135b#L24,38,42,52 with a php snippet code to what /stage3 should do. Then I realized that L25-L30 is doing exactly the same thing. Thats why Im now not sure of what to put in ´action´
Sep 04 14:48:57 <ashnur>	put "/"
Sep 04 14:50:07 <weijunli>	ashnur, cant I put a path to where the files should be uploaded?
Sep 04 14:50:19 <weijunli>	like http://localhost/upload-here/
Sep 04 14:55:21 <nwoob>	const funct = first => second => third {} is this higher order function?
Sep 04 14:57:06 <weijunli>	ashnur,
Sep 04 14:58:29 <Booster2ooo>	nwoob: yes, funct is a higher order functions because it's a function that returns a function (it would also be if it accepted a function as an argument)
Sep 04 14:59:35 <rnmhdn>	notchris: hey
Sep 04 15:00:38 <weijunli>	I want to upload the files to a specific server path, what should I do? https://dpaste.de/N6Yd#L20
Sep 04 15:01:19 <weijunli>	can I add another argument like on form.setAttribute(´method´, ´post´, ´http://server/upload-here´) /
Sep 04 15:01:21 <weijunli>	?
Sep 04 15:02:19 <DnzAtWrk>	hmm, any guide how to transform a point using currentTransform?
Sep 04 15:02:32 <DnzAtWrk>	it has a,b,c,d,e,f attributes. No idea how that makes a transformation matrix
Sep 04 15:02:54 <thykka>	https://developer.mozilla.org/en-US/docs/Web/API/DOMMatrix
Sep 04 15:03:23 <thykka>	https://drafts.fxtf.org/geometry/#DOMMatrix
Sep 04 15:03:35 <DnzAtWrk>	oh god
Sep 04 15:03:48 <DnzAtWrk>	I forgot the most obvious solution
Sep 04 15:03:58 <DnzAtWrk>	looking at the functions the matrix has
Sep 04 15:04:03 <DnzAtWrk>	I just assumed I would have to do it myself
Sep 04 15:04:24 <thykka>	do you want to? :)
Sep 04 15:04:50 <DnzAtWrk>	probably not
Sep 04 15:06:00 <weijunli>	anyone?
Sep 04 15:06:04 <DnzAtWrk>	though it would appear that they don't provide a transform 3d/2d point function
Sep 04 15:06:33 <DnzAtWrk>	but I get m11 etc.
Sep 04 15:06:40 <DnzAtWrk>	so it's not that hard to multiply it manually
Sep 04 15:07:02 <DnzAtWrk>	still seems like an oversight to leave out one of the most common things you use a transformation matrix for
Sep 04 15:07:06 <rocketmagnet>	i'm reading a javascript book at the moment and they talk about that local defined bindings with the var x = (arg1, arg2) => {} has something like a stack where the local defined variables are still available after the function has finished... but that 's not the case... what is this about with the => {} functions and local variables ??
Sep 04 15:07:09 <rocketmagnet>	i don't get it
Sep 04 15:08:21 <DeltaHeavy>	rocketmagnet Are you sure you're understanding it correctly?
Sep 04 15:08:35 <rocketmagnet>	not really
Sep 04 15:08:37 <DeltaHeavy>	Cause otherwise that book is just straight up incorrect.
Sep 04 15:08:51 <DnzAtWrk>	n> const a = {}, b = () => a.f = 1; b(); a;
Sep 04 15:08:52 <jellobot>	(okay) { f: 1 }
Sep 04 15:08:52 <DnzAtWrk>	like so?
Sep 04 15:09:42 <DeltaHeavy>	rocketmagnet Oh wait, is it maybe talking about if anything async is going on?
Sep 04 15:09:49 <prometh>	when i apply for jobs, should i say "will work for food" ?
Sep 04 15:09:53 <DeltaHeavy>	lolno
Sep 04 15:09:56 <rocketmagnet>	i'm a bit confused about this type of functions, DnzAtWrk something like return () => localDefinedVar
Sep 04 15:10:06 <DeltaHeavy>	prometh https://weworkremotely.com/ is a great site I've found out btw.
Sep 04 15:10:10 <DnzAtWrk>	it uses the local var if it exists and you don't redefine it
Sep 04 15:10:39 <prometh>	DeltaHeavy: yeah, i think i've used it before... no luck, though
Sep 04 15:10:43 <DnzAtWrk>	well, local is the wrong word
Sep 04 15:10:50 <DnzAtWrk>	I meant parent scope var
Sep 04 15:11:27 <DnzAtWrk>	n> const a = () => const b = 1; a(); b
Sep 04 15:11:28 <jellobot>	(fail) SyntaxError: Unexpected token const
Sep 04 15:11:43 <DnzAtWrk>	n> const a = () => { const b = 1; } a(); b
Sep 04 15:11:44 <jellobot>	(fail) SyntaxError: Unexpected identifier
Sep 04 15:11:50 <DnzAtWrk>	n> const a = () => { const b = 1; }; a(); b
Sep 04 15:11:51 <jellobot>	(fail) ReferenceError: b is not defined
Sep 04 15:12:03 <DnzAtWrk>	n> const a = () => { b = 1; }; a(); b
Sep 04 15:12:04 <jellobot>	(okay) 1
Sep 04 15:12:12 <DnzAtWrk>	hmmm
Sep 04 15:12:12 <rocketmagnet>	i'm a bit confused about this type of functions, DnzAtWrk something like return () => localDefinedVar
Sep 04 15:12:16 <DnzAtWrk>	b is hoisted I guess
Sep 04 15:12:19 <rocketmagnet>	inside of a function
Sep 04 15:12:51 <DeltaHeavy>	AFter rereading that statement rocketmagnet the book is right
Sep 04 15:12:55 <DeltaHeavy>	I was thinking OUT of the function's scope
Sep 04 15:13:17 <DeltaHeavy>	A function can be done executing, and the variables can still exist just fine because there's still code in-scope that hasn't yet run
Sep 04 15:13:22 <DeltaHeavy>	eg: a setTimeout or promise.
Sep 04 15:13:36 <rocketmagnet>	but when i return a value it's normal that i can access the returned value ...
Sep 04 15:14:12 <rocketmagnet>	for what use case is this type of function for ?
Sep 04 15:14:46 <DeltaHeavy>	Yes, and that's just a function. Most functions return things.
Sep 04 15:15:42 <smallick>	n> (a=>b=>f=>f(a)(b))('head')('tail')(a=>b=>a)
Sep 04 15:15:43 <jellobot>	(okay) 'head'
Sep 04 15:15:59 <rocketmagnet>	but why the return () => localVar; and not just return localVar ?
Sep 04 15:16:15 <DnzAtWrk>	returns a function returning localvar
Sep 04 15:16:21 <DnzAtWrk>	for some reason
Sep 04 15:16:41 <rocketmagnet>	can't i just return the variable ??
Sep 04 15:16:46 <DnzAtWrk>	hmmmm
Sep 04 15:17:01 <DnzAtWrk>	oh
Sep 04 15:17:05 <DnzAtWrk>	maybe if the localvar changes?
Sep 04 15:17:13 <DnzAtWrk>	then if you return the function you get a different value at different times
Sep 04 15:17:17 <DnzAtWrk>	umm... I think
Sep 04 15:17:26 <smallick>	maybe localVar could be changed after return
Sep 04 15:17:32 <DnzAtWrk>	exactly
Sep 04 15:17:56 <DnzAtWrk>	for some reason this isn't crystal clear in my head
Sep 04 15:18:03 <Spring>	first time seeing pastebin not functional, interesting
Sep 04 15:18:27 <Spring>	edit, up now for me
Sep 04 15:18:36 <rocketmagnet>	n> console.log("BOT?");
Sep 04 15:18:38 <jellobot>	(okay) BOT? undefined
Sep 04 15:19:21 <DeltaHeavy>	rocketmagnet It doesn't make much sense for that particular return value but returning a function makes a lot of sense for some things.
Sep 04 15:19:57 <rocketmagnet>	i understand, i hope he's coming back to that specific topic in the book
Sep 04 15:20:08 <DnzAtWrk>	n> const f = () => { let a = 0; return () => a; setTimeout(() => a = 1, 100); }; const r = f(); console.log(r()); setTimeout(() => console.log(r()), 200);
Sep 04 15:20:09 <jellobot>	(okay) 0 Timeout { _idleTimeout: 200, _idlePrev: [TimersList], _idleNext: [TimersList], _idleStart: 46, _onTimeout: [Function], _timerArgs: undefined, _repeat: null, _destroyed: false, [Symbol(refed)]: true, [Symbol(asyncId)]: 14, [Symbol(triggerId)]: 0 }0
Sep 04 15:20:26 <DnzAtWrk>	n> const f = () => { let a = 0; return () => a; setTimeout(() => a = 1, 100); }; const r = f(); console.log(r()); setTimeout(() => console.log(r()), 200); undefined;
Sep 04 15:20:27 <jellobot>	(okay) 0 undefined0
Sep 04 15:20:39 <DnzAtWrk>	didn't work
Sep 04 15:21:40 <RoseBus>	hello, i'm using dynamic forms, for some reason if the user presses 'enter' during any portion of the form, it triggers the delete form button.  How can i override this?
Sep 04 15:22:03 <DnzAtWrk>	you don't add it in the first place
Sep 04 15:22:05 <DnzAtWrk>	I'd say
Sep 04 15:22:35 <RoseBus>	DnzAtWrk, i didn't realize i added it... it's just a button, not any type of input
Sep 04 15:22:56 <RoseBus>	sry, not a <input>
Sep 04 15:22:59 <smallick>	handle that event and stop propagation or bubbling up
Sep 04 15:23:02 <DnzAtWrk>	https://stackoverflow.com/questions/925334/how-is-the-default-submit-button-on-an-html-form-determined
Sep 04 15:23:51 <DnzAtWrk>	"If the form is submitted by hitting Enter while in a non-textarea field, then it's actually down to the user agent to decide what it wants here. The specs don't say anything about submitting a form using the enter key while in a text entry field (if you tab to a button and activate it using space or whatever, then there's no problem as that specific submit button is unambiguously used)."
Sep 04 15:27:02 <rocketmagnet>	i dont't understand the following code: function multiplier(factor) { return number => number * factor; } let twice = multiplier(2); console.log(twice(5)); -> 10
Sep 04 15:27:30 <smallick>	n> g = i => ({ v: () => i, r => i++}), h = g(5), [h.v(), h.r(), h.r(), h.v()]
Sep 04 15:27:31 <jellobot>	(fail) SyntaxError: Unexpected token =>
Sep 04 15:27:34 <DnzAtWrk>	it pointlessly creates a function which multiplies a number with a fixed number
Sep 04 15:27:39 <DnzAtWrk>	I guess as an example
Sep 04 15:27:56 <DnzAtWrk>	it creates a FUNCTION which does it, not a result
Sep 04 15:28:14 <smallick>	currying
Sep 04 15:28:20 <rocketmagnet>	so return number => number * factor; creates a function, but what's the start value of number ??
Sep 04 15:28:45 <rocketmagnet>	oh
Sep 04 15:28:56 <rocketmagnet>	i think i get it now
Sep 04 15:29:31 <desikoder>	I didn't get it
Sep 04 15:29:52 <DnzAtWrk>	n> const createSay = prefix => suffix => `${prefix} ${suffix}`; const s = createSay('Say'); s('what');
Sep 04 15:29:53 <jellobot>	(okay) 'Say what'
Sep 04 15:30:23 <desikoder>	Still wondering where does number come from?
Sep 04 15:30:45 <DnzAtWrk>	 number * factor
Sep 04 15:30:48 <stennowork>	function parameter
Sep 04 15:31:14 <smallick>	n> g = (i => ({ v: (() => i), r: (() => i++) })), h = g(5), [h.v(), h.r(), h.r(), h.v()]
Sep 04 15:31:15 <jellobot>	(okay) [ 5, 5, 6, 7 ]
Sep 04 15:31:18 <stennowork>	const foo = number => number * 2; is (more or less) the same as function foo(number) { return number * 2; }
Sep 04 15:32:23 <desikoder>	Yeah, but when you call it with multiplier(2), how does the nested function get a starting value for "number". In that example, factor would be equal to 2 but what about number?
Sep 04 15:32:37 <DnzAtWrk>	n> const createLerp = (a, b) => t => b * t + a * (1 - t); const lerper = createLerp(1, 6); lerper(0.5);
Sep 04 15:32:38 <jellobot>	(okay) 3.5
Sep 04 15:32:43 <DnzAtWrk>	see. Created an actually useful example
Sep 04 15:33:49 <smallick>	desikoder: thats closure
Sep 04 15:35:05 <smallick>	n> (a=>b=>a+b)(3)(2)
Sep 04 15:35:06 <jellobot>	(okay) 5
Sep 04 15:36:05 <smallick>	the value of a(=3) is still in the scope of b=>a+b
Sep 04 15:37:04 <DnzAtWrk>	scope is like a house of cards... no wait... scope is like a box of chocolates
Sep 04 15:37:17 <DnzAtWrk>	I don't have a good analogy
Sep 04 15:37:57 <smallick>	this very thing makes js functional, the closure
Sep 04 15:38:08 <RoseBus>	how can i disable chrome's auto-form filling options?
Sep 04 15:38:23 <NoiseEee>	perfect google question and unrelated to ##javascript
Sep 04 15:38:24 <RoseBus>	these forms always have independent, unique data... chrome keeps trying to throw suggestions
Sep 04 15:38:45 <RoseBus>	no i mean for my page specifically, not browser settings
Sep 04 15:38:59 <NoiseEee>	https://developer.mozilla.org/en-US/docs/Web/Security/Securing_your_site/Turning_off_form_autocompletion
Sep 04 15:39:11 <RoseBus>	o
Sep 04 15:39:15 <RoseBus>	sry
Sep 04 15:39:16 <RoseBus>	lol
Sep 04 15:39:42 <rocketmagnet>	smallick: thanks for the example
Sep 04 15:40:04 <DnzAtWrk>	"DOMMatrix.invertSelf()"
Sep 04 15:40:15 <DnzAtWrk>	does that mean invert and return self, or return an inverted copy
Sep 04 15:40:19 <DnzAtWrk>	"Returns itself, a DOMMatrix, with its new content being the result of the original matrix being inverted. If the matrix cannot be inverted, all its components are set to NaN and is2D() returns false."
Sep 04 15:40:22 <DnzAtWrk>	seems a bit unclear
Sep 04 15:41:36 <Spring>	userscript related question: I'm wanting to use the following script to replace Github's relative timestamps in repos to an absolute one, for the timestamps seen in the file list. The selector for the latter is 'time-ago' rather than 'relative-time' (seen in the original script). It targets the right element but doesn't fill the element correctly. Any idea what is incorrect? https://stackoverflow.com/a/51335297
Sep 04 15:42:14 <rocketmagnet>	what is a real good book about javascript ?
Sep 04 15:42:52 <smallick>	eloquent javascript
Sep 04 15:43:29 <thykka>	this ;) https://tc39.es/ecma262/
Sep 04 15:45:17 <smallick>	thats great if you are writing a js implementation or want an explanation for some weird behaviour
Sep 04 15:46:10 <rocketmagnet>	smallick: that's the one i got =)
Sep 04 15:46:39 <rocketmagnet>	i'm sure he will go into detail when and how to use closures later on in the book
Sep 04 15:50:44 <Booster2ooo>	!books
Sep 04 15:50:44 <ecmabot>	Booster2ooo: !eloquent (http://eloquentjavascript.net), !ydkjs (https://github.com/getify/You-Dont-Know-JS), JavaScript: The Definitive Guide by David Flanagan, High Performance JavaScript by Nicholas C. Zakas, Effective JavaScript by David Herman, Functional JavaScript by Michael Fogus, Programming JavaScript Applications by Eric Elliott.
Sep 04 15:51:00 <Booster2ooo>	!books @rocketmagnet
Sep 04 15:51:00 <ecmabot>	rocketmagnet: !eloquent (http://eloquentjavascript.net), !ydkjs (https://github.com/getify/You-Dont-Know-JS), JavaScript: The Definitive Guide by David Flanagan, High Performance JavaScript by Nicholas C. Zakas, Effective JavaScript by David Herman, Functional JavaScript by Michael Fogus, Programming JavaScript Applications by Eric Elliott.
Sep 04 15:52:02 <smallick>	**we don't *know* js**
Sep 04 15:53:57 <gehn>	we really don't, he keeps to himself and doesn't share many personal details
Sep 04 16:56:05 *	Disconnected ()
**** ENDING LOGGING AT Wed Sep  4 16:56:05 2019

**** BEGIN LOGGING AT Wed Sep  4 16:56:30 2019

Sep 04 16:56:30 *	Now talking on ##javascript
Sep 04 16:56:30 *	Topic for ##javascript is: JavaScript is *not* Java. | Just ask your question. | Say "!mdn abc" for docs on "abc". | Don't paste code in the channel. | Can't talk? Get registered on freenode ( https://git.io/vaTS2 )
Sep 04 16:56:30 *	Topic for ##javascript set by niggler!~niggler@unaffiliated/niggler (Tue Jan 15 07:16:23 2019)
Sep 04 16:57:22 <evulish>	god how is my wireless so bad
Sep 04 17:01:10 <graingert>	rubsen: it's got an autofix option too
Sep 04 17:01:15 <graingert>	Run that first
Sep 04 17:01:35 <rubsen>	just installed ant --init it :)
Sep 04 17:01:39 <rubsen>	and*
Sep 04 17:01:48 <graingert>	prometh: use eslint-plugin-babel
Sep 04 17:01:51 <graingert>	rubsen: ?
Sep 04 17:02:05 <graingert>	mescalinum: init?
Sep 04 17:02:08 <graingert>	rubsen: *
Sep 04 17:02:14 <rubsen>	i didnt even had eslint
Sep 04 17:02:14 <graingert>	!Airbnb @ rubsen
Sep 04 17:02:15 <ecmabot>	rubsen: We tend to support airbnb's javascript style guide - it can be found here: https://github.com/airbnb/javascript you can enforce it in eslint with `npx install-peerdeps --dev eslint-config-airbnb-base && echo '{"extends": "airbnb-base"}' > .eslintrc` see also !eslint
Sep 04 17:02:26 <graingert>	The command there will do it all
Sep 04 17:02:29 <mescalinum>	graingert: ???
Sep 04 17:02:49 <graingert>	mescalinum: sorry
Sep 04 17:03:17 <graingert>	I'm on mobile and when you logged in it shifted the pane
Sep 04 17:03:26 <graingert>	And I meant to tap someone else
Sep 04 17:04:02 <rubsen>	"Installing peerdeps for eslint-config-airbnb-base@latest"
Sep 04 17:05:09 <rubsen>	!eslint
Sep 04 17:05:09 <ecmabot>	rubsen: ESLint is an open source JavaScript linting utility originally created by Nicholas C. Zakas in June 2013. Code linting is a type of static analysis that is used to find problematic patterns or code that doesnt adhere to certain style guidelines. There are code linters for most programming languages, and compilers sometimes incorporate linting into the compilation process. http://eslint.org/docs/user-guide/getting-started
Sep 04 17:05:58 <graingert>	And Airbnb is the best
Sep 04 17:06:25 <rubsen>	so, after hitting the npx command and successfully installation , i do eslint on my botfile.js right?
Sep 04 17:06:48 <graingert>	rubsen: eslint does nothing on its own
Sep 04 17:06:50 <graingert>	You need a preset
Sep 04 17:07:32 <graingert>	If you run ./node_modules/.bin/eslint --fix path/to/ur/file.js
Sep 04 17:07:41 <graingert>	It should do something
Sep 04 17:08:10 <rubsen>	you are aware that i am on ms-cmd?
Sep 04 17:08:19 <rubsen>	working with npm & node in CMD
Sep 04 17:09:30 <rubsen>	i can do D:\>eslint filename.js and it gives me an output
Sep 04 17:09:40 <stennowork>	D:
Sep 04 17:09:43 <rubsen>	D: just refers an example ^^
Sep 04 17:10:25 <evulish>	i pledge all of my wealth to the person who invents a robot vacuum that doesn't beeline for every cable in my house
Sep 04 17:11:14 <rubsen>	so npx command was working as i have npm working in cmd. config-airbnb-base@14.0.0 installed, as also plugin-import@2.18.2 and eslint@6.1.0
Sep 04 17:11:37 <rubsen>	SUCCESS eslint-config-airbnb-base and its peerDeps were installed successfully.
Sep 04 17:12:13 <rubsen>	D:\bot>eslint --fix dlivebot2.js
Sep 04 17:12:14 <rubsen>	D:\bot\dlivebot2.js
Sep 04 17:12:14 <rubsen>	  100:101  error  Parsing error: Invalid number
Sep 04 17:12:14 <rubsen>	✖ 1 problem (1 error, 0 warnings)
Sep 04 17:12:29 <rubsen>	thats how far i've come by now
Sep 04 17:12:30 <graingert>	Hmm
Sep 04 17:12:38 <graingert>	Ok what's in that line
Sep 04 17:13:06 <rubsen>	100 - 101 ?
Sep 04 17:13:27 <graingert>	The line
Sep 04 17:13:42 <graingert>	Uhh can you paste a gist of your code
Sep 04 17:14:00 <graingert>	!gist @ rubsen
Sep 04 17:14:00 <ecmabot>	rubsen: Paste code at https://gist.github.com (or a similar site see !paste) and name the file .js so that we can look over it. Thanks!
Sep 04 17:14:51 <rubsen>	yep - sec
Sep 04 17:16:21 <rubsen>	https://gist.github.com/rubirubsen/416b90c368e32647f3880dd19395add4
Sep 04 17:16:33 <rubsen>	now with *** as key ^^ ;)
Sep 05 09:58:43 *	Disconnected ()
**** ENDING LOGGING AT Thu Sep  5 09:58:43 2019

**** BEGIN LOGGING AT Thu Sep  5 09:59:06 2019

Sep 05 09:59:06 *	Now talking on ##javascript
Sep 05 09:59:06 *	Topic for ##javascript is: JavaScript is *not* Java. | Just ask your question. | Say "!mdn abc" for docs on "abc". | Don't paste code in the channel. | Can't talk? Get registered on freenode ( https://git.io/vaTS2 )
Sep 05 09:59:06 *	Topic for ##javascript set by niggler!~niggler@unaffiliated/niggler (Tue Jan 15 07:16:23 2019)
Sep 05 10:01:19 <les>	If you're set on an IDE, jetbrains webstorm is nice.
Sep 05 10:02:52 <nibzAU>	id prefer a nice txt editor but also want a console
Sep 05 10:23:07 <tichun>	Could youtube theme be changed with javascript from extension? I mean their native toggle, not changing some css
Sep 05 10:28:15 <smallick>	n> f = ((a, b) => a === 0n ? b : f(a-1n, a * b)), f(100n, 1n)
Sep 05 10:28:17 <jellobot>	(okay) 93326215443944152681699238856266700490715968264381621468592963895217599993229915608941463976156518286253697920827223758251185210916864000000000000000000000000n
Sep 05 10:28:53 <smallick>	hmm
Sep 05 10:42:21 <tichun>	OK, I've got it:  document.querySelector("html").setAttribute("dark", "true");
Sep 05 11:23:23 <stennowork>	n> [...'<meta charset="utf-8">'].map(x => x.charCodeAt(0))
Sep 05 11:23:25 <jellobot>	(okay) [ 60, 109, 101, 116, 97, 32, 99, 104, 97, 114, 115, 101, 116, 61, 34, 117, 116, 102, 45, 56, ... 2 more items ]
Sep 05 11:24:15 <Kirjava>	is there a justification for useRef not taking a callback
Sep 05 11:24:20 <Kirjava>	I had to write: http://ix.io/1Uku/js
Sep 05 11:39:42 <RenjieAbarai>	Hi! I have a problem with MutationObserver on safari. It doesn't seem to trigger with style-only changes. Are there any other cross browser alternatives for detecting height adjustment?
Sep 05 11:51:41 <RenjieAbarai>	Hi! I have a problem with MutationObserver on safari. It doesn't seem to trigger with style-only changes. Are there any other cross browser alternatives for detecting height adjustment?
Sep 05 12:06:53 <raj>	how can I do myarray[0]['somekey']['someotherkey'] and get null (or undefined, or some other empty value) if 'somekey' doesn't exist, instead of the "Cannot read property 'someotherkey' of null"?
Sep 05 12:07:38 <stennowork>	if you use babel, you can use conditional chaining
Sep 05 12:08:02 <raj>	just vanilla JS
Sep 05 12:08:16 <stennowork>	otherwise, you just have to go (myarray[0] && myarray[0]['somekey'] && myarray[0]['somekey']['someotherkey'] && ...)
Sep 05 12:24:35 <raj>	stennowork: that's great, thanks!!
Sep 05 12:30:07 <rnmhdn>	I want to send a complex nested json it's one videofile with some metadata and several question items each having one picture in them
Sep 05 12:30:17 <rnmhdn>	what is the best way to do this?
Sep 05 12:30:29 <rnmhdn>	I want to send it to a rest API
Sep 05 12:52:49 <escherial>	rnmhdn: you should probably avoid sticking binary data in your JSON; you should probably host it somewhere (ideally on a CDN) and put a link to it in the JSON
Sep 05 12:54:09 <escherial>	how you submit it to the rest API's kind of up to whoever implemented it; if you're implementing it, you might consider having the API accept the json in the body of a POST request
Sep 05 12:54:31 <escherial>	(if it's truly restful, then POST indicates that the submission will have a side effect, e.g. storing the data you submitted)
Sep 05 12:54:40 <rnmhdn>	the API is a django rest framework which is mine
Sep 05 12:54:51 <rnmhdn>	the frontend is a vuejs application which is also mine
Sep 05 12:55:14 <stennowork>	n> [[].every(x=>x), [].some(x=>x)]
Sep 05 12:55:15 <jellobot>	(okay) [ true, false ]
Sep 05 12:55:57 <escherial>	rnmhdn: cool, then yeah, i'd submit the JSON in the body of the POST request, then...if you really want to submit the video and images in the same payload, you might consider base64-encoding them (although the video's going to be yuuuuge i presume)
Sep 05 12:56:25 <escherial>	stennowork: huh.
Sep 05 12:56:31 <rnmhdn>	no
Sep 05 12:56:40 <rnmhdn>	I don't insist on doing it all in one request
Sep 05 12:56:52 <stennowork>	escherial, .some == 'at least one'
Sep 05 12:57:18 <escherial>	stennowork: that makes sense; i'm confused that every() on an empty list is true
Sep 05 12:57:43 <stennowork>	well, the condition is true for all elements in the set
Sep 05 12:57:51 <stennowork>	list*
Sep 05 12:57:52 <stennowork>	or w/e
Sep 05 13:01:27 <escherial>	stennowork: that's fair. still kind of a quirky thing at first glance, heh
Sep 05 13:02:13 <stennowork>	yes!
Sep 05 13:02:16 <rnmhdn>	escherial: can U elaborate?
Sep 05 13:02:20 <rnmhdn>	I'm using axios
Sep 05 13:02:36 <rnmhdn>	and I have a json called video which looks as I described earlier
Sep 05 13:03:15 <escherial>	rnmhdn: do your users upload the video and images as part of this submission process, or do those assets already exist somewhere on your server?
Sep 05 13:03:34 <rnmhdn>	no
Sep 05 13:03:37 <rnmhdn>	then upload
Sep 05 13:03:40 <stennowork>	escherial, thats why i demonstrated it :)
Sep 05 13:03:46 <rnmhdn>	they
Sep 05 13:04:54 <rnmhdn>	I have a couple of inputs and a file-input for video then I have a button for adding questions, so I can add a couple of questions and each question has a button of adding new choice.  and there is a save button at the buttom
Sep 05 13:04:59 <rnmhdn>	escherial:^
Sep 05 13:06:21 <escherial>	rnmhdn: sounds good; i suppose i'd first have the file uploads occur, with the server sending you back a URL where it can be retrieved, then i'd embed those URLs in the final JSON
Sep 05 13:07:02 <escherial>	you could have all that happen when the user hits save, i.e. you'd iterate through each file upload form and submit it, displaying some kind of progress for each, then submit the final json
Sep 05 13:07:28 <rnmhdn>	so I should create new API endpoints for uploading images and videos?
Sep 05 13:07:36 <escherial>	yes
Sep 05 13:08:01 <escherial>	you might find DRF's FileUploadParser useful for that: https://www.django-rest-framework.org/api-guide/parsers/#fileuploadparser
Sep 05 13:08:11 <rnmhdn>	so basically I should havea generic endpoint that acceps whatever video or image peple give to it?
Sep 05 13:08:13 <rnmhdn>	:))
Sep 05 13:08:56 <escherial>	heh, sure, although you'd probably want do some validation (e.g., have them include a cross-site request forgery token, aka a CSRF, with the upload)
Sep 05 13:09:03 <escherial>	so that you don't end up storing random files
Sep 05 13:10:02 <escherial>	there's this for DRF, although i haven't  used it myself: https://www.django-rest-framework.org/topics/ajax-csrf-cors/
Sep 05 13:10:37 <escherial>	if they have to log in to use the API this probably isn't an issue
Sep 05 13:12:38 <rnmhdn>	can you exaplain a little more
Sep 05 13:12:45 <rnmhdn>	do I also have to create new models etc?
Sep 05 13:25:17 <grr12314>	hi. in ms sql [a][b] isn't valid right (for field b of table a)? it has to be [a].[b]?
Sep 05 13:26:14 <stennowork>	wrong channel? :D
Sep 05 13:27:28 <deniska>	I'd guess at least some people use mssql with js, but probably there're better channels :)
Sep 05 13:27:41 <deniska>	personally I wouldn't expect [a][b] to work in any sql dialect
Sep 05 13:28:49 <grr12314>	the better channels are silent, so i fall back to my ppl
Sep 05 13:28:53 <grr12314>	thanks
Sep 05 13:31:08 <rnmhdn>	escherial: how can I do the opposite?
Sep 05 13:31:18 <rnmhdn>	send the data first and create the models
Sep 05 13:31:30 <rnmhdn>	then send the files to be placed in the models
Sep 05 13:31:42 <rnmhdn>	I think this is much better for not ending up storing useless files
Sep 05 14:26:29 <jsx>	Typescript:  constructor(public priority: number = 0) is failing in the browser with an error "Uncaught TypeError: Cannot set property priority of #<pu> which has only a getter"
Sep 05 14:26:52 <jsx>	When I check the compiled JS, there is only a getter generated for this.priority
Sep 05 14:26:52 <gehn>	jsx, TypeScript is not JS
Sep 05 14:27:03 <gehn>	jsx, try the typescript channel
Sep 05 14:27:05 <jsx>	Any idea anyone?
Sep 05 14:27:08 <jsx>	Ok
Sep 05 14:27:15 <jsx>	It seemed dead, so..
Sep 05 14:28:18 <gehn>	that's not a reason to ask in here
Sep 05 14:28:57 <gehn>	we don't field C++ questions in here just because a C++ channel is dead
Sep 05 14:29:58 <jsx>	Yeah, you're right. I've asked there. I asked only because many JS devs to TS too.
Sep 05 14:30:04 <stennowork>	hmm the response headers of this request has content-type: application/json;charset=UTF-8, yet i get garbled (looks like latin-1) content back
Sep 05 14:30:08 <thykka>	(feel free to ask about Sass/SCSS at #css, because #sass is invite-only ;)
Sep 05 14:30:10 <stennowork>	so i have to blame the backend?
Sep 05 14:34:10 <gehn>	jsx, no actually there's not a big cross over
Sep 05 14:34:21 <gehn>	people who use TS usually do so because they *don't* want to use JS
Sep 05 14:36:25 <grn>	Good morning y'all
Sep 05 14:37:09 <gehn>	"good morning" is an oxymoron
Sep 05 14:37:35 <thykka>	people who use TS usually use training wheels when riding bikes :---)
Sep 05 14:37:53 <thykka>	you know.. for safety
Sep 05 14:38:39 <stennowork>	fog horn
Sep 05 14:41:57 <grn>	so negative, damn
Sep 05 14:42:26 <stennowork>	:I
Sep 05 14:43:07 <thykka>	negative, perhaps, but at least it seemed to be in-good-faith type of negative this time
Sep 05 14:43:54 <stennowork>	yeah
Sep 05 14:43:58 <stennowork>	dunno why they got so salty
Sep 05 14:44:38 <gehn>	everything tastes better with salt
Sep 05 14:44:46 <gehn>	I like to add salt to my salt
Sep 05 14:45:25 <stennowork>	no need to season bcrypt, it already comes pre-seasoned
Sep 05 14:45:48 <thykka>	https://i.imgur.com/xyv8C8A.jpg
Sep 05 14:45:53 <gehn>	double salted bcrypt = l33t
Sep 05 14:45:58 <stennowork>	haha
Sep 05 14:46:02 <stennowork>	@ both
Sep 05 14:46:28 <prometh>	but salty is a flavour
Sep 05 14:46:54 <prometh>	well, maybe it's categorized under savoury
Sep 05 14:50:59 <celphi>	n>let arr = new Array(); let why = arr.map(x => []); why;
Sep 05 14:51:00 <jellobot>	(okay) []
Sep 05 14:51:13 <celphi>	why is this empty x5?
Sep 05 14:51:20 <grn>	someone remind me the difference between the # and ## channels?
Sep 05 14:51:31 <gehn>	celphi, there's no 5 tho
Sep 05 14:51:41 <celphi>	oops forgot something
Sep 05 14:51:42 <stennowork>	celphi, because new Array creates empty arrays
Sep 05 14:51:46 <gehn>	grn single # is reserved for official channels
Sep 05 14:51:49 <celphi>	n>let arr = new Array(5); let why = arr.map(x => []); why;
Sep 05 14:51:50 <jellobot>	(okay) [ <5 empty items> ]
Sep 05 14:51:57 <grn>	thanks gehn
Sep 05 14:52:00 <gehn>	grn, so you must be the project or technology owner
Sep 05 14:52:08 <stennowork>	if you want to have a non-empty array, use Array.from
Sep 05 14:52:12 <gehn>	or an official representative I guess
Sep 05 14:52:21 <celphi>	so you cant use map on empty?
Sep 05 14:52:25 <gehn>	you can
Sep 05 14:52:28 <gehn>	but the result will be empty
Sep 05 14:52:31 <gehn>	because the input is empty
Sep 05 14:52:35 <celphi>	haha ok
Sep 05 14:52:37 <stennowork>	any empty array field will be 'skipped' by map
Sep 05 14:52:39 <gehn>	so .map is pretty much a no-op
Sep 05 14:52:42 <celphi>	but if it were null you could?
Sep 05 14:52:45 <stennowork>	yes
Sep 05 14:52:49 <celphi>	weird
Sep 05 14:52:56 <stennowork>	no
Sep 05 14:53:04 <gehn>	n> null.map(x => x)
Sep 05 14:53:05 <celphi>	same goes for undefined too?
Sep 05 14:53:05 <jellobot>	(fail) TypeError: Cannot read property 'map' of null
Sep 05 14:53:09 <stennowork>	there is a difference between null, undefined and empty
Sep 05 14:53:12 <stennowork>	undefined works too
Sep 05 14:53:22 <stennowork>	n> [undefined].map(x => 3)
Sep 05 14:53:24 <jellobot>	(okay) [ 3 ]
Sep 05 14:53:24 <celphi>	n>let arr = new Array(5).fill(null); let why = arr.map(x => []); why;
Sep 05 14:53:26 <jellobot>	(okay) [ [], [], [], [], [] ]
Sep 05 14:53:36 <stennowork>	celphi, yes, and that is nasty ^, so just use array.from
Sep 05 14:53:40 <celphi>	n>let arr = new Array(5).fill(undefined); let why = arr.map(x => []); why;
Sep 05 14:53:42 <gehn>	ah I see, you mean elements being null
Sep 05 14:53:42 <jellobot>	(okay) [ [], [], [], [], [] ]
Sep 05 14:53:46 <celphi>	yeah
Sep 05 14:53:49 <gehn>	you can fill it with literally anything
Sep 05 14:53:50 <stennowork>	n> Array.from({ length: 5 }, _ => [])
Sep 05 14:53:52 <jellobot>	(okay) [ [], [], [], [], [] ]
Sep 05 14:54:03 <gehn>	like, if you're going to just replace it anyway, it doesn't matter
Sep 05 14:54:08 <stennowork>	n> Array.from({ length: 5 }, (_,idx) => idx)
Sep 05 14:54:10 <jellobot>	(okay) [ 0, 1, 2, 3, 4 ]
Sep 05 14:54:12 <gehn>	but 0, null, undefined are all reasonable choices
Sep 05 14:54:19 <praet>	is there a simple way to append a space between a string concat only if there isn't one already? a = 'hi '; b = 'there'; c = a + ' '? + b
Sep 05 14:54:30 <wvffle>	n> [...Array(5).keys()]
Sep 05 14:54:32 <jellobot>	(okay) [ 0, 1, 2, 3, 4 ]
Sep 05 14:54:33 <prometh>	"expressjs deleted a comment from stevenvachon 13 hours ago"
Sep 05 14:54:51 <prometh>	i'd asked if express 5 was a dead project
Sep 05 14:54:56 <gehn>	praet, not sure about what you consider simple, but... sure?
Sep 05 14:55:13 <stennowork>	trim/ltrim a and b?
Sep 05 14:55:18 <celphi>	praet `${a} {b}`
Sep 05 14:55:27 <gehn>	praet, c = a + (hasNoEndingSpace ? ' ' : '') + b
Sep 05 14:55:28 <stennowork>	celphi, that would make two whitespaces
Sep 05 14:55:38 <praet>	so as a has a space we dont want to add
Sep 05 14:55:39 <gehn>	where hasNoEndingSpace might just be e.g. a regex
Sep 05 14:55:40 <praet>	right
Sep 05 14:56:06 <gehn>	or yes ltrim and rtrim, but I don't think JS has native versions of those
Sep 05 14:56:08 <praet>	would regex be overkill here?
Sep 05 14:56:10 <celphi>	a + b.replace(/\s\s/, '')
Sep 05 14:56:14 <prometh>	gehn: trimLeft and trimRight
Sep 05 14:56:31 <gehn>	praet, regex is fine
Sep 05 14:56:50 <praet>	got it thanks for the brainstorming
Sep 05 14:56:53 <prometh>	gehn: there's also trimStart and trimEnd
Sep 05 14:57:03 <praet>	celphi: thanks for that too, probably done later in this call
Sep 05 14:57:11 <celphi>	np
Sep 05 14:57:38 <stennowork>	n> const a = 'hi '; const b = 'world'; a.replace(/\s*$/, ` ${b}`)
Sep 05 14:57:40 <jellobot>	(okay) 'hi world'
Sep 05 14:57:53 <prometh>	actually, trimStart/trimEnd are not spec
Sep 05 14:57:59 <prometh>	fuck i'm sleepy
Sep 05 14:58:00 <gehn>	hmm, cool
Sep 05 14:58:04 <gehn>	recent ish
Sep 05 14:58:05 <prometh>	trimLeft and trimRight are not spec
Sep 05 14:58:09 <stennowork>	https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/Trim
Sep 05 14:58:19 <gehn>	added to chrome last year
Sep 05 14:58:31 <stennowork>	ES5
Sep 05 14:58:42 <stennowork>	added to chrome since forever
Sep 05 14:58:47 <stennowork>	added in FF 3.5
Sep 05 14:58:50 <prometh>	https://github.com/tc39/proposal-string-left-right-trim
Sep 05 14:59:00 <prometh>	it's still stage 3
Sep 05 14:59:04 <gehn>	I was talking about left and right
Sep 05 14:59:15 <stennowork>	n> '     fooo        '.trim()
Sep 05 14:59:17 <jellobot>	(okay) 'fooo'
Sep 05 14:59:18 <stennowork>	eggg
Sep 05 14:59:21 <stennowork>	left and right
Sep 05 14:59:26 <gehn>	oh, maybe I'm confusing this with pad
Sep 05 14:59:31 <gehn>	I don't think JS has a native lpad or rpad
Sep 05 14:59:34 <stennowork>	it does
Sep 05 14:59:40 <stennowork>	padStart, padEnd
Sep 05 14:59:55 <thykka>	n> '        fooo        '.replace(/^(\s)/g,'')
Sep 05 14:59:57 <jellobot>	(okay) '       fooo        '
Sep 05 14:59:58 <stennowork>	n> '23'.padStart('0', 4)
Sep 05 15:00:00 <jellobot>	(okay) '23'
Sep 05 15:00:02 <stennowork>	er
Sep 05 15:00:02 <thykka>	:/
Sep 05 15:00:12 <thykka>	n> '        fooo        '.replace(/^(\s+)/g,'')
Sep 05 15:00:13 <jellobot>	(okay) 'fooo        '
Sep 05 15:00:14 <stennowork>	n> '23'.padStart(5, '0')
Sep 05 15:00:15 <jellobot>	(okay) '00023'
Sep 05 15:00:19 <prometh>	https://2ality.com/2019/01/string-prototype-trimstart-trimend.html hints at left/right not being part of the proposal, though
Sep 05 15:00:22 <stennowork>	jere we are
Sep 05 15:00:22 <thykka>	n> '        fooo        '.replace(/(\s+)$/g,'')
Sep 05 15:00:23 <jellobot>	(okay) '        fooo'
Sep 05 15:00:25 <gehn>	hmm, aight den
Sep 05 15:00:34 <stennowork>	so, both things are in the standard spec
Sep 05 15:00:42 <stennowork>	both .trim() and padStart() / padEnd()
Sep 05 15:00:51 <stennowork>	and .trim is specced since ES5 at least
Sep 05 15:00:52 <prometh>	padStart, trimStart, padEnd, trimEnd, trim
Sep 05 15:00:54 <gehn>	ok, but padStart and padEnd are not ES5
Sep 05 15:01:01 <gehn>	yes trim is
Sep 05 15:01:01 <stennowork>	no, that is ES6
Sep 05 15:02:24 <celphi>	n>var x = 'a' + ' ' + ' b'; x.replace(/\s{2}/, ' ');
Sep 05 15:02:26 <jellobot>	(okay) 'a b'
Sep 05 15:02:52 <gehn>	{2,} is probably better
Sep 05 15:03:02 <gehn>	as it will replace "2 or more"
Sep 05 15:03:04 <gehn>	or just \s\s+
Sep 05 15:03:11 <celphi>	what if theres string with tabs?
Sep 05 15:03:19 <stennowork>	n> const a = 'hi '; const b = 'world'; a.replace(/\s*$/, ` ${b}`)
Sep 05 15:03:21 <jellobot>	(okay) 'hi world'
Sep 05 15:03:30 <gehn>	'foo\t'bar'.match(/\s/)
Sep 05 15:03:31 <stennowork>	n> const a = 'hi'; const b = 'world'; a.replace(/\s*$/, ` ${b}`)
Sep 05 15:03:31 <prometh>	[\s\t]{2}
Sep 05 15:03:33 <gehn>	n> 'foo\t'bar'.match(/\s/)
Sep 05 15:03:33 <jellobot>	(okay) 'hi world'
Sep 05 15:03:35 <jellobot>	(fail) SyntaxError: Unexpected identifier
Sep 05 15:03:47 <celphi>	what if __string sten
Sep 05 15:03:48 <prometh>	i forget if /s includes /t
Sep 05 15:03:50 <gehn>	n> 'foo\tbar'.match(/\s/)
Sep 05 15:03:51 <jellobot>	(okay) [ '\t', index: 3, input: 'foo\tbar', groups: undefined ]
Sep 05 15:04:05 <prometh>	 /s doesn't actually include all whitespace chars
Sep 05 15:04:18 <celphi>	interesting didnt know
Sep 05 15:04:22 <gehn>	it should include most standard ASCII whitespace
Sep 05 15:04:27 <prometh>	most, yes
Sep 05 15:04:49 <gehn>	the kind anyone on average actually cares about, yes
Sep 05 15:05:07 <prometh>	i'm just gonna stop talking for now.... my brain is off
Sep 05 15:05:16 <prometh>	i'm doubting what i just said above
Sep 05 15:05:29 <gehn>	n> 'foo\nbar'.match(/\s/)
Sep 05 15:05:31 <jellobot>	(okay) [ '\n', index: 3, input: 'foo\nbar', groups: undefined ]
Sep 05 15:05:43 <celphi>	n>/\s/.test("a\tb")
Sep 05 15:05:45 <jellobot>	(okay) true
Sep 05 15:05:50 <celphi>	says it counts
Sep 05 15:06:09 <celphi>	prometh: ?
Sep 05 15:06:19 <prometh>	yes, im' stupid today
Sep 05 15:06:36 <prometh>	i was getting confused wtih my work on npmjs.com/normalize-html-whitespace
Sep 05 15:06:42 <gehn>	n> const x = 'hello\u200bworld'; [x, x.match(/\s/)]
Sep 05 15:06:44 <jellobot>	(okay) [ 'hello​world', null ]
Sep 05 15:06:58 <gehn>	doesn't match the non printing space
Sep 05 15:07:12 <celphi>	match always throws me off for booleans
Sep 05 15:07:22 <celphi>	if exist or not
Sep 05 15:07:23 <gehn>	for booleans how?
Sep 05 15:07:30 <celphi>	like truthy
Sep 05 15:07:37 <gehn>	n> !![]
Sep 05 15:07:38 <jellobot>	(okay) true
Sep 05 15:07:41 <gehn>	n> !!{}
Sep 05 15:07:43 <jellobot>	(okay) true
Sep 05 15:07:52 <gehn>	n> !!null
Sep 05 15:07:53 <jellobot>	(okay) false
Sep 05 15:07:59 <celphi>	i mean for match
Sep 05 15:08:00 <gehn>	arrays and objects are truthy, null is not
Sep 05 15:08:08 <gehn>	if you get a truthy result there is a match
Sep 05 15:08:15 <prometh>	gehn: /u200b is a zero-width _breaking_ space
Sep 05 15:08:22 <celphi>	so it returns null if false?
Sep 05 15:08:38 <gehn>	200B is https://en.wikipedia.org/wiki/Zero-width_space
Sep 05 15:08:43 <prometh>	it breaks, though
Sep 05 15:08:55 <gehn>	\n breaks
Sep 05 15:09:00 <celphi>	n>"a\tb".match(/\s\s/)
Sep 05 15:09:02 <jellobot>	(okay) null
Sep 05 15:09:06 <prometh>	so does \u200b
Sep 05 15:09:15 <gehn>	not sure what your point is
Sep 05 15:09:18 <celphi>	thats so weird
Sep 05 15:09:26 <prometh>	\ufeff is zero-width non-breaking space
Sep 05 15:09:28 <gehn>	"a\tb".match(/\s/)
Sep 05 15:09:32 <celphi>	why does \s\s fail though?
Sep 05 15:09:32 <gehn>	n> "a\tb".match(/\s/)
Sep 05 15:09:34 <jellobot>	(okay) [ '\t', index: 1, input: 'a\tb', groups: undefined ]
Sep 05 15:09:36 <gehn>	because tab is one char
Sep 05 15:09:37 <gehn>	not two
Sep 05 15:09:48 <celphi>	but then one space is true?
Sep 05 15:09:59 <gehn>	dunno what you mean
Sep 05 15:10:04 <prometh>	just use {2,}
Sep 05 15:10:10 <gehn>	a tab is not a space, but they are both "whitespace"
Sep 05 15:10:11 <celphi>	\s matches but \s\s fails
Sep 05 15:10:23 <gehn>	yes because \s\s requires two characters
Sep 05 15:10:23 <gehn>	tab is a single character
Sep 05 15:10:39 <prometh>	 /\t{2,}/g
Sep 05 15:10:40 <celphi>	so it's not that amount of whitespace?
Sep 05 15:10:43 <gehn>	your editor probably *shows* tabs as being somewhere between 2-8 characters wide
Sep 05 15:10:47 <gehn>	but it's a single char in the data
Sep 05 15:10:56 <gehn>	celphi, think about what a char is in C++
Sep 05 15:11:04 <celphi>	k makes sense now
Sep 05 15:11:05 <gehn>	celphi, a tab is a single 8-bit value
Sep 05 15:11:06 <ash_worksi>	is "opener" a shortcut to "Window.opener" ?
Sep 05 15:11:09 <celphi>	right
Sep 05 15:12:00 <gehn>	n> const x = 'hello\ufeffworld'; [x, x.match(/\s/)]
Sep 05 15:12:00 <prometh>	n> const pattern=/\t{2,}/g; ['a\tb'.replace(pattern,''), 'a\t\tb'.replace(pattern,'')]
Sep 05 15:12:01 <jellobot>	(okay) [ 'hello﻿world', [ '﻿', index: 5, input: 'hello﻿world', groups: undefined ] ]
Sep 05 15:12:01 <jellobot>	(okay) [ 'a\tb', 'ab' ]
Sep 05 15:12:11 <prometh>	ugh, right
Sep 05 15:12:21 <prometh>	like i said, i should stop talking
Sep 05 15:20:45 <ash_worksi>	is "opener" a shortcut to "Window.opener" ?
Sep 05 15:21:07 <stennowork>	window*
Sep 05 15:21:21 <stennowork>	or rather, from Window.prototype.opener
Sep 05 15:21:35 *	ash_worksi blinks at stennowork 
Sep 05 15:21:43 <stennowork>	hm?
Sep 05 15:22:04 <ash_worksi>	so it's "window..." or "Window.prototype..." ?
Sep 05 15:22:32 <ash_worksi>	I see.
Sep 05 15:22:48 <ash_worksi>	in any event, is the former statement about the shortcut true?
Sep 05 15:23:00 <stennowork>	actually not really sure about Window.prototype
Sep 05 15:24:10 <prometh>	window is an instance of Window
Sep 05 15:25:17 <stennowork>	ash_worksi, global scope in the browser inherits from window
Sep 05 15:25:24 <stennowork>	so it's like with (window) { ... }
Sep 05 15:26:48 <stennowork>	n> with ('foo') { console.log(length); }
Sep 05 15:26:50 <jellobot>	(okay) 3 undefined
Sep 05 15:28:37 <ash_worksi>	so if I use `myWindow = window.open("", "MyWindow")` MyWindow will be created with all properties of myWindow (which includes access to myWindow.opener, or in MyWindow, just `opener`?)
Sep 05 15:31:26 <ash_worksi>	and opener references afterthing in the original window
Sep 05 15:31:28 <ash_worksi>	i see.
Sep 05 15:34:19 <prometh>	GreenJello: you were perfecting your custom hooks for data retrieval.. what do you think of a Provider instead of a Container like npmjs.com/draqula does?
Sep 05 15:34:55 <escherial>	hey, i have a blob of html in which i want to find some text and replace it with <span class="highlight">the matching text<span>, but i don't want it to replace text within the tags, just in the text portions
Sep 05 15:35:40 <prometh>	escherial: use an html parser
Sep 05 15:35:44 <escherial>	i realize i'll have to parse it, and i've been trying to use DOMParser to do that, but i'm a bit at a loss for how to traverse the thing and modify the content of the nodes without causing grief deep down
Sep 05 15:35:54 <escherial>	er, sorry, kind of lost focus near the end of that sentence
Sep 05 15:36:17 <prometh>	you can traverse with querySelectorAll
Sep 05 15:36:35 <prometh>	then edit the text nodes that match
Sep 05 15:41:16 <escherial>	prometh: neat, thanks; i'll give that a shot
Sep 05 15:46:15 <karoshi>	https://imgur.com/9HIgBgX - If I want to check to see if 'You' contains the 3rd character of 'Risk', would this be along the right way of doing it? (GenoType.indexOf(Risk.charAt(3)) != -1)  -- https://dpaste.de/jigJ
Sep 05 15:47:39 <bradleymeck>	escherial: also see https://developer.mozilla.org/en-US/docs/Web/API/Range/surroundContents
Sep 05 15:48:47 <escherial>	bradleymeck: interesting, although i need to isolate a bit of text in the text nodes and highlight, not wrap an entire DOM node
Sep 05 15:48:54 <escherial>	*highlight it, sigh
Sep 05 15:49:03 <bradleymeck>	escherial: Ranges are in text nodes as well
Sep 05 15:49:08 <bradleymeck>	it isn't on an Element
Sep 05 15:49:26 <escherial>	ah...this whole node traversal/manipulation API is new to me. neat.
Sep 05 15:51:30 <bradleymeck>	escherial: https://jsfiddle.net/1vonh0jp/
Sep 05 15:55:42 <prometh>	what are ranges useful for?
Sep 05 15:56:00 <prometh>	especially since append() and prepend() support multiple arguments
Sep 05 15:56:27 <bradleymeck>	prometh: when you cross elements / anything that mimics text selection
Sep 05 15:56:39 <prometh>	cross elements?
Sep 05 15:56:51 <bradleymeck>	prometh: start and end of a range can be in different elements
Sep 05 15:57:15 <prometh>	but couldn't you just filter a NodeList ?
Sep 05 15:58:02 <gehn>	escherial, is this in the browser?
Sep 05 15:58:20 <gehn>	escherial, like are you actually using the DOM? or is the HTML in string form?
Sep 05 15:58:37 <bradleymeck>	prometh: if I highlight: <em>fo(o</em> bar) between the () it wouldnt help to have a nodelist?
Sep 05 15:58:42 <escherial>	gehn: it's in the browser, but i get the html initially as a string (it's loaded from a markdown file)
Sep 05 15:58:58 <prometh>	bradleymeck: ah, so for text selection only, really
Sep 05 15:59:21 <bradleymeck>	prometh: not just selection, highlights etc and WYSIWyG
Sep 05 15:59:26 <prometh>	that was the last time i'd used a range, heh... ~15 years ago
Sep 05 15:59:29 <bradleymeck>	a lot of complex UI workflows
Sep 05 15:59:33 <prometh>	wysiwyg is text selection
Sep 05 15:59:34 <gehn>	escherial, try https://www.npmjs.com/package/cheerio
Sep 05 15:59:59 <gehn>	intended primarily for node, but I don't see why it shouldn't also work in the browser
Sep 05 16:00:15 <bradleymeck>	prometh: not really, I can write an entire document in wysiwyg without ever selecting stuff, just insertion
Sep 05 16:00:36 <prometh>	okay, but a editor will need to support selection
Sep 05 16:00:38 <bradleymeck>	things like turning current line into a header etc. / layouts of non-text
Sep 05 16:00:40 <stennowork>	dom text ranges are awful
Sep 05 16:00:42 <bradleymeck>	it would yea
Sep 05 16:00:58 <bradleymeck>	stennowork: i love them
Sep 05 16:01:02 <prometh>	fortunately there are open source editors :)
Sep 05 16:01:14 <jaawerth>	I seem to recall them being a pain to work with when rich text is involved
Sep 05 16:01:20 <jaawerth>	if you're trying to do it all with vanilla DOM
Sep 05 16:04:15 <bradleymeck>	jaawerth: normalizing / reducing DOM is painful but after IE6 they work great for me
Sep 05 16:04:21 <bradleymeck>	IE6 had a lot of odd bugs around them
Sep 05 16:04:39 <bradleymeck>	like crashing if you used them on input/textarea
Sep 05 16:05:25 <jaawerth>	IE6 was so broken, lol
Sep 05 16:07:27 <prometh>	today is the third recruiter from my city (toronto) that did not call when they scheduled to do so..... is there something wrong with where i'm from?
Sep 05 16:09:49 <kaushal>	Hi
Sep 05 16:11:55 <jaawerth>	prometh: I dunno re: Toronto except a gamedev I know who works for Ubisoft Toronto sent me this a couple weeks ago - not exactly webdev but if you look at the tools/experience lists it's a lot of js + node + postgres kinda stuff https://toronto.ubisoft.com/srwidget4.html#sr-post-id=743999687788781
Sep 05 16:12:08 <jaawerth>	might be worth a look ;-)
Sep 05 16:12:18 <kaushal>	I am facing this issue https://paste.centos.org/view/bb5a163d#hfekUj4mBQvUvUCxKvzecpImYJ2UIxkt
Sep 05 16:12:24 <kaushal>	I am new to JSON
Sep 05 16:13:23 <kaushal>	Any clue?
Sep 05 16:16:03 <stennowork>	which issue?
Sep 05 16:16:30 <kaushal>	I am having issue with GCHAT_MSG="{ \"thread\": {    \"name\": \"$ROOM_ID\"  },\"text\": \"*\"$2\":* \"$4\" \"$5 \"Nagios notification: $6\" }"
Sep 05 16:16:57 <stennowork>	n> JSON.parse("{ \"thread\": {    \"name\": \"$ROOM_ID\"  },\"text\": \"*\"$2\":* \"$4\" \"$5 \"Nagios notification: $6\" }")
Sep 05 16:16:58 <jellobot>	(fail) SyntaxError: Unexpected token $ in JSON at position 50
Sep 05 16:17:45 <kaushal>	stennowork: ok
Sep 05 16:18:00 <kaushal>	stennowork: I am new to JSON
Sep 05 16:18:10 <kaushal>	I am not sure about Unexpected token $ in JSON at position 50
Sep 05 16:18:35 <stennowork>	you need to double-escape the " in the text value
Sep 05 16:19:01 <stennowork>	n> JSON.parse("{ \"thread\": {    \"name\": \"$ROOM_ID\"  },\"text\": \"*\\\"$2\":* \\\"$4\" \\\"$5 \\\"Nagios notification: $6\" }")
Sep 05 16:19:03 <jellobot>	(fail) SyntaxError: Unexpected token : in JSON at position 54
Sep 05 16:19:50 <stennowork>	n> JSON.parse("{ \"thread\": {    \"name\": \"$ROOM_ID\"  },\"text\": \"*\\\"$2\\\":* \\\"$4\" \\\"$5 \\\"Nagios notification: $6\" }")
Sep 05 16:19:53 <jellobot>	(fail) SyntaxError: Unexpected token \ in JSON at position 64
Sep 05 16:20:02 <stennowork>	n> JSON.parse("{ \"thread\": {    \"name\": \"$ROOM_ID\"  },\"text\": \"*\\\"$2\\\":* \\\"$4\\\" \\\"$5 \\\"Nagios notification: $6\" }")
Sep 05 16:20:04 <jellobot>	(okay) { thread: { name: '$ROOM_ID' }, text: '*"$2":* "$4" "$5 "Nagios notification: $6' }
Sep 05 16:20:06 <stennowork>	eyy
Sep 05 16:20:16 <stennowork>	kaushal, double escape ^
Sep 05 16:20:32 <grr12314>	or just do String.raw`` and stop messing escapes up
Sep 05 16:20:44 <stennowork>	grr12314, String.raw in bash?
Sep 05 16:20:55 <grr12314>	JSON.parse in bash?
Sep 05 16:20:59 <stennowork>	see the original paste, its not JS, its a bash script
Sep 05 16:21:16 <kaushal>	stennowork: how to use n> JSON.parse?
Sep 05 16:21:19 <stennowork>	just used it to find the correctly escaped string for the bash script
Sep 05 16:21:25 <kaushal>	I am on Mac OS
Sep 05 16:21:26 <grr12314>	then use ' '
Sep 05 16:21:28 <stennowork>	kaushal, in bash, you don't
Sep 05 16:21:41 <grr12314>	and hope you dont have ' inside the text :p
Sep 05 16:22:09 <stennowork>	kaushal, just replace your old JSON with "{ \"thread\": {    \"name\": \"$ROOM_ID\"  },\"text\": \"*\\\"$2\\\":* \\\"$4\\\" \\\"$5 \\\"Nagios notification: $6\" }"
Sep 05 16:22:29 <grr12314>	oh damn he wants $ substitution
Sep 05 16:22:40 <stennowork>	yes and $ substitution too
Sep 05 16:22:44 <stennowork>	but that should work
Sep 05 16:22:49 <kaushal>	ok
Sep 05 16:23:30 <grr12314>	should work... until any of those substitutututu get " in them
Sep 05 16:23:38 <kaushal>	grr12314: ok
Sep 05 16:23:41 <kaushal>	stennowork: Thanks
Sep 05 16:23:44 <kaushal>	Let me test it
Sep 05 16:24:38 <kaushal>	stennowork: I am facing the issue https://paste.centos.org/view/3abba91e#qCqMIAsFfOLSTm4wnsmbKIDIa2qkbs8g
Sep 05 16:25:51 <stennowork>	then you are sending the wrong data as the error says
Sep 05 16:26:02 <kaushal>	ok
Sep 05 16:26:51 <kaushal>	stennowork: i think i got to know the issue
Sep 05 16:26:55 <kaushal>	looks like
Sep 05 16:26:56 <kaushal>	GCHAT_MSG="{ \"thread\": {    \"name\": \"$ROOM_ID\"  },\"text\": \"*\\\"$2\\\":* \\\"$4\\\" \\\"$5 \\\"Nagios notification: $6\" }"
Sep 05 16:27:03 <stennowork>	maybe you want to specify -H "Content-Type: application/json" too
Sep 05 16:27:31 <kaushal>	$2, $4 $5 and $6 are positional parameters?
Sep 05 16:27:52 <stennowork>	those are bash variables
Sep 05 16:27:56 <stennowork>	idk what you wrote there?
Sep 05 16:28:00 <kaushal>	stennowork: so is it like gchat_service_notify.sh value value value value?
Sep 05 16:28:01 <stennowork>	seems you don't know it either?
Sep 05 16:28:30 <stennowork>	...yes?
Sep 05 16:28:39 <kaushal>	stennowork: yes i dont know
Sep 05 16:28:40 <kaushal>	stennowork: https://github.com/rabetrena/Nagios2GoogleChat/blob/master/gchat_service_notify.sh
Sep 05 16:28:46 <prometh>	jaawerth: thanks, but i'm not qualified for that
Sep 05 16:30:51 <ash_worksi>	kutenai: yes, they're positional parameters.
Sep 05 16:32:24 <ash_worksi>	kutenai: and yes, the way you'd invoke the script would be `gchat_service_notify.sh value1 value2 value3 ...`
Sep 05 16:32:29 <ash_worksi>	oops
Sep 05 16:32:31 <ash_worksi>	wrong nic
Sep 05 16:32:36 <ash_worksi>	kaushal: ^
Sep 05 16:32:41 <kaushal>	ash_worksi: ok
Sep 05 16:33:31 <ash_worksi>	it would look like those params are described in the `define command` comment
Sep 05 16:39:57 <ash_worksi>	kaushal: that script looks a bit wonky
Sep 05 16:41:01 <mrchairman>	i just saw an article "30 must have tools for js dev", 30 tools. I quit, thats too much
Sep 05 16:41:18 <qswz>	kaushal: use jq
Sep 05 16:41:31 <qswz>	for working with json in bash
Sep 05 16:42:00 <qswz>	or use here-docs
Sep 05 16:42:09 <ash_worksi>	+1 for heredocs
Sep 05 16:42:23 <ash_worksi>	but
Sep 05 16:42:26 <deadbeat>	mrchairman: 30 must have? I am missing a lot of stuff it seems :D
Sep 05 16:42:41 <grr12314>	here-docs with substitution and escaping are same shit
Sep 05 16:43:05 <stennowork>	sed first for replacing :D
Sep 05 16:43:07 <mrchairman>	deadbeat, me too. i'm going back to geocities
Sep 05 16:43:09 <qswz>	if there are sibstritutions
Sep 05 16:43:12 <qswz>	use jq!
Sep 05 16:43:13 <stennowork>	(maybe? maybe not?)
Sep 05 16:43:21 <qswz>	it's obvious
Sep 05 16:43:28 <qswz>	never compose jsons by hand
Sep 05 16:43:42 <qswz>	no sensed man would
Sep 05 16:44:08 <ash_worksi>	more importantly, the result of that script if you just pass numbers for all arguments ends up looking like: { "thread": {    "name": "spaces/xxxxxxxxx/threads/xxxxxxxx"  },"text": "*"2":* "4" "5 "Nagios notification: 6" }
Sep 05 16:44:45 <ash_worksi>	which isn't valid json
Sep 05 16:44:56 <stennowork>	that is already addressed above
Sep 05 16:45:00 <grr12314>	add more \
Sep 05 16:45:07 <stennowork>	GCHAT_MSG="{ \"thread\": {    \"name\": \"$ROOM_ID\"  },\"text\": \"*\\\"$2\\\":* \\\"$4\\\" \\\"$5 \\\"Nagios notification: $6\" }"
Sep 05 16:45:37 <ash_worksi>	I mean... it doens't look like it has enough commas or {}'s in it either... idk
Sep 05 16:46:06 <grr12314>	ash_worksi all the thing should just be a value for text key
Sep 05 16:46:47 <ash_worksi>	grr12314: are you sure? that "Nagios Notification" looks like a key
Sep 05 16:47:08 <ash_worksi>	maybe not
Sep 05 16:47:13 <ash_worksi>	what are all the asterisks for?
Sep 05 16:50:41 *	Disconnected ()
**** ENDING LOGGING AT Thu Sep  5 16:50:41 2019

**** BEGIN LOGGING AT Thu Sep  5 16:54:00 2019

Sep 05 16:54:00 *	Now talking on ##javascript
Sep 05 16:54:00 *	Topic for ##javascript is: JavaScript is *not* Java. | Just ask your question. | Say "!mdn abc" for docs on "abc". | Don't paste code in the channel. | Can't talk? Get registered on freenode ( https://git.io/vaTS2 )
Sep 05 16:54:00 *	Topic for ##javascript set by niggler!~niggler@unaffiliated/niggler (Tue Jan 15 07:16:23 2019)
Sep 05 16:54:04 <prussian>	jq is definitely not great
Sep 05 16:54:49 <z1haze>	Would it be possible to use regex to search an xml file for attributes that have a value that is >= n number of characters?
Sep 05 16:57:10 <thykka>	possible? perhaps. advisable? definitely not
Sep 05 16:57:41 <grr12314>	prussian is talking about jquery
Sep 05 16:58:05 <grr12314>	jq is great
Sep 05 16:58:05 <thykka>	https://stackoverflow.com/a/1732454/873653
Sep 05 16:58:18 <thykka>	z1haze, ^
Sep 05 16:58:42 <prussian>	no jq is pretty much awful. strange filter lang, not type safe. has dangerous "shell" escaping on arrays, took forever to actually fix issues with utf-8 caused overflows in the regexp engine.
Sep 05 16:58:44 <prussian>	etc
Sep 05 16:59:13 <grr12314>	thykka z1haze's usecase here is specific enough to be feasible tho
Sep 05 16:59:17 <prussian>	though momentum carries and it's sort of semi accepted as standard shell garbage
Sep 05 16:59:35 <thykka>	grr12314, feasible perhaps, but advisable too?
Sep 05 17:00:10 <z1haze>	so i have a +1gb xml file that is encountering an error in our feed at some place, and the only warning im getting is some quota violation of a field length has exceeded 2000 chars
Sep 05 17:00:26 <jaawerth>	sure, "great" being relative to other available shell tools for munging/pretty-displaying json
Sep 05 17:00:33 <z1haze>	there's hundreds of thousands of lines so its not reall feasible to juse search and filter through each one
Sep 05 17:00:36 <z1haze>	i need a way to narrow it down
Sep 05 17:01:17 <devsnek>	prussian: how the fuck can a json parser be type safe
Sep 05 17:01:19 <devsnek>	json doesn't have types
Sep 05 17:01:21 <thykka>	can't you debug what is consuming it?
Sep 05 17:01:24 <grr12314>	all except the utf-regex things you mentioned are nonsense to me. and that one is fixed now right?
Sep 05 17:01:29 <jaawerth>	z1haze: what exactly is giving you the XML error?
Sep 05 17:01:42 <jaawerth>	surprising whatever it is isn't telling you where the error is
Sep 05 17:02:31 <z1haze>	its not a xml error
Sep 05 17:02:38 <devsnek>	rg 2000
Sep 05 17:02:44 <z1haze>	the xml is generated catalog feed
Sep 05 17:02:52 <devsnek>	`sed -i s/2000/20000 file.xml`
Sep 05 17:03:06 <jaawerth>	yeah that actually should work unless the field is multiline
Sep 05 17:03:12 <prussian>	z1haze: at this size, sounds like you want a SAX parser anyhow
Sep 05 17:03:23 <z1haze>	that runs as a scheduled task, the task is hanging up an there are some warnings about 2000 character limit exceeded on some attributes ,but of course it doesnt tell you which
Sep 05 17:03:39 <devsnek>	who cares
Sep 05 17:03:47 <devsnek>	just regex replace 2000 with 10000000000000000000
Sep 05 17:03:56 <z1haze>	what?
Sep 05 17:04:11 <z1haze>	i dont mean the value of 2000
Sep 05 17:04:11 <devsnek>	you said an input field had a limit of 2000
Sep 05 17:04:21 <jaawerth>	actually if the fields aren't multiline you could just do `grep '\.{2000}' file.xml`
Sep 05 17:04:24 <devsnek>	so change the 2000 to something else
Sep 05 17:04:35 <z1haze>	im saying the platform has a limitation that a attribute cannot exceed 2000 characters in length
Sep 05 17:04:38 <jaawerth>	that'll find all lines 2000 or more chars long
Sep 05 17:04:46 <z1haze>	interesting
Sep 05 17:04:46 <z1haze>	ok
Sep 05 17:04:56 <prussian>	then you need to filter through the attrs of every node as they come and check them
Sep 05 17:05:02 <jaawerth>	if they're multiline you'll need to parse the XML into fields and then iterate looking for the ones longer than 2000
Sep 05 17:05:03 <grr12314>	what if the xml is single-line ?;p
Sep 05 17:05:04 <z1haze>	what about ones with line breaks
Sep 05 17:05:05 <z1haze>	yeah
Sep 05 17:05:09 <prussian>	like I said, you probably need a SAX parser at this point
Sep 05 17:05:15 <devsnek>	what if the xml is xml
Sep 05 17:05:20 <devsnek>	translate it into json problem solved
Sep 05 17:05:26 <prussian>	as +1GB xml is gonna be hell to load up DOM style
Sep 05 17:05:29 <kalkulator>	why is the first pattern an anti-pattern and does it have a name? https://jsjot.com/rTbwG
Sep 05 17:05:38 <devsnek>	!repaste
Sep 05 17:05:39 <jellobot>	devsnek, I don't know the paste service at "https://jsjot.com/rTbwG". GreenJello, ping!
Sep 05 17:05:39 <jaawerth>	I'd try the grep thing if it's a multiline XML file and see if you can get lucky with the fields themselves not being multiline
Sep 05 17:05:41 <grr12314>	but grep '=".{2000}' should do yes
Sep 05 17:05:44 <grr12314>	nvm
Sep 05 17:05:45 <jaawerth>	since it could save you time
Sep 05 17:05:51 <grr12314>	but grep '="[^"]{2000}' should do yes
Sep 05 17:05:52 <jaawerth>	if grep doesn't work, then you can find an actual parser
Sep 05 17:06:24 <grr12314>	egrep maybe
Sep 05 17:06:31 <jaawerth>	ah yeah, grep -E
Sep 05 17:06:34 <devsnek>	kalkulator: this example code is way too abstract to say whether anything is a good pattern
Sep 05 17:06:44 <jaawerth>	though the grep command I gave above should just work
Sep 05 17:07:02 <grr12314>	what if the xml is single-line? ;p
Sep 05 17:07:11 <jaawerth>	if it's single-line then it won't work
Sep 05 17:07:13 <jaawerth>	lol
Sep 05 17:07:20 <jaawerth>	but fields may not be using " with the XML
Sep 05 17:07:24 <kalkulator>	devsnek: why? just imagine each function performs some little operation and returns the result
Sep 05 17:07:26 <grr12314>	doesnt sound like a human-generated xml, so i wouldnt expect whitespace in it
Sep 05 17:07:36 <grr12314>	attributes use "
Sep 05 17:07:38 <devsnek>	kalkulator: both would be good patterns depending on a lot of factors
Sep 05 17:07:53 <grr12314>	wait idk actually
Sep 05 17:07:55 <jaawerth>	eh XML can often be output with readable formatting (IE with line breaks)
Sep 05 17:07:55 <devsnek>	in a specific case though, one might be bad and one might be good
Sep 05 17:08:30 <devsnek>	like for example, is the result of fn4 meaningful to getXValue2?
Sep 05 17:08:34 <devsnek>	if not, it could be factored out
Sep 05 17:08:41 <kalkulator>	why would the first way ever be good? it's totally confusing
Sep 05 17:08:43 <devsnek>	if it is, it shouldn't be factored out
Sep 05 17:09:02 <devsnek>	its all confusing because your code here is very useless
Sep 05 17:09:04 <kalkulator>	yes they're all meaningful
Sep 05 17:09:26 <devsnek>	it sounds like you made these examples from some larger thing you're working on
Sep 05 17:09:31 <kalkulator>	yes of course
Sep 05 17:09:34 <devsnek>	i'd be curious to know about the context
Sep 05 17:09:54 <devsnek>	"good code" is nuanced
Sep 05 17:10:10 <devsnek>	its all about writing whatever expresses your intent
Sep 05 17:10:11 <kalkulator>	so you're telling me you dont immediately think the second way is way clearer?
Sep 05 17:10:16 <devsnek>	no
Sep 05 17:10:33 <devsnek>	i think they're both ugly
Sep 05 17:10:41 <devsnek>	and that you have bad variable names
Sep 05 17:10:50 <kalkulator>	lol it's an example
Sep 05 17:11:06 <devsnek>	it's a bad example because it doesn't show the motivations of either approach
Sep 05 17:11:25 <devsnek>	why do you have these separate functions, what is the caller doing, etc
Sep 05 17:12:32 <kalkulator>	i think it's called mutating state or something, they arent stateless, they arent reusable
Sep 05 17:12:33 <jaawerth>	it's easier to talk about approaches when we can see an example with an initial condition and desired final condition - then we can help with approaches for getting from A to B
Sep 05 17:12:33 <devsnek>	its not clear why `const getXValue = (x) => x + 3` isn't a valid approach here
Sep 05 17:12:44 <devsnek>	kalkulator: these are all stateless
Sep 05 17:12:57 <devsnek>	except for `x = x + 1`
Sep 05 17:13:00 <devsnek>	which you should never do
Sep 05 17:13:02 <devsnek>	but you do in both cases
Sep 05 17:13:07 <jaawerth>	but since x is an arg, the x = x + 1 is actually unnecessary - the reassignment only does anything within each function's scope (as devsnek said)
Sep 05 17:13:12 <jaawerth>	you could just return x + 1 from each of those
Sep 05 17:13:21 <devsnek>	never assign to function arguments
Sep 05 17:13:29 <devsnek>	ever
Sep 05 17:13:41 <grr12314>	why lol
Sep 05 17:13:45 <devsnek>	if js was made again we'd probably make function arguments immutable
Sep 05 17:13:49 <devsnek>	const declarations
Sep 05 17:13:59 <grr12314>	thats so inconvenient
Sep 05 17:14:00 <kalkulator>	it's irrelevant, it's an example who cares
Sep 05 17:14:10 <devsnek>	grr12314: function calls take up a lot less memory and go a lot faster when you don't mutate the args
Sep 05 17:14:30 <grr12314>	say a function that finds the prime factors of n. dividing n by the found ones is the simplest approach
Sep 05 17:14:31 <prussian>	sounds like a detail people shouldn't sweat
Sep 05 17:14:35 <MikeD_>	it's also easier to reason about if the input parameters are input only
Sep 05 17:14:38 <grr12314>	making a second var for that is so pointless
Sep 05 17:14:56 <devsnek>	plus i have a certain thing for keeping values passed in as they were
Sep 05 17:14:59 <devsnek>	stylistic
Sep 05 17:15:01 <devsnek>	but anyway
Sep 05 17:15:05 <grr12314>	it takes exactly the same amount of memory no matter if im the one making the copy or the engine is
Sep 05 17:15:16 <devsnek>	kalkulator: so save for `x = x + 1`, all these functions are pure
Sep 05 17:15:16 <jaawerth>	I will assign to arsg sometimes when I have a complex default value I need to set but otherwise I try to avoid it and sometimes I'll still use a separate var
Sep 05 17:15:27 <jaawerth>	devsnek: it deops that bad even in strict mode?
Sep 05 17:15:46 <devsnek>	jaawerth: think of it as the same overhead in strict and not strict
Sep 05 17:15:48 <devsnek>	but
Sep 05 17:15:53 <devsnek>	not strict also has to mutate `arguments`
Sep 05 17:16:07 <jaawerth>	yeah which is messy and I would imagine would lead to worse deop
Sep 05 17:16:44 <devsnek>	in either case, the engine can't use caller registers because mutating caller registers breaks everything
Sep 05 17:16:47 <stennowork>	GreenJello, you around?
Sep 05 17:16:51 <jaawerth>	ah makes sense
Sep 05 17:16:58 <devsnek>	or maybe that's callee
Sep 05 17:16:59 <devsnek>	anyway
Sep 05 17:17:06 <devsnek>	the registers owned by the one making the call
Sep 05 17:17:16 <stennowork>	GreenJello, could you bring jellobot into #angularjs ? i alreaddy talked with an OP there and they are fine with it
Sep 05 17:17:20 <devsnek>	i think that's caller registers
Sep 05 17:17:40 <grr12314>	and if you have to make let myparamcopy = param so you can mutate it, it also doesnt use that, whatever that is
Sep 05 17:17:54 <grr12314>	so whats the difference
Sep 05 17:18:29 <jaawerth>	I think doing that to one arg would break registesr for the entire set of args
Sep 05 17:18:35 <prussian>	I can see how messing with variadics matters...
Sep 05 17:18:41 <MikeD_>	what's the difference?  why don't you just have parameter object called a?  it does the same job, right?
Sep 05 17:18:47 <kalkulator>	devsnek: fn2 is now associated with fn3 so it can't be reused in a different context and it's not nearly as readable because you have to track down where all the functions are being called, i remember reading about this, it's definitely an anti-pattern
Sep 05 17:18:49 <jaawerth>	since it couldn't just use a fixed array under the hood
Sep 05 17:18:50 <prussian>	but i'm not seeing a world where it would matter if you mutate existing args
Sep 05 17:18:59 <jaawerth>	something like that
Sep 05 17:19:06 <devsnek>	kalkulator: you never said fn2 needed to be used anywhere else
Sep 05 17:19:13 <devsnek>	you just posted two chains of functions that add up to 3
Sep 05 17:19:17 <kalkulator>	even if it doesn't it's still less readable
Sep 05 17:19:29 <devsnek>	calling helper functions inside other functions is not an anti-pattern
Sep 05 17:19:46 <jaawerth>	which isn't a primary reason not to do something (since perf/engine assumption micro-optimiation is usually not the best argument) but readability/maintainability can be an issue when reassigning to args, and declaring explicit vars is more explicit
Sep 05 17:19:47 <devsnek>	like i said, a lot of context is missing here
Sep 05 17:19:52 <prussian>	kalkulator: what world are you in where dynamic scope and this context becomes a nightmare?
Sep 05 17:19:58 <prussian>	damn
Sep 05 17:20:01 <prussian>	I'm sorry
Sep 05 17:20:21 <jaawerth>	kalkulator: the problem is that your example is so generalized and the stuff those functions are doing are the same, to the point that it's hard to even comment on any patterns
Sep 05 17:20:26 <devsnek>	jaawerth: that's my main argument, but people here always seem to care about v8 optimization paths more
Sep 05 17:20:41 <jaawerth>	it's easier to give advice when there's an actual example with initial conditions and desired result
Sep 05 17:20:52 <jaawerth>	see also the "xy problem"
Sep 05 17:20:53 <jaawerth>	!xy
Sep 05 17:20:53 <ecmabot>	jaawerth: The XY problem: You want to do X, but don't know how. You think you can solve it using Y, but don't know how to do that either. You ask about Y, which is a strange thing to want to do. Just ask about X. See also: http://xyproblem.info/
Sep 05 17:21:23 <jaawerth>	the relevance to your thing is that in your example, you only have X - there is no Y
Sep 05 17:21:29 <jaawerth>	or, the other way around
Sep 05 17:21:33 <jaawerth>	you only have Y, there is no X
Sep 05 17:22:40 <grr12314>	im so confused by fp junkies... dont reassign blahblah lol. so have initialA arg, A1 A2 A3 local variables for various steps, wtf... how would that be called readable
Sep 05 17:22:54 <devsnek>	any pattern taken to an extreme is useless
Sep 05 17:22:59 <devsnek>	well not useless
Sep 05 17:23:22 <devsnek>	it gets in the way at that point
Sep 05 17:23:27 <stennowork>	see ruby's class paradigm
Sep 05 17:23:44 <stennowork>	you should stop at the point where you can do Class.class == Class
Sep 05 17:23:53 <jaawerth>	FP is great in langs that don't make it an uphill battle
Sep 05 17:24:05 <jaawerth>	in JS there's a point where you're making your code messier because to do pure FP in JS you have to fight hte language
Sep 05 17:24:06 <kalkulator>	jaawerth: if you needed to reuse all those functions, would you not do it the second way? i should have added that, if fn3 only existed for fn2 that's fine
Sep 05 17:24:40 <devsnek>	the only FP langs that work with pure FP are the ones like haskell where everything has a very specific formulaic way of being written
Sep 05 17:25:02 <prometh>	jaawerth: the recruiter actually did call, but 12 minutes late
Sep 05 17:25:24 <prometh>	i guess only devs are on time? :)
Sep 05 17:25:25 <jaawerth>	if you mean "define one function that makes use of the others" instead of "have all the funcitons use each other" then sure
Sep 05 17:25:40 <devsnek>	kalkulator: on the other hand, what if you're describing dependency injection
Sep 05 17:26:04 <jaawerth>	but I'd also use composition and maybe pass some functions into others as args
Sep 05 17:26:10 <jaawerth>	depending on what I was doing
Sep 05 17:26:13 <grr12314>	well in neither snipper were the functions passed in as parameters
Sep 05 17:26:22 <grr12314>	so they are both bad in that regard :p
Sep 05 17:26:29 <devsnek>	dependencies aren't just code
Sep 05 17:26:29 <jaawerth>	yeah
Sep 05 17:26:32 <devsnek>	they can be values too
Sep 05 17:26:38 <kalkulator>	jaawerth: and if fn3 is only used in fn2, would you not define it inside of fn2?
Sep 05 17:26:53 <devsnek>	i certainly wouldn't
Sep 05 17:26:56 <jaawerth>	it depends on whether fn3 needs to be used anywhere else but within fn2
Sep 05 17:27:02 <kalkulator>	no it doesnt
Sep 05 17:27:02 <jaawerth>	it might not even need to be a function
Sep 05 17:27:08 <jaawerth>	depending on what it is supposed to be doing
Sep 05 17:27:13 <prussian>	this really sounds an awful lot like, "my this is broke" sort of madness
Sep 05 17:27:15 <devsnek>	if it needs to be a function, i would define it directly above whatever calls it
Sep 05 17:27:22 <prussian>	but I can't understand what the problem is even
Sep 05 17:27:40 <devsnek>	prussian: everything is broken on this most auspicious of thursdays
Sep 05 17:28:06 <jaawerth>	if you only need the final function then sure I'd probably have one function use all the component functions when possible
Sep 05 17:28:33 <devsnek>	this reminds me that i wanted to work on making engine262 into a deobfuscator
Sep 05 17:28:47 <devsnek>	or at least making a project that uses engine262 as a deobfuscator
Sep 05 17:28:58 <jaawerth>	but I can only talk about this in the most hand-wavy terms when looking at that example because the functions all do the same thing and the result is something you don't even need to compose functions to achieve
Sep 05 17:29:03 <prussian>	no doubt
Sep 05 17:29:03 <devsnek>	prepack might be good at that too
Sep 05 17:29:04 <devsnek>	hmm
Sep 05 17:29:10 <kalkulator>	jaawerth: yeah that's function composition
Sep 05 17:29:13 <prussian>	broken thursdays doesn't have a nice rhyme though
Sep 05 17:29:42 <prussian>	or alliteration
Sep 05 17:29:59 <ebbflowgo>	hi guys, I'm confused, perhaps someone can help me understand -- https://gist.github.com/1dolinski/06e8e86957e0929704e24ffb6fd77cb8
Sep 05 17:30:17 <ebbflowgo>	I'm wondering how the async script in this embeddable widget gets access to the script tag object
Sep 05 17:30:17 <devsnek>	prussian: fucked-up pre-friday
Sep 05 17:30:29 <jaawerth>	but for getXValue2, you could use an actual compose function to do that instead, and just do `const getXValue2 = compose(fn6, fn5, fn4);`
Sep 05 17:30:35 <stennowork>	TGIAF
Sep 05 17:30:41 <devsnek>	ebbflowgo: document.currentScript
Sep 05 17:30:59 <ebbflowgo>	devsnek: smart man, will look into -- thank you!
Sep 05 17:31:45 <ebbflowgo>	 /woman, just thanks
Sep 05 17:32:59 <devsnek>	stennowork: thank god i am fat?
Sep 05 17:33:11 <stennowork>	thank god its almost friday
Sep 05 17:33:15 <prussian>	thank god it's ALMOST friday
Sep 05 17:33:18 <prussian>	that
Sep 05 17:33:27 <prometh>	prussian: thursday isn't the weekend
Sep 05 17:33:38 <stennowork>	i gained a bit of weight in the last years
Sep 05 17:33:46 <stennowork>	but i wouldn't call myself overweight yet
Sep 05 17:33:48 <prometh>	stennowork: so?
Sep 05 17:33:58 <stennowork>	got a funny little belly
Sep 05 17:34:00 <prometh>	stennowork: quit yer complainin' :P
Sep 05 17:34:20 <deviantfero>	stennowork, same belly bro
Sep 05 17:34:28 <grr12314>	does document.currentScript actually work nowadays?
Sep 05 17:34:33 <prometh>	i have fat on my abs.. that's about it
Sep 05 17:34:37 <celphi>	I just joined a gym on Monday- got the trainer too
Sep 05 17:34:39 <grr12314>	cos i remember it being a mess back in the days
Sep 05 17:34:55 <grr12314>	especially in event handlers etc
Sep 05 17:35:10 <celphi>	I was out of breath in 10 mins of training lol
Sep 05 17:35:29 <kalkulator>	jaawerth: the compose function is "getXValue2"
Sep 05 17:35:49 <prometh>	celphi: just keep it up, it'll get easier and then you'll be pushing yourself really hard to hit the same exertion
Sep 05 17:36:07 <prussian>	lucky weight gainers.
Sep 05 17:36:14 <prussian>	I lost like 30 pounds since march this year
Sep 05 17:36:22 <prometh>	prussian: it took me a year to add 3 inches to my arms
Sep 05 17:36:27 <prussian>	damn
Sep 05 17:36:32 <MikeD_>	how long do you want your arms to be?
Sep 05 17:36:38 <celphi>	Yeah I’m skinny a d out of shape
Sep 05 17:36:40 <prometh>	MikeD_: fantastic
Sep 05 17:37:41 <celphi>	Waitress asked me last week if I lost weight.
Sep 05 17:38:04 <celphi>	And that’s a bad thing when you’re already skinny lol
Sep 05 19:14:39 *	Disconnected ()
**** ENDING LOGGING AT Thu Sep  5 19:14:39 2019

**** BEGIN LOGGING AT Thu Sep  5 19:15:06 2019

Sep 05 19:15:06 *	Now talking on ##javascript
Sep 05 19:15:06 *	Topic for ##javascript is: JavaScript is *not* Java. | Just ask your question. | Say "!mdn abc" for docs on "abc". | Don't paste code in the channel. | Can't talk? Get registered on freenode ( https://git.io/vaTS2 )
Sep 05 19:15:06 *	Topic for ##javascript set by niggler!~niggler@unaffiliated/niggler (Tue Jan 15 07:16:23 2019)
Sep 05 19:17:04 <MJCD>	sweet my cheap ass offsite/USA (when i'm in Perth, Western Australia) will add ssh to whm+cpanel for $1.50 a year
Sep 05 19:17:18 <MJCD>	i'm going to just run while (1).sh
Sep 05 19:17:21 <MJCD>	fuck em
Sep 05 19:17:35 <MJCD>	charging me $1.50 for a basic fucking tool
Sep 05 19:18:27 <thykka>	almost as if they want only wordpress warriors
Sep 05 19:19:21 <MJCD>	it's funny because we're using wordpress with php7
Sep 05 19:19:24 <MJCD>	by choice
Sep 05 19:20:05 <thykka>	that was my previous job :P
Sep 05 19:20:06 <sillyslux>	there's little alternatives to php when it comes to php
Sep 05 19:20:30 <MJCD>	we chose php7 over node
Sep 05 19:20:33 <MJCD>	and node based stacks
Sep 05 19:20:36 <MJCD>	for good reasons
Sep 05 19:20:46 <MJCD>	which i've documented rather excessively
Sep 05 19:20:51 <sillyslux>	but there's no wordpress on node, right?
Sep 05 19:20:55 <MJCD>	because I don't want to answer why to anyone in the team
Sep 05 19:20:59 <prometh>	sillyslux: closest thing is ghost
Sep 05 19:21:04 <MJCD>	well I mean you could do php on node
Sep 05 19:21:07 <MJCD>	nothing stopping you
Sep 05 19:21:22 <MJCD>	as with any cgi running another cgi
Sep 05 19:21:35 <MJCD>	we ARE keeping node.js for websockets
Sep 05 19:21:41 <MJCD>	but that's rather baseless
Sep 05 19:21:44 <MJCD>	and may be ditched
Sep 05 19:22:01 <MJCD>	under the same logic that we don't use node stacks anymore
Sep 05 19:22:04 <sillyslux>	php has ratchet
Sep 05 19:22:13 <MJCD>	it has v8
Sep 05 19:22:15 <MJCD>	natively
Sep 05 19:22:22 <sillyslux>	it?
Sep 05 19:22:28 <MJCD>	php
Sep 05 19:22:28 <sillyslux>	php??
Sep 05 19:22:32 <MJCD>	since 4>
Sep 05 19:22:34 <MJCD>	lol
Sep 05 19:22:37 <sillyslux>	?! lolwat?
Sep 05 19:22:46 <MJCD>	php.net/v8
Sep 05 19:23:02 <GreenJello>	MJCD, ?
Sep 05 19:23:30 <GreenJello>	you can install a PHP-compatible version of V8
Sep 05 19:23:51 <sillyslux>	https://www.php.net/manual/en/class.v8js.php
Sep 05 19:24:09 <GreenJello>	pretty sure it wasn't installed by default in 4.x
Sep 05 19:24:37 <DeltaHeavy>	waaat
Sep 05 19:24:51 <DeltaHeavy>	That's pretty cool.
Sep 05 19:24:52 <GreenJello>	that is interesting, though
Sep 05 19:25:04 <sillyslux>	interesting yes, but cool?
Sep 05 19:25:15 <DeltaHeavy>	Can reuse validation logic pretty easily I guess with that.
Sep 05 19:25:35 <sillyslux>	oh
Sep 05 19:25:52 <DeltaHeavy>	Would be nice for SSR too I guess too.
Sep 05 19:26:05 <thykka>	reuse all the things \o/
Sep 05 19:26:29 <sillyslux>	mateusz dot charytoniuk at gmail dot com ¶4 years ago
Sep 05 19:26:29 <sillyslux>	v8js can be also used to render server-side javascript components (see: React.js).
Sep 05 19:26:42 <MJCD>	indeed
Sep 05 19:26:52 <DeltaHeavy>	Archived repo but https://github.com/reactjs/react-php-v8js
Sep 05 19:27:03 <sillyslux>	hs
Sep 05 19:27:06 <MJCD>	even grosser than just using v8
Sep 05 19:27:09 <MJCD>	;p
Sep 05 19:27:11 <MJCD>	under php
Sep 05 19:27:28 <MJCD>	but in any case
Sep 05 19:27:38 <MJCD>	let me paste my reasoning to clarify
Sep 05 19:27:39 <DeltaHeavy>	More up to date PHP lib for that https://github.com/Limenius/ReactRenderer
Sep 05 19:27:42 <MJCD>	and discussion
Sep 05 19:28:44 <DeltaHeavy>	Eh, PHP stopped being total dog shit sometime during v5. v7 is actually quite nice, not to say it doesn't have plenty of old scars I wish they'd fix for backwards compatibilities sake. Still near the bottom of the list for me though as far as picking a server side language goes but I wouldn't stick my nose up at it really either.
Sep 05 19:28:58 <rocketmagnet>	when i have function greaterThen(n) { return m => m > n; }, where is m comming from ?? i don't get it
Sep 05 19:29:01 <DeltaHeavy>	They'd fix even if it breaks backwards compat* (wires got crossed)
Sep 05 19:29:27 <rocketmagnet>	i mean m is a function but what value does it have  in the expression ?
Sep 05 19:29:35 <DeltaHeavy>	rocketmagnet `const a = greaterThan(5);` returns a function, m would be `2` in the case of `a(2)`
Sep 05 19:29:39 <MJCD>	php7 belying all it's functionalities as its "stdlib"
Sep 05 19:29:41 <DeltaHeavy>	`m` is a parameter for a function.
Sep 05 19:29:50 <MJCD>	is simply as you say, much faster than nearly anything
Sep 05 19:30:04 <MJCD>	I have no idea how they made it so fast
Sep 05 19:30:10 <MJCD>	I don't intend to get that deep into php again
Sep 05 19:30:19 <MJCD>	php internals
Sep 05 19:30:20 <DeltaHeavy>	I don't care about performance so much, and I thought V8 was still faster than PHP7's standard implementation.
Sep 05 19:30:50 <DeltaHeavy>	Yeah me neither, hopefully I'll never have to write much more PHP in my career. Already has been quite a number of years aside from a few hours here and there.
Sep 05 19:30:55 <MJCD>	JavaScript is an event oriented language and optimized as such. Under this - internal best practice indicts that Node.js should only be processing event based tasks on the server(s).
Sep 05 19:30:57 <MJCD>	These events could be complete http requests already processed from streams to (perhaps json) http events of whatever kind. In this design the httpd is never eliminated.
Sep 05 19:30:57 <MJCD>	The one concession we make is with regard to websockets, which CAN be handled with php - however there is no benefit to php over node.js and it's a nice separation of concerns to have a regular httpd+php and then a custom json-based websocket to a set of event handlers on the backend.
Sep 05 19:31:04 <MJCD>	personal factoid
Sep 05 19:31:08 <MJCD>	!discuss
Sep 05 19:31:14 <DeltaHeavy>	I'd rather work with a quality PHP project than a poorly written anything-else project.
Sep 05 19:31:34 <MJCD>	well it's come a long way in that regard via laravel and composer
Sep 05 19:31:36 <DeltaHeavy>	Eh, I'd rather reduce the number of languages used on the backend.
Sep 05 19:31:45 <MJCD>	irrelevant what you WANT
Sep 05 19:31:46 <DeltaHeavy>	I never even used composer :x
Sep 05 19:31:51 <MJCD>	to what code is the ideal solution
Sep 05 19:32:04 <MJCD>	I have no problem with node.js
Sep 05 19:32:15 <DeltaHeavy>	I prefer Node, but I wouldn't introduce it just for WS's sake.
Sep 05 19:32:27 <DeltaHeavy>	No reason to use Node.js just because you're using a different network protocol.
Sep 05 19:32:27 <MJCD>	however I believe it requires a httpd and at a minimum use of cgi or implementing a worker pool
Sep 05 19:32:29 <MJCD>	as I said
Sep 05 19:32:34 <MJCD>	what you prefer is irrelevant
Sep 05 19:32:36 <bberry>	is it okay if i ask a jsdoc question?
Sep 05 19:32:40 <MJCD>	we all prefer 1 language front and back
Sep 05 19:32:44 <bberry>	i guess i shouldnt ask to ask haha
Sep 05 19:32:47 <MJCD>	bberry, no, its deprecated
Sep 05 19:32:49 <MJCD>	!next
Sep 05 19:32:49 <ecmabot>	MJCD: Another satisfied customer! NEXT!!
Sep 05 19:32:52 <bberry>	haha yeah yeah
Sep 05 19:32:54 <DeltaHeavy>	bberry It's not deprecated
Sep 05 19:32:56 <DeltaHeavy>	And sure
Sep 05 19:33:13 <MJCD>	Ruin all my fun Mr Serious
Sep 05 19:33:14 <MJCD>	:P
Sep 05 19:33:19 <DeltaHeavy>	MJCD For most projects sure, but if you want e-commerce for example, you'd probably end up with PHP due to things like Magento and what not.
Sep 05 19:33:30 <DeltaHeavy>	MJCD don't trifle with me yo @_@
Sep 05 19:33:31 <sillyslux>	when did that happen?
Sep 05 19:33:32 *	DeltaHeavy table flips
Sep 05 19:33:51 <DeltaHeavy>	sillyslux Didn't happen yet if ever.
Sep 05 19:33:55 <MJCD>	DeltaHeavy, the whole point is largely that we have opted to skip alllll of that and yes, leverage php's extensive existing free product base
Sep 05 19:34:02 <MJCD>	but that's a fringe benefit
Sep 05 19:34:11 <bberry>	im doing a @typedef and i have an @property that has explicit strings that it has to be.  but i cant remember the syntax for it.... it's something like ` @property {'ban' | 'mute' | 'blacklist'} punishment`
Sep 05 19:34:16 <MJCD>	in the example php and node.js under a httpd are interchangable
Sep 05 19:34:18 <DeltaHeavy>	Not a fringe benefit at all, e-commerce isn't a fringe benefit and neither is WP / Drupal.
Sep 05 19:34:24 <MJCD>	just that there's no point in doing so
Sep 05 19:34:31 <MJCD>	you're missing the point
Sep 05 19:34:39 <MJCD>	almost intentionally
Sep 05 19:34:40 <MJCD>	lol
Sep 05 19:34:43 <DeltaHeavy>	bberry I think there's an @enum
Sep 05 19:36:30 <DeltaHeavy>	bberry Doesn't look all that possible https://github.com/jsdoc/jsdoc/issues/629
Sep 05 19:36:35 <bberry>	yeah :(
Sep 05 19:36:44 <bberry>	i know they have it for params like `@param {('rect'|'circle'|'ellipse')} shapeType`
Sep 05 19:36:59 <MJCD>	jsdoc has no concept what the state of the thing is
Sep 05 19:37:05 <MJCD>	it's not live nor interractive
Sep 05 19:37:26 <MJCD>	sounds like you want a testing framework
Sep 05 19:37:32 <MJCD>	or an "options" lib
Sep 05 19:37:32 <DeltaHeavy>	I wouldnt' bother with jsdoc personally though. For all the effort you sink into writing them, they often aren't updated when things changed, and regardless if you do keep them up to date is it still really providing a net gain in productivity / value?
Sep 05 19:37:51 <MJCD>	niggler will use jsdoc regardless of what anyone says
Sep 05 19:37:52 <MJCD>	anyone
Sep 05 19:37:56 <bberry>	yeah, im mostly just seeing if its useless or not
Sep 05 19:38:01 <bberry>	my coworker is all obsessed w/ it
Sep 05 19:38:12 <MJCD>	It is, thus why I said it's [basically] deprecated
Sep 05 19:38:13 <DeltaHeavy>	I used ot like it until I really just realized it's not a good use of time, especially working with teams.
Sep 05 19:38:16 <MJCD>	:P
Sep 05 19:38:28 <bberry>	bc he did w/ a typescript project and he loved it for the intellisense and such
Sep 05 19:38:37 <DeltaHeavy>	Eh, it does what it does well. I can see some good use cases for it that some people may want to take it up on.
Sep 05 19:38:42 <bberry>	and so im at least giving him the respect enuf to give it a shot haha
Sep 05 19:38:46 <MJCD>	lol no it doesn't
Sep 05 19:38:50 <MJCD>	it does what it does badly
Sep 05 19:38:53 <DeltaHeavy>	TBH it's good for a library you write in JS to help with things like VS Code's intellisense.
Sep 05 19:39:08 <bberry>	yeah tahts what we're using it with
Sep 05 19:39:10 <DeltaHeavy>	Can hover over some imported function to see what it's params are as well as its return values.
Sep 05 19:39:13 <prometh>	jsdoc is helpful as it's inline
Sep 05 19:39:28 <bberry>	yeah for sure
Sep 05 19:39:55 <DeltaHeavy>	I'd rather opt for TypeScript though personally, or even perhaps write a .d.ts file if I was just using JS.
Sep 05 19:39:58 <prometh>	half of it can be replaced with typescript though
Sep 05 19:40:05 <prometh>	but typescript has its own problems
Sep 05 19:40:17 <DeltaHeavy>	TS is good, not my preference though.
Sep 05 19:40:25 <DeltaHeavy>	I wanted to like it, but didn't.
Sep 05 19:40:29 <bberry>	F
Sep 05 19:40:41 <bberry>	i havent given it a shot yet... things move slow around here :(
Sep 05 19:40:58 <bberry>	hell... we just started putting classes in our project only a few weeks ago
Sep 05 19:41:00 <DeltaHeavy>	Not worth introducing into a large project.
Sep 05 19:41:06 <prometh>	bberry: why do you need classes?
Sep 05 19:41:26 <DeltaHeavy>	I don't add classes in my code at all unless a lib makes me, though I would in _some_ situations.
Sep 05 19:41:28 <bberry>	we dont need them, but it provides a better structure than what we had
Sep 05 19:41:46 <prometh>	bberry: classes/instances are not needed in most situations
Sep 05 19:41:58 <DeltaHeavy>	bberry I used to be in the same camp as you but I find it's far better for most CRUD apps written in JS to take a more FP leaning approach.
Sep 05 19:42:06 <bberry>	yeah, we only use like, actual class-ness about it with our sessions
Sep 05 19:42:20 <bberry>	(and no, not sessions in the sense of a client session)
Sep 05 19:42:28 <DeltaHeavy>	What sort of sessions?
Sep 05 19:42:36 <prometh>	cannabis?
Sep 05 19:42:40 <bberry>	well.. i guess it is kinda like a client session actually
Sep 05 19:42:50 <bberry>	but its for the conenction between devices and our server
Sep 05 19:42:53 <bberry>	not users
Sep 05 19:42:58 <DeltaHeavy>	Are you using express-session?
Sep 05 19:43:01 <DeltaHeavy>	Yeah tha'ts sessiosn
Sep 05 19:43:08 <bberry>	hmm no
Sep 05 19:43:09 <DeltaHeavy>	Connections? Like EACH HTTP request has its own session?
Sep 05 19:43:19 <bberry>	we're actually using wss
Sep 05 19:43:21 <DeltaHeavy>	Or just knowing that a particular browser is the same person
Sep 05 19:43:36 <DeltaHeavy>	WSS for everything in place of HTTP or just some stuff?
Sep 05 19:43:43 <bberry>	hmm, almost everything
Sep 05 19:43:45 <DeltaHeavy>	Like you use WSS for logging in and registering?
Sep 05 19:43:53 <DeltaHeavy>	Why? That sounds really janky.
Sep 05 19:43:54 <bberry>	oh god no
Sep 05 19:44:07 <bberry>	we use WSS for device <-> server communication
Sep 05 21:45:17 *	Disconnected ()
**** ENDING LOGGING AT Thu Sep  5 21:45:17 2019

**** BEGIN LOGGING AT Thu Sep  5 21:45:44 2019

Sep 05 21:45:44 *	Now talking on ##javascript
Sep 05 21:45:44 *	Topic for ##javascript is: JavaScript is *not* Java. | Just ask your question. | Say "!mdn abc" for docs on "abc". | Don't paste code in the channel. | Can't talk? Get registered on freenode ( https://git.io/vaTS2 )
Sep 05 21:45:44 *	Topic for ##javascript set by niggler!~niggler@unaffiliated/niggler (Tue Jan 15 07:16:23 2019)
Sep 05 21:46:06 <prometh>	are you a hot chick?
Sep 05 21:46:08 <jaawerth>	basically the shims give you the newer js functions. babel lets you use *syntax* and more complex features that need runtime stuffs
Sep 05 21:46:11 <jaawerth>	prometh: no
Sep 05 21:46:18 <jaawerth>	by which I mean
Sep 05 21:46:21 <bprompt>	novum:   I don't think anyone has been trying to pound you, so there are no gods around, I'm just a "latter day sinner" :P
Sep 05 21:46:22 <jaawerth>	don't go there please
Sep 05 21:46:26 <prometh>	that's the only way i can be on his naughty list
Sep 05 21:46:32 <prometh>	and 15 years ago
Sep 05 21:46:34 <jaawerth>	god I hate being an op in here
Sep 05 21:46:40 <prometh>	jaawerth: i hear you
Sep 05 21:47:06 <prometh>	jaawerth: don't say "god"
Sep 05 21:47:12 <jaawerth>	saw that coming :P
Sep 05 21:47:27 <prometh>	it wasn't to get even
Sep 05 21:48:25 <prometh>	anywya, i will bow out
Sep 05 21:50:05 <niggler>	the true JS deity of course is the eich
Sep 05 21:51:19 <GreenJello>	niggler, we don't need any more anti-gay deities in the world
Sep 05 21:51:19 <bprompt>	hehehe
Sep 05 21:51:29 <novum>	jaawerth, considering all of the considerations that have been considered, I hope I didn't upset your highness. There were just a lot of suggestions that didn't seem to be the best option given the circumstances. If I include these shims, then I have to tell this contractor to add them, and he/she is going to be like "bruh why they so big" and then I will be like "bruh shut up it's 2019". So, there are
Sep 05 21:51:30 <novum>	just a lot of considerations, so sorry for the back and forth. *bows*
Sep 05 21:52:06 <jaawerth>	I don't get upset, I just get tired when I feel like I have to stop people from getting into hostile territory ;-)
Sep 05 21:52:38 <jaawerth>	(or danger zones wrt wording, lol)
Sep 05 21:52:45 <novum>	people told me to do one thing, then flip-flopped, then flip-flopped 5 more times, so then I was like "bruh *bang head on table*" and now we here x.x
Sep 05 21:53:03 <jaawerth>	such is life in IRC
Sep 05 21:53:10 <jaawerth>	that parts par for the course haha
Sep 05 21:53:13 <bprompt>	novum:   what's best option were you expecting though?   to change 2000 lines of ES5 code to ES6
Sep 05 21:53:18 <niggler>	"it's 2019" has so many meanings
Sep 05 21:53:34 <novum>	but I will attempt to successfully implement your suggestions and make my life easier and potentially your lives when I ask "how you do ___?
Sep 05 21:53:58 <johnjake>	Hi guys!
Sep 05 21:54:05 <bprompt>	allo
Sep 05 21:54:10 <novum>	"it's 2019" meaning you can spare 1GiB on a web server
Sep 05 21:54:49 <bprompt>	to be fair, 2019 is almost through
Sep 05 21:54:56 <novum>	but like they didn't want to include entire three.js repo, which I thought was funny
Sep 05 21:55:13 <novum>	to be fair we use 3 versions
Sep 05 21:55:16 <jaawerth>	novum: yeah I mean, just using the shims is a good halfway measure - you can do that and start using a few of the es6 extras without having to change your project's build steup, and start incrementally using ES6 more (at least the parts that don't need babel)
Sep 05 21:55:43 <jaawerth>	(ES6 is also known as ES2015 btw - all the versions after ES6/7 *just* use the year as the name, ES6 and ES7 go by both)
Sep 05 21:55:52 <novum>	ok. thanks all for your help. it's been a bit of a struggle, and sorry if I picked fights with people or vice versa, but hopefully it'll be for the best. thanks again x.x
Sep 05 21:56:35 <jaawerth>	novum: the nice thing is that every new version of the js spec maintains backwards compatibiliity so valid ES5 is still valid ES6 - you won't break anything by adding the shims unless there's something really funky with the legacy codebase, e.g. doing dirty stuff like polluting global prototypes
Sep 05 21:56:53 <niggler>	*tries to be backwards compatible
Sep 05 21:57:01 <jaawerth>	it comes real close
Sep 05 21:57:16 <jaawerth>	I can't really think of any edge cases offhand, though I know a couple exist
Sep 05 21:57:31 *	bradleymeck stares at bug fixes that can't be implemented due to web
Sep 05 21:57:32 <novum>	I have one more question: I am going to clone the repository into the /includes/js/ folder and then include em in my iframe's index.html. Is this bad? I do not see why it would be, but the installation section recommends that it is installed with npm, bower, etc
Sep 05 21:57:42 <stenno>	n> const x = ([,f])=>f; x([23,14]);
Sep 05 21:57:44 <jellobot>	(okay) 14
Sep 05 21:57:57 <novum>	regarding the shims, that is
Sep 05 21:58:49 <jaawerth>	I believe you can also include them via script tags
Sep 05 21:58:49 <ljharb>	novum: all JS should only be installed with npm.
Sep 05 21:59:05 <jaawerth>	ljharb: this is a big legacy project they are finishing up some new work on
Sep 05 21:59:11 <jaawerth>	so if npm isn't already in their workflow...
Sep 05 21:59:16 <ljharb>	ah
Sep 05 21:59:18 <jaawerth>	that's gonna be nontrivial
Sep 05 21:59:48 <jaawerth>	ljharb: hey, if anyone will know this off the top of their head, it's you. what-all in the newer ecma specs *do* break backwards compat?
Sep 05 21:59:58 <novum>	jaawerth, thanks for having my back. it feels very good to have not everyone yelling at me about the best way to do things .-.
Sep 05 22:00:02 <jaawerth>	I know it's very little, to the point that I can't think of any edge cases
Sep 05 22:00:25 <jaawerth>	novum: IRC means a lot of crosstalk and backscroll not everyone sees so I figured I'd clarify lol
Sep 05 22:00:39 <novum>	I am just trying to figure out best way to do things so that I can be done with this and not go insane
Sep 05 22:00:56 <bradleymeck>	jaawerth: mostly bug fixes these days, old days there was some to unify VMs in drastic manners
Sep 05 22:01:08 <jaawerth>	that's what I thought
Sep 05 22:01:16 <gehn>	n> { class: class }
Sep 05 22:01:18 <jellobot>	(fail) SyntaxError: Unexpected token :
Sep 05 22:01:21 <jaawerth>	I mean, userland crap like ootools notwithstanding
Sep 05 22:01:21 <gehn>	n> { class: null }
Sep 05 22:01:23 <jellobot>	(fail) SyntaxError: Unexpected token :
Sep 05 22:01:30 <jaawerth>	ah yeah good point
Sep 05 22:01:37 <novum>	I can use npm install --prefix ./includes/js/  or something like that??
Sep 05 22:01:46 <novum>	but I was just thinking about cloning x.x
Sep 05 22:01:51 <jaawerth>	procted names as a property keys is a big one
Sep 05 22:01:55 <jaawerth>	reserved names*
Sep 05 22:02:04 <novum>	I would rather DL not include from the site
Sep 05 22:02:06 <jaawerth>	but wait, no
Sep 05 22:02:16 <jaawerth>	gehn: that doesn't break backwards compat, just forwards compat
Sep 05 22:02:35 <jaawerth>	which is to say, that doesn't stop ES5 from being valid ES6
Sep 05 22:02:36 <gehn>	ah true
Sep 05 22:02:57 <gehn>	well, no but it does
Sep 05 22:03:00 <Alexendoo>	n> ({class: null})
Sep 05 22:03:02 <jellobot>	(okay) { class: null }
Sep 05 22:03:06 <gehn>	backwards compat should mean the new can run the old
Sep 05 22:03:17 <Alexendoo>	Without () it's a block
Sep 05 22:03:26 <gehn>	if the old breaks within the new, then it's not backwards compatible
Sep 05 22:03:37 <gehn>	n> var x = { class: null };
Sep 05 22:03:38 <jellobot>	(okay) undefined
Sep 05 22:03:47 <gehn>	hmm, ok well nevermind entirely then I guess
Sep 05 22:03:48 <novum>	but the old doesn't break in the new because you'd never write {class:null} in the old? right?
Sep 05 22:03:51 <bprompt>	just to help with the backscroll----> "novum" is trying to change 2000 lines of ES5 code to ES6 <--- for those who missed it
Sep 05 22:04:00 <jaawerth>	novum: you should be able to just grab the .js file and include it iirc
Sep 05 22:04:12 <jaawerth>	it's smart enough to know whether it's being requried from a module or included as a script
Sep 05 22:04:19 <novum>	ok so is it ok to clone then mv the *.js to includes?
Sep 05 22:04:34 <jaawerth>	should be
Sep 05 22:04:36 <novum>	that's (very unfortunately) what has happened to a lot of thhings
Sep 05 22:04:40 <novum>	not how I would do it
Sep 05 22:04:47 <novum>	okie dokie x.x
Sep 05 22:04:56 <jaawerth>	but shims/polyfills should be incldued before everythign else
Sep 05 22:05:00 <Alexendoo>	IIRC class was always reserved anyway
Sep 05 22:05:01 <novum>	yes.
Sep 05 22:05:05 <jaawerth>	so I would change whatever your config is for includes to ensure that's the case
Sep 05 22:05:15 <novum>	will do. I can make that happen.
Sep 05 22:05:20 <novum>	but only for this iframe
Sep 05 22:05:26 <johnjake>	Hi guys,
Sep 05 22:05:29 <novum>	I have been instructed not to mess with the template index.html
Sep 05 22:05:34 <jaawerth>	yeah, class has been a reserved word for a longtime. so the main difference is that { class: null } would be an error in ES5 but not in es6
Sep 05 22:05:38 <novum>	only the index.html for this iframe
Sep 05 22:06:08 <johnjake>	I'm trying to work on detecting RCEs in node and I need people to playaround and give some feedbacks
Sep 05 22:06:12 <gehn>	well, as mentioned, no one would probably ever write it like that
Sep 05 22:06:15 <johnjake>	http://157.245.141.32:2253/thisIstest?input=output=1
Sep 05 22:06:22 <gehn>	so... extremely unlikely edge case
Sep 05 22:06:48 <Alexendoo>	jaawerth: Pretty sure that would be fine in ES5 too, since reserved words are for identifiers not properties
Sep 05 22:07:02 <gehn>	careful, he gon hack u
Sep 05 22:07:52 <prometh>	i spoke to a recruiter today and he referred to react and vue as "languages"
Sep 05 22:07:59 <ljharb>	jaawerth: um
Sep 05 22:08:10 <prometh>	isn't it, like, their job to know what they're selling?
Sep 05 22:08:24 <prometh>	or are salesman just dumb?
Sep 05 22:08:31 <lloydxmas>	their job is to convert
Sep 05 22:08:40 <johnjake>	prometh like everything, there are good salesmen and bad salesmen
Sep 05 22:08:48 <ljharb>	jaawerth: so like ES6 tagged template literals' template objects (passed to the function) used to be kept per-realm, and in like ES2018 they were changed to be per-call-site
Sep 05 22:09:01 <johnjake>	prometh Maybe that was his/her first day, you'll never know
Sep 05 22:09:24 <jaawerth>	ah yeah I got the reserved word property rule wrong I think
Sep 05 22:09:37 <gehn>	prometh, welcome to dealing with recruiters
Sep 05 22:09:39 <jaawerth>	ljharb: ooh good one
Sep 05 22:09:40 <arve>	meh. I love my coworkers, up to and including our CEO
Sep 05 22:09:50 <arve>	I just wish they understood QA and QC
Sep 05 22:09:52 <prometh>	gehn: yeah, it's mostly a waste of time
Sep 05 22:10:03 <ljharb>	jaawerth: but also each spec has an Annex E that details them
Sep 05 22:10:08 <gehn>	prometh, https://twitter.com/horse_recruiter
Sep 05 22:10:09 <prometh>	i really hope that recruiters are not well paid, considering how dumb they are
Sep 05 22:10:09 <jaawerth>	ljharb: yeah I imagine most of them are ES2015 <---> ES2016+ rather than before ES2015/after ES2015
Sep 05 22:10:14 <ljharb>	jaawerth: https://tc39.es/ecma262/#sec-additions-and-changes-that-introduce-incompatibilities-with-prior-editions
Sep 05 22:10:17 <jaawerth>	ah nice
Sep 05 22:10:23 <jaawerth>	didn't realize that was in there butu it makes sense
Sep 05 22:10:35 <ljharb>	altho it looks like Annex E hasn't been updated since ES2015
Sep 05 22:10:42 <novum>	web dev is so messy
Sep 05 22:11:02 <jaawerth>	truth
Sep 05 22:11:08 <gehn>	prometh, recruiters can be pretty well paid, you might be surprised
Sep 05 22:11:11 <jaawerth>	I mean, so is dev anyway. obligatory:
Sep 05 22:11:13 <jaawerth>	!programming sucks
Sep 05 22:11:14 <ecmabot>	jaawerth: https://www.stilldrinking.org/programming-sucks
Sep 05 22:11:16 <ljharb>	novum: that's why it's much harder and takes much more skill than other kinds of dev
Sep 05 22:11:19 <prometh>	maybe i should become a recruiter
Sep 05 22:11:26 <prometh>	those who can't do, sell
Sep 05 22:11:27 <jaawerth>	I guess ecmabot is tired
Sep 05 22:11:43 <jaawerth>	https://www.stilldrinking.org/programming-sucks
Sep 05 22:11:46 <gehn>	prometh, but that only incentivizes them to go for quantity of hires, it does not encourage them to actually know what they're talking about
Sep 05 22:12:01 <prometh>	gehn: ah, a shitty life
Sep 05 22:12:03 <gehn>	programming = <3, programming = life
Sep 05 22:12:07 <ljharb>	jaawerth: it responded to you immediately
Sep 05 22:12:10 <ljharb>	jaawerth: do you have it on ignore?
Sep 05 22:12:15 <ljharb>	>> 'test' @ jaawerth
Sep 05 22:12:15 <ecmabot>	jaawerth: (string) 'test'
Sep 05 22:12:31 <jaawerth>	I don't
Sep 05 22:12:34 <jaawerth>	my connection must have hiccuped
Sep 05 22:12:37 <ljharb>	ah k
Sep 05 22:12:37 <jaawerth>	sorry for the spam
Sep 05 22:12:49 <gehn>	there's no real reason for them to know any of the tech they hire for - they get given a list of traits desired in a candidate, they read your resume for said buzzwords and acronyms
Sep 05 22:13:18 <gehn>	it's not the recruiter's job to do a technical assessment, the other engineers at the company do that during your tech interview
Sep 05 22:13:23 <prometh>	gehn: ah, so the only reason they aren't replaced by a bot is because of the phone call
Sep 05 22:13:45 <prometh>	(sad)
Sep 05 22:13:46 <gehn>	I wouldn't doubt AI can do most of a recruiter's job
Sep 05 22:13:59 <gehn>	how much and whether it will happen (or probably more like how soon) is... I'm not sure really
Sep 05 22:14:02 <prometh>	not even ai, just a basic script
Sep 05 22:14:09 <prometh>	ai for the phone call
Sep 05 22:14:43 <ljharb>	prometh: recruiters do a ton of work that can't be automated.
Sep 05 22:14:51 <ljharb>	prometh: and technical skill has no bearing on that work.
Sep 05 22:15:10 <ljharb>	that you've had negative experiences with some doesn't invalidate the profession
Sep 05 22:15:22 <prometh>	i hope so for their sake
Sep 05 22:15:24 <gehn>	I don't think I've ever had a positive one
Sep 05 22:15:32 <ljharb>	anecdata notwithstanding
Sep 05 22:15:38 <gehn>	and I've had *very many* recruiter interactions
Sep 05 22:16:02 <niggler>	id take that as a true indication of supply/demand in the market gehn
Sep 05 22:16:08 <novum>	https://github.com/es-shims/es5-shim#example-of-applying-es-compatability-shims-in-a-browser-project  <- do you NEED to require the json3.min.js  ?
Sep 05 22:16:26 <niggler>	novum: stop niggling
Sep 05 22:16:44 <jaawerth>	I've spoken to a few decent recruiters
Sep 05 22:16:47 <niggler>	you could craft your own special shim or just use something that works
Sep 05 22:16:53 <arve>	again, how do you convince management that you need to hire QA?
Sep 05 22:16:56 <gehn>	actually some of the dedicated ones at larger companies are better
Sep 05 22:17:00 <jaawerth>	it's harder when it's a tech division of a non-tech company though
Sep 05 22:17:12 <niggler>	that's management's job arve
Sep 05 22:17:12 <prometh>	gehn: you don't write e2e tests and don't have the time
Sep 05 22:17:17 <niggler>	"PM" or whatever they call it
Sep 05 22:17:28 <gehn>	prometh, I what?
Sep 05 22:17:30 <jaawerth>	I used to work for such a company and I had to throw my weight around to stop our recruiters from relisting all of our dev openings as "java"
Sep 05 22:17:41 <cthulchu_>	my dear folks, ^= is not the xor?
Sep 05 22:17:44 <jaawerth>	(none of them involved any java)
Sep 05 22:17:47 <arve>	niggler: that's the issue. all of the management, and the project owners are non-tech
Sep 05 22:17:56 <ljharb>	cthulchu_: it's 32 bit bitwise xor
Sep 05 22:18:07 <ljharb>	niggler: no, that section should be updated
Sep 05 22:18:15 <niggler>	the person above you, or the one running the project, is the one that should care arve
Sep 05 22:18:20 <ljharb>	arve: then they shouldn't be making any tech decisions :-)
Sep 05 22:18:30 <arve>	granted, some of them have some tech profiency, but none of them understand the tens of thousands LOC that has been written
Sep 05 22:18:34 <jaawerth>	cthulchu_: xor is just ^
Sep 05 22:18:43 <arve>	and I care about the project
Sep 05 22:18:47 <prometh>	gehn: you don't know what e2e tests are?
Sep 05 22:19:03 <gehn>	prometh, you what?
Sep 05 22:19:03 <arve>	if I were running it as CEO, I'd gone external to find $1m of financing
Sep 05 22:19:04 <prometh>	gehn: oops... wrong person
Sep 05 22:19:16 <prometh>	arve: you don't write e2e tests and don't have the time
Sep 05 22:19:19 <arve>	just to get to "beyond pilot"
Sep 05 22:19:20 <niggler>	this is a circular problem ljharb
Sep 05 22:19:27 <niggler>	JSON 3 is **deprecated** and **no longer maintained**. Please don't use it in new projects, and migrate existing projects to use the native `JSON.parse` and `JSON.stringify` instead.
Sep 05 22:19:47 <arve>	prometh: i write them
Sep 05 22:19:54 <niggler>	if JSON isn't available in your platform in the first place, there's no migration
Sep 05 22:20:00 <ljharb>	niggler: json2 is the real one
Sep 05 22:20:04 <prometh>	arve: then argue that it takes too much time and you can't reach enough coverage
Sep 05 22:20:05 <ljharb>	niggler: i'm not sure why json3 is in there
Sep 05 22:20:06 <arve>	shit still breaks, and slows down pace because I can't cover everything alone
Sep 05 22:20:14 <prometh>	arve: there you go
Sep 05 22:20:17 <niggler>	The JSON 3 parser uses recursive descent instead of eval and regular expressions, which makes it slower on older platforms compared to JSON 2.
Sep 05 22:20:28 <arve>	prometh: hence, i'd like another full-time dev
Sep 05 22:20:29 <cthulchu_>	ljharb, thanks :)
Sep 05 22:20:29 <niggler>	^^ assumably not using eval
Sep 05 22:20:35 <prometh>	arve: your job is unit/integration tests.. qa's job is e2e
Sep 05 22:20:49 <ljharb>	niggler: right, so that section should be updated to use json2, not json3, and update the versions of everything as well
Sep 05 22:20:53 <niggler>	arve: it might be easier to take that angle
Sep 05 22:20:56 <prometh>	arve: you want to improve quality and_reliability_, but don't have teh time
Sep 05 22:21:06 <niggler>	hold on, are you recommending the eval-approach?
Sep 05 22:21:08 <jaawerth>	I wish json5 would just become the regular json
Sep 05 22:21:15 <prometh>	jaawerth: it's slower
Sep 05 22:21:18 <jaawerth>	fair
Sep 05 22:21:19 <arve>	I want to improve _pace_
Sep 05 22:21:21 <niggler>	the reason json3 exists, afaict, is that json2 uses eval
Sep 05 22:21:27 <prometh>	jaawerth: json5 isn't for data transfer, but for configs
Sep 05 22:21:42 <gehn>	I prefer maroon5, it's much more sexy
Sep 05 22:21:49 <arve>	Ideally, I'd want someone who could both touch code and tests
Sep 05 22:21:59 <jaawerth>	prometh: also fair
Sep 05 22:22:04 <prometh>	arve: i need a job....
Sep 05 22:22:08 <arve>	but that's primarily concerned with the e2e testing
Sep 05 22:22:29 <prometh>	arve: i've never done e2e as a job, and i'd be interested in it if the money is htere... i'm a frontend dev, otherwise
Sep 05 22:22:32 <arve>	prometh: we have a review coming up tomorrow, and I'll be bringing my points up
Sep 05 22:22:46 <ljharb>	niggler: yes but who cares
Sep 05 22:22:55 <ljharb>	niggler: any browser that needs json2 won't have csp
Sep 05 22:23:10 <ljharb>	niggler: if there's a safety issue tho, then json3 is fine i guess
Sep 05 22:23:28 <arve>	prometh: iif we end up creating a position, I'll post a link to it
Sep 05 22:23:29 <niggler>	the church of crockford is disgusted by your heretical pro-eval views
Sep 05 22:23:52 <ljharb>	niggler: that church is all apostates now
Sep 05 22:23:53 <prometh>	arve: keep my nickname noted... i've been unemployed for 5 months
Sep 05 22:24:24 <arve>	eval is nice, but a fucking minefield
Sep 05 22:24:35 <arve>	much like raw SQL
Sep 05 22:24:40 <ljharb>	it's not nice
Sep 05 22:24:47 <ljharb>	but this is for a JSON.parse shim
Sep 06 08:11:44 *	Disconnected ()
**** ENDING LOGGING AT Fri Sep  6 08:11:44 2019

**** BEGIN LOGGING AT Fri Sep  6 08:12:10 2019

Sep 06 08:12:10 *	Now talking on ##javascript
Sep 06 08:12:10 *	Topic for ##javascript is: JavaScript is *not* Java. | Just ask your question. | Say "!mdn abc" for docs on "abc". | Don't paste code in the channel. | Can't talk? Get registered on freenode ( https://git.io/vaTS2 )
Sep 06 08:12:10 *	Topic for ##javascript set by niggler!~niggler@unaffiliated/niggler (Tue Jan 15 07:16:23 2019)
Sep 06 08:12:23 <MJCD>	schilling, I mean
Sep 06 08:12:31 <MJCD>	that error is generally due to network conditions
Sep 06 08:12:45 <MJCD>	you might consider handling the error by trying again
Sep 06 08:12:52 <MJCD>	also
Sep 06 08:13:08 <MJCD>	you might need to set the referrer url to the original url
Sep 06 08:13:17 <MJCD>	and other potential hackery
Sep 06 08:13:29 <MJCD>	sounds like you're trying to do hot linking
Sep 06 08:13:40 <MJCD>	of things that have hot link protection ie not meant to be hotlinked
Sep 06 08:14:15 <schilling>	Not hotlinking at all. It's the URL from the site directly.
Sep 06 08:14:19 <MJCD>	if you control site.com's httpd you can probably disable that
Sep 06 08:14:44 <schilling>	I don't control it. I've been downloading via a python script previously.
Sep 06 08:14:45 <MJCD>	basically that error more indicates that your request was lost, networking wise
Sep 06 08:15:03 <MJCD>	you don't control it, but you're not hotlinking
Sep 06 08:15:09 <MJCD>	does not compute
Sep 06 08:15:30 <MJCD>	!mcve @ schilling
Sep 06 08:15:30 <ecmabot>	schilling: How to create a minimal, complete, and verifiable example https://stackoverflow.com/help/mcve see also !fiddle
Sep 06 08:15:33 <MJCD>	would be good
Sep 06 08:15:36 <MJCD>	or similar
Sep 06 08:15:52 <schilling>	It's the URL the site provides for the CSV download...
Sep 06 08:16:38 <MJCD>	can you log the complete error
Sep 06 08:16:48 <MJCD>	and the status code
Sep 06 08:17:13 <MJCD>	does the server require any auth?
Sep 06 08:17:36 <MJCD>	or a cookie/session id/similar ?
Sep 06 08:17:42 <MJCD>	api id
Sep 06 08:17:44 <MJCD>	somesuch lol
Sep 06 08:18:09 <MJCD>	ljharb, I just want to say
Sep 06 08:18:15 <MJCD>	I accept your cookies
Sep 06 08:18:18 <schilling>	status code and body are undefined. Error object is "read ECONNRESET at TLSWrap.onStreamRead"
Sep 06 08:18:27 <MJCD>	just so we're EU-legal
Sep 06 08:18:39 <MJCD>	important notice on npmjs.com
Sep 06 08:18:41 <ljharb>	MJCD: i do make good cookies
Sep 06 08:18:50 <MJCD>	DMCA cookies?
Sep 06 08:19:02 <MJCD>	dark magicks cookie association
Sep 06 08:19:36 <MJCD>	schilling, ok so as I say, that sounds like thing can't read site.com for whatever reason
Sep 06 08:19:52 <MJCD>	you can make it retry
Sep 06 08:19:58 <schilling>	Strange. Python script pulls it just fine...
Sep 06 08:20:07 <MJCD>	but there may be a reason it's not reachable
Sep 06 08:20:10 <schilling>	Browsers as well.
Sep 06 08:20:22 <MJCD>	firewall perhaps?
Sep 06 08:20:23 <schilling>	That's why I'm going bonkers over here...
Sep 06 08:20:33 <MJCD>	NAT port forwarded?
Sep 06 08:20:43 <schilling>	And the script seems to work with regular GET requests.
Sep 06 08:21:05 <MJCD>	I mean they'll all be HTTP
Sep 06 08:21:12 <MJCD>	but sure
Sep 06 08:21:19 <schilling>	As well as pulling from /file.csv urls. I'm suspecting response header is getting the mime type jacked. Just don't know how to prove it...
Sep 06 08:21:33 <MJCD>	once again environmental factors at all like firewall, routing, etc
Sep 06 08:21:43 <schilling>	None.
Sep 06 08:21:54 <MJCD>	impossible
Sep 06 08:22:23 <MJCD>	unless it's all ASM and even then... it's all ASM that's a factor lool
Sep 06 08:22:27 <schilling>	Maybe routing? Like I said, I can't prove anything because all I can get is a ECONNRESET error.
Sep 06 08:22:54 <schilling>	I never get a statusCode or status object out of it. Just...weird.
Sep 06 08:22:56 <MJCD>	try using curl
Sep 06 08:23:06 <MJCD>	from the same host you're trying right now
Sep 06 08:23:23 <MJCD>	format the request much the same way
Sep 06 08:23:34 <MJCD>	dump the output
Sep 06 08:23:36 <MJCD>	raw
Sep 06 08:23:49 <MJCD>	wget would be fine too
Sep 06 08:25:02 <schilling>	curl gives me the expected response.
Sep 06 08:25:42 <schilling>	Let me get a pastebin up for you...
Sep 06 08:26:15 <schilling>	I used the most basic example from the request documentation. Just swaped out the URL.
Sep 06 08:29:35 <schilling>	https://pastebin.com/Nv9HX8yu
Sep 06 08:30:24 <schilling>	I took it back to the most basic example as it was yielding the same exact response as the more elaborate scripts.
Sep 06 08:30:26 <dars>	Hi
Sep 06 08:32:59 <dars>	If I am trying to write 100k rows to a excel sheet which I have fetched from DB and my system freezes when I run that node process. How to acheive optimisation in this task?
Sep 06 08:33:08 <dars>	db is postgres
Sep 06 08:34:10 <deniska>	dars: isn't 100k rows kinda a lot for excel?
Sep 06 08:35:08 <deniska>	yeah, excel is 1,048,576 rows max
Sep 06 08:35:37 <evulish>	!range2
Sep 06 08:35:38 <ecmabot>	evulish: (a, b, s=1)=>Array.from({length: (b-a)/s+1}, (_,i)=>a+i*s)
Sep 06 08:37:14 <deniska>	(which on the second glance is higher than 100k)
Sep 06 08:37:23 <deniska>	dars: how do you write to excel file?
Sep 06 08:37:40 <cryocaustik>	hi all - is it possible to have babel auto refresh the browser when you make changes to the code?
Sep 06 08:38:14 <schilling>	dars: Which part is it freezing on? Pulling the 100k rows from postgres or writing to the file?
Sep 06 08:41:54 <MJCD>	!snip range
Sep 06 08:41:57 <MJCD>	boo
Sep 06 08:42:17 <schilling>	MJCD, any ideas?
Sep 06 08:42:26 <dars>	deniska using node module
Sep 06 08:42:33 <dars>	excel4node
Sep 06 08:42:50 <MJCD>	loool
Sep 06 08:42:51 <dars>	schilling writing to the file
Sep 06 08:42:53 <MJCD>	here we go niggler
Sep 06 08:43:00 <MJCD>	excel4node
Sep 06 08:43:01 <MJCD>	kgo
Sep 06 08:43:18 <dars>	tried xlsx too
Sep 06 08:44:13 <dars>	should I move from nodejs to python or is their any way in nodejs to perform this?
Sep 06 08:44:40 <schilling>	dars, first thing I would try is breaking it apart into batches.
Sep 06 08:45:14 <dars>	schilling How would you achieve that?
Sep 06 08:45:29 <schilling>	10 groups of 10k, and maybe take a look at something that will give you some introspection into memory use.
Sep 06 08:46:08 <MJCD>	xdebug
Sep 06 08:46:09 <MJCD>	ftw
Sep 06 08:46:24 <schilling>	I would paginate it off a batch of ids, for starters.
Sep 06 08:46:27 <MJCD>	node.js has its own profiler
Sep 06 08:46:30 <MJCD>	--inspect
Sep 06 08:46:54 <MJCD>	you can also connect it live to chrome[ium] dev tools
Sep 06 08:47:04 <MJCD>	it's in the node documentation under debugging
Sep 06 08:47:22 <schilling>	There's a good starting point too.
Sep 06 08:47:26 <MJCD>	!g site:nodejs.org debugging
Sep 06 08:47:40 <MJCD>	fine, ignore me jellobot
Sep 06 08:47:54 <MJCD>	I will remember ths when you're on your death bed
Sep 06 08:49:14 <dars>	schilling 10k from the database or 10k after recieving it from db. where will you partition?
Sep 06 08:51:09 <schilling>	Either one. For starters, grab a smaller dataset. Just get the top 10 rows. If that writes, go to 5k, 10k, 50k.
Sep 06 08:51:34 <schilling>	I'm suspecting a memory issue here firstly.
Sep 06 08:52:03 <dars>	yeah it is a memory issue
Sep 06 08:52:09 <dars>	imo
Sep 06 08:55:59 <schilling>	Well, confirm it if you can. Add "LIMIT n" clause to your query and see if you can write to a file.
Sep 06 08:56:20 <dars>	Yes I can do that
Sep 06 08:56:58 <schilling>	Once you know that it isn't the node module that's jacking you up, you can start dealing with the memory/batching issue.
Sep 06 08:57:09 <schilling>	Which is usually a good idea anyway...
Sep 06 08:57:35 <deniska>	(don't use limit + offset for pagination though, https://use-the-index-luke.com/sql/partial-results/fetch-next-page )
Sep 06 08:57:36 <dars>	But still what is the best way to perform such kind of tasks? Suppose I want to scale and I need to fetch 1m rows then what is the best way to perform it?
Sep 06 08:58:37 <schilling>	Depends on your system architecture.
Sep 06 08:59:04 <schilling>	Smaller system, smaller batches.
Sep 06 09:00:57 <dars>	Ok
Sep 06 10:20:54 <dostoyevsky>	http://html2canvas.hertzen.com/dist/html2canvas.js <- html2canvas is a HTML parser -> canvas written in JavaScript?
Sep 06 10:29:12 <dostoyevsky>	Seems like all it does is to parse the HMTL and then map each element to a canvas call..
Sep 06 10:29:23 <dostoyevsky>	Still a lot of effort
Sep 06 10:45:29 <MJCD>	hey niggler
Sep 06 10:45:42 <MJCD>	did you help the excel2js or w/e earlier
Sep 06 10:45:43 <MJCD>	lol
Sep 06 10:46:05 <MJCD>	dostoyevsky, that's how you do it
Sep 06 11:17:23 <julius>	hi
Sep 06 11:18:22 <julius>	shouldnt this .change() react to the input?   https://bpaste.net/show/SLNY
Sep 06 11:18:32 <julius>	nothing is printed to the console
Sep 06 11:21:27 <aLeSD>	hi all
Sep 06 11:22:29 <aLeSD>	what if console.log(account.sing) gives me [Function: sign] ... then I do account.sing("ciao") and I got TypeError: account.sing is not a function  ???
Sep 06 12:35:04 <anddam>	howdy
Sep 06 12:35:38 <ashnur>	!load
Sep 06 12:35:38 <ecmabot>	ashnur: The event that fires once the page is completely loaded, to include all linked assets. <https://developer.mozilla.org/en-US/docs/Web/Events/load>
Sep 06 12:35:44 <anddam>	why don't I get any clipboard output from this simple browser extension? https://gist.github.com/anddam/af8b003cb22edc3bd19ff40c4dbc8247
Sep 06 12:35:46 <ashnur>	!onload
Sep 06 12:35:46 <ecmabot>	ashnur: Information about the order and meaning of particular load lifecycle events - see; https://javascript.info/onload-ondomcontentloaded
Sep 06 12:36:12 <anddam>	I tried both synchronous and asynchronous access, in the first case I get an Promise that will never resolve, in the latter I get nothing at all
Sep 06 12:41:24 <ashnur>	anddam: i don't know anything about this but reading the docs it seems to me that the case "doesn't resolve" shouldn't happen?
Sep 06 12:45:49 <anddam>	ashnur: technically it stays in pending state
Sep 06 12:47:19 <anddam>	I followed https://developers.google.com/web/updates/2018/03/clipboardapi I expected the page action to just work
Sep 06 12:53:38 <incognito>	anddam: check your manifest.json, you are missing some parameters according to the last link you sent
Sep 06 12:59:30 <delboy1978uk>	hi everyone o/
Sep 06 13:01:12 <delboy1978uk>	im upgrading a site from PHP5 to PHP7 but it looks like the code i have been given is missing some JS, function not found! I can see a working version of the site on another URL, but how do I use the debugger in Firefox to stop when the onclick is triggered?
Sep 06 13:01:30 <delboy1978uk>	so i can figure out what JS file it actually is
Sep 06 13:03:17 <stennowork>	sup delboy1978uk
Sep 06 13:03:46 <delboy1978uk>	yo stennowork o/
Sep 06 13:03:49 <delboy1978uk>	:-D
Sep 06 13:04:24 <delboy1978uk>	trying to figure out the JS debugger in FF. something ive never got my head round, it alsways seemed to pause when i moved my mouse lol
Sep 06 13:04:42 <stennowork>	in chrome, you can attach breaking points to event listeners
Sep 06 13:06:40 <delboy1978uk>	i have an onclick on a button. how can i get it to pause on that?
Sep 06 13:08:19 <stennowork>	in chrome, i can right-click the button -> inspect element -> and then on the right i have an 'event listeners' tab
Sep 06 13:08:41 <stennowork>	and there i can jump to the place in the code where it is bound and set a breakpoint
Sep 06 13:10:38 <stennowork>	try in this simple example: https://jsfiddle.net/3pxe4at8/ right-click on button -> inspect element -> on the right, tab 'event listeners' -> click -> button will have a link to the code where the handler is added
Sep 06 13:11:15 <stennowork>	and then i can add a break point by clicking the line number in the code window
Sep 06 13:11:22 <stennowork>	in my case, thats line 33
Sep 06 13:12:34 <stennowork>	(thats for chrome, not ff)
Sep 06 13:12:38 <stennowork>	(dunno if ff can do that)
Sep 06 13:12:43 <delboy1978uk>	stennowork thanks will give that a shot after my fag break and i come back with a coffee top up
Sep 06 13:12:53 <stennowork>	good luck!
Sep 06 13:12:54 <delboy1978uk>	i use ff developer edition, it totally rocks
Sep 06 13:12:56 <Kirjava>	stennowork: you can do that in FF too
Sep 06 13:13:18 <stennowork>	kk
Sep 06 13:13:19 <Kirjava>	in fact I prefer FF's version because it can show event callback code inline in the DOM
Sep 06 13:15:31 <delboy1978uk>	stennowork try this https://www.mozilla.org/en-GB/firefox/developer/
Sep 06 13:17:00 <stennowork>	nifty
Sep 06 13:17:33 <DuckHuntDog>	Hi. How would you handle the events for a range input? Some browsers fire the "input" event, some browsers fire the "change" event so I'll need to handle both. But the issue is that when you move a range slider with the mouse - Chrome will fire both events at the same time - and I wanna prevent the same event handler code to execute twice
Sep 06 13:18:13 <stennowork>	should switch to ff again at some point
Sep 06 13:18:18 <DuckHuntDog>	Is there any established solution for mitigating that?
Sep 06 13:19:16 <DuckHuntDog>	I'm thinking maybe I could set a bool during "onmousedown" and use that to detect whether it seems like the user has moved the range input with the mouse, and in that case I will not execute the input "change" event
Sep 06 13:19:27 <DuckHuntDog>	But not quite sure how I'd implement that in a reliable way
Sep 06 13:21:40 <MJCD>	DuckHuntDog, all browsers should handle the click event for it
Sep 06 13:21:45 <MJCD>	thus that's the best way to go
Sep 06 13:21:46 <MJCD>	however
Sep 06 13:21:56 <MJCD>	there's endless range implementations for forms
Sep 06 13:22:01 <MJCD>	especially using a form lib
Sep 06 13:22:05 <MJCD>	which you should be
Sep 06 13:23:47 <stennowork>	why implement range when you have <input type=range>
Sep 06 13:23:59 <MJCD>	because those are rather simplistic
Sep 06 13:24:04 <MJCD>	good for what they are
Sep 06 13:24:26 <MJCD>	but for many many tasks you need something custom
Sep 06 13:24:47 <MJCD>	the same as why not just use <div> when in reality you need to customize it to display/act how you want
Sep 06 13:25:13 <MJCD>	in this case the changes are often so vast that it's less work to just make your OWN range element
Sep 06 13:25:34 <MJCD>	you can always use type="range" and THEN apply your UX to that
Sep 06 13:25:45 <stennowork>	sure
Sep 06 13:25:48 <MJCD>	best of both worlds
Sep 06 13:25:57 <stennowork>	as html isn't concerned with ux anyway
Sep 06 13:28:50 <MJCD>	right
Sep 06 13:28:58 <MJCD>	that's half the reason for this issue persisting
Sep 06 13:34:14 <linuxconformer>	what's the best way of storing state using javascript, specifically about if a user has done an action?
Sep 06 13:34:49 <stennowork>	store for how long?
Sep 06 13:35:02 <stennowork>	page reload? session? persistent between sessions?
Sep 06 13:35:27 <linuxconformer>	stennowork: as long as possible
Sep 06 13:35:39 <stennowork>	sessionstorage then?
Sep 06 13:35:43 <linuxconformer>	great thank you
Sep 06 13:36:17 <stennowork>	localstorage is persistent between sessions so that is even a bit longer
Sep 06 13:36:27 <MJCD>	localstorage is silly
Sep 06 13:36:31 <MJCD>	just go straight to indexeddb
Sep 06 13:36:32 <stennowork>	so use localstorage instead of sessionstorage i guess
Sep 06 13:36:34 <MJCD>	even for cookies
Sep 06 13:36:37 <MJCD>	"cookies"
Sep 06 13:37:00 <MJCD>	localstorage has too many limitations
Sep 06 13:37:08 <MJCD>	and isn't even much faster/lighter than indexeddb
Sep 06 13:37:10 <MJCD>	even for a single record
Sep 06 14:05:17 <ktwo>	hey , is there an ES solution to this problem: Basically i want to append to some functional components a string (e.g. path = "mypath1" ) and use it directly  by calling something like   MyFunctionalClass.path
Sep 06 14:06:15 <stennowork>	whats a functional class
Sep 06 14:06:19 <stennowork>	is that like a pure class?
Sep 06 14:06:46 <ktwo>	oh i dont know if its a standard thing but like this:          export default MyClass;   function MyClass() { .... }
Sep 06 14:06:53 <ktwo>	it's done like this with React functional components
Sep 06 14:08:11 <stennowork>	and you want to call an instance method by name?
Sep 06 14:08:37 <ktwo>	yeah well i just need a string constant  for example         MyClass.path        should give ->  "/mypath"
Sep 06 14:09:06 <stennowork>	myInstance['path']
Sep 06 14:09:32 <stennowork>	n> const obj = {a:1,b:2,c:3}; const attr = 'b'; obj[attr]
Sep 06 14:09:33 <jellobot>	(okay) 2
Sep 06 14:11:51 <ktwo>	when i import the class with    import  MyClass  from './filename'  it seems i don't have an instance yet.. maybe i need to create a fake one.. let's try
Sep 06 14:12:33 <MikeD_>	i don't think you're using 'class' right
Sep 06 14:13:32 <ktwo>	Ok probably i should say function
Sep 06 14:13:34 <ktwo>	since it is one
Sep 06 14:14:30 <ktwo>	Maybe i can explain the problem in a better way: let's say i do have the [f] object available in the console, and if i print it i can actually see the constant i need , but i need a way to access it programmatically
Sep 06 14:14:34 <ktwo>	without parsing that string manually
Sep 06 14:14:56 <MikeD_>	stennowork: just showed that
Sep 06 14:15:40 <ktwo>	tried:  "undefined"
Sep 06 14:16:44 <ktwo>	is there an image upload service i can use here to show you the issue?
Sep 06 14:16:49 <ktwo>	i mean which one is allowed
Sep 06 14:17:15 <avu>	why would you need an image upload service to show us code? :)
Sep 06 14:17:35 <avu>	use bpaste.net or something
Sep 06 14:18:02 <ktwo>	https://pastebin.com/raw/v8biVBHA  this is the console.log out put for what ive tried
Sep 06 14:18:23 <ktwo>	i'm trying to get a const value inside that function
Sep 06 14:19:21 <anddam>	incognito: I added "clipboardRead", "clipboardWrite" to permissions, not sure if that's what you were referring to
Sep 06 14:21:06 <anddam>	delboy1978uk: "fag break"?
Sep 06 14:22:01 <delboy1978uk>	anddam yes fag break. smoking a fag. i realise americans find this humorous :-P
Sep 06 14:22:35 <anddam>	that sounded a bit smokeophobic, yes
Sep 06 14:22:56 <stennowork>	you don't know the expression 'smoking a fag'?
Sep 06 14:23:09 <ktwo>	probably i could use toString() to parse it manually, but that sounds really ugly can't quite believe there is a nicer way ^^
Sep 06 14:28:33 <MJCD>	ktwo, sounds like reflection style nonsense
Sep 06 14:28:38 <MJCD>	which has no place in javascript
Sep 06 14:28:48 <MJCD>	if you really really need
Sep 06 14:28:57 <ktwo>	Yes, but i'd like to do this to avoid a LOT of boilerplate
Sep 06 14:29:09 <MJCD>	thing.prototype.isThing => { return true; }
Sep 06 14:29:23 <MJCD>	if (thing.isThing())
Sep 06 14:29:31 <MJCD>	even as a bool
Sep 06 14:29:42 <MJCD>	where Thing is the classname
Sep 06 14:29:58 <MJCD>	ie the same as array.isArray()
Sep 06 14:30:24 <bberry>	is it a bad idea to store timeout ids in a database?
Sep 06 14:30:29 <MJCD>	there is no reflection in js nor anything similar and attempting to do so using the prototype chain in any way is pure hackery
Sep 06 14:30:38 <MJCD>	bberry, er, not inherently
Sep 06 14:30:46 <bberry>	feel like thats kinda bad just because if/when the app restarts, all that data is kinda useless
Sep 06 14:30:46 <MJCD>	but you know that already
Sep 06 14:31:02 <MJCD>	err no, you use a db specifically so that data is persistant
Sep 06 14:31:07 <MJCD>	regardless of app state
Sep 06 14:31:18 <MJCD>	you restart the app, all the sessions/whatever are still there
Sep 06 14:31:25 <bberry>	yeah but the timeout ids are specific to app state, arent they?
Sep 06 14:31:33 <bberry>	sorry, i mean with respect to setTimeout()
Sep 06 14:31:43 <MJCD>	you wouldn't store the return setTimeout value
Sep 06 14:31:52 <MJCD>	you'd give it a uid
Sep 06 14:32:04 <MJCD>	as part of the datastructure
Sep 06 14:32:21 <anddam>	stennowork: I don't, but I am not an English speaker
Sep 06 14:34:34 <bberry>	hm. so essentialyl im creating a discord bot that applies a "muted" role for a duration.  I store a lot of the data like reason for mute, person muted, person that did the muting, etc in the db.  I was planning on using setTimeout to clear the role when the time is up..but if the moderator wants to cancel it early, im not sure how i would get the timeout id unless it was either in app state or in the db
Sep 06 14:36:50 <bberry>	basically, i need something that will give me an event at a specific time in the future, but is also cancelable.  setTimeout works well, but i gotta have that timeout id accessible.  not sure the "proper" way to store that
Sep 06 14:37:08 <ktwo>	pagesArray[0].toString().match("const path = \"(.*)\"; //#path")[1]     -> i made it like this, kinda ugly but it gets the job done until i find a nicer way
Sep 06 14:38:53 <anddam>	has anyone any insight on why popup.js isn't logging the clipboard value? https://gist.github.com/anddam/af8b003cb22edc3bd19ff40c4dbc8247 gist has updated permissions
Sep 06 14:40:11 <bberry>	MJCD with a uid, how would i cancel the setTimeout? Would i just have a map of the uid <-> timeout ids somewhere?
Sep 06 14:40:52 <Precurz>	Hi, i have been a python developer for few years now, and i wish to get some js skills. Has anyone good resources to check and furthermore get a proper development environement ?
Sep 06 14:40:54 <MJCD>	bberry, timers reset themselves when the page is reloaded, obviously invalidating all existing tracked uid's
Sep 06 14:40:58 <MJCD>	requiring them to be reset
Sep 06 14:41:10 <bberry>	er, this is server side haha
Sep 06 14:41:16 <MJCD>	(obviously, as you are aware)
Sep 06 14:41:28 <MJCD>	makes no difference
Sep 06 14:41:41 <MJCD>	if the process ends; it's timers all get GC'd
Sep 06 14:41:45 <bberry>	yeah for sure
Sep 06 14:41:49 <MJCD>	making those ID's irrelevant
Sep 06 14:41:55 <MJCD>	uid or setTimeout id
Sep 06 14:42:02 <bberry>	i still need to keep the timeout ids *somewhere*
Sep 06 14:42:07 <bberry>	because i need to be able to cancel them
Sep 06 14:42:22 <MJCD>	... the whole point is a db is fine however you need to reset it on hard page reload
Sep 06 14:42:36 <MJCD>	you can use rivets.js to do <=> sync of state
Sep 06 14:42:56 <bberry>	hmm
Sep 06 14:43:19 <MJCD>	ideally i'd store in local indexeddb
Sep 06 14:43:27 <MJCD>	syndicated to the server via rivets automagically
Sep 06 14:43:52 <MJCD>	an onunload page event to clear the server values, send back a response that resets indexeddb
Sep 06 14:43:58 <MJCD>	or the timers table, rather
Sep 06 14:44:23 <MJCD>	not much point in syndicating and handling on the backend to be realistic
Sep 06 14:44:30 <bberry>	haha there is no 'page' in this case
Sep 06 14:44:55 <bberry>	its essentially an IRC bot
Sep 06 14:45:29 <MJCD>	use promises. write to the db the code to reinstantiate the promise(s) set to the same timeframe constraints as a timer
Sep 06 14:45:32 <MJCD>	also
Sep 06 14:45:33 <MJCD>	irc bots
Sep 06 14:45:49 <MJCD>	any bot not written in the below are redundant before they're even started
Sep 06 14:45:51 <MJCD>	!node-red
Sep 06 14:45:51 <ecmabot>	MJCD: node-red (http://nodered.org/) is a visual programming system primarily intended for the 'internet of things'..
Sep 06 14:46:09 <MJCD>	alternatively; https://l.facebook.com/l.php?u=https%3A%2F%2Fwww.pipes.digital%2F%3Ffbclid%3DIwAR3Pq5Nq25dN7j8JxRn9KOpD3HcCXjJElz3Lodc7a0WgU0rIfLPZ3xtvFeg&h=AT1bHlBL8nxURnIg1mW1b8laCkGFWCzYaqP7byM8W0YGGiQ8j_5HxgI5W-97gPNMTes6EGGxzWRrh2xFhPtpgVDf110NahhEni9FkZ3S0BybbHEijD43lGiB9ujWzl1xpzz58w
Sep 06 14:46:11 <MJCD>	errr
Sep 06 14:46:23 <MJCD>	https://www.pipes.digital
Sep 06 14:46:30 <MJCD>	recreation of yahoo pipes
Sep 06 14:46:31 <MJCD>	:D
Sep 06 14:46:38 <MJCD>	both work the same way
Sep 06 14:46:46 <MJCD>	using an xml app "flow"
Sep 06 14:46:50 <MJCD>	and visual editor
Sep 06 14:46:56 <MJCD>	that applies changes in realtime
Sep 06 14:47:11 <MJCD>	with zero bot downtime
Sep 06 14:47:26 <MJCD>	if you google `npm node-red-contrib-`
Sep 06 14:47:42 <MJCD>	you will see there's ready to go drag and drop modules for baaaasically everything you could want
Sep 06 14:48:01 <MJCD>	even for 1 to many or many to 1
Sep 06 14:48:03 <bberry>	heh cute
Sep 06 14:48:18 <MJCD>	not an apt adverb
Sep 06 14:48:25 <MJCD>	very very powerful.
Sep 06 14:48:36 <MJCD>	I mean the xml code flows aren't ideal
Sep 06 14:48:47 <MJCD>	but work fine and are a behind the scenes concern
Sep 06 14:48:59 <MJCD>	it performs very well and scales to thousands of simultaneous users
Sep 06 14:49:07 <MJCD>	also offers its own complete hosting solution
Sep 06 14:49:16 <MJCD>	including as I say hot reload
Sep 06 14:49:36 <bberry>	god i swear ive used something that was node-red before
Sep 06 14:49:39 <bberry>	but i cant remember now :(
Sep 06 14:49:54 <MJCD>	input and output nodes for all major systems/networks with public api's
Sep 06 14:49:59 <MJCD>	just connect the in and out
Sep 06 14:50:01 <MJCD>	and set the config
Sep 06 14:50:04 <bberry>	oh, i remember, it was when i wrote my twitch.tv bot
Sep 06 14:50:08 <MJCD>	sure
Sep 06 14:50:16 <MJCD>	any bot, really
Sep 06 14:50:20 <bberry>	yeye
Sep 06 14:50:27 <MJCD>	many of the modules use websockets even
Sep 06 14:50:33 <MJCD>	webrtc
Sep 06 14:50:37 <MJCD>	all the good stuff
Sep 06 14:50:45 <MJCD>	I know you will reject both out of hand
Sep 06 14:50:49 <MJCD>	because you're you
Sep 06 14:51:07 <MJCD>	regardless there's still endless irc bot codebases
Sep 06 14:51:16 <bberry>	sadly they dont have much for discord afaict
Sep 06 14:51:19 <MJCD>	as its one of the kind of 'trials' programmers tend to go through
Sep 06 14:51:23 <MJCD>	sure they do
Sep 06 14:51:26 <bberry>	at least, thats already done
Sep 06 14:51:31 <MJCD>	!g node-red-contrib-discord
Sep 06 14:51:39 <bberry>	yeah its there, but its super bare bones
Sep 06 14:51:48 <MJCD>	https://flows.nodered.org/node/node-red-contrib-discord
Sep 06 14:51:51 <MJCD>	bam
Sep 06 14:52:00 <MJCD>	discord is an ideal target
Sep 06 14:52:06 <MJCD>	as it as I said has public api's
Sep 06 14:52:31 <bberry>	yeah, its just that that package implements such a tiny amount of discords api :(
Sep 06 14:53:02 <qswz>	https://codesandbox.io/s/form-native-validation-txw2d
Sep 06 14:53:09 <qswz>	Simple form validation
Sep 06 14:53:10 <bberry>	im kinda surprised that someone hasnt done this more fully, discord is such a huge platform
Sep 06 14:53:18 <qswz>	my boss wants to use Formik
Sep 06 14:53:21 <qswz>	no thanks
Sep 06 14:53:38 <MJCD>	bberry, you keep saying that
Sep 06 14:53:40 <qswz>	react-forms, etc... all that is over-engineering
Sep 06 14:53:47 <MJCD>	without specifying what you can't achieve
Sep 06 14:53:49 <MJCD>	that you want to
Sep 06 14:53:58 <bberry>	apply a role to a user
Sep 06 14:54:40 <bberry>	all that that node-red-contrib-discord can do it literally just receive/send messages afaict
Sep 06 14:54:54 <MJCD>	node-red-contrib-acl
Sep 06 14:55:05 <MJCD>	noting that acl handles access control, not roles
Sep 06 14:55:12 <MJCD>	roles are an arbitrary set of access
Sep 06 14:55:21 <MJCD>	easily implemented as a construct
Sep 06 14:55:36 <bberry>	er... roles using discord.js api
Sep 06 14:55:41 <MJCD>	ie you just give users an acl identifier uid
Sep 06 14:55:52 <MJCD>	and that acl is then a set appliable to any user
Sep 06 14:55:56 <MJCD>	once again
Sep 06 14:56:44 <MJCD>	[node-red-contrib-discord].discordClient should make available their user id
Sep 06 14:56:55 <MJCD>	discord also has its own roles
Sep 06 14:57:01 <MJCD>	so that data should be in there
Sep 06 14:57:06 <MJCD>	and assignable via discord client
Sep 06 14:57:39 <MJCD>	All nodes share Discord.js clients based on the discord-token that they were configured with. That means that, when you add many discordMessage nodes configured with the exact same token, only a single connection with Discord will be made.
Sep 06 14:57:56 <MJCD>	so there you go its like discordClient.discordMessage.token
Sep 06 14:57:59 <MJCD>	or somesuch
Sep 06 14:58:12 <MJCD>	as I say not that you will use the thing
Sep 06 14:58:31 <MJCD>	because really you just want me to tell you you are justified to write your own bot
Sep 06 14:58:42 <MJCD>	which you are not
Sep 06 14:58:50 <MJCD>	but can do at your complete discretion
Sep 06 15:01:03 <bberry>	yeah, i mean, i genuinely would consider it if i felt like it was used by major discord bots but it clearly states that it's not built for that.
Sep 06 15:01:23 <qswz>	what's diff between discord and slack?
Sep 06 15:01:45 <bberry>	by its own description, its just used for simple request-reply bots
Sep 06 15:01:51 <stennowork>	i heard slack takes a lot of resources
Sep 06 15:02:29 <qswz>	hope not, I'm running their app all day
Sep 06 15:02:58 <bberry>	qswz: very little tbh in functionality... discord offers a lot for free that slack doesnt.  but the slack paid is a bit more capable than discord.
Sep 06 15:03:56 <bberry>	slack has the whole conversation in a conversation thingy, i forget what thats called... apparently some ppl think its cancer
Sep 06 15:04:10 <MJCD>	slack and discord both have very similar integration api's
Sep 06 15:04:21 <MJCD>	thus why it's so easy to integrate one into the other
Sep 06 15:04:29 <qswz>	it's perfect to lose and forget it quickly
Sep 06 15:04:38 <qswz>	slack is also a pain to search
Sep 06 15:04:48 <MJCD>	slack is just a pain generally
Sep 06 15:04:54 <MJCD>	trello+discord
Sep 06 15:04:55 <MJCD>	ftw
Sep 06 15:05:04 <MJCD>	maybe a bot on discord
Sep 06 15:05:04 <bberry>	my company has been using discord just for us engi's for a while, works well for us
Sep 06 15:05:23 <MJCD>	nobody complained about discord making that comment rather moot
Sep 06 15:05:50 <MJCD>	it's funny that I knew from the moment you spoke you didn't actually want any advice
Sep 06 15:05:51 <bberry>	just sharing lol
Sep 06 15:05:51 <stennowork>	we are using trello here too and its fine
Sep 06 15:05:55 <MJCD>	you wanted validation of your choices
Sep 06 15:06:00 <MJCD>	which is fine
Sep 06 15:06:00 <bberry>	*sigh* i did MJCD
Sep 06 15:06:08 <MJCD>	but no real need to phrase it as a problem
Sep 06 15:06:18 <MJCD>	making us invest time/effort into helping provide solutions
Sep 06 15:06:33 <MJCD>	if you want opinions then say that
Sep 06 15:06:46 <MJCD>	if not; say that
Sep 06 15:06:48 <bberry>	and really, i didnt necessarily want to know how to write a discord bot, i just wanted to know how/if i should store setTimeout ids in a db or app state
Sep 06 15:07:01 <MJCD>	and I answered that
Sep 06 15:07:08 <MJCD>	but you didn't like it or something haha
Sep 06 15:07:20 *	bberry sighs
Sep 06 15:07:32 <MJCD>	just fwiw you can set timers in workers and have them persist intra-page reload
Sep 06 15:07:48 <MJCD>	though the easiest solution is to just load everything via xhr/fetch
Sep 06 15:07:59 <MJCD>	no hard reloads === no timer id loss
Sep 06 15:08:18 <MJCD>	except on page close
Sep 06 15:08:28 <MJCD>	which can be handled using a handler on that
Sep 06 15:08:34 <bberry>	there are no pages. theres no page-reloading or closing
Sep 06 15:08:55 <qswz>	what does codesandbox.io uses for format on save?
Sep 06 15:09:08 <MJCD>	window.addEventListener('unload', (e)=>{ fetch('url.com?unloadTimers'); })
Sep 06 15:09:15 <MJCD>	style thing
Sep 06 15:09:19 <qswz>	I know they use monaco editor, but it's doing a little more
Sep 06 15:09:29 <MJCD>	and then just apply xhr/fetch to all links
Sep 06 15:09:37 <MJCD>	done and done
Sep 06 15:09:40 <MJCD>	use extra time for beer
Sep 06 15:09:52 <cpplearner>	Guys, I want to extract every url in HTML with `page.match(/href="([^"]+)"/g)`. But, each entry also entails `href=` in it. Is therey any neat solution to it?
Sep 06 15:09:53 <qswz>	ah damn, looking at the configurations opts, it seems prettier
Sep 06 15:09:56 <MJCD>	qswz, codesandbox.io integrates vscode directly
Sep 06 15:10:06 <qswz>	disappointed
Sep 06 15:10:07 <MJCD>	jokes on you for having me on ignore
Sep 06 15:10:10 <MJCD>	no answer for you
Sep 06 15:10:27 <MJCD>	and that brings me great joy
Sep 06 15:10:32 <MJCD>	you absolute idiot :)
Sep 06 15:10:38 <qswz>	!regex html
Sep 06 15:10:38 <ecmabot>	qswz: http://stackoverflow.com/questions/1732348/regex-match-open-tags-except-xhtml-self-contained-tags/1732454#1732454
Sep 06 15:10:52 <MJCD>	!tutorial @ qswz
Sep 06 15:10:52 <ecmabot>	qswz: It is HIGHLY recommended that you establish a firm grasp of the core syntax within both JavaScript, HTML, and basic CSS. Before asking any syntax error related questions you can use `!eslint` to detect any contextual errors. A critically acclaimed tutorial is available @ http://eloquentjavascript.net/
Sep 06 15:11:09 <MJCD>	haahaa they can't see who triggered it
Sep 06 15:11:17 <MJCD>	!eloquent @ qswz
Sep 06 15:11:17 <ecmabot>	qswz: Eloquent JavaScript is a comprehensive introductory Web-based book with examples and a built-in interpreter. http://eloquentjavascript.net/
Sep 06 15:11:21 <MJCD>	!books @ qswz
Sep 06 15:11:22 <ecmabot>	qswz: !eloquent (http://eloquentjavascript.net), !ydkjs (https://github.com/getify/You-Dont-Know-JS), JavaScript: The Definitive Guide by David Flanagan, High Performance JavaScript by Nicholas C. Zakas, Effective JavaScript by David Herman, Functional JavaScript by Michael Fogus, Programming JavaScript Applications by Eric Elliott.
Sep 06 15:11:27 <MJCD>	!ask @ qswz
Sep 06 15:11:28 <ecmabot>	qswz: Don't ask to ask, nor if anyone is here or alive or uses something. Just ask your question. http://www.mikeash.com/getting_answers.html http://www.catb.org/esr/faqs/smart-questions.html https://jvns.ca/blog/good-questions/
Sep 06 15:11:29 <qswz>	what idiot is sending me those facts?
Sep 06 15:11:37 <MJCD>	your "mom"
Sep 06 15:11:58 <MJCD>	!snip deepClone @ qswz
Sep 06 15:11:58 <ecmabot>	|>function deepClone(o,i){i=Array.isArray(o)?[]:{};return Object.keys(o).reduce(function(a,k,x){return x=o[k],a[k]=typeof x==\"object\"?deepClone(x):x,a},i)}; @qswz
Sep 06 15:12:10 <qswz>	someone forgot his drugs
Sep 06 15:12:48 <MJCD>	>> deepClone({ 'you are an idiot': true });
Sep 06 15:12:48 <ecmabot>	MJCD: SyntaxError: illegal character
Sep 06 15:13:00 <MJCD>	u wot
Sep 06 15:13:17 <MJCD>	what's illegal there
Sep 06 15:14:00 <cpplearner>	Perl's `g` flag doesn't collect non-parenthesized parts, but it seems Javascript does... =/
Sep 06 15:14:19 <qswz>	nope, it doesn't
Sep 06 15:14:31 <qswz>	except if using .exec or .matchAll
Sep 06 15:15:09 <MJCD>	cpplearner, check this out
Sep 06 15:15:12 <MJCD>	!regex101
Sep 06 15:15:12 <ecmabot>	MJCD: https://regex101.com is a tool for playing with regular expressions of various engines against a given set of data to see the results live
Sep 06 15:15:25 <MJCD>	nb: see the language options on the left hand side
Sep 06 15:15:40 <MJCD>	and also the contribution/sharing tabs
Sep 06 15:15:53 <MJCD>	with regex's vetted by the community for most anything/everything
Sep 06 15:15:55 <MJCD>	same with regexr
Sep 06 15:16:14 <MJCD>	and testable in different languages with a single click
Sep 06 15:16:26 <MJCD>	to compare differences
Sep 06 15:16:47 <MJCD>	also hover nearly any symbol to get a description of that in the current language/context
Sep 06 15:17:13 <zzarr>	hello!
Sep 06 15:17:35 <zzarr>	I'm trying to understand how modules work
Sep 06 15:19:27 <qswz>	why can't I use setCustomValidity in the form submit event handler?
Sep 06 15:19:29 <qswz>	too late?
Sep 06 15:19:37 <qswz>	just before e.preventDefault()
Sep 06 15:20:11 <zzarr>	in the tutorial for Chart.js they have a tag <script src="<path/to/>Chart.min.js"></script> then they create a chart like this var myChart = new Chart(context, config);
Sep 06 15:21:46 <zzarr>	but, when I download the Chart.bundle.js file (not the "min" version) I don't understand how to get the Chart constructor from it
Sep 06 15:22:56 <qswz>	try window.Chart
Sep 06 15:22:56 <zzarr>	I'm trying to include the Chart js graph engine in a Qt-project using QJSEngine
Sep 06 15:23:15 <zzarr>	okey, there's where it's at :)
Sep 06 15:23:24 <zzarr>	will try, thanks
Sep 06 15:25:33 <zzarr>	nice, thanks :D
Sep 06 15:26:52 <qswz>	Does react-hook works with DOM element ref?
Sep 06 15:27:21 <MJCD>	qswz, react web hooks work with web events
Sep 06 15:27:27 <MJCD>	not sure what you mean beyond that
Sep 06 15:27:29 <qswz>	hmm useREf
Sep 06 15:27:31 <stennowork>	eww refs
Sep 06 15:27:37 <MJCD>	:/
Sep 06 15:27:43 <MJCD>	eww 60% of js
Sep 06 15:27:48 <MJCD>	:/
Sep 06 15:27:49 <qswz>	it's for gtml5 validation
Sep 06 15:27:50 <qswz>	legit
Sep 06 15:28:09 <MJCD>	legit using a premade thing
Sep 06 15:28:14 <MJCD>	impressive
Sep 06 15:36:00 <graingert>	!no var @ zzarr
Sep 06 15:36:01 <ecmabot>	zzarr: `var` defines a variable in the current function-level scope, and should not be used when `const` or `let` are available (see !babel, !const, and !let). Always use a keyword to declare variables, otherwise you will pollute the global scope (a keyword is required in strict mode).
Sep 06 15:36:33 <graingert>	zzarr: I'd go for https://vx-demo.now.sh/ for all your charting needs
Sep 06 15:36:59 <graingert>	zzarr: avoid loading 3rd party deps with <script> use webpack or parcel and import it from npm packages
Sep 06 15:37:05 <zzarr>	thanks graingert, but I have sloved the problem now
Sep 06 15:37:13 <stennowork>	!no god no masters
Sep 06 15:37:17 <stennowork>	:/
Sep 06 15:37:20 <graingert>	yeah but you should use webpack anyway zzarr
Sep 06 15:37:30 <graingert>	and eslint airbnb
Sep 06 15:37:34 <graingert>	!airbnb @ zzarr
Sep 06 15:37:34 <ecmabot>	zzarr: We tend to support airbnb's javascript style guide - it can be found here: https://github.com/airbnb/javascript you can enforce it in eslint with `npx install-peerdeps --dev eslint-config-airbnb-base && echo '{"extends": "airbnb-base"}' > .eslintrc` see also !eslint
Sep 06 15:37:40 <zzarr>	okey
Sep 06 15:37:50 <graingert>	no god no masters no var stennowork
Sep 06 15:37:57 <stennowork>	word
Sep 06 15:38:11 <stennowork>	no for loops
Sep 06 16:42:16 *	Disconnected ()
**** ENDING LOGGING AT Fri Sep  6 16:42:16 2019

**** BEGIN LOGGING AT Fri Sep  6 16:42:40 2019

Sep 06 16:42:40 *	Now talking on ##javascript
Sep 06 16:42:40 *	Topic for ##javascript is: JavaScript is *not* Java. | Just ask your question. | Say "!mdn abc" for docs on "abc". | Don't paste code in the channel. | Can't talk? Get registered on freenode ( https://git.io/vaTS2 )
Sep 06 16:42:40 *	Topic for ##javascript set by niggler!~niggler@unaffiliated/niggler (Tue Jan 15 07:16:23 2019)
Sep 06 16:45:52 <horribleprogram>	So implicit conversion gotta be the most complicated in JS
Sep 06 16:46:27 <horribleprogram>	so obivously "" + x does either "" + x.toString() or "" + String(x), but like other things
Sep 06 16:46:39 <horribleprogram>	Is there some sort of implicit conversion table
Sep 06 16:47:10 <qswz>	the spec
Sep 06 16:47:42 <horribleprogram>	ECMAScript Language Specification?
Sep 06 16:47:52 <qswz>	n> [2+'3', '2'+3]
Sep 06 16:47:53 <jellobot>	(okay) [ '23', '23' ]
Sep 06 16:48:09 <qswz>	yes
Sep 06 16:48:24 <horribleprogram>	yeah that's the easiest implicit conversion, because a string as an operand turns the other thing to a string
Sep 06 16:48:50 <horribleprogram>	but I'm trying to find the newest Language spec on ecma-international.org
Sep 06 16:49:59 <qswz>	search for addition operator
Sep 06 16:50:18 <horribleprogram>	:S
Sep 06 16:50:22 <horribleprogram>	I'll try :)
Sep 06 16:51:35 <qswz>	section 12.8.3
Sep 06 16:52:14 <horribleprogram>	perfect, ty
Sep 06 16:54:05 <stennowork>	horribleprogram, also consider that '+' has at least 3 meanings in javascript: firstly, unary '+' converts the operand to string, then binary '+' adds Numbers, but also binary '+' concatenates strings
Sep 06 16:54:49 <qswz>	the last 2 are the same imo
Sep 06 16:54:50 <systemfault>	converts the operand to "number", no?
Sep 06 16:54:51 <horribleprogram>	unary + converts to number
Sep 06 16:54:59 <stennowork>	er yes
Sep 06 16:55:01 <stennowork>	of course
Sep 06 16:55:02 <horribleprogram>	n> var a = "3"; +a
Sep 06 16:55:03 <jellobot>	(okay) 3
Sep 06 16:55:12 <stennowork>	unary +
Sep 06 16:55:15 <qswz>	n> +'0x10'
Sep 06 16:55:16 <jellobot>	(okay) 16
Sep 06 16:55:27 <stennowork>	qswz, how are the last two the same?
Sep 06 16:55:30 <qswz>	n> +'0b10'
Sep 06 16:55:32 <jellobot>	(okay) 2
Sep 06 16:55:41 <qswz>	stennowork: https://www.ecma-international.org/ecma-262/#sec-addition-operator-plus
Sep 06 16:55:57 <qswz>	it handles both numbers and strings
Sep 06 16:56:15 <stennowork>	hmm i have to admit i wasn't aware of that
Sep 06 16:56:24 <stennowork>	i thought they had two seperate definitions for numbers and strings
Sep 06 16:56:30 <horribleprogram>	they do
Sep 06 16:56:35 <horribleprogram>	addition operator, concatenation operator
Sep 06 16:56:45 <horribleprogram>	called operator overloading
Sep 06 16:56:48 <qswz>	sort of
Sep 06 16:56:53 <stennowork>	no - its both specced in the 'addition operator'
Sep 06 16:57:06 <qswz>	check the 7.c tho
Sep 06 16:57:17 <qswz>	Return the string-concatenation of lstr and rstr.
Sep 06 16:57:32 <qswz>	which is something wuite complex
Sep 06 16:57:40 <qswz>	if you click on that term
Sep 06 16:59:05 <horribleprogram>	When you say 7.c
Sep 06 16:59:24 <horribleprogram>	what exactly are you referring to
Sep 07 11:05:28 *	Disconnected ()
**** ENDING LOGGING AT Sat Sep  7 11:05:28 2019

**** BEGIN LOGGING AT Sat Sep  7 11:05:51 2019

Sep 07 11:05:51 *	Now talking on ##javascript
Sep 07 11:05:51 *	Topic for ##javascript is: JavaScript is *not* Java. | Just ask your question. | Say "!mdn abc" for docs on "abc". | Don't paste code in the channel. | Can't talk? Get registered on freenode ( https://git.io/vaTS2 )
Sep 07 11:05:51 *	Topic for ##javascript set by niggler!~niggler@unaffiliated/niggler (Tue Jan 15 07:16:23 2019)
Sep 07 11:09:02 <niggler>	you can manually change the settings
Sep 07 11:09:10 <niggler>	im actually going over those now lol
Sep 07 11:09:28 <niggler>	trying to derisk the single points of failure :/
Sep 07 11:10:16 <MJCD>	i'm having to clean it all up
Sep 07 11:10:25 <MJCD>	it replicated over all cpanel bullshit etc
Sep 07 11:10:37 <MJCD>	and then apparently I do have to update all the ip records manually
Sep 07 11:10:38 <niggler>	ah
Sep 07 11:10:39 <MJCD>	wop wop
Sep 07 11:10:41 <niggler>	:/
Sep 07 11:11:12 <niggler>	ugh want to restart this server
Sep 07 11:11:13 <niggler>	 09:10:58 up 543 days, 18:02,  3 users,  load average: 0.00, 0.00, 0.00
Sep 07 11:11:17 <MJCD>	apparently cloudflare allows upto 3500 records
Sep 07 11:11:22 <MJCD>	of 1000 characters or less
Sep 07 11:11:28 <niggler>	but like most of the business runs off of that, so i have no clue what type of damage that'll cause
Sep 07 11:11:32 <MJCD>	and is the fastest dns in the world
Sep 07 11:11:35 <MJCD>	apparently
Sep 07 11:11:38 <MJCD>	so
Sep 07 11:11:43 <MJCD>	why am I not storing data in there
Sep 07 11:11:45 <MJCD>	lol
Sep 07 11:11:46 <niggler>	its probably the fastest because of the character cap
Sep 07 11:11:50 <MJCD>	small snippets
Sep 07 11:12:02 <MJCD>	35000 is a lot of characters
Sep 07 11:12:04 <MJCD>	lol
Sep 07 11:12:21 <MJCD>	that could be a small page
Sep 07 11:12:24 <MJCD>	imagine that
Sep 07 11:12:26 <MJCD>	no httpd
Sep 07 11:12:34 <MJCD>	just a text dns record
Sep 07 11:14:03 <MJCD>	ahhh there we go, cleaned up to 3 records; A, CNAME, MX
Sep 07 11:14:07 <niggler>	hmm how do you derisk a phone number / service provider
Sep 07 11:14:14 <MJCD>	derisk ?
Sep 07 11:14:21 <niggler>	like if something happens
Sep 07 11:14:41 <MJCD>	phonelines etc are pooled using telephony hardware and treated as redundant
Sep 07 11:14:51 <MJCD>	I used to work in telephony
Sep 07 11:15:01 <MJCD>	it was awful
Sep 07 11:15:07 <niggler>	so registering another line with another provider probably doesn't give hot swappability
Sep 07 11:15:12 <niggler>	well, you could just give people both numbers
Sep 07 11:15:19 <MJCD>	you ideally want them all with the same provider
Sep 07 11:15:20 <niggler>	but it wouldn't solve the problem of people tryign to call the main line
Sep 07 11:15:32 <MJCD>	the provider implements the redundancy past the point of your premise
Sep 07 11:15:36 <niggler>	physical address is not much of a concern
Sep 07 11:15:38 <MJCD>	you just pool both lines
Sep 07 11:15:44 <MJCD>	in our case probably using SIP
Sep 07 11:15:50 <MJCD>	asterisk and the likes
Sep 07 11:16:05 <niggler>	you use stripe or some other service to accept CC payments?
Sep 07 11:16:17 <MJCD>	paypal
Sep 07 11:16:30 <niggler>	how easy/hard is it to get started
Sep 07 11:16:30 <MJCD>	fees are high because their insurance is robust
Sep 07 11:16:46 <MJCD>	easy to get started, hard to get all setup as a business account
Sep 07 11:16:51 <MJCD>	lots of regulatory requirements
Sep 07 11:16:53 <niggler>	sure, its supposed to be a backu
Sep 07 11:16:59 <MJCD>	to what
Sep 07 11:17:09 <niggler>	to something happening with stripe
Sep 07 11:17:19 <MJCD>	if anything paypal is the primary, taking credit card directly is the redundancy
Sep 07 11:17:34 <niggler>	heh
Sep 07 11:17:35 <MJCD>	stripe are fine
Sep 07 11:17:40 <MJCD>	largely interchangable for paypal
Sep 07 11:17:48 <MJCD>	one or the other
Sep 07 11:18:27 <niggler>	mail probably should use gapps
Sep 07 11:19:26 <MJCD>	remember if you don't want to pay
Sep 07 11:19:47 <MJCD>	people can set up a custom domain/address to send as in gmail
Sep 07 11:20:00 <niggler>	nah id rather just pay
Sep 07 11:20:11 <MJCD>	it's a bit more convienient than having to have a separate tab is the main thing
Sep 07 11:20:13 <niggler>	zoho has a proper free tier
Sep 07 11:20:16 <MJCD>	you just have 1 gmail
Sep 07 11:20:23 <MJCD>	multiple accounts routing in and out
Sep 07 11:20:26 <niggler>	which is what im currently using, but it sucks
Sep 07 11:20:38 <MJCD>	ehh just run a mailserver
Sep 07 11:20:43 <MJCD>	postfix+any webmail
Sep 07 11:20:45 <niggler>	that has its own risks
Sep 07 11:20:56 <MJCD>	everything has its own risks
Sep 07 11:21:02 <MJCD>	that doesn't mean you shouldn't do it
Sep 07 11:21:04 <MJCD>	in the end of the day
Sep 07 11:21:08 <MJCD>	there will be a server somewhere
Sep 07 11:21:15 <MJCD>	that server, whether you run it or someone else
Sep 07 11:21:19 <niggler>	understood
Sep 07 11:21:22 <MJCD>	is exposed to risk unless it's entirely private
Sep 07 11:21:35 <MJCD>	thus it is not a very good basis on which to pay for a service
Sep 07 11:21:42 <MJCD>	unless naturally they give you a SLA
Sep 07 11:22:06 <niggler>	so the hope is paying gapps would give an SLA
Sep 07 11:22:21 <MJCD>	well I mean
Sep 07 11:22:27 <MJCD>	I don't think they do tbh
Sep 07 11:22:33 <MJCD>	without gapps enterprise
Sep 07 11:22:41 <MJCD>	an entirely different service
Sep 07 11:22:47 <MJCD>	with private instances of gapps services
Sep 07 11:23:11 <MJCD>	gapps itself's uptime record is a good indication that you don't really need to worry
Sep 07 11:23:22 <MJCD>	however I too have had a mailserver up for like 8 years
Sep 07 11:23:30 <MJCD>	I took it down once for an update so my record is like 98%
Sep 07 11:23:31 <MJCD>	lol
Sep 07 11:24:26 <MJCD>	as the disclaimer on all investment product ads
Sep 07 11:24:43 <MJCD>	"Past results are not indicative of future results"
Sep 07 11:25:10 <MJCD>	not that I think people are routinely causing widespread chaos for gapps
Sep 07 11:25:15 <MJCD>	isolated chaos, sometimes
Sep 07 11:25:31 <MJCD>	which brings down odd groupings of sites and stuff which is always fun to observe
Sep 07 11:25:50 <MJCD>	like when 3 major sites go down at once
Sep 07 11:26:02 <MJCD>	but the rest of their millions of services remain unaffected
Sep 07 11:26:30 <MJCD>	hardware firewalls and virtualization and instancing are all beautiful things
Sep 07 11:27:10 <niggler>	yeah im trying to get there too
Sep 07 11:27:15 <niggler>	as opposed to this jerryrigged setup
Sep 07 11:27:37 <niggler>	so the npm redundancy plan is an rsync of config and modules to another server lol
Sep 07 11:33:59 <MJCD>	haha yeah that's alright as long as the SOE (software operating environment including OS) matches
Sep 07 11:34:12 <MJCD>	puppet is very very powerful
Sep 07 11:34:29 <MJCD>	I mean I don't use it because it's very complicated for simple tasks imo
Sep 07 11:34:30 <niggler>	so verdaccio managed not to move fast and break things across two major versions
Sep 07 11:34:34 <MJCD>	but powerful none the less
Sep 07 11:34:44 <niggler>	the same configs and everything just work when migrating from v2 to v4
Sep 07 11:34:53 <MJCD>	cloudflare hasn't ttl'd my dns records yet :(
Sep 07 11:34:59 <MJCD>	its been like 10 mins
Sep 07 11:35:00 <niggler>	doesnt it usually take a few hours?
Sep 07 11:35:02 <MJCD>	im using google dns
Sep 07 11:35:09 <MJCD>	nah default ttl is 5 mins
Sep 07 11:35:12 <MJCD>	according to docs
Sep 07 11:35:30 <MJCD>	and should be replicating to google dns pretty asap
Sep 07 11:35:37 <MJCD>	because that's what goog dns likes
Sep 07 11:35:53 <MJCD>	I wonder why goog dont offer a cloudflare style service
Sep 07 11:35:55 <MJCD>	for free
Sep 07 11:36:33 <niggler>	is there a business therE?
Sep 07 11:37:03 <MJCD>	well evidently given nearly everyone uses cloudflare
Sep 07 11:37:05 <MJCD>	no reason not to
Sep 07 11:37:14 <MJCD>	beats using shit and varying registrar management tools
Sep 07 11:37:26 <MJCD>	and provides inherent benefits to boot
Sep 07 11:38:33 <MJCD>	I wonder if there's a force update button
Sep 07 11:38:52 <MJCD>	they give me this setup advice too
Sep 07 11:38:53 <MJCD>	"Make sure all A, AAAA, and CNAME records pointing to proxied records are also proxied to avoid exposing your origin IP."
Sep 07 11:39:01 <niggler>	its probably cheaper for google toh ave someone else worry about it
Sep 07 11:39:05 <MJCD>	like um, i'm reverse proxying the thing on the thing
Sep 07 11:39:08 <niggler>	also less risk of anti-trust
Sep 07 11:39:15 <MJCD>	why do I need a second primary instance
Sep 07 11:39:20 <MJCD>	like its MEANT to be public
Sep 07 11:39:23 <MJCD>	it's a WEBSITE
Sep 07 11:39:24 <MJCD>	xD
Sep 07 11:39:34 <niggler>	"to avoid exposing your origin IP"
Sep 07 11:40:08 <MJCD>	yeah so i'm supposed to do node=>reverse proxy to httpd=>proxied to httpd on different ip
Sep 07 11:40:17 <MJCD>	involving 2 instances
Sep 07 11:40:27 <MJCD>	seems way overkill
Sep 07 11:40:33 <MJCD>	like it's already reverse proxied
Sep 07 11:40:38 <MJCD>	and under cloudflare
Sep 07 11:41:04 <MJCD>	a complete extra httpd server with its own ip seems silly
Sep 07 11:42:16 <MJCD>	HTTP Strict Transport Security (HSTS) can substantially improve the security of your website
Sep 07 11:42:22 <MJCD>	huh, I wasn't aware of that tech
Sep 07 11:44:03 <MJCD>	sweet, enabled so many different thingies just in 1 tab
Sep 07 11:44:11 <MJCD>	so much encryption
Sep 07 11:44:14 <MJCD>	so little time
Sep 07 11:44:41 <MJCD>	rate limiting is paid
Sep 07 11:44:44 <MJCD>	that seems odd
Sep 07 11:45:04 <MJCD>	like "sorry you have to pay to not let cloudflare have to handle unlimited requests"
Sep 07 11:45:16 <MJCD>	"even if you firewall it off on your server"
Sep 07 11:45:24 <MJCD>	like, k
Sep 07 11:45:24 <niggler>	they have to monetize somehow, its 2019
Sep 07 11:45:38 <MJCD>	I mean there's good paid services
Sep 07 11:45:40 <MJCD>	in ehre
Sep 07 11:45:41 <MJCD>	here
Sep 07 11:45:55 <MJCD>	that's just on that would be mutually beneficial
Sep 07 11:46:02 <MJCD>	if anything pay to disable it
Sep 07 11:46:12 <MJCD>	allowing very fast request speeds
Sep 07 11:46:29 <MJCD>	but, not my monkey
Sep 07 11:46:42 <MJCD>	I hate not being an idiot
Sep 07 11:46:54 <MJCD>	like that sounds stupid
Sep 07 11:47:04 <MJCD>	but I wish I were just like.. average
Sep 07 11:47:14 <MJCD>	ignorant to half the things going on around me
Sep 07 11:47:47 <MJCD>	the fuck is this "Access" shit
Sep 07 11:47:56 <MJCD>	paid connectivity to... social media?
Sep 07 11:47:58 <MJCD>	for my dns?
Sep 07 11:48:03 <MJCD>	why would I possibly want that
Sep 07 11:48:37 <MJCD>	"Access protects internal resources by authenticating against identity providers you already use. With Access, you can control which users and groups can reach sensitive materials without a VPN or making code changes to your site."
Sep 07 11:48:43 <MJCD>	so it's some oauth2 thing
Sep 07 11:48:47 <MJCD>	but how, why
Sep 07 11:48:50 <MJCD>	to what benefit :|
Sep 07 11:49:24 <MJCD>	Image Resizing seems like an application level concern
Sep 07 11:49:37 <MJCD>	not something i'd want my DNS provider to handle even if I did want it
Sep 07 11:49:44 <MJCD>	as that means sending the whole image to cloudflare
Sep 07 11:49:51 <MJCD>	every time potentially
Sep 07 11:50:43 <MJCD>	auto-minify could be cool but once again not something I a) want to be "automagically" applied to all requests, b) once again not on the dns provider -_-
Sep 07 11:51:01 <MJCD>	that's a freebie though so can't complain
Sep 07 11:51:12 <MJCD>	Brotli
Sep 07 11:51:12 <MJCD>	Speed up page load times for your visitor’s HTTPS traffic by applying Brotli compression.
Sep 07 11:51:17 <MJCD>	da fucc is that
Sep 07 11:51:43 <MJCD>	https://blog.cloudflare.com/results-experimenting-brotli/
Sep 07 11:53:12 <MJCD>	"The current state of Brotli gives us some mixed impressions. There is no yes/no answer to the question "Is Brotli better than gzip?". It definitely looks like a big win for static content compression, but on the web where the content is dynamic we also need to consider on-the-fly compression."
Sep 07 11:53:17 <MJCD>	!brotli
Sep 07 11:53:35 <MJCD>	!learn brotli=The current state of Brotli gives us some mixed impressions. There is no yes/no answer to the question "Is Brotli better than gzip?". It definitely looks like a big win for static content compression, but on the web where the content is dynamic we also need to consider on-the-fly compression. More @ https://blog.cloudflare.com/results-experimenting-brotli/
Sep 07 11:53:35 <ecmabot>	MJCD: Learned `brotli`.
Sep 07 11:53:46 <MJCD>	!learn alias brotli compression=brotli
Sep 07 11:53:46 <ecmabot>	MJCD: Learned `brotli compression` => `brotli`.
Sep 07 11:53:52 <MJCD>	!cloudflare
Sep 07 11:55:00 <MJCD>	!learn cloudflare=Cloudflare is a web infrastructure and website security company, providing content delivery network services, DDoS mitigation, Internet security, and distributed domain name server services. More @ https://support.cloudflare.com
Sep 07 11:55:00 <ecmabot>	MJCD: Learned `cloudflare`.
Sep 07 11:55:19 <MJCD>	!ttl
Sep 07 11:55:58 <MJCD>	!learn ttl=Time To Live, a mechanism for setting an expiration time on content - especially where caching is involved
Sep 07 11:55:58 <ecmabot>	MJCD: Learned `ttl`.
Sep 07 11:56:05 <MJCD>	!soe
Sep 07 11:56:22 <MJCD>	!learn soe=Software operating environment - inclusive of operating system
Sep 07 11:56:22 <ecmabot>	MJCD: Learned `soe`.
Sep 07 11:56:57 <MJCD>	it's funny that nobody in #web-social is in any other channel
Sep 07 11:57:06 <MJCD>	except #web
Sep 07 11:57:11 <MJCD>	and even then often not
Sep 07 11:57:21 <MJCD>	total rejects refuge lol
Sep 07 11:58:05 <MJCD>	"Enhanced HTTP/2 Prioritization"
Sep 07 11:58:09 <MJCD>	Now there's a product
Sep 07 11:58:12 <MJCD>	"TCP Turbo"
Sep 07 11:58:31 <MJCD>	why are they hiding their good things like 3 tabs deep
Sep 07 11:58:36 <MJCD>	and pushing shit
Sep 07 11:58:44 <niggler>	pretty sure they arent free
Sep 07 11:58:44 <MJCD>	that really isn't at all related to dns
Sep 07 11:58:51 <MJCD>	right, they are paid
Sep 07 11:58:58 <MJCD>	and services that youd be rightful to pay for
Sep 07 11:59:04 <MJCD>	to a dns provider
Sep 07 11:59:20 <MJCD>	Mirage
Sep 07 11:59:20 <MJCD>	Improve load time for pages that include images on mobile devices with slow network connections.
Sep 07 11:59:30 <MJCD>	no details of how it actually does that
Sep 07 11:59:35 <MJCD>	id assume as bundling it
Sep 07 11:59:48 <MJCD>	even the images, into a single file
Sep 07 11:59:58 <MJCD>	"Rocket Loader™
Sep 07 11:59:58 <MJCD>	Improve the paint time for pages that include Javascript."
Sep 07 12:00:12 <MJCD>	all of this is all hidden away at the very bottom of page 3 of a tab
Sep 07 12:00:17 <MJCD>	lol
Sep 07 12:00:20 <MJCD>	silly gooses
Sep 07 12:00:29 <MJCD>	Railgun™
Sep 07 12:00:29 <MJCD>	Accelerate delivery of dynamic content.
Sep 07 12:00:47 <MJCD>	AMP Real URL
Sep 07 12:00:47 <MJCD>	Display your site’s actual URL on your AMP pages, instead of the traditional Google AMP cache URL.
Sep 07 12:00:52 <MJCD>	the fuck is AMP
Sep 07 12:01:08 <MJCD>	https://amp.dev/
Sep 07 12:01:12 <MJCD>	random
Sep 07 12:02:00 <MJCD>	apparently a google framework
Sep 07 12:02:05 <MJCD>	from what their text said
Sep 07 12:02:36 <MJCD>	https://amp.dev/support/faq/platform-and-vendor-partners/
Sep 07 12:02:43 <MJCD>	they carefully avoid saying google anywhere tho
Sep 07 12:02:46 <MJCD>	curious
Sep 07 12:03:39 <MJCD>	ohhh
Sep 07 12:03:48 <MJCD>	it's accellerated mobile pages - a technology
Sep 07 12:04:19 <MJCD>	!learn AMP=Accelerated Mobile Pages (“AMP”) Project is an open source initiative that came out of discussions between publishers and technology companies about the need to improve the entire mobile content ecosystem for everyone. More @ https://amp.dev/
Sep 07 12:04:19 <ecmabot>	MJCD: Learned `AMP`.
Sep 07 12:04:42 <MJCD>	goodness i'm learning about a lot of thingies
Sep 07 12:05:08 <MJCD>	seems pretty um, convoluted
Sep 07 12:05:15 <MJCD>	once again not something I want automagic'd
Sep 07 12:05:31 <MJCD>	there's an alternative option to just redirect mobile visitors to a subdomain
Sep 07 12:05:38 <MJCD>	which i'd give a bundle built a certain way
Sep 07 12:05:45 <MJCD>	same/same, no automagic
Sep 07 12:06:52 <MJCD>	Workers
Sep 07 12:06:53 <MJCD>	Run JavaScript Service Workers in hundreds of Cloudflare data centers around the world. Modify a site’s HTTP requests and responses, make parallel requests, or generate responses from the edge.
Sep 07 12:06:53 <MJCD>	Trigger Workers on your website by specifying which routes they execute on.
Sep 07 12:06:59 <MJCD>	that's interesting
Sep 07 12:07:40 <MJCD>	and they have a live editor showing the effect it has on your site haha
Sep 07 12:07:47 <MJCD>	and is free seemingly
Sep 07 12:08:20 <MJCD>	lets see how it likes `while (true) { 1+1 }`
Sep 07 12:09:44 <MJCD>	in the editor it just runs in the browser :(
Sep 07 12:09:56 <MJCD>	but in theory that will now run every time someone fetches my page
Sep 07 12:10:02 <MJCD>	in their cloud workers
Sep 07 12:10:02 <MJCD>	lel
Sep 07 12:10:24 <MJCD>	seems to timeout after maybe 2 seconds
Sep 07 12:10:29 <MJCD>	so not that risky for them I guess
Sep 07 12:11:26 <BeerLover>	Given 2 integers A and B, find X such that A xor X is smallest and number of set bits in X == number of set bits in B
Sep 07 12:11:29 <MJCD>	!http2
Sep 07 12:11:29 <ecmabot>	MJCD: a newer version of HTTP. See https://medium.com/webpack/webpack-http-2-7083ec3f3ce6 to optimise with webpack
Sep 07 12:11:35 <BeerLover>	Any ideas on how to go about it?
Sep 07 12:11:35 <MJCD>	!http/2
Sep 07 12:11:44 <MJCD>	!learn alias http/2=http2
Sep 07 12:11:44 <ecmabot>	MJCD: Learned `http/2` => `http2`.
Sep 07 12:12:03 <MJCD>	BeerLover, no homework :P
Sep 07 12:12:17 <MJCD>	!http2
Sep 07 12:12:18 <ecmabot>	MJCD: a newer version of HTTP. See https://medium.com/webpack/webpack-http-2-7083ec3f3ce6 to optimise with webpack
Sep 07 12:12:19 <MJCD>	err
Sep 07 12:12:22 <MJCD>	!http3
Sep 07 12:12:45 <MJCD>	!learn http3=HTTP/3 accelerates HTTP requests by using QUIC, which provides encryption and performance improvements compared to TCP and TLS.
Sep 07 12:12:45 <ecmabot>	MJCD: Learned `http3`.
Sep 07 12:12:51 <MJCD>	!learn alias http/3=http3
Sep 07 12:12:51 <ecmabot>	MJCD: Learned `http/3` => `http3`.
Sep 07 12:13:41 <niggler>	n> var http = 2; http/3
Sep 07 12:13:42 <jellobot>	(okay) 0.6666666666666666
Sep 07 12:13:50 <niggler>	mark of the fractional devil
Sep 07 12:14:58 <MJCD>	hahah
Sep 07 12:15:40 <MJCD>	hm using cloudflare free inherently limits all uploads to 100mb somehow
Sep 07 12:15:40 <MJCD>	:/
Sep 07 12:15:46 <MJCD>	that's a bit arbitrary
Sep 07 12:17:00 <MJCD>	"Stream is a video platform for developers. Upload a video and Cloudflare will encode, process and deliver it on all browsers and devices.
Sep 07 12:17:01 <MJCD>	Every 1,000 minutes viewed costs $1 per month. Each 1,000 minutes of video stored costs $5 per month."
Sep 07 12:17:05 <MJCD>	that's pretty good
Sep 07 12:17:33 <MJCD>	!learn WAF=Web Application Firewall
Sep 07 12:17:33 <ecmabot>	MJCD: Learned `WAF`.
Sep 07 12:19:34 <MJCD>	hooray it finally ttl'd
Sep 07 12:19:45 <MJCD>	new provider on the online :D
Sep 07 12:20:33 <MJCD>	now wtf is my username :D
Sep 07 12:21:16 <niggler>	lol
Sep 07 12:21:30 <niggler>	new business: business in a box
Sep 07 12:22:09 <niggler>	so many random moving parts, kinda wish there was a single solution that covered everything
Sep 07 12:25:09 <MJCD>	niggler, that's essentially what my company does
Sep 07 12:25:12 <MJCD>	:)
Sep 07 12:25:14 <MJCD>	we have um
Sep 07 12:26:40 <MJCD>	18 startups we term as "seeds"
Sep 07 12:27:03 <MJCD>	and our actual business is to get those to the point where the owners can just come in and use all the tooling setup for them
Sep 07 12:27:36 <MJCD>	via 14 departments
Sep 07 12:27:58 <MJCD>	http://prntscr.com/p3069t
Sep 07 12:28:01 <niggler>	not us based tho :/
Sep 07 12:28:21 <MJCD>	global but with a marketing image of being an extremely regionalized brand
Sep 07 12:28:36 <MJCD>	so all those seeds are local to Perth
Sep 07 12:28:55 <MJCD>	if we were to operate in the US we would make an entire US branch
Sep 07 12:29:09 <MJCD>	with the same services
Sep 07 12:29:18 <MJCD>	from regional providers
Sep 07 12:29:38 <MJCD>	that's what a lot of those departments are until we make them permanent/staff them
Sep 07 12:30:02 <MJCD>	until then most of them are just organizing a consultant/professional in that field for them to work with
Sep 07 12:30:17 <MJCD>	at the best rates we can negotiate
Sep 07 12:30:24 <MJCD>	case by case
Sep 07 12:30:31 <MJCD>	we charge a small fee for that
Sep 07 12:30:45 <MJCD>	and pass the bill on to the seed owner
Sep 07 12:31:14 <MJCD>	they can use as many or as few services as they desire, adding and removing them on the fly
Sep 07 12:31:40 <MJCD>	we also own a varying percentage of all our initial seeds
Sep 07 12:31:52 <MJCD>	which gives us a vested interest in making sure they succeed
Sep 07 12:32:10 <MJCD>	not just throwing the setup at them and saying they're on their own
Sep 07 12:32:13 <MJCD>	put a ticket in for help
Sep 07 12:32:13 <MJCD>	lol
Sep 07 12:32:39 <MJCD>	they would just speak to their account manager for any issues who would organize direct contact from the correct person
Sep 07 12:32:43 <MJCD>	or department
Sep 07 12:34:59 <laravel7>	whats wrong with this query? http://prntscr.com/p307lj
Sep 07 12:37:18 <MJCD>	well I mean
Sep 07 12:37:32 <MJCD>	you have gql not in a string, not in the template literal
Sep 07 12:37:39 <MJCD>	just randomly written there haha
Sep 07 12:41:46 <MJCD>	urgh wtf
Sep 07 12:41:54 <MJCD>	this youtube video downloaded as a "dash" video file
Sep 07 12:41:57 <MJCD>	the fuck is that even
Sep 07 13:20:29 <niggler>	sometimes love youtube comments
Sep 07 13:49:12 <MJCD>	the way mysql manages its users... using mysql
Sep 07 13:49:16 <MJCD>	is pretty stupid to me
Sep 07 13:49:23 <MJCD>	update user set authentication_string=PASSWORD("mynewpassword") where User='root';
Sep 07 13:49:26 <MJCD>	to set a password
Sep 07 13:49:29 <MJCD>	like are you for real
Sep 07 13:51:52 <theskillwithin>	well as the person who wrote mysql i take offense to that
Sep 07 14:01:41 <biberao>	heheh
Sep 07 14:02:24 <theskillwithin>	finally i get a laf
Sep 07 14:03:25 <biberao>	better late than never
Sep 07 14:57:35 <mjcd>	damn i've gotten a lot done today
Sep 07 14:58:06 <MJCD>	new hosting provider set up, cloudflare updated, nginx+php7.2+mysql installed and configured together
Sep 07 14:58:14 <MJCD>	all our documents copied to the server
Sep 07 14:58:44 <MJCD>	ZNC setup
Sep 07 14:59:33 <MJCD>	just doing LE/certbot now
Sep 07 14:59:58 <MJCD>	amazing how fast things can be done without cpanel+whm in the way
Sep 07 15:13:04 <MJCD_>	one thing I havent figured out yet is how to mount a god damn sftp/scp as a drive in windows
Sep 07 15:13:12 <MJCD_>	it's really, really, really annoying me
Sep 07 15:13:29 <MJCD_>	winscp is fine but I don't want a separate tool
Sep 07 15:13:37 <MJCD_>	I just want a drive
Sep 07 15:13:41 <MJCD_>	ooh I should try FUSE
Sep 07 15:23:49 <celphi>	just use filezilla mjcd
Sep 07 15:24:46 <MJCD>	not what I want, that makes filezilla core to my workflow
Sep 07 15:24:54 <MJCD>	vs just explorer and vscode
Sep 07 15:25:00 <MJCD>	do not want
Sep 07 15:25:13 <MJCD>	it should be transparent to users working locally, vs on the server
Sep 07 15:25:22 <MJCD>	just different locations on their pc
Sep 07 15:26:25 <celphi>	i hate windows
Sep 07 15:26:38 <celphi>	it was great in 90s
Sep 07 15:27:00 <celphi>	cant stand it now-- i use either mac or linux
Sep 07 15:30:14 <stenno>	windows 10 is actually pretty nice
Sep 07 15:31:33 <Aquazi>	hey
Sep 07 15:31:35 <Aquazi>	got a question
Sep 07 15:31:41 <Aquazi>	I am testing a webserver with jest
Sep 07 15:31:53 <Aquazi>	by making calls to it and testing the responses
Sep 07 15:32:05 <Aquazi>	the problem is that I am using request library for making the requests
Sep 07 15:32:18 <Aquazi>	but it is hard for me to test paths that return error codes
Sep 07 15:32:30 <Aquazi>	because request throws an error when it receives a 404, e.g.
Sep 07 15:32:58 <Aquazi>	so how do I test a path or method for returning a 404 or a 405
Sep 07 15:33:06 <Aquazi>	if the api itself throws for these codes
Sep 07 15:34:33 <Aquazi>	I really don't like using the .throw matcher
Sep 07 15:40:57 <MJCD>	Aquazi, I mean, you put in some code handling anything that isn't a success code via the provided `error`
Sep 07 15:41:09 <MJCD>	not rocket surgery
Sep 07 17:11:12 *	Disconnected ()
**** ENDING LOGGING AT Sat Sep  7 17:11:12 2019

**** BEGIN LOGGING AT Sat Sep  7 17:11:34 2019

Sep 07 17:11:34 *	Now talking on ##javascript
Sep 07 17:11:34 *	Topic for ##javascript is: JavaScript is *not* Java. | Just ask your question. | Say "!mdn abc" for docs on "abc". | Don't paste code in the channel. | Can't talk? Get registered on freenode ( https://git.io/vaTS2 )
Sep 07 17:11:34 *	Topic for ##javascript set by niggler!~niggler@unaffiliated/niggler (Tue Jan 15 07:16:23 2019)
Sep 07 17:12:27 <celphi>	im reading you use `curl -u {client_id}:{client_secret} -d grant_type=client_credentials https://us.battle.net/oauth/token` to get token
Sep 07 17:12:43 <celphi>	then pass the token in using `curl -H "Authorization: Bearer {access_token}" https://us.api.blizzard.com/data/wow/token/?namespace=dynamic-us`
Sep 07 17:12:56 <Mement>	Yes, and that cURL command works when I execute it at my local environment
Sep 07 17:13:10 <celphi>	did you get the token?
Sep 07 17:13:20 <celphi>	and run another curl with that token?
Sep 07 17:13:47 <Mement>	Yes, I did. However, I can't see how to translate both cURL commands to a JavaScript `fetch(..)` function. :)
Sep 07 17:14:22 <Mement>	The first returns a successful response, but the response is undefined.
Sep 07 17:14:31 <celphi>	let me see your code
Sep 07 17:14:41 <Mement>	Sure, hang on. Thanks for your time so far
Sep 07 17:14:42 <celphi>	how are you doing curl with JS
Sep 07 17:16:50 <Mement>	celphi: https://gist.github.com/TisLars/edaa1cb8691486ed4b8eec6942b5fbb6
Sep 07 17:23:02 <celphi>	Mement: So you're not getting token?
Sep 07 17:23:19 <celphi>	did you try it via cli yet?
Sep 07 17:25:08 <Mement>	I do not get a token, no. This is a small portion of the response https://gist.github.com/TisLars/b5dd5a04c15ee5d603a2265c29eb18a6 . I think we're safe to say that the provided Authorization header is not being received correctly.
Sep 07 17:25:42 <Mement>	celphi: And yes, I did try by CLI, I do receive a token that way.
Sep 07 17:30:06 <celphi>	try doing it without new Header
Sep 07 17:32:09 <Mement>	celphi: Not sure I understand, here's my code https://gist.github.com/TisLars/0114a734ab69fe63bb31a28671bf14d1
Sep 07 17:32:26 <celphi>	mement try this: `headers: new Headers({
Sep 07 17:32:26 <celphi>	    "Authorization": `Basic ${base64.encode(`${login}:${password}`)}`
Sep 07 17:32:26 <celphi>	  }),`
Sep 07 17:35:17 <celphi>	mement: https://jsfiddle.net/wrof59mq/
Sep 07 17:35:47 <Mement>	celphi: Something is happening. Instead of 'status: "Unauthorized"', I now get 'status: "Bad Request"'
Sep 07 17:40:09 <celphi>	have you tried https://www.npmjs.com/package/passport-bnet
Sep 07 17:41:30 <celphi>	check your headers and ensure you're actually passing your MY_CLIENT and MY_SECRET
Sep 07 17:41:49 <Mement>	Hehe, it's something I am trying to create myself as a side-project to study JavaScript. Not going to use dependecies
Sep 07 17:41:59 <celphi>	k
Sep 07 17:42:20 <celphi>	did you check headers to ensure it is actually passing it?
Sep 07 17:42:28 <Mement>	I'll keep trying and searching though. Thanks for looking into my code
Sep 07 17:43:04 <Mement>	By checking headers you mean console.log the `headers`? Or is there a more sophisticated approach?
Sep 07 17:43:04 <celphi>	https://observablehq.com/@mbostock/fetch-with-basic-auth
Sep 07 17:43:12 <celphi>	developer tools
Sep 07 17:43:28 <celphi>	you're using browser ?
Sep 07 17:43:35 <celphi>	or node
Sep 07 17:45:05 <celphi>	there's this example too
Sep 07 17:45:08 <laravel7>	any idea? there is user in redux but not in the props https://user-images.githubusercontent.com/9990165/64477012-9d8bdf80-d196-11e9-9e2e-dc114feccb21.png
Sep 07 17:45:08 <celphi>	https://usercontent.irccloud-cdn.com/file/EoHxip0m/image.png
Sep 09 09:21:29 *	Disconnected ()
**** ENDING LOGGING AT Mon Sep  9 09:21:29 2019

**** BEGIN LOGGING AT Mon Sep  9 09:21:51 2019

Sep 09 09:21:51 *	Now talking on ##javascript
Sep 09 09:21:51 *	Topic for ##javascript is: JavaScript is *not* Java. | Just ask your question. | Say "!mdn abc" for docs on "abc". | Don't paste code in the channel. | Can't talk? Get registered on freenode ( https://git.io/vaTS2 )
Sep 09 09:21:51 *	Topic for ##javascript set by niggler!~niggler@unaffiliated/niggler (Tue Jan 15 07:16:23 2019)
Sep 09 10:21:40 <shangul>	Any library to read DICT files like WordNet's?
Sep 09 10:30:47 <MJCD>	they're just text files
Sep 09 10:30:49 <MJCD>	no?
Sep 09 10:30:53 <MJCD>	idk about wordnet
Sep 09 10:30:58 <MJCD>	but the standard ones are
Sep 09 10:31:03 <MJCD>	just a big ol list heh
Sep 09 10:31:17 <MJCD>	so you just split on \n
Sep 09 10:31:23 <MJCD>	voila, wordlist :D
Sep 09 10:31:47 <MJCD>	remembering that at like 2MB each or something you ideally should cache this info
Sep 09 10:31:57 <MJCD>	if its to be reused frequently
Sep 09 10:44:29 <sweb>	is VAPID required the GCM/FCM or etc 3rdparty server? How can i implement my own infraustructre web push notification service without dependency to google or etc services ?
Sep 09 10:48:00 <MJCD>	given vapid is just a product to do that
Sep 09 10:48:07 <MJCD>	"make your own product to do that" ?
Sep 09 10:48:16 <MJCD>	there's a bunch of notification protocols if that helps
Sep 09 10:48:28 <MJCD>	growl is popular
Sep 09 10:48:34 <MJCD>	and web/js accessible
Sep 09 10:48:41 <MJCD>	as well as having mobile clients, etc
Sep 09 11:16:53 <dostoyevsky>	One can actually do array unpacking in parameter declarations like this: `forEach([l, c]) => { })'
Sep 09 11:45:02 <M3TAGH0ST>	Good morning, how can i get the first item from a NodeList ?
Sep 09 11:45:49 <stennowork>	theList[0]
Sep 09 11:50:29 <M3TAGH0ST>	stennowork i see. thanks :D  trying to figure it out differences between NodeList, HTMLCollection and using an array. :D
Sep 09 11:51:14 <stennowork>	in case of doubt, just express your nodelist as array: const listArray = Array.from(theList);
Sep 09 11:52:38 <stennowork>	this is especially a good idea when you handle live collections, which are a PITA
Sep 09 11:54:50 <M3TAGH0ST>	stennowork i see. and if i convert it to an array ( which this is my first thought ) will still be live ?
Sep 09 11:55:13 <stennowork>	nope, thankfully not
Sep 09 12:03:36 <M3TAGH0ST>	stennowork i see so it requires a little bit of extra code to work from an array :)
Sep 09 12:03:59 <stennowork>	you generally want to avoid live collections at all cost
Sep 09 12:06:00 <stennowork>	so it is seen as a _feature_ that Arrays are not live as opposed to NodeLists and Collection
Sep 09 12:06:21 <M3TAGH0ST>	I see.
Sep 09 12:06:48 <stennowork>	and you should strive to adjust your code in a way so it doesn't depend on live collections/nodelists
Sep 09 12:06:53 <M3TAGH0ST>	If you have time can you explain to me the reason ? All my life i worked only with jquery and i want to learn more about vanilla js. :D
Sep 09 12:07:38 <stennowork>	well - it is an array-like structure, which tends to change the the number of its elements every now and then and you don't really have any control about that
Sep 09 12:08:14 <stennowork>	and its hard to write robust software if you have to take into account that 'array' sizes might change every now and then
Sep 09 12:09:01 <stennowork>	if you think about it, just getting the length right every time is a hassle
Sep 09 12:09:32 <stennowork>	because you cannot just save the length of a HTMLCollection to a variable once, you have to check the current length on the actual collection/nodelist
Sep 09 12:12:35 <M3TAGH0ST>	i see. :-)
Sep 09 12:12:37 <M3TAGH0ST>	thanks for the help :D
Sep 09 12:15:09 <stennowork>	compared to an array-ized nodelist, which you can just refetch when you _need_ it
Sep 09 12:15:10 <MJCD>	so
Sep 09 12:15:20 <MJCD>	y'all might have an idea nobody else has thought of, being devs
Sep 09 12:15:42 <MJCD>	I just want to make the /var/www/html/ to be available from peoples homedir
Sep 09 12:15:51 <MJCD>	along with a single other shared folder
Sep 09 12:16:04 <MJCD>	symlinks don't work for reasons
Sep 09 12:16:07 <MJCD>	probably a bug
Sep 09 12:16:17 <MJCD>	as there's an issue report for it under sshfs
Sep 09 12:20:13 <M3TAGH0ST>	mjcd: MJCD you could groupadd the folder and users. :-)
Sep 09 12:21:34 <niggler>	are the parent directories readable by the other users?
Sep 09 12:22:01 <niggler>	it could be something stupid like not giving executable access to the users
Sep 09 12:22:32 <MJCD>	M3TAGH0ST, so
Sep 09 12:22:36 <MJCD>	they CAN access the folders
Sep 09 12:22:40 <MJCD>	directly via ssh
Sep 09 12:22:51 <MJCD>	simply `cd /var/www/html/`
Sep 09 12:23:00 <MJCD>	that's why it SHOULD be super simple
Sep 09 12:23:08 <niggler>	but you can't create a symlink?
Sep 09 12:23:11 <MJCD>	for sshfs I need a visual link to that folder
Sep 09 12:23:18 <niggler>	did you create a relative or absolute link
Sep 09 12:23:20 <MJCD>	symlinks fail under sshfs
Sep 09 12:23:31 <MJCD>	symlinks use neither
Sep 09 12:23:41 <MJCD>	they use the file inode id's
Sep 09 12:23:54 <MJCD>	hardlinks the same thing
Sep 09 12:24:01 <MJCD>	I can hardlink 1 file
Sep 09 12:24:03 <MJCD>	and that works
Sep 09 12:24:08 <MJCD>	but you cant hardlink folders
Sep 09 12:26:46 <niggler>	sshfs -o follow_symlinks
Sep 09 12:29:46 <MJCD>	niggler, i'm just using ssh there is no dedicated sshfs
Sep 09 12:29:55 <niggler>	for sshfs
Sep 09 12:29:56 <MJCD>	I could install it I suppose
Sep 09 12:29:58 <niggler>	sshfs is a thing
Sep 09 12:30:05 <niggler>	aka
Sep 09 12:30:05 <niggler>	https://github.com/libfuse/sshfs
Sep 09 12:30:09 <MJCD>	that's what we're using as I just said
Sep 09 12:30:12 <MJCD>	lol
Sep 09 12:30:19 <MJCD>	err
Sep 09 12:30:21 <niggler>	"niggler, i'm just using ssh there is no dedicated sshfs"
Sep 09 12:30:37 <niggler>	niggler: "niggler, i'm just using ssh there is no dedicated sshfs"
Sep 09 12:30:38 <MJCD>	yeah alright fuck it i'll try installing a dedicated server for it
Sep 09 12:31:00 <MJCD>	I mean it's just ssh presenting a ftp like interface which is a client side concern
Sep 09 12:31:28 <MJCD>	it just logs in like normal, runs commands to navigate around
Sep 09 12:31:42 <MJCD>	does an ls and formats the results lol
Sep 09 12:31:49 <MJCD>	not sure what sshfs as an actual thing would do
Sep 09 12:31:52 <MJCD>	or where it would sit
Sep 09 12:31:59 <MJCD>	we're using fuse already
Sep 09 12:32:02 <MJCD>	via winfsp
Sep 09 12:32:11 <MJCD>	and win-sshfs
Sep 09 12:32:24 <MJCD>	I wonder if life would be easier to use sftp
Sep 09 12:32:25 <niggler>	so you can pass an option follow_symlinks
Sep 09 12:32:29 <niggler>	yes
Sep 09 12:32:33 <niggler>	life would be immensely easir
Sep 09 12:32:38 <MJCD>	to what, `ssh` is part of the kernel
Sep 09 12:33:21 <MJCD>	im just checking if I can add that option to /etc/ssh/ssh_config
Sep 09 12:33:47 <niggler>	"windows" "/etc/ssh/ssh_config"
Sep 09 12:33:54 <niggler>	sshfs is a discrete thing
Sep 09 12:34:54 <niggler>	https://github.com/billziss-gh/sshfs-win/issues/9
Sep 09 12:35:01 <niggler>	^^ mjcd see if thats useful
Sep 09 12:35:06 <darkseid>	trying to navigate to gitbooks and i get NET::ERR_CERT_DATE_INVALID
Sep 09 12:35:08 <darkseid>	ffs
Sep 09 12:35:21 <niggler>	oh fml
Sep 09 12:35:24 <darkseid>	Expires on: 9 Sep 2019
Sep 09 12:35:27 <niggler>	yeah same thing comes up with the docs
Sep 09 12:35:32 <niggler>	they aren't fixing it
Sep 09 12:35:42 <MJCD>	niggler, https://github.com/billziss-gh/sshfs-win/issues/65#issuecomment-529388608
Sep 09 12:35:42 <darkseid>	niggler are you talking to me
Sep 09 12:36:00 <MJCD>	and so
Sep 09 12:36:01 <niggler>	darkseid: yeah they are trying to kill off the old platform
Sep 09 12:36:11 <MJCD>	the final solution we've come up with so far
Sep 09 12:36:14 <MJCD>	is bindmount
Sep 09 12:36:14 <darkseid>	oh, damn that's annoying
Sep 09 12:36:24 <MJCD>	using mount to mount the sshfs share under... itself
Sep 09 12:36:28 <MJCD>	which seems just awful to me
Sep 09 12:36:31 <niggler>	they closed off the issue tracker unfortunately
Sep 09 12:36:41 <niggler>	but they're done with the open source stuff and legacy host
Sep 09 12:37:11 <niggler>	good thing tho, now time to find a docs provider
Sep 09 12:39:05 <darkseid>	why have they killed off gitbooks
Sep 09 12:40:39 <niggler>	you want an honest answer darkseid?
Sep 09 12:40:48 <darkseid>	obviously lol
Sep 09 12:41:34 <niggler>	https://www.fly.vc/portfolio.html
Sep 09 12:41:45 <niggler>	they took $$, gotta find a way to monetize
Sep 09 12:42:39 <darkseid>	ffs
Sep 09 12:42:57 <niggler>	this reckoning was obvious
Sep 09 12:43:07 <niggler>	like 5 years ago when a bunch of open source projects raised money
Sep 09 12:43:40 <niggler>	npm, meteor, gatsby, a number of open source projects were funded by VC money
Sep 09 12:43:44 <niggler>	and that money is never cheap
Sep 09 12:43:56 <niggler>	at the time people correctly pointed out that there'll be a day when VC pressures you to monetize
Sep 09 12:44:02 <niggler>	and you won't have the power to say no
Sep 09 12:44:53 <niggler>	its a faustian bargain of sorts
Sep 09 12:44:54 <stennowork>	lol axiom
Sep 09 12:45:19 <stennowork>	dunno the other ones
Sep 09 12:45:35 <darkseid>	niggler but they aren't monetizing
Sep 09 12:45:42 <darkseid>	they're just killing it
Sep 09 12:45:59 <niggler>	https://www.gitbook.com/pricing
Sep 09 12:46:10 <niggler>	they have a legacy platform
Sep 09 12:46:17 <niggler>	aka what the service used to be
Sep 09 12:46:20 <niggler>	and their new service
Sep 09 12:47:03 <niggler>	surprised they aren't using LE or something
Sep 09 12:49:32 <darkseid>	huh, i can't access https://www.gitbook.com/pricing
Sep 09 12:49:58 <darkseid>	 not sure why
Sep 09 12:50:06 <niggler>	its $0 free, $7/user starter, $15/user business, and "let's talk" for enterprise
Sep 09 12:50:33 <niggler>	starter requires 5 users (so $35/mo) and business requires 20 users (so $300/mo)
Sep 09 12:51:13 <darkseid>	$0 free tho...
Sep 09 12:52:55 <niggler>	npm still offers a free tier
Sep 09 12:53:20 <darkseid>	right
Sep 09 12:58:46 <niggler>	for them its a marketing expense
Sep 09 13:17:38 <MJCD>	so
Sep 09 13:17:52 <MJCD>	to resolve the earlier issue re; providing 2 shared folder links under user(s) /home/'s
Sep 09 13:18:09 <MJCD>	ditching sshfs
Sep 09 13:18:19 <MJCD>	going with a full daemon via sftp instead
Sep 09 13:19:02 <MJCD>	doesn't even require me to do 1505 things per user+workstation either
Sep 09 13:19:05 <MJCD>	w0w
Sep 09 13:19:49 <Maxdamantus>	22:23:41 < MJCD> they use the file inode id's
Sep 09 13:19:58 <Maxdamantus>	symlinks don't use inode numbers.
Sep 09 13:20:06 <MJCD>	ok
Sep 09 13:20:07 <Maxdamantus>	They are just relative or absolute paths.
Sep 09 13:20:22 <Maxdamantus>	also, can't you just use a bind mount?
Sep 09 13:20:25 <MJCD>	well it was using an absolute path for both
Sep 09 13:20:36 <MJCD>	and yes if I want to bindmount for every user, as per my previous comments
Sep 09 13:20:38 <MJCD>	le sigh
Sep 09 13:22:37 <Maxdamantus>	Ah, you're expecting the link to be shared through sshfs.
Sep 09 13:22:55 <Maxdamantus>	Well, that should work with a bindmount.
Sep 09 13:25:18 <Maxdamantus>	22:32:24 < MJCD> I wonder if life would be easier to use sftp
Sep 09 13:25:25 <Maxdamantus>	sshfs does use sftp afaik
Sep 09 13:25:54 <Maxdamantus>	afaik it's just an sftp client that exposes the target through a FUSE filesystem.
Sep 09 13:26:34 <Maxdamantus>	If you're able to use sshfs, you're already using sftp.
Sep 09 13:29:38 <niggler>	assuming it means using a tool that natively supports sftp rather than going through a sshfs wrapper
Sep 09 13:30:15 <Maxdamantus>	What's the actual issue you're trying to solve? If you just want to allow users to access /var/www/html/ over win-sshfs or whatever, that should pretty much just work by default.
Sep 09 13:30:34 <Maxdamantus>	sshfs your-server:/var/www/html/ ~/html
Sep 09 13:31:25 <Maxdamantus>	sshfs-win will surely allow a remote directory to be specified too, rather than requiring people to mount their home directory (the default cwd, usually).
Sep 09 13:44:35 <niggler>	any good js queue libraries
Sep 09 13:44:46 <darkseid>	whats the diff between these 2 functions: https://pastebin.com/VbtDXD02
Sep 09 13:45:02 <darkseid>	i suppose I'd need to `throw` for the failure case
Sep 09 13:45:09 <darkseid>	but are they fundamentally the same or different
Sep 09 13:45:13 <niggler>	yeah you need to throw
Sep 09 13:45:29 <niggler>	but they are basically the same behavior
Sep 09 13:45:39 <niggler>	one is an async function, the other is a function that returns a promise
Sep 09 13:46:07 <darkseid>	yep
Sep 09 13:46:18 <darkseid>	but they are functionally equivalent
Sep 09 13:46:28 <niggler>	well, modulo the concern about throwing in the async case
Sep 09 13:46:31 <darkseid>	like if you refactored the first to the second (as long as you throw) it would be identical
Sep 09 13:46:34 <darkseid>	?
Sep 09 13:46:40 <stennowork>	as async functions wrap their return value in promises, yes
Sep 09 13:46:41 <darkseid>	modulo the concern?
Sep 09 13:46:48 <niggler>	reject(...) is throw in async land
Sep 09 13:46:49 <darkseid>	ok that's what i thought
Sep 09 13:47:15 <darkseid>	oh, so it would just be `throw('failure')`
Sep 09 13:49:09 <darkseid>	ffs, i meant `reject('failure')`
Sep 09 13:49:17 <grr12314>	no brackets
Sep 09 13:49:17 <grr12314>	its not a function
Sep 09 13:49:44 <darkseid>	oh
Sep 09 13:50:42 <stennowork>	what?
Sep 09 13:50:45 <stennowork>	what is it then?
Sep 09 13:51:09 <stennowork>	oh you mean the throw, not the reject
Sep 09 13:51:10 <darkseid>	niggler can you gist what you mean
Sep 09 13:51:32 <darkseid>	yeah the `throw` was me just typing the wrong thing lol
Sep 09 13:52:38 <grr12314>	throw is the correct one tho :p
Sep 09 13:52:42 <grr12314>	for the second version
Sep 09 13:52:52 <grr12314>	just without ()
Sep 09 13:56:56 <niggler>	yeah grr12314 said what i was trying to say
Sep 09 13:56:57 <niggler>	anyway
Sep 09 13:57:15 <niggler>	so disappointed that there aren't many popular queue libraries
Sep 09 13:57:18 <niggler>	i guess people just use arrays
Sep 09 13:58:34 <ashnur>	queue library?
Sep 09 13:58:42 <grr12314>	im sure there are
Sep 09 13:58:45 <grr12314>	for fancier cases
Sep 09 13:58:47 <niggler>	we were talking about ring buffers a few days ago
Sep 09 13:58:50 <grr12314>	like weighted queues
Sep 09 13:58:53 <ashnur>	show me one so i know what you mean
Sep 09 14:00:11 <grr12314>	for the basic case, have you seriously had a case where push/shift performance was not enough?
Sep 09 14:00:20 <niggler>	so you can implement a queue with push and shift ashnur
Sep 09 14:00:27 <niggler>	but shift has to ripple
Sep 09 14:00:45 <niggler>	grr12314: work queue
Sep 09 14:01:03 <niggler>	peak capacity 1.2M elements
Sep 09 14:01:05 <darkseid>	grr12314 so these 2 are exactly equivalent then: https://pastebin.com/AbW2KcDq
Sep 09 14:01:10 <ashnur>	i could if i read up on it
Sep 09 14:01:41 <niggler>	ashnur: google Queue ADT
Sep 09 14:01:43 <niggler>	or read https://en.wikipedia.org/wiki/Queue_(abstract_data_type)
Sep 09 14:02:20 <niggler>	i have no good sense for what the maximum is going to be, so a fixed-size ring buffer isn't appropriate
Sep 09 14:02:31 <grr12314>	shift has to ripple but how that's implemented in practice by the engine can vary, maybe they already optimize it?
Sep 09 14:02:42 <ashnur>	oh, so queue library would be a lib that provides such an abstraction
Sep 09 14:02:44 <grr12314>	so, have you actually had a case where it made a difference?
Sep 09 14:02:48 <stennowork>	isn't queue just LIFO stack?
Sep 09 14:02:48 <ashnur>	i think there are lots of such libs
Sep 09 14:03:11 <ashnur>	people don't really use queues, too unenlightened for them
Sep 09 14:03:34 <niggler>	profile suggesting its a significant part of runtime
Sep 09 14:03:42 <niggler>	so i have to assume performance is important
Sep 09 14:03:52 <ashnur>	profile?
Sep 09 14:04:16 <niggler>	in node running with --profile and --prof-process
Sep 09 14:04:34 <ashnur>	stennowork: queue is fifo
Sep 09 14:04:47 <niggler>	err --prof / --prof-process
Sep 09 14:05:02 <stennowork>	ah right
Sep 09 14:05:03 <niggler>	stack is lifo queue
Sep 09 14:05:06 <stennowork>	LIFO would be stack
Sep 09 14:05:07 <stennowork>	yeah
Sep 09 14:05:09 <grr12314>	anyway, wanting a library for that is a bit padleftish
Sep 09 14:05:20 <niggler>	javascript is gigo
Sep 09 14:05:37 <grr12314>	its just a[(i+start)%max]
Sep 09 14:05:41 <stennowork>	get first element can be done with rest, thats nice
Sep 09 14:06:04 <ashnur>	grr12314: not really, if it is bundled with a set of other algorithms and it's efficient...
Sep 09 14:06:08 <ashnur>	i mean datascript ...
Sep 09 14:06:11 <stennowork>	ok but it would have to be shifted/unshifted whcih is nasty
Sep 09 14:06:14 <niggler>	arrays get awkward after 100Kish elements
Sep 09 14:06:28 <ashnur>	use <datalist>
Sep 09 14:06:34 <stennowork>	in C i can use actual CPU routines for stuff like that and its fast as fuck
Sep 09 14:07:42 <ashnur>	stennowork: and if you are really clever you can get an asic and it's even faster, but why would you want to superoptimize for this so much when there are so many importanter aspects around
Sep 09 14:11:41 <orhan_>	hi
Sep 09 14:12:29 <grr12314>	ouran high
Sep 09 14:13:09 <orhan_>	<a href...> doesn't waiting for finish function of "onclick=..."
Sep 09 14:13:33 <ashnur>	orhan_: do you often have the power to stop time? :)
Sep 09 14:14:05 <sloth>	https://i.pinimg.com/originals/9e/c6/2f/9ec62fac7f308e1bf5f59f8a57752fde.jpg
Sep 09 14:14:08 <orhan_>	just going to that link before finish of function
Sep 09 14:14:22 <ashnur>	clicks are events, it happens once, and then life goes on. things don't stop until you decide how to deal with them
Sep 09 14:14:47 <ashnur>	!events @ orhan_
Sep 09 14:14:48 <cgi>	I have a web app which spans 5 machines. I want to build a test system for it. Do I have to rename the domain name and start from there? or what is the recommended way to do this?
Sep 09 14:14:48 <ecmabot>	orhan_: https://developer.mozilla.org/en-US/docs/Web/Events | QuirksMode Events guide: http://www.quirksmode.org/js/introevents.html
Sep 09 14:16:09 <orhan_>	i am trying to make ownself that
Sep 09 14:17:08 <orhan_>	how can i stop browser to go new page before function's finish
Sep 09 14:17:36 <orhan_>	ecmabot, i see that page contains a lot of events
Sep 09 14:18:15 <MikeD_>	if you find code like this, do you say something to the author about it?  https://jsfiddle.net/03uwb4m1/
Sep 09 14:18:42 <Alexendoo>	niggler: There sort of is a popular library with a queue in it, since immutable.js' List can be treated as a deque (it has efficient shift/unshift as well as pop/push). For a plain mutable array backed queue there's probably a bunch on npm though
Sep 09 14:19:23 <grr12314>	actually
Sep 09 14:19:31 <grr12314>	it waits for the whole function
Sep 09 14:19:39 <grr12314>	but not for async things started by it
Sep 09 14:19:48 <niggler>	there's zero need for an array-backed queue since array literally provides the tools for it
Sep 09 14:20:04 <niggler>	push/shift or unshift/pop depending on your personality
Sep 09 14:20:40 <grr12314>	or (i+start)%max
Sep 09 14:20:56 <niggler>	that assumes you know what max is
Sep 09 14:20:59 <grr12314>	actually you dont need accessing by index do you
Sep 09 14:21:03 <grr12314>	just start%max
Sep 09 14:21:03 <niggler>	no
Sep 09 14:21:27 <grr12314>	you have to know max yup. to avoid reallocs
Sep 09 14:21:44 <niggler>	otherwise the ring solution would work
Sep 09 14:21:46 <orhan_>	grr12314, so why my cookie wasn't set, in new page it was getting cookie but wasn't set nicely in that function
Sep 09 14:22:09 <grr12314>	orhan_ show code
Sep 09 14:22:49 <orhan_>	and also doesn't waiting css's transition effect
Sep 09 14:23:17 <orhan_>	grr12314, i cannot, because there are linked files
Sep 09 14:23:50 <Alexendoo>	niggler: As you mentioned earlier, if you just use use an array shift/unshift it can be slow. You can build a typical deque on top of it where that isn't the case
Sep 09 14:23:59 <grr12314>	ok, then the answer is 42
Sep 09 14:24:26 <orhan_>	grr12314, cookie function is here https://www.w3schools.com/js/js_cookies.asp
Sep 09 14:24:47 <grr12314>	stop trolling
Sep 09 14:30:34 <Alexendoo>	niggler: here's one that does just that https://www.npmjs.com/package/denque
Sep 09 14:30:38 <orhan_>	a href's onclick="menuSelect(this)" menuselect setting cookie
Sep 09 14:32:09 <niggler>	ok this was what i was thinking
Sep 09 14:32:35 <orhan_>	after that, other page getting cookie with old value, also css transition effect for menu closing doesn't work
Sep 09 14:33:08 <orhan_>	menu that side navigation menu
Sep 09 14:34:08 <orhan_>	<a href running without waiting transition effect
Sep 09 14:34:42 <orhan_>	end of words
Sep 09 14:36:07 <orhan_>	grr12314, not tidy but http://ota.epizy.com/ota/project/personal/index.php
Sep 09 14:36:22 <orhan_>	click on side menu
Sep 09 14:36:43 <orhan_>	link 'Ana sayfa' and 'Bilgisayar'
Sep 09 14:37:38 <orhan_>	it aren't working correctly
Sep 09 14:38:48 <orhan_>	it isn't working correctly
Sep 09 14:47:04 <nwoob>	I can't set src in image tag like this <img src={`image.STEPPER_${this.state.completedSteps.length}`} />
Sep 09 14:47:16 <nwoob>	is there a way to acheive what I'm trying to do
Sep 09 14:49:45 <Alexendoo>	nwoob: Why can't you?
Sep 09 14:50:09 <nwoob>	Alexendoo: is that correct?
Sep 09 14:51:30 <nwoob>	because I'm not able to see my image
Sep 09 14:52:46 <pyzozord>	hi can anyone help me with moment.js? Im trying to figure out timezone name froma date
Sep 09 14:52:50 <Alexendoo>	nwoob: You can inspect the DOM, check if the src you ended up with is what you're expecting
Sep 09 14:53:09 <pyzozord>	i want the same result that comes from moment.tz.guess() but i want it based on a ISO date string that i have
Sep 09 14:53:19 <pyzozord>	so i want it to parse string and give me full timezone name
Sep 09 14:59:24 <Buoy172>	I'm getting this in chrome devtools console: [DOM] Password field is not contained in a form
Sep 09 14:59:31 <Xatenev>	in js is there any shorthand for https://bpaste.net/show/PYTZ
Sep 09 14:59:42 <Buoy172>	is it ok not to use a form
Sep 09 14:59:42 <laravel7>	what do you think about this? https://www.youtube.com/user/99baddawg/playlists
Sep 09 14:59:52 <Xatenev>	in the best case id just like to do something.down('someElement')?.focus();
Sep 09 14:59:54 <Xatenev>	or something like that :D
Sep 09 15:00:02 <niggler>	probably a warning Buoy172
Sep 09 15:00:42 <Buoy172>	it's a warning but wtf? I'm like: I know it's not in a form, I don't want it in a form
Sep 09 15:00:56 <niggler>	yeah but it doesnt know that
Sep 09 15:01:00 <Buoy172>	is it possible to remove this warning (without using a form)
Sep 09 15:02:05 <laravel7>	do you use prisma for graphql?
Sep 09 15:02:41 <stennowork>	you can associate an input element with a form even though the element is not part of the form
Sep 09 15:02:52 <nwoob>	I can't set src in image tag like this <img src={`image.STEPPER_${this.state.completedSteps.length}`} />
Sep 09 15:02:53 <niggler>	Buoy172: why not use a form?
Sep 09 15:02:56 <nwoob>	is there a way to acheive what I'm trying to do
Sep 09 15:03:01 <nwoob>	can someone please help mewith it
Sep 09 15:03:59 <Alexendoo>	pyzozord: That isn't possible, there isn't a 1:1 mapping from offsets to names
Sep 09 15:04:30 <stennowork>	doesn't a full ISO date have TZ info anyway
Sep 09 15:04:30 <Buoy172>	niggler: the backend doesn't require submitting a form
Sep 09 15:04:39 <niggler>	then suppress submit
Sep 09 15:05:48 <niggler>	old school onsubmit="return false"
Sep 09 15:12:18 <linuxconformer>	why does -webkit-fill-available auto-adjust an iframe's height depending on the contents of the iframe, but -moz-available does not?
Sep 09 15:19:36 <Paradisee>	hello
Sep 09 15:19:38 <Alexendoo>	linuxconformer: It doesn't as far as I can see. If it did that would be a large bug
Sep 09 15:20:15 <Paradisee>	http://dpaste.com/0JM65Y1
Sep 09 15:20:27 <linuxconformer>	Alexendoo: it does, my iframe adjust height based on content in chrome, but not in FF
Sep 09 15:20:31 <Paradisee>	i've installed handlebars multiple times but it does not work
Sep 09 15:25:41 <Alexendoo>	linuxconformer: If you managed to find a scenario where that is the case then follow https://dev.chromium.org/Home/chromium-security/reporting-security-bugs
Sep 09 15:26:01 <linuxconformer>	Alexendoo: should it not happen?
Sep 09 15:26:12 <linuxconformer>	what's wrong about it?
Sep 09 15:26:45 <linuxconformer>	and what would the proper way of resizing this iframe based on the height of its content be?
Sep 09 15:27:26 <Alexendoo>	linuxconformer: If you can manage to get an iframe to size itself depending on the contents of the iframe, that's a leak of information about the contents itself. That shouldn't happen
Sep 09 15:29:20 <Alexendoo>	The only way to do that is via JS. If it's a same origin iframe you can check the height of the frame's document and set the frame height accordingly. If it's a cross origin iframe the only way would be if chose to expose that information somehow. E.g. by postMessage
Sep 09 15:30:39 <Alexendoo>	That or it could be known ahead of time, and set statically
Sep 09 15:36:18 <curious_user>	hey i would like to do a simple filter on a json object like this one:
Sep 09 15:36:26 <curious_user>	      obj = [{"data":true,"other_data":false},{"data":false,"other_data":false}];
Sep 09 15:36:26 <curious_user>	      obj1 = obj.filter(key == true);
Sep 09 15:36:32 <curious_user>	could you help me get it working ?
Sep 09 15:38:03 <stenno_>	i think windows smart defender or w/e its called blocked putty from getting executed and also removed ti from the task bar
Sep 09 15:38:05 <stenno_>	smart my ass
Sep 09 15:44:52 <prussian>	stenno_: maybe it's malware
Sep 09 15:45:03 <prussian>	also windows 10 ships with openssh out of the box.
Sep 09 15:45:16 <prussian>	why anyone would use putty over it is beyond me
Sep 09 15:45:54 <Buoy172>	niggler: sorry I was afk. Did you mean I should use <form onsubmit="return false"> ... my stuff ... </form> ?
Sep 09 15:46:17 <niggler>	yeah
Sep 09 15:46:34 <niggler>	eww windows 10
Sep 09 15:46:40 <Buoy172>	My question actually is: how to avoid the warning without using <form> at all. Is it possible?
Sep 09 15:49:03 <niggler>	it might be possible to bypass with role="form" in a parent element
Sep 09 15:49:21 <niggler>	but that screws with ARIA Buoy172
Sep 09 15:53:47 <notchris>	o/
Sep 09 15:54:14 <Roughy>	shit, notchrist.
Sep 09 15:54:22 <Roughy>	err, -t
Sep 09 16:17:37 <nwoob>	How can I improve this https://pastebin.com/raw/RpxYVBpu
Sep 09 16:18:16 <nwoob>	Could it be improved by using Dictionary
Sep 09 16:19:34 <johnjake>	Hi guys! I've created a free NodeJS hosting and looking for feedbacks!
Sep 09 16:19:53 <johnjake>	https://dashboard.reseka.com/register
Sep 09 16:19:58 <johnjake>	No email verification required
Sep 09 16:23:11 <niggler>	lol {"file":"/test4/myfile.php","url":"/test4/myfile.php?myFile=system(%22ls%22);","method":"GET","get":"{\"myFile\":\"system(\\\"ls\\\");\"}","post":"[]","custom":"2"}
Sep 09 16:23:34 <stennowork>	nice try
Sep 09 16:24:07 <stennowork>	it just dawned on me that you can probably do system calls in php
Sep 09 16:24:15 <niggler>	ofc just like nodejs
Sep 09 16:24:44 <stennowork>	no i mean with that exact syntax that i know from C
Sep 09 16:24:51 <stennowork>	system('sleep 12');
Sep 09 16:24:52 <stennowork>	oslt
Sep 09 16:25:11 <johnjake>	niggler you need to go to the node tab
Sep 09 16:25:44 <niggler>	don't see a tab
Sep 09 16:26:00 <niggler>	actually upon expanding, there's a left column and a link to https://dashboard.reseka.com/index.html which says "Not Found"
Sep 09 16:26:02 <johnjake>	niggler Oh, are you using the demo creds? they do not have the demo
Sep 09 16:26:12 <niggler>	make a new demo
Sep 09 16:26:16 <nwoob>	could somone review my code too https://pastebin.com/raw/RpxYVBpu
Sep 09 16:26:25 <nwoob>	how can I improve it
Sep 09 16:26:29 <nwoob>	without using if statement
Sep 09 16:26:56 <johnjake>	niggler I meant the nodeJS hosting
Sep 09 16:27:10 <johnjake>	You can register with like gfdgd@fgdgfd.com and a random password (no email verification)
Sep 09 16:27:15 <bradleymeck>	nwoob: why no if?
Sep 09 16:27:16 <johnjake>	I did not want to make a shared nodeJS hosting account
Sep 09 16:28:11 <nwoob>	bradleymeck: because I know how to do it by if
Sep 09 16:29:12 <niggler>	const img = {4:image.STEPPER_4, 3:image.STEPPER_3}[(this.state.completedSteps||[]).length] || image["STEPPER_" + (this.state.completedSteps||[]).length >= 2 ? 5 : 2)]
Sep 09 16:29:25 <niggler>	(please ftlog don't do this)
Sep 09 16:29:55 <nwoob>	niggler: Could it be done better by dictionary?
Sep 09 16:30:06 <niggler>	you'd need to handle a default case
Sep 09 16:30:16 <niggler>	that's a common pattern tho
Sep 09 16:30:28 <nwoob>	niggler: What do you suggest is the better way
Sep 09 16:31:44 <niggler>	just use the if statement and make it a let
Sep 09 16:31:48 <niggler>	or make a shadow variable
Sep 09 16:31:54 <niggler>	let _img = ...; const img = _img;
Sep 09 16:32:34 <niggler>	otherwise you end up with monstrosities like https://github.com/SheetJS/js-xlsx/blob/master/xlsx.flow.js#L16814 which i 100% discourage
Sep 09 16:32:56 <nwoob>	I don't know what is shadowed variabler
Sep 09 16:33:24 <niggler>	just make another variable
Sep 09 16:33:42 <niggler>	instead of `const foo = complicated_expression`
Sep 09 16:33:45 <niggler>	you can do something like
Sep 09 16:34:05 <prometh>	line 16,815; ugh
Sep 09 16:34:15 <niggler>	`let _foo = something; if(simple_condition) _foo = something_else; const foo = _foo;`
Sep 09 16:34:28 <nwoob>	ok
Sep 09 16:34:29 <niggler>	then you preserve the fundamental nature of the const while not mucking up your code
Sep 09 16:35:15 <niggler>	there are many LUTs prometh
Sep 09 16:35:46 <prometh>	lut?
Sep 09 16:35:47 <niggler>	https://github.com/SheetJS/js-xlsx/blob/master/xlsx.flow.js#L12405-L12658 >250 lines corresponding to the number of arguments for various hardcoded XLS functions
Sep 09 16:35:53 <niggler>	LUT = lookup table
Sep 09 16:36:37 <prometh>	that'll be fun to maintain
Sep 09 16:37:09 <prometh>	but we live in a world where trump became president, so stupid insanity makes sense
Sep 09 16:37:17 <niggler>	i think the biggest one is https://github.com/SheetJS/js-xlsx/blob/master/xlsx.flow.js#L11522-L12404
Sep 09 16:37:20 <emx>	Could someone please explain why "0 | Math.pow( 2, 31 )" is not 2147483648?
Sep 09 16:37:29 <niggler>	eer 11522-11919
Sep 09 16:37:52 <niggler>	emx: the range of a 32 bit signed integer is -2**31 to 2**31 - 1
Sep 09 16:38:48 <niggler>	same convention for 8 and 16 bit integers like those you get from Int8Array / Int16Array
Sep 09 16:39:34 <emx>	niggler, Why 32 and not 64?
Sep 09 16:39:55 <niggler>	because that's what `|` does
Sep 09 16:40:13 <emx>	bummer
Sep 09 16:40:18 <emx>	niggler, alright, thanks
Sep 09 16:42:33 <niggler>	cant even find that part in the spec
Sep 09 16:43:09 <niggler>	emx: https://www.ecma-international.org/ecma-262/5.1/index.html#sec-11.10
Sep 09 16:43:17 <niggler>	so scroll down to semantics
Sep 09 16:43:32 <niggler>	let lnum be ToInt32(lval).  Let rnum be ToInt32(rval).
Sep 09 16:53:53 <shangul>	MJCD, JSON files are just text files. right?
Sep 09 16:54:10 <stennowork>	yes
Sep 09 16:59:14 <niggler>	depends on what you mean by "text"
Sep 09 16:59:32 <niggler>	they can contain non-ascii characters
Sep 09 17:10:41 <ljharb>	shangul: json is a string, so yes
Sep 09 17:11:41 <shangul>	ljharb, Did you see MJCD's answer to my question?
Sep 09 17:12:01 <ljharb>	no
Sep 09 17:12:54 <therik>	Hello, I have a react/webpack/babel/encore app with php/symfony backend, that was running on babel 6, now updated to babel 7. I was using babel-plugin-import-globals to import loglevel everywhere, without explicitly stating "import * as log from loglevel" in every file. Is there some babel7 way of importing a lib automatically?
Sep 09 17:16:00 <stennowork>	sounds more like a job for webpack than for babel tbh
Sep 09 17:19:39 <Kirjava>	does `continue` just continue from the inner loop (as long as you're not specifying labels)
Sep 09 17:19:58 <stennowork>	yes?
Sep 09 17:20:04 <stennowork>	what else would you expect?
Sep 09 17:20:17 <stennowork>	in php you can give continue depth lol
Sep 09 17:20:30 <Kirjava>	yeah
Sep 09 17:20:34 <stennowork>	so its possible to `continue` a parent loop
Sep 09 17:20:40 <stennowork>	this is thankfully not possible in js
Sep 09 17:20:44 <Kirjava>	in one of our PHP codebases they had a break 9;
Sep 09 17:20:55 <Kirjava>	stennowork: actually it is possible with labels
Sep 09 17:20:55 <Alexendoo>	stennowork: It is with labels, but nobody uses labels so it's fine
Sep 09 17:21:15 <Kirjava>	someone write a blogpost about why labels are so good
Sep 09 17:21:26 <stennowork>	yes, with labels, but even labels are more semantic than just a number
Sep 09 17:21:52 <stennowork>	i only realized a few weeks ago that you can continue; and break; any iterable
Sep 09 17:22:21 <stennowork>	especially exciting with async generators :D
Sep 09 17:22:51 <Kirjava>	ooh
Sep 09 17:23:06 <Kirjava>	rust has labels for breaking loops too
Sep 09 17:23:09 <Kirjava>	which I always found weird
Sep 09 17:23:20 <Kirjava>	because it usually tends to omit things like that
Sep 09 17:23:21 <stennowork>	it seems like a recipe for spaghetti
Sep 09 17:23:30 <stennowork>	i mean its not much better than goto/label
Sep 09 17:25:24 <Kirjava>	yeah
Sep 09 17:27:18 <Xatenev>	anyone has any clue how i can generate a vue project with webpack + vue loader via vue cli? :\
Sep 09 17:27:32 <Xatenev>	I knew it was there in vue CLI v2 but it disappeared in V3
Sep 09 17:29:36 <therik>	stennowork: ok, that worked, but it's not working for jest, because jest only reads the .babelrc, not webpack
Sep 09 17:58:34 <mchelen>	i'm looking at some code like `const { foo } = bar;` can anyone give me a tip what is going on here?
Sep 09 17:58:55 <ljharb>	mchelen: sugar for `const foo = bar.foo`
Sep 09 17:59:06 <ljharb>	mchelen: it's called destructuring, added in ES2015.
Sep 09 17:59:50 <mchelen>	ljharb: ah ok thanks, i don't think i had seen it used that way before
Sep 09 18:17:21 <horribleprogram>	Where do I go for more specific web hosting questions
Sep 09 18:17:36 <horribleprogram>	Bought a domain from Hostgater and they're hosting my shit
Sep 09 18:19:16 <horribleprogram>	Like wtf is Wordpress
Sep 09 18:19:30 <horribleprogram>	I thought you just upload index.html, a bunch of .js files, bunch of .css files
Sep 09 18:22:39 <mchelen>	anyone have thoughts on best practice for managing a bunch of related static functions? should i put them all in a class or not? this is in typescript
Sep 09 18:22:44 <shangul>	repost: Any library to read DICT files like WordNet's? Yes they are text files but formatted in a certain way.
Sep 09 18:23:21 <stennowork>	shangul, dictftm ?
Sep 09 18:23:27 <stennowork>	dictfmt *
Sep 09 18:23:37 <stennowork>	https://github.com/substack/parse-dictd
Sep 09 18:23:59 <stennowork>	hm the name substack is so familiar somehow
Sep 09 18:24:05 <shangul>	How do you find all these? When I search I get results about dictionaries in JS...
Sep 09 18:24:37 <stennowork>	shangul, i looked up what a DICT file is, then saw the standard linux program for it, and then googled 'node dictfmt'
Sep 09 18:25:35 <shangul>	stennowork, Got it. Thank you.
Sep 09 18:29:57 <prometh>	mchelen: don't use classes unless you need them... it can be nice to group related functions by type/feature into a single module, similar to lodash:  `import {functionA, functionB} from 'module'`
Sep 09 18:30:43 <mchelen>	prometh: ok yeah that makes sense, what's the difference between a module and just using named exports?
Sep 09 18:30:51 <prometh>	mchelen: no difference
Sep 09 18:31:16 <mchelen>	prometh: ok cool
Sep 09 19:13:35 <shadykhan__>	Hey Guys im running eslint and everytime i run eslint it tells me "jQuery" is undefined but i have it defined in my globals and in my env. Does anyone know what else i could be missing?
Sep 09 19:16:37 <Aquazi>	how is eslint supposed to know that jQuery is an environment varaible?
Sep 09 19:17:22 <gehn>	shadykhan__, defining globals works for me, you did something wrong somewhere
Sep 09 19:20:12 <sillyslux>	you run it from your console?
Sep 09 19:20:28 <shadykhan__>	@sillyslux, running it thru grunt
Sep 09 19:21:23 <sillyslux>	you have an eslintrc?
Sep 09 19:21:58 <prometh>	shadykhan__: get rid of grunt.. just saying
Sep 09 19:22:22 <sillyslux>	have you tried all of these? https://eslint.org/docs/user-guide/configuring#specifying-globals
Sep 09 19:22:36 <sillyslux>	even though, any should work...
Sep 09 19:23:14 <C78>	What happens when you initialize a new WebSocket in the front end with the same url as a WebSocket that was already initialized.  Is new the new initialized WebSocket object ignored or duplicated?
Sep 09 19:23:49 <sillyslux>	C78, you should get a new websocket
Sep 09 19:24:05 <sillyslux>	try it and see in your devtools network pane
Sep 09 19:24:06 <shadykhan__>	@prometh, trying to. Grunt was already built out with this project which blows
Sep 09 19:24:56 <prometh>	shadykhan__: maybe start out by abstracting the grunt tasks to npm scripts, then use eslint's cli directly instead of through grunt
Sep 09 19:24:57 <sillyslux>	does it tell you which file? try /* global jQuery */ in line one
Sep 09 19:25:18 <shadykhan__>	sillyslux, i tried that but then it tells me its already declared
Sep 09 19:25:23 <C78>	ok i thought so.  thanks sillyslux.  is there a way to findout if there's a websocket already opened so not to create a new one with the same url as one that was previously initialize?
Sep 09 19:25:42 <sillyslux>	C78, from code? no
Sep 09 19:26:00 <sillyslux>	you should know what your code does
Sep 09 19:26:15 <sillyslux>	but you can always check your network pane during dev
Sep 09 19:26:42 <sillyslux>	shadykhan__, that's weird
Sep 09 19:27:05 <sillyslux>	already declared... like what? as a global?
Sep 09 19:28:10 <shadykhan__>	sillyslux, "'jquery' is already defined as a built-in global variable" then i get my other jQuery is not defined errors as well
Sep 09 19:28:50 <sillyslux>	oh weird
Sep 09 19:28:56 <sillyslux>	have you tried npx eslint?
Sep 09 19:29:01 <sillyslux>	from your console
Sep 09 19:29:16 <sillyslux>	maybe it's a goofy grunt config
Sep 09 19:29:57 <shadykhan__>	@sillyslux, same issue
Sep 09 19:30:08 <niggler>	silly slux with the cockamamie configs
Sep 09 19:30:24 <sillyslux>	wasn't me
Sep 09 19:30:35 <sillyslux>	I'M INNOCENT
Sep 09 19:36:41 <stenno>	nice, learned a new word
Sep 09 19:37:27 <sillyslux_>	what word what word? lost innernet connection
Sep 09 19:39:50 <prometh>	sillyslux_: "guilty"
Sep 09 19:40:02 <sillyslux_>	nooooo
Sep 09 19:40:16 <sillyslux_>	quilty?
Sep 09 19:40:28 <prometh>	quality?
Sep 09 19:40:54 <sillyslux_>	i don't have these words in my vocabulary
Sep 09 19:41:08 <stenno>	cockamanie
Sep 09 19:41:26 <sillyslux_>	oh that
Sep 09 19:41:27 <stenno>	cockamamie
Sep 09 19:41:29 <switzernauts>	Hi
Sep 09 19:41:36 <sillyslux_>	cockanemie
Sep 09 19:41:59 <prometh>	words are stupid.. sentences are hwere it's at
Sep 09 19:42:17 <sillyslux_>	WORD!
Sep 09 19:42:52 <roomba>	sentences are so last month. paragraphs are where it's at.
Sep 09 19:43:07 <sillyslux_>	word man word
Sep 09 19:43:26 <roomba>	everybody wants to word up but nobody wants to word down. what gives?
Sep 09 19:43:26 <prometh>	very few of us actually write paragraphs, though
Sep 09 19:43:37 <stenno>	paragraphs are lame. a 1200-verse poem in iambic hexameter however..
Sep 09 19:44:09 <switzernauts>	Would someone please help me understand what type of syntax error I make here?
Sep 09 19:44:10 <switzernauts>	https://paste.ofcode.org/gWJDTnjiePzp6hK6GDaGAN
Sep 09 19:44:36 <niggler>	add a semicolon after the test in line 1
Sep 09 19:44:43 <prometh>	roomba: word down? so, like, morse code
Sep 09 19:44:50 <niggler>	and a plus after the test in line 2
Sep 09 19:44:57 <niggler>	and a close parens before the semicolon
Sep 09 19:45:07 <sillyslux_>	you have an escaped close parens
Sep 09 19:45:08 <niggler>	switzernauts: more syntax errors than lines of code
Sep 09 19:45:16 <rustyshackleford>	working with spreadsheets. Is there a nice way to generate a list of keys for a row or column
Sep 09 19:45:36 <niggler>	you can use header:1 to get an array of arrays
Sep 09 19:45:37 <rustyshackleford>	['A1', ..., 'A99']
Sep 09 19:45:38 <sillyslux_>	and the plus
Sep 09 19:46:30 <sillyslux_>	header what?
Sep 09 19:46:41 <niggler>	rustyshackleford: https://docs.sheetjs.com/#json search for "header is expected to be one of:"
Sep 09 19:47:36 <Donitzo>	v & 0b10 > 0
Sep 09 19:47:37 <switzernauts>	niggler yes, it's just an example out put but it's specifically "cmd /c start iexplore.exe" + " " + "\"www.example.com\auth=" +test "\" I cannot get to work. I tried with a plus after test, still same error
Sep 09 19:47:40 <Donitzo>	damnit! I keep forgetting
Sep 09 19:47:47 <niggler>	var name = test;
Sep 09 19:48:02 <niggler>		getRuntime().exec("cmd /c start iexplore.exe" + " " + "\"www.example.com\auth=" +test + "\");
Sep 09 19:48:08 <prometh>	n> Array.from({length:99}, (_ i) => `A${i + 1}`); @ rustyshackleford
Sep 09 19:48:10 <jellobot>	rustyshackleford, SyntaxError: Unexpected identifier
Sep 09 19:48:12 <niggler>	that resolves the syntax problems
Sep 09 19:48:15 <rustyshackleford>	niggler: so right now I'm just working with a javascript object. WTF, i can't read a local file in the create react app environment?
Sep 09 19:48:23 <sillyslux_>	and an extra " as in "\""
Sep 09 19:48:23 <prometh>	n> Array.from({length:99}, (_, i) => `A${i + 1}`); @ rustyshackleford
Sep 09 19:48:24 <jellobot>	rustyshackleford, [ 'A1', 'A2', 'A3', 'A4', 'A5', 'A6', 'A7', 'A8', 'A9', 'A10', 'A11', 'A12', 'A13', 'A14', 'A15', 'A16', 'A17', 'A18', 'A19', 'A20', ... 79 more items ]
Sep 09 19:48:27 <niggler>	rustyshackleford: so there's a helper function
Sep 09 19:48:44 <sillyslux_>	getRuntime().exec("cmd /c start iexplore.exe" + " " + "\"www.example.com\auth=" +test + "\"");
Sep 09 19:48:45 <rustyshackleford>	the create-react-app environment doesn't have the fs module
Sep 09 19:48:46 <niggler>	encode_col takes a 0-indexed number and generates the column letters
Sep 09 19:49:05 <niggler>	to read from a react app you need to do one of three things
Sep 09 19:49:14 <niggler>	1) read from the local computer using FileReader
Sep 09 19:49:21 <niggler>	2) read from the server using an XHR or fetch
Sep 09 19:49:33 <niggler>	3) read compile time using your bundler to generate a base64 blob
Sep 09 19:50:09 <niggler>	technically there's (4) use VBScript but that only works in IE
Sep 09 19:50:28 <rustyshackleford>	just prototyping so i'm looking for the easiest way now. I was just going to ship the xlsx sheet in the src/ directory
Sep 09 19:50:56 <niggler>	you can stick it in a /public directory and fetch it
Sep 09 19:51:02 <luist>	hey, does my prototype make sense? it’s a event tracker: https://paste.ofcode.org/LenZpZ5ed2teWeGA8h9c46
Sep 09 19:51:10 <niggler>	OR configure file-loader to support xlsx files
Sep 09 19:51:33 <switzernauts>	niggler thank you very much, that worked. Much appreciated
Sep 09 19:53:47 <stenno>	if only there was a spreadsheet expert here
Sep 09 19:54:30 <sillyslux_>	luist you lose your constructor function
Sep 09 19:54:41 <sillyslux_>	loose
Sep 09 19:54:51 <luist>	hows that
Sep 09 19:55:03 <sillyslux_>	by reassigning an object to .prototype
Sep 09 19:55:37 <sillyslux_>	either use Object.assign or write it all out for each method
Sep 09 19:57:33 <sillyslux_>	also you have this.data = {}; and this.data.push
Sep 09 19:58:21 <luist>	sillyslux_: like this?     EventTracker.prototype = Object.assign({
Sep 09 19:58:28 <sillyslux_>	no
Sep 09 19:58:39 <sillyslux_>	Object.assign(EventTracker, {...
Sep 09 19:59:30 <sillyslux_>	use .push to append to arrays []
Sep 09 20:02:56 <luist>	hm okay
Sep 09 20:03:43 <luist>	sillyslux_: how can i send an event now?
Sep 09 20:04:47 <sillyslux_>	https://developer.mozilla.org/en-US/docs/Web/Guide/Events/Creating_and_triggering_events
Sep 09 20:04:57 <rustyshackleford>	niggler: public directory worked like a charm
Sep 09 20:04:59 <rustyshackleford>	for the time being
Sep 09 20:05:00 <devsnek>	luist: your prototype was just fine in the code you posted
Sep 09 20:05:04 <rustyshackleford>	thanks bro
Sep 09 20:05:27 <devsnek>	i dunno what sillyslux is on
Sep 09 20:05:34 <sillyslux_>	hmm
Sep 09 20:06:14 <sillyslux_>	function test(){} -> test.prototype -> {constructor: ƒ}
Sep 09 20:06:44 <sillyslux_>	test.prototype = {a: 1} -> test.prototype {a: 1}
Sep 09 20:06:52 <sillyslux_>	no more constructor: ƒ
Sep 09 20:07:48 <luist>	uh??
Sep 09 20:08:00 <sillyslux_>	therefore Object.assign
Sep 09 20:08:14 <sillyslux_>	or test.prototype.a = 1
Sep 09 20:08:27 <sillyslux_>	or Util.somethingIforgot
Sep 09 20:08:42 <sillyslux_>	isn't it?
Sep 09 20:09:27 <devsnek>	luist: add `constructor: EventTracker`
Sep 09 20:09:30 <devsnek>	to your prototype
Sep 09 20:09:30 <sillyslux_>	util.inherits(...);
Sep 09 20:09:46 <sillyslux_>	oic
Sep 09 20:13:58 <luist>	iim getting confused
Sep 09 20:14:11 <luist>	constructor where
Sep 09 20:14:30 <luist>	object assign or not?
Sep 09 20:14:41 <sillyslux_>	you can do what devsnek said
Sep 09 20:14:47 <sillyslux_>	or any of what i said
Sep 09 20:14:51 <sillyslux_>	does all the same
Sep 09 20:15:08 <sillyslux_>	but you need it to instantialize with the keyword new
Sep 09 20:15:11 <sillyslux_>	(i think)
Sep 09 20:15:59 <stenno>	learned another new word 'instantialize' :D
Sep 09 20:17:09 <sillyslux_>	instantiate?
Sep 09 20:17:15 <stenno>	yeah :)
Sep 09 20:17:28 <sillyslux_>	:P
Sep 09 20:18:18 <luist>	event = new EventTracker('Signed Up Confirmation', {});
Sep 09 20:18:19 <luist>	event.send();
Sep 09 20:18:19 <sillyslux_>	Instantiation refers to the process of creating an instance of a class definition, this term is only applicable to classes. Instantialization differs in that it refers to the process of creating a strongly typed instance of a template definition.
Sep 09 20:18:23 <sillyslux_>	hah there's both
Sep 09 20:18:23 <luist>	like this?
Sep 09 20:18:34 <stenno>	oh!
Sep 09 20:18:43 <stenno>	then i learned a new word unironically
Sep 09 20:18:52 <sillyslux_>	yeah me too...
Sep 09 20:18:56 <stenno>	:D
Sep 09 20:19:01 <prometh>	i learned a new word: "words"
Sep 09 20:19:12 <sillyslux_>	WORD! man word
Sep 09 20:19:29 <stenno>	No manual entry for word
Sep 09 20:19:33 <prometh>	another word: action
Sep 09 20:19:53 <prometh>	another word: write
Sep 09 20:20:08 <prometh>	another word: bullshit :)
Sep 09 20:20:10 <luist>	can we go back to javascript? haha
Sep 09 20:20:21 <sillyslux_>	luist, too bad that i don't know analytics
Sep 09 20:20:36 <luist>	i just want to call the function passing the event name :)
Sep 09 20:21:00 <prometh>	luist: you can just `new Something.methid()`
Sep 09 20:21:03 <prometh>	s/methid/method/
Sep 09 20:21:14 <luist>	ok
Sep 09 20:21:17 <prometh>	oops... `new Something().method()`
Sep 09 20:22:32 <luist>	im getting Uncaught ReferenceError: EventTracker is not defined
Sep 09 20:22:50 <prometh>	i can't help you there :P
Sep 09 20:23:00 <prometh>	either no global or no import
Sep 09 20:23:06 <sillyslux_>	try it in your console
Sep 09 20:23:06 <sillyslux_>	after all of your page has loaded
Sep 09 20:23:29 <sillyslux_>	window.EventTracker = EventTracker;
Sep 09 20:26:09 <luist>	got this: Uncaught TypeError: this.setServiceDefaults is not a function
Sep 09 20:28:27 <luist>	weird
Sep 09 20:30:02 <sillyslux_>	how did you instantiate?
Sep 09 20:30:13 <sillyslux_>	and use
Sep 09 21:10:51 <xvx>	Using function myFun(...rest), how can I insert objects?
Sep 09 21:11:10 <GreenJello>	xvx, not sure what you mean
Sep 09 21:11:20 <xvx>	currently I'm losing the object name (e.g. name:"john" becomes 0: "John")
Sep 09 21:11:21 <xvx>	https://paste.ee/p/n9oLe
Sep 09 21:11:46 <devsnek>	`myFun(name="Bob", age=24);` isn't valid js
Sep 09 21:11:56 <GreenJello>	xvx, that's not the syntax for for defining an object
Sep 09 21:12:07 <GreenJello>	xvx, you're assigning global variables to those values
Sep 09 21:12:17 <GreenJello>	myFun({ name: 'Bob', age: 24 })
Sep 09 21:12:40 <xvx>	I've been doing your code snippet
Sep 09 21:13:41 <xvx>	but in this situation, I need to use ...rest for unknown function parameters greenJello
Sep 09 21:14:01 <GreenJello>	xvx, it's really not clear what you're trying to do here
Sep 09 21:15:25 <xvx>	the code snippet you put returns:    0: Object { name: "Bob", age: 24 }
Sep 09 21:16:06 <xvx>	but I need those two objects separetely
Sep 09 21:16:12 <GreenJello>	xvx, so pass two objects?
Sep 09 21:18:29 <xvx>	Like this?   `myFun({name:"Bob"}, {age:24});`
Sep 09 21:18:35 <GreenJello>	yep
Sep 09 21:18:58 <xvx>	that encases first object with 0, second one with 1
Sep 09 21:19:09 <devsnek>	!xy
Sep 09 21:19:10 <ecmabot>	devsnek: The XY problem: You want to do X, but don't know how. You think you can solve it using Y, but don't know how to do that either. You ask about Y, which is a strange thing to want to do. Just ask about X. See also: http://xyproblem.info/
Sep 09 21:19:24 <xvx>	but I want name and age to be the object names, not a value
Sep 09 21:19:36 <GreenJello>	xvx, "object name" isn't a thing
Sep 09 21:19:48 <xvx>	object key or whatever term lol
Sep 09 21:20:03 <bprompt>	!yz
Sep 09 21:20:16 <GreenJello>	xvx, that's what my example did
Sep 09 21:20:22 <GreenJello>	xvx, but then you're pushing it onto an array
Sep 09 21:20:34 <GreenJello>	arrays have integer keys
Sep 09 21:20:54 <GreenJello>	xvx, step back and explain what you're actually trying to do
Sep 09 21:21:33 <bprompt>	xvx:   what others are saying is just you need to disclose "the full monty", so we know what's cooking
Sep 09 21:23:47 <xvx>	looking into it atm
Sep 09 21:25:25 <xvx>	I want to append all those object parameters to this (already set) JSON:     props = {...props,"required": required,}
Sep 09 21:26:00 <xvx>	using `...rest` (because they're unknown)
Sep 09 21:28:49 <sillyslux__>	n> opts={abc: 1}; function myFun(...rest){Object.assign(opts, ...rest)}; myFun({name:"Bob"}, {age:24}); opts
Sep 09 21:28:51 <jellobot>	(okay) { abc: 1, name: 'Bob', age: 24 }
Sep 09 21:32:09 <xvx>	that looks good sillyslux_
Sep 09 21:32:23 <xvx>	is there a way to get it so just this syntax is needed: myFun(name:"Bob", age:24);
Sep 09 21:34:19 <jayjo>	I'm trying to merge an array with data with an undefined placeholder array so I can always have an array of minimum length. return Object.assign([], new Array(6), myData) is what I've tried - do I need to have something other than 'undefined' in my placeholder array to get this to work?
Sep 09 21:34:31 <xvx>	without the {} around each parameter
Sep 09 21:34:35 <sillyslux__>	no
Sep 09 21:34:38 <jaawerth>	xvx: no because that's not a valid object or even valid js syntax
Sep 09 21:34:43 <sillyslux__>	that's a syntax error
Sep 09 21:36:02 <jaawerth>	you can do myFun({name: 'Bob', age: 24}) and have it still work with sillyslux__'s example just as well as myFun({name: 'Bob'}, {age: 24}) though
Sep 09 21:36:16 <jayjo>	n> Object.assign([], new Array(6), ['test'])
Sep 09 21:36:18 <jellobot>	(okay) [ 'test' ]
Sep 09 21:36:36 <devsnek>	is the rest args here just for kwargs
Sep 09 21:36:56 <jayjo>	I would like that to return ['test', undefined, undefined, undefined, undefined, undefined]
Sep 09 21:37:07 <devsnek>	jayjo: never use the Array constructor
Sep 09 21:37:50 <xvx>	Is it not possible at all to use the name of the kwarg in addition to the kwarg's value?
Sep 09 21:37:51 <devsnek>	jayjo: `Array.from({ length: 6 })`
Sep 09 21:37:58 <devsnek>	js doesn't have kwargs
Sep 09 21:38:04 <devsnek>	at all
Sep 09 21:38:11 <sillyslux__>	lol wat?
Sep 09 21:38:20 <xvx>	yea it does lol
Sep 09 21:38:25 <xvx>	I'm using them right now
Sep 09 21:38:29 <devsnek>	that's news to me
Sep 09 21:38:32 <jaawerth>	no it doesn't - yo ucan pass an object and use destructuring
Sep 09 21:38:35 <sillyslux__>	"*args and **kwargs magic variables." lol
Sep 09 21:38:36 <xvx>	function myFun(...kwargs)
Sep 09 21:38:41 <jaawerth>	which is effectively kwargs but isn't kwargs
Sep 09 21:38:42 <devsnek>	those aren't kwargs
Sep 09 21:38:43 <devsnek>	that's rest args
Sep 09 21:38:50 <xvx>	ah yes
Sep 09 21:38:52 <devsnek>	it handles an unknown number of arguments
Sep 09 21:38:54 <devsnek>	not kwargs
Sep 09 21:39:03 <xvx>	that is unknown number
Sep 09 21:39:10 <devsnek>	kwargs is named arguments
Sep 09 21:39:19 <devsnek>	...args is like *args
Sep 09 21:39:21 <jayjo>	devsnek: even using that to create the placeholder array doesn't merge them correctly
Sep 09 21:39:21 <devsnek>	in python
Sep 09 21:39:28 <xvx>	my questions here have been about named args lol
Sep 09 21:39:42 <devsnek>	n> Object.assign([], Array.from({ length: 6 }), ['test'])
Sep 09 21:39:44 <jellobot>	(okay) [ 'test', undefined, undefined, undefined, undefined, undefined ]
Sep 09 21:40:04 <devsnek>	xvx: in js we call functions with object literals
Sep 09 21:40:14 <devsnek>	`myFunction({ a: 5, b: 10 })`
Sep 09 21:40:19 <devsnek>	instead of `myFunction(a=5, b=10)`
Sep 09 21:40:37 <xvx>	yea I'm used to python
Sep 09 21:41:05 <jaawerth>	n> const foo = ({ a, b, c }) => `a is ${a}, b is ${b}, c is ${c}`; foo({a: 1, b: 2, c: 3}) @xvx
Sep 09 21:41:06 <jellobot>	xvx, 'a is 1, b is 2, c is 3'
Sep 09 21:41:30 <devsnek>	object destructuring ^
Sep 09 21:41:51 <jaawerth>	yeah that's just passing an object and then destructuring, which is the route to kwargs in js
Sep 09 21:42:43 <jaawerth>	and with default values:
Sep 09 21:42:47 <jaawerth>	n> const foo = ({a = 1, b = 2, c = 3} = {}) => `a is ${a}, b is ${b}, c is ${c}`; foo({b: 9000});
Sep 09 21:42:48 <jellobot>	(okay) 'a is 1, b is 9000, c is 3'
Sep 09 21:44:01 <jaawerth>	you don't necessarily need the = {} there, it depends on whether you want a default object when foo() is invoked with no args, or an error (sometimes the error is good for catching bugs if the function should ALWAYS get some kind of object passed to it)
Sep 09 21:44:17 <Alexendoo>	Huh neat, caniuse shows data from MDN now too
Sep 09 21:50:56 <laravel7>	is the prisma way to go graphql backend in 2019?
Sep 09 21:51:28 <jayjo>	if Array.from({ length: 6 }) is how to create an array of undefined, what's the best way to create an array of length n with an object like {msg: 'test'}
Sep 09 21:52:08 <devsnek>	Array.from takes an optional callback
Sep 09 21:52:13 <devsnek>	!mdn Array.from
Sep 09 21:52:15 <jellobot>	devsnek, Array.from(), JavaScript - The Array.from() method creates a new, shallow-copied Array instance from an array-like or iterable object. https://mdn.io/array-from
Sep 09 21:52:29 <deltab>	jayjo: the same object or multiple?
Sep 09 21:54:15 <jayjo>	I would like to construct an array of n=6 objects with a payload along the lines of {"loaded": false}. So from the example before, Object.assign([], Array.from({ length: 6 }), ['test']), 'test' is the data payload object, and I want the undefined objects from the first list to be {loaded: false}
Sep 09 21:55:35 <GreenJello>	Object.assign(Array.from({ length: 6 }, () => ({ loaded: false })), ['test'])
Sep 09 21:56:39 <GreenJello>	jayjo, though it will set the value to `undefined` if there is a key for it in the array
Sep 09 21:56:49 <GreenJello>	e.g. [] is different from [undefined]
Sep 09 21:58:03 <GreenJello>	Array.from({ length: 6 }, () => ({ loaded: false })).map((x, i) => arr[i] == null ? x : arr[i]) would solve for ignoring null/undefined values
Sep 09 22:00:09 <prometh>	laravel7: prisma 1.0 was weird
Sep 09 22:00:48 <prometh>	laravel7: this is probably the next big thing: https://github.com/graphile/postgraphile
Sep 09 22:01:30 <prometh>	or perhaps https://github.com/ehmicky/autoserver
Sep 09 22:01:47 <prometh>	those both may be for 2020, though
Sep 09 22:03:13 <prometh>	jayjo: why are you using Object.assign() ?
Sep 09 22:04:15 <laravel7>	are there any human friendly tutorials how to use it beside the docs?
Sep 09 22:04:32 <bberry>	anyone happen to know if there is there a way to get a md5 (or comparable) hash of an object in an S3 bucket?  i have huge files there and i dont want to have to download them before i hash them
Sep 09 22:04:35 <prometh>	laravel7: "it" being prisma?
Sep 09 22:04:57 <laravel7>	this postgres solution
Sep 09 22:05:06 <prometh>	laravel7: i haven't tried them yet
Sep 09 22:05:08 <bogdaniel>	hey guys. been playing a little with classes in js. Any advice on how to do this better ? https://jsfiddle.net/bogdaniel/dnamxjre/
Sep 09 22:05:17 <GreenJello>	bberry, I believe you'd have to add tags to it yourself
Sep 09 22:05:36 <bberry>	ah hmm... and just get the tags
Sep 09 22:05:40 <bberry>	that might work actually
Sep 09 22:05:51 <prometh>	bogdaniel: you don't need constructor() if all you do is call super()
Sep 09 22:06:00 <prometh>	bogdaniel: don't use for()
Sep 09 22:06:34 <laravel7>	sequelize or mongoose with apollo server are outdated tech today?
Sep 09 22:06:49 <bogdaniel>	prometh, i see :-)
Sep 09 22:06:52 <prometh>	bogdaniel: no need for __proto__ if you use babel
Sep 09 22:07:11 <prometh>	bogdaniel: and, yo ushouldn't need it anyway... dunno about browser limitations
Sep 09 22:08:03 <GreenJello>	bogdaniel, Object.assign(ArrayExtension.prototype); does nothing
Sep 09 22:08:32 <prometh>	bogdaniel: you could add a `static from(obj){}` for ArrayExtention.from() for converting existing objects
Sep 09 22:09:17 <laravel7>	there are not much examples or tuts on how to properly structure react-native app with useReducer, useContext, custom hooks and apollo client, you have to reinvent it on your own
Sep 09 22:09:39 <GreenJello>	bogdaniel, you can just remove the Object.assign, so .__proto__ = ArrayExtension.prototype; or Object.setPrototypeOf(seats, ArrayExtension.prototype)
Sep 09 22:09:45 <prometh>	laravel7: mongoose was never a good idea
Sep 09 22:11:00 <GreenJello>	prometh, from already works
Sep 09 22:11:44 <GreenJello>	static methods are inherited, and .from isn't hard-coded to use Array
Sep 09 22:11:47 <bogdaniel>	GreenJello, yeah was trying to figure it out how assign the new prototype to the object. i was counting that someone from here already did something like this before me. :D
Sep 09 22:12:28 <deltab>	n> Object.setPrototypeOf
Sep 09 22:12:30 <jellobot>	(okay) [Function: setPrototypeOf]
Sep 09 22:12:53 <GreenJello>	bogdaniel, const myArray = ArrayExtension.from(seats); or ArrayExtension.from(document.querySelectorAll(".carousel-seat"))
Sep 09 22:13:20 <GreenJello>	bogdaniel, you generally don't modify the prototype of existing objects
Sep 09 22:13:54 <deltab>	that, I thinkn> const o = {x: 1}; Object.setPrototypeOf(o, {f() { console.log(this); }}); o.f()
Sep 09 22:13:59 <deltab>	n> const o = {x: 1}; Object.setPrototypeOf(o, {f() { console.log(this); }}); o.f()
Sep 09 22:14:01 <jellobot>	(okay) { x: 1 } undefined
Sep 09 22:14:16 <devsnek>	bogdaniel: `const seats = new ArrayExtension(...document.querySelectorAll(".carousel-seat"))`
Sep 09 22:14:25 <bogdaniel>	GreenJello, didn't know i shouldn't modify the prototype.
Sep 09 22:15:12 <deltab>	not just mutating the existing prototype, but also not replacing it?
Sep 09 22:15:21 <GreenJello>	bogdaniel, if you just created the thing and then immediately change the prototype, it's not really bad, just weird
Sep 09 22:15:39 <GreenJello>	bogdaniel, it does mean that your constructor won't run for it, which could cause issues
Sep 09 22:15:56 <GreenJello>	not in this case since your constructor doesn't do anything
Sep 09 22:16:18 <devsnek>	i think i solved this
Sep 09 22:16:25 <deltab>	you can set the constructor when creating an object using Object.create
Sep 09 22:16:32 <deltab>	er, set the prototype
Sep 09 22:16:42 <GreenJello>	devsnek, lol, just use .from
Sep 09 22:16:54 <prometh>	we could write binary
Sep 09 22:17:41 <devsnek>	oh yeah Array.from checks the receiver
Sep 09 22:17:47 <devsnek>	`const seats = ArrayExtension.from`
Sep 09 22:21:01 <evulish>	are stage 3 proposals _definitely_ making it into the spec?
Sep 09 22:21:05 <ljharb>	evulish: no
Sep 09 22:21:08 <ljharb>	evulish: but, probably
Sep 09 22:21:50 <evulish>	where do proposals usually get stopped? stage 0/1?
Sep 09 22:22:07 <devsnek>	0 or 1 or 2
Sep 09 22:22:15 <evulish>	is it common in 2?
Sep 09 22:22:28 <devsnek>	a lot of stuff stalls at 2 cuz that's where all the exact semantics show up
Sep 09 22:22:52 <devsnek>	asking for stage 3 is basically saying your proposal in its current form is what should be in the language
Sep 09 22:22:54 <evulish>	ah a "this is harder than we thought" rather than "no we don't want this"
Sep 09 22:23:03 <ljharb>	evulish: there's no "one place" they get stopped
Sep 09 22:23:05 <devsnek>	well
Sep 09 22:23:13 <devsnek>	sometimes its "no we don't want this"
Sep 09 22:23:13 <codster>	Hello. Promise question. In a Promise.all([...]), how do I convert a function into an anon function? I tried this: https://repl.it/repls/GargantuanLivelySection but it seems to gobble up the exception when I convert "test3()" to "async () => await xxx()".
Sep 09 22:24:10 <ljharb>	evulish: 0 is kind of like "i have a crazy idea", 1 is that the committee wants to talk about it more, 2 is "a solution to this problem is something we want in the language, and this solution seems like the one we're going with", 3 is "this exact solution is what we think belongs in the language, so unless there's unexpected user or implementation feedback, it's going in", and 4 is "it's shipped to > 50% of the web, and it's in"
Sep 09 22:25:07 <devsnek>	codster: you forgot to call the function
Sep 09 22:25:14 <jaawerth>	it's worth looking at the actual criteria, since each proposal has a set of benchmarks to reach before it can progress https://tc39.es/process-document/
Sep 09 22:25:38 <evulish>	i'd be interested in seeing a breakdown of how many proposals don't make it past x stage
Sep 09 22:26:11 <devsnek>	i'm not looking forward to writing tests for my proposal
Sep 09 22:26:14 <devsnek>	i'm terrible at tests
Sep 09 22:26:18 <jaawerth>	sometimes proposals take a long time to die
Sep 09 22:26:31 <jaawerth>	like they just sit around in stage X for a while
Sep 09 22:26:46 <devsnek>	the champion might move jobs
Sep 09 22:26:51 <ljharb>	and sometimes they sit around for awhile and then make it in
Sep 09 22:26:52 <bradleymeck>	like mine! too many things to do ;p
Sep 09 22:26:52 <jaawerth>	like I don't even know what's going on with decorators rn
Sep 09 22:26:53 <devsnek>	or get busy with something else at their job
Sep 09 22:27:01 <ljharb>	jaawerth: that's a bit of a strange situation
Sep 09 22:27:06 <bradleymeck>	jaawerth: they got *changed* a lot
Sep 09 22:27:11 <codster>	@devsnek hmm, i want the "doSomethingNotWhatIWant().then()" to call the anon function, what syntax would I need to do to use? "() => new Promise(...)"?
Sep 09 22:27:18 <devsnek>	decorators are strange because the proposal made it to stage 2 and then they made it really bad
Sep 09 22:27:21 <ljharb>	jaawerth: mainly that all the stage 2 constraints were met, but then browsers were convinced it would be super slow to implement them
Sep 09 22:27:38 <devsnek>	it added a lot of machinery
Sep 09 22:27:40 <laravel7>	is this worth of time? https://www.youtube.com/user/99baddawg/playlists
Sep 09 22:27:40 <ljharb>	jaawerth: so the brand new form of it is a kind of moonshot to invent an entirely new proposal that solves the problems, meets the constraints, and isn't slow
Sep 09 22:27:56 <ljharb>	jaawerth: the brand new form being "static decorators" as opposed to "stage 2 dynamic decorators" as opposed to "stage 1 decorators"
Sep 09 22:28:06 <jaawerth>	ahh makes sense. kinda
Sep 09 22:28:26 <devsnek>	i hope they don't get past in their current form
Sep 09 22:28:32 <devsnek>	even worse than private fields
Sep 09 22:28:54 <devsnek>	so much ugly stuff happening to js lately :(
Sep 09 22:29:33 <bogdaniel>	GreenJello, prometh thanks for the advices helped me a lot to improve it. :-)
Sep 09 22:29:39 <prometh>	+1
Sep 09 22:29:50 <bradleymeck>	classes are still rocking the boat for sure
Sep 09 22:30:06 <devsnek>	so many people are trying to make them like classical classes
Sep 09 22:30:07 <prometh>	you don't need classes most of the time
Sep 09 22:30:11 <devsnek>	but they aren't
Sep 09 22:30:16 <devsnek>	and it just makes the language suck
Sep 09 22:30:30 <devsnek>	we could've had a generalized private symbol type
Sep 09 22:30:37 <devsnek>	but instead we have some ugly thing on classes
Sep 09 22:30:42 <bradleymeck>	i enjoy classes for a lot of uses
Sep 09 22:30:43 <prometh>	devsnek: no, we couldn't have `private`
Sep 09 22:30:53 <devsnek>	prometh: i'm talking about private symbols
Sep 09 22:30:57 <devsnek>	symbols that can't be enumerated
Sep 09 22:31:00 <bradleymeck>	prometh: not the keyword, the semantics
Sep 09 22:31:06 <laravel7>	its funny how on github most stars have outdated projects because you need time to collect stars
Sep 09 22:31:07 <prometh>	bradleymeck: we have private semantics
Sep 09 22:31:11 <devsnek>	i don't have anything against classes
Sep 09 22:31:18 <devsnek>	i have many things against class fields
Sep 09 22:31:23 <prometh>	use classes when you need them... that's it
Sep 09 22:31:26 <prometh>	use the right tool for the job
Sep 09 22:31:29 <devsnek>	no one disagrees with you
Sep 09 22:31:44 <bradleymeck>	prometh: https://docs.google.com/presentation/d/1HWM_pREmpz7QN9VrNeFt5T-x6CfKBL06pXhiQcxgfgU/edit is what we are talking about
Sep 09 22:31:50 <Dirak>	what kind of metrics do browser implements point to when it comes to performance? Do they create fixtures and measure time to run a process?
Sep 09 22:31:55 <prometh>	class fields are great for hiding code from consumers
Sep 09 22:32:00 <devsnek>	i'm so mad this got turned down
Sep 09 22:32:05 <ljharb>	prometh: private fields, you mean
Sep 09 22:32:08 <bradleymeck>	prometh: would go up the proto chain and not do brand checks
Sep 09 22:32:08 <devsnek>	v8's been using private symbols for years
Sep 09 22:32:10 <prometh>	ljharb: yeah
Sep 09 22:32:12 <devsnek>	because they work really well
Sep 09 22:32:15 <deltab>	codster: (async ...)()
Sep 09 22:32:26 <ljharb>	the proto chain part was a big part of the problem
Sep 09 22:32:50 <ljharb>	devsnek: private fields are awesome.
Sep 09 22:33:01 <jaawerth>	I haven't checked on the first-class protocols proposal in a while because I'm scared
Sep 09 22:33:03 <jaawerth>	I really want them
Sep 09 22:33:06 <prometh>	bradleymeck: yes, i've used those... they're nice
Sep 09 22:33:08 <devsnek>	ljharb: not in their current iteration
Sep 09 22:33:08 <codster>	@deltab ahh thank you, i'll try it
Sep 09 22:33:10 <bradleymeck>	everything is fine / nothing is perfect
Sep 09 22:33:10 <ljharb>	there's no reason they couldn't be backed by private symbols if that ever happened
Sep 09 22:33:14 <ljharb>	devsnek: yes, as is they're ideal
Sep 09 22:33:26 <devsnek>	this slide in particular https://docs.google.com/presentation/d/1HWM_pREmpz7QN9VrNeFt5T-x6CfKBL06pXhiQcxgfgU/edit#slide=id.g487eecbd48_0_159
Sep 09 22:33:28 <ljharb>	jaawerth: no progress, so nothing new
Sep 09 22:33:32 <jaawerth>	ah ok
Sep 09 22:33:44 <prometh>	ljharb: why is there no progress on getting URL and Decimal into spec?
Sep 09 22:33:51 <devsnek>	ljharb: we could've gotten something more generalized
Sep 09 22:34:03 <ljharb>	devsnek: "proving the shape" isn't interesting, thats protocols
Sep 09 22:34:08 <devsnek>	its probably the single most unjavascript thing added
Sep 09 22:34:09 <jaawerth>	Decimal is hard
Sep 09 22:34:12 <devsnek>	lolwhat
Sep 09 22:34:18 <devsnek>	the entire branding argument is proving something is x
Sep 09 22:34:22 <devsnek>	which i think is stupid
Sep 09 22:34:26 <ljharb>	devsnek: *is*. not "has the shape of"
Sep 09 22:34:32 <devsnek>	i agree with that
Sep 09 22:34:38 <devsnek>	which is why i think private fields are stupid
Sep 09 22:34:39 <ljharb>	devsnek: brand checks are part of the language, have always been, and are great.
Sep 09 22:34:49 <jaawerth>	also Decimal is one of those things engines might not want to build in, I would imagine
Sep 09 22:34:53 <sgt_chuckles>	I have a page that loads via click from an webgl page where the link is embedded within the xml file. But when the link opens in the browser, the ampersand is encoded as '&amp;'. How do I fix this in js?
Sep 09 22:34:55 <devsnek>	`O.[[X]]` doesn't do a brand check
Sep 09 22:34:55 <ljharb>	private symbols would be the same
Sep 09 22:35:07 <devsnek>	the spec has always manually checked for O to have [[X]]
Sep 09 22:35:07 <prometh>	jaawerth: why wouldn't we want it built in? using strings is dumb
Sep 09 22:35:17 <ljharb>	devsnek: sure. but if it's doing the lookup without the check, it's a spec bug
Sep 09 22:35:22 <devsnek>	not a runtime error
Sep 09 22:35:24 <ljharb>	devsnek: iow, the brand check is required, it's just not implicit
Sep 09 22:35:27 <devsnek>	in theory it should crash the engine
Sep 09 22:35:29 <bradleymeck>	prometh: no real reason to add URL (which does change over time [very slowly]). Per Decimal, just bandwidth of champions and BigInt still settling
Sep 09 22:35:31 <ljharb>	devsnek: sure
Sep 09 22:35:33 <devsnek>	there is no js behaviour to describe it
Sep 09 22:35:35 <deltab>	codster: https://repl.it/repls/LinearMammothMathematics
Sep 09 22:35:35 <jaawerth>	prometh: they might not want to implement it. it takes a lot of optimization to have performant precision decimals rather than floating point math
Sep 09 22:35:40 <devsnek>	so trying to extend it to js is stupid
Sep 09 22:35:44 <ljharb>	devsnek: right but the concept of checking a brand is inherent in the language
Sep 09 22:35:57 <ljharb>	devsnek: all the builtins have brand checks.
Sep 09 22:35:57 <devsnek>	the spec does `if O doesn't have x, throw a typeerror`
Sep 09 22:36:03 <devsnek>	so userland should also do that
Sep 09 22:36:05 <jaawerth>	(granted there are already implementations for all the engine host platforms for decimals)
Sep 09 22:36:05 <ljharb>	>> String.prototype.toString.call(3) @ devsnek
Sep 09 22:36:05 <ecmabot>	devsnek: TypeError: String.prototype.toString called on incompatible number
Sep 09 22:36:12 <prometh>	bradleymeck: the reason to add it would be fewer implementations.. nodejs has its own, for example
Sep 09 22:36:14 <ljharb>	devsnek: ah, i see what you're saying
Sep 09 22:36:23 <ljharb>	devsnek: good suggestion, i'll fix the spec :-p
Sep 09 22:36:27 <devsnek>	ljharb: that's why the "spec has brand checks" argument annoys me
Sep 09 22:36:32 <ljharb>	the *language* has them
Sep 09 22:36:38 <ljharb>	what the spec has is irrelevant, sorry if i misspoke
Sep 09 22:36:39 <jaawerth>	prometh: but unlike octal or binary or hex, it's a much bigger change because you have to back it with something that doesn't store it in base 2
Sep 09 22:36:40 <bradleymeck>	prometh: JS spec doesn't mean fewer impls? I'm not sure I follow
Sep 09 22:36:47 <devsnek>	we can't even do "X has private field" in the language
Sep 09 22:36:51 <devsnek>	it's such a horrible design
Sep 09 22:36:56 <bradleymeck>	Also Node's URL parser has a few edge case diffs from Chromium for example
Sep 09 22:36:57 <jaawerth>	since for all those other ones, it's still stored as a float under the hood
Sep 09 22:37:08 <devsnek>	if i was a delegate i would've 100% blocked it
Sep 09 22:37:10 <Dirak>	what's a "brand" in this context?
Sep 09 22:37:11 <prometh>	bradleymeck: if js spec had URL, v8 would have it; meaning it'd be shared for chromium/etc and node.js
Sep 09 22:37:32 <ljharb>	devsnek: i totally agree it's missing that
Sep 09 22:37:41 <bradleymeck>	prometh: I doubt V8 could pull in Chromium's since Chromium's uses Blink to a large degree
Sep 09 22:37:42 <prometh>	bradleymeck: ndoe.js has moved forward faster
Sep 09 22:37:46 <devsnek>	Dirak: some made up concept about instances and constructors
Sep 09 22:37:47 <ljharb>	devsnek: i'm going to make a proposal to add it, fwiw.
Sep 09 22:37:53 <devsnek>	ljharb: cool
Sep 09 22:38:02 <devsnek>	but that doesn't fix private fields yet
Sep 09 22:38:02 <bradleymeck>	in fact parsing URLs is a big bottleneck I've been seeing lately
Sep 09 22:38:05 <devsnek>	since they aren't values
Sep 09 22:38:13 <devsnek>	we can't use them on random objects as we please
Sep 09 22:38:30 <devsnek>	why is my code being held to someone else's api design
Sep 09 22:38:39 <ljharb>	devsnek: it's not
Sep 09 22:38:41 <ljharb>	it's just this one feature
Sep 09 22:38:50 <ljharb>	you can't use `await` in normal functions either
Sep 09 22:38:57 <devsnek>	no this is like
Sep 09 22:39:02 <devsnek>	i have to try/catch obj.#x
Sep 09 22:39:06 <devsnek>	if i don't want it to throw
Sep 09 22:39:11 <devsnek>	it's the reverse of what it should be
Sep 09 22:39:17 <ljharb>	devsnek: yes, i dislike that, but that's an easier fix than the reverse.
Sep 09 22:39:23 <ljharb>	because the brand check is a safety feature.
Sep 09 22:39:23 <devsnek>	not really...
Sep 09 22:39:29 <prometh>	ljharb: what will it look like?: `obj has '#key'` ?
Sep 09 22:39:31 <devsnek>	maybe for you
Sep 09 22:39:44 <devsnek>	it might break my application's safety
Sep 09 22:39:50 *	bradleymeck mumbles something about CORS
Sep 09 22:40:05 <devsnek>	ljharb: plus its not enforced as the first operation of a method call
Sep 09 22:40:08 <devsnek>	so your safety is very unsafe
Sep 09 22:40:11 <ljharb>	prometh: probably just use `in`.
Sep 09 22:40:17 <devsnek>	better do `this.#x;` in the first line
Sep 09 22:40:26 <ljharb>	devsnek: that’s not a requirement of every method tho
Sep 09 22:40:27 <prometh>	ljharb: right, `in`, but '#key' ?
Sep 09 22:40:35 <ljharb>	throwing the first time you find a problem is common.
Sep 09 22:40:39 <devsnek>	ljharb: neither is throwing if something is missing a field lmao
Sep 09 22:40:43 <ljharb>	prometh: `#x in obj`
Sep 09 22:40:49 <deltab>	b> const o = {#x: 1}; '#x' in o
Sep 09 22:40:49 <devsnek>	why would you draw arbitrary lines in the sand
Sep 09 22:40:49 <jellobot>	An async internal error occured: unknown: Unexpected character '#' (1:12)  > 1 |  const o = {#x: 1}; '#x' in o     |             ^
Sep 09 22:40:54 <devsnek>	it just makes life harder for other people
Sep 09 22:41:06 <ljharb>	devsnek: because fields are like internal slots, that’s how they should behave
Sep 09 22:41:22 <deltab>	oh right
Sep 09 22:41:23 <ljharb>	i agree that the lack of a non-throwing check method sucks
Sep 09 22:41:29 <devsnek>	ljharb: except they aren't like slots
Sep 09 22:41:32 <ljharb>	but that’s not what I’d call a blocker
Sep 09 22:41:34 <devsnek>	slots can be used outside of class declarations
Sep 09 22:41:36 <ljharb>	sure they’re like slots
Sep 09 22:41:41 <ljharb>	slots can’t be used in the language
Sep 09 22:41:42 <devsnek>	slots don't have "scope"
Sep 09 22:41:47 <jaawerth>	seems like it should be possible to make it so you can create them using an object literal and access them via methods the same way
Sep 09 22:41:53 <ljharb>	and the only way you can access slots in js itself is via super
Sep 09 22:42:03 <ljharb>	*install
Sep 09 22:42:11 <ljharb>	jaawerth: that’s a followon someone will make
Sep 09 22:42:13 <prometh>	slots? we'r enot talking about custom elements, are we?
Sep 09 22:42:14 <devsnek>	ljharb: i can declare a helper abstract op in the spec that uses a slot
Sep 09 22:42:21 <devsnek>	because slots don't have declarations
Sep 09 22:42:28 <devsnek>	they're just names
Sep 09 22:42:36 <devsnek>	literally smbols
Sep 09 22:42:37 <jaawerth>	ljharb: why not just make it part of the same proposal? seems like finalizing the proposal and then adding that as another one would create more friction
Sep 09 22:42:38 <devsnek>	symbols*
Sep 09 22:42:53 <prussian>	clearly the answer is to just say no to privates
Sep 09 22:43:04 <prometh>	prussian: eww
Sep 09 22:43:10 <devsnek>	in node you can use https://www.npmjs.com/package/@snek/private
Sep 09 22:43:33 <jaawerth>	is that just a wrapper for the weakmap trick?
Sep 09 22:43:36 <devsnek>	no
Sep 09 22:43:43 <jaawerth>	interesting *looks*
Sep 09 22:43:45 <devsnek>	it's actual private symbols
Sep 09 22:43:55 <devsnek>	"in node" is the key phrase there
Sep 09 22:44:03 <jaawerth>	oh, interesting. using native addons?
Sep 09 22:44:06 <devsnek>	yeah
Sep 09 22:44:10 <devsnek>	v8 has had private symbols for years
Sep 09 22:44:14 <devsnek>	because they're actually useful
Sep 09 22:44:20 <devsnek>	this just exposes them
Sep 09 22:44:25 <jaawerth>	yeah makes sense
Sep 09 22:44:37 <prussian>	this might as well be the weakmap trick though.
Sep 09 22:44:59 <devsnek>	prussian: lets you use `[]`
Sep 09 22:45:02 <devsnek>	and doesn't add gc pressure
Sep 09 22:45:17 <devsnek>	because v8 also implemented weakmaps backward
Sep 09 22:45:22 <prometh>	i had initially thought that private fields would be property names (from Object.setProperty)
Sep 09 22:45:30 <prometh>	it seemed like a logical extension of existing js
Sep 09 22:45:32 <ljharb>	jaawerth: because the more that’s added the more likely it is to get nothing at all
Sep 09 22:45:38 <prussian>	I mean at this point, if I had privates, I'd just throw around closures at everything
Sep 09 22:45:43 <prussian>	but cool
Sep 09 22:45:44 <ljharb>	prometh: what is “setProperty”
Sep 09 22:45:52 <prussian>	devsnek: sad
Sep 09 22:45:57 <devsnek>	and because private fields exist
Sep 09 22:46:01 <prometh>	ljharb: defineProperty
Sep 09 22:46:03 <devsnek>	we'll never get private symbols
Sep 09 22:46:10 <ljharb>	prometh: that’s public tho
Sep 09 22:46:12 <devsnek>	i hate this more than i hate ==
Sep 09 22:46:15 <ljharb>	devsnek: that’s not true
Sep 09 22:46:29 <ljharb>	devsnek: private symbols could be added as the backing for private fields, easily.
Sep 09 22:46:35 <prometh>	ljharb: yeah.. the only "private" there is non-enumerable, which is what i thought "#" would be
Sep 09 22:46:43 <prussian>	private as in, they can't be enumerated? at all?
Sep 09 22:46:43 <devsnek>	ok in theory they could
Sep 09 22:46:46 <devsnek>	prussian: yes
Sep 09 22:46:54 <prussian>	damn
Sep 09 22:46:59 <devsnek>	ljharb: in v8 they're already implemented that way
Sep 09 22:47:14 <devsnek>	proposal to add them in that context would be interesting
Sep 09 22:47:19 <prometh>	full private seemed a bit excessive
Sep 09 22:47:26 <prussian>	I mean, are we so fearful that we need such a nuclear hammer to prevent leaking private fields? lol
Sep 09 22:47:30 <ljharb>	prometh: no, it’s absolutely critical
Sep 09 22:47:32 <ljharb>	prussian: yes
Sep 09 22:47:33 <prometh>	ljharb: why?
Sep 09 22:47:38 <devsnek>	private state is good
Sep 09 22:47:41 <ljharb>	prussian: it’s called “any amount of experience”
Sep 09 22:47:53 <ljharb>	prometh: because people break things all the time lacking it
Sep 09 22:47:59 <ljharb>	npm broke node itself once because of it
Sep 09 22:48:04 <prometh>	if they don't know it's there, they are far less likely to use it and break something
Sep 09 22:48:12 <prussian>	and they'll continue to do so either with patch and eval() or some other shit
Sep 09 22:48:13 <jaawerth>	devsnek: what do you mean by the weakmaps being backwards? I haven't looked at the v8 implementation
Sep 09 22:48:28 <prussian>	it's just more ways to try and make introspection harder for no good reason
Sep 09 22:48:38 <devsnek>	jaawerth: implementations of weakmap can either be `object[weakmap] = value` or `weakmap[object] = value`
Sep 09 22:49:18 <jaawerth>	ohh damn
Sep 09 22:49:21 <ljharb>	prometh: not less likely, zero likely. And non enumerable isn’t hidden
Sep 09 22:49:21 <praet>	when you mention "brand" are you skeaping about a specific org's implementation
Sep 09 22:49:22 <jaawerth>	that's unfortunate
Sep 09 22:49:23 <prussian>	this sounds more like an argument for realms than anything else if we're concerned about "breaking"
Sep 09 22:49:28 <devsnek>	jaawerth: the second one requires a bunch of weak references
Sep 09 22:49:28 <praet>	*speaking
Sep 09 22:49:33 <devsnek>	which increase the pressure of the garbage collector
Sep 09 22:49:39 <devsnek>	so its generally better to do the first one
Sep 09 22:49:42 <ljharb>	prometh: symbols are as public as non enumerables
Sep 09 22:49:48 <ljharb>	praet: no, it’s a PLT term
Sep 09 22:50:00 <devsnek>	Object.getOwnPropertySymbols doesn't care about enumerability
Sep 09 22:50:06 <ljharb>	prussian: realms doesn’t save you. Closures do but they’re un ergonomic, often.
Sep 09 22:50:20 <ljharb>	neither does Object.getOwnPropertyNames
Sep 09 22:50:43 <jaawerth>	I am curious about the limitations there. Like, in lua, weak tables are iterable and you can define them such that the key OR value can be weak
Sep 09 22:50:56 <praet>	ljharb: what is PLT?
Sep 09 22:50:58 <jaawerth>	granted that's probably a lot easier in such a simple language
Sep 09 22:51:09 <ljharb>	praet: programming language theory. Google these terms, it’s faster.
Sep 09 22:51:11 <devsnek>	jaawerth: technically weakmaps and such could be enumerable
Sep 09 22:51:22 <devsnek>	in fact in node we use internal weak collection enumeration apis to provide `console.log()`
Sep 09 22:51:26 <ljharb>	that would lose a security property tho
Sep 09 22:51:34 <devsnek>	but yeah
Sep 09 22:51:39 <jaawerth>	true
Sep 09 22:51:40 <ljharb>	also gc
Sep 09 22:51:46 <jaawerth>	it doesn't prevent gc
Sep 09 22:51:50 <praet>	ljharb: got it, thanks. fwiw my google fu turned up nothing
Sep 09 22:51:59 <jaawerth>	or.. it doesn't HAVE to prevent gc
Sep 09 22:52:02 <devsnek>	the primary for no enumeration  though
Sep 09 22:52:14 <devsnek>	is allowing implementations to do the super efficient `object[weakmap] = value`
Sep 09 22:52:35 <jaawerth>	right, *that* makes more sense
Sep 09 22:52:35 <devsnek>	primary reason*
Sep 09 22:52:49 <devsnek>	that's also why symbols aren't valid weakmap keys
Sep 09 22:52:50 <jaawerth>	since that way you can just have the gc of the object itself cascade to the weakmap's contents
Sep 09 22:52:58 <devsnek>	even though they're unforgable
Sep 09 22:53:02 <jaawerth>	which explains the weakrefs you were talking about
Sep 09 22:53:14 <ljharb>	devsnek: except for global symbols
Sep 09 22:53:22 <devsnek>	ljharb: i knew you were gonna say tha tlmao
Sep 09 22:55:50 <ljharb>	:-p
Sep 09 22:56:14 <prussian>	I remain unconvinced, but whatever. more #x's and #foo's and #bar's I guess
Sep 09 22:56:22 <prussian>	I don't think I'll ever use them though
Sep 09 22:56:28 <ljharb>	prussian: of what
Sep 09 22:56:35 <ljharb>	prussian: i assume you recognize the value of closures
Sep 09 22:57:01 <prussian>	what I used closures for, I generally get from es6 classes now
Sep 09 22:57:02 <devsnek>	ljharb: you know what feels the most stupid though
Sep 09 22:57:13 <ljharb>	prussian: there’s no private state there tho
Sep 09 22:57:32 <ljharb>	prussian: so private fields is closures for class instances, ergonomically and performantly.
Sep 09 22:57:38 <prussian>	but yes. I value having magical scopes with cute little variables doing their cute thing.
Sep 09 22:57:38 <ljharb>	devsnek: ?
Sep 09 22:57:42 <devsnek>	ljharb: https://github.com/devsnek/node/blob/cbcdd96c9a393b15c577a8bc75c6e97d44b51c70/lib/internal/vm/source_text_module.js#L190-L194
Sep 09 22:57:51 <devsnek>	this is peak anger for me
Sep 09 22:57:57 <prussian>	and all the beautiful dynamic scoping rules of js
Sep 09 22:58:07 <ljharb>	devsnek: when you can use in, you’ll be fine :-p
Sep 09 22:58:23 <ljharb>	prussian: closures aren’t dynamic scoping, they’re lexical scoping. So is private fields.
Sep 09 22:58:34 <devsnek>	private symbols would be good
Sep 09 23:03:56 <devsnek>	ljharb: https://gc.gy/35768035.png
Sep 09 23:04:40 <ljharb>	devsnek so how can i make a proxy that *blocks* that tunneling?
Sep 09 23:04:46 <devsnek>	🤷🏻
Sep 09 23:04:55 <devsnek>	i suppose proxies could also throw
Sep 09 23:04:59 <devsnek>	i think they throw in v8
Sep 09 23:05:22 <hello_kitty>	when using the performance profiler in chrome, anyone know why the lengths of the function calls are visualized along the timeline as if the functions were all called *right* before a frame ended? Is that just a visual style or does chrome somehow know that my logic is going to take ~1.2 ms and it should run it right before drawing
Sep 09 23:05:23 <devsnek>	i just did https://gc.gy/35768117.png
Sep 09 23:06:02 <devsnek>	hello_kitty: how is your logic scheduled
Sep 09 23:06:10 <hello_kitty>	rAF
Sep 09 23:06:31 <devsnek>	chrome runs those right before the next frame is supposed to be drawn
Sep 09 23:06:49 <ljharb>	devsnek: forcing tunnel, or no tunnel, always, is the problem
Sep 09 23:07:02 <ljharb>	devsnek: it has to be configurable at proxy creation time
Sep 09 23:07:31 <ljharb>	devsnek: ideally also letting me provide private symbols to only allow - or, to only block
Sep 09 23:07:35 <devsnek>	ljharb: what do private fields currently do
Sep 09 23:07:41 <devsnek>	throw for proxies?
Sep 09 23:07:42 <hello_kitty>	how does it know how to run it before the next frame without accidentally running into logic that makes it late?
Sep 09 23:07:46 <ljharb>	Or i suppose just to intercept
Sep 09 23:07:54 <ljharb>	devsnek: yes, they throw, like slots
Sep 09 23:07:58 <devsnek>	hello_kitty: it runs the next frame right after your function ends
Sep 09 23:08:12 <devsnek>	hello_kitty: if your function ran longer, the next frame would render later
Sep 09 23:08:21 <devsnek>	ljharb: so they would have to throw if proposed
Sep 09 23:08:54 <devsnek>	unless we say that `obj.#x` itself is the throwing logic
Sep 09 23:08:57 <ljharb>	devsnek: by default sure
Sep 09 23:09:03 <hello_kitty>	so if i have a 16 ms tick rate, and my logic and rendering together take 1 ms... does it render it and then wait 15 ms...?
Sep 09 23:09:11 <praet>	when dispatching an event is it more useful to have it at the end or the start of the function
Sep 09 23:09:21 <hello_kitty>	because on the timeline it looks like it magically waited 15  ms and then ran my 1 ms of logic just in time
Sep 09 23:09:27 <praet>	like "onStartProcessing"
Sep 09 23:09:31 <hello_kitty>	but maybe that's just... aesthetic..
Sep 09 23:09:37 <devsnek>	hmm
Sep 09 23:09:41 <devsnek>	that could be the aesthetic
Sep 09 23:09:47 <devsnek>	can you show a picture
Sep 09 23:10:17 <hello_kitty>	what's a good site for sharing a pic?
Sep 09 23:10:22 <devsnek>	ljharb: the question is if the syntax `a.#b` throws, or if the proxies throw
Sep 09 23:10:28 <devsnek>	hello_kitty: imgur
Sep 09 23:10:59 <laravel7>	enough material for 5 phd's, this mentality is gone wrong https://github.com/jondot/awesome-react-native
Sep 09 23:11:52 <ljharb>	devsnek: the syntax can’t throw, it’s a runtime check
Sep 09 23:12:01 <devsnek>	ljharb: i mean
Sep 09 23:12:04 <Alexendoo>	What's wrong with collating material about a subject laravel7?
Sep 09 23:12:07 <devsnek>	the runtime semantics of that syntax
Sep 09 23:12:08 <ljharb>	devsnek: so part of the runtime throw behavior could be “check the proxy”
Sep 09 23:12:32 <hello_kitty>	https://imgur.com/a/pxJM83S so the dotted line is the frames, and the grey/yellow stuff are my functions, they're just so small that it isn't writing text. They are 'right justified' meaning they hug the right and I'm wondering if that is a reflection of the actual time at which they were executed, or if the whole frame is just one unit and they
Sep 09 23:12:32 <hello_kitty>	actually ran at the beginning (which would make sense)
Sep 09 23:12:56 <laravel7>	its to much for a human, they should curate it, it isnt such a broad topic
Sep 09 23:13:44 <devsnek>	ljharb: if we added a `Proxy.isProxy` to the language, we could let the receiver decide
Sep 09 23:14:06 <devsnek>	but that has other problems
Sep 09 23:14:40 <Alexendoo>	laravel7: It's not like you're required to read the entire page, each of the subcategories look fairly manageable
Sep 09 23:14:57 <devsnek>	hello_kitty: i think that line is a frame draw
Sep 09 23:15:05 <ljharb>	devsnek: many other problems
Sep 09 23:15:17 <laravel7>	its just to much https://github.com/hsavit1/Awesome-React-Native-Education
Sep 09 23:15:19 <devsnek>	hello_kitty: i think the start of that grey line is when the browser starts wanting to draw a frame
Sep 09 23:15:41 <laravel7>	you cant even scroll it, not read it
Sep 09 23:15:42 <devsnek>	ljharb: but i don't think proxies should decide the private policy for what they wrap
Sep 09 23:16:03 <devsnek>	hello_kitty: start of grey timeline bar i mean
Sep 09 23:17:16 <sillyslux_>	this looks nice https://habd.as/awesome-react-components/#react-native
Sep 09 23:17:26 <hello_kitty>	i'm just mystified by how it would know when to do that, while still having enough time to finish the logic before render time --  like i get that if the logic takes 50 ms then yea the frames end up late, but when the logic takes 2 ms it seems to do it right before rendering instead of at the start of a frame
Sep 09 23:17:56 <hello_kitty>	or this visualizer is just being fancy for some other reasons
Sep 09 23:18:22 <laravel7>	not to mention how much of this is outdated, looks like react-native had its peak at 2017
Sep 09 23:19:14 <hello_kitty>	here's a frame where it claims to have done something at a point in time that isn't right before the render tick: https://imgur.com/a/xcx809k
Sep 09 23:19:23 <hello_kitty>	presumably some settimeout ended or something
Sep 09 23:19:49 <Alexendoo>	6ms is one short frame
Sep 09 23:20:17 <Alexendoo>	Probably a pretty nice monitor you've got there
Sep 09 23:21:11 <ljharb>	devsnek: the person doing the wrapping should be able to tho
Sep 09 23:21:28 <devsnek>	ljharb: the person doing the wrapping doesn't know that private symbols exist
Sep 09 23:21:32 <devsnek>	they're encapsulated in theory
Sep 09 23:21:39 <devsnek>	so they can't make decisions about them
Sep 09 23:21:46 <ljharb>	devsnek: oh sure, i mean if they have the symbols
Sep 09 23:21:59 <devsnek>	ljharb: proxy doesn't know if you have the symbols though :P
Sep 09 23:22:02 <hello_kitty>	144 hz :D.   Looking at these profiles more I can't help but feel like this timeline is real somehow
Sep 09 23:22:05 <ljharb>	devsnek: iow i should be able to say “this symbol here, let it through” or “this symbol here, throw”
Sep 09 23:22:14 <devsnek>	ljharb: now that's a good idea
Sep 09 23:22:14 <ljharb>	devsnek: yes but i can give the symbols to new Proxy
Sep 09 23:22:21 <devsnek>	third argument to new Proxy
Sep 09 23:22:29 <devsnek>	symbols: [x, y, z]
Sep 09 23:22:40 <devsnek>	we solved it
Sep 09 23:23:00 <ljharb>	devsnek: so i could do `new Proxy(target, handlers, { allow: [x,y,z] })` or also `{ disallow: [x,y,z] }` for the inverse behavior.	 1st
Sep 09 23:23:02 <hello_kitty>	and that it really does know to schedule logic at different points in the frame... though i'm not sure how it would know how long that logic would take (unless it spent the first few frames of execution building an assumption about the average length of executing about whatever is being passed to rAF)
Sep 09 23:23:05 <jaawerth>	either that or you'll need a trap for private lookups
Sep 09 23:23:11 <devsnek>	ljharb: ya
Sep 09 23:23:13 <hello_kitty>	english is hard.
Sep 09 23:23:16 <ljharb>	devsnek: and disallow:[] would invert the default
Sep 09 23:23:19 <devsnek>	jaawerth: can't do that
Sep 09 23:23:33 <ljharb>	jaawerth: devsnek well, alternatively, you could say “trap these private symbols” and provide a trap for it.
Sep 09 23:23:40 <ljharb>	then you decide yourself.
Sep 09 23:23:47 <ljharb>	that’s probably clearest
Sep 09 23:23:47 <devsnek>	well
Sep 09 23:23:54 <jaawerth>	yeah that's what I mean
Sep 09 23:23:57 <ljharb>	but then there’s no way to invert
Sep 09 23:23:58 <devsnek>	there are lots of things you can do with private symbols
Sep 09 23:24:10 <devsnek>	i don't want to have to provide `has` and `hasPrivate`
Sep 09 23:24:18 <jaawerth>	that would be annoying, yes
Sep 09 23:24:27 <devsnek>	private symbols are just values
Sep 09 23:24:30 <devsnek>	the existing traps can be used
Sep 09 23:24:52 <devsnek>	i feel like we have a proposal here
Sep 09 23:24:57 <jaawerth>	yeah my bad, I wasn't sure initially if you were talking about private fields or symbols for this
Sep 09 23:25:21 <jaawerth>	but I do think private symbols would be a nicer way to have private fields
Sep 09 23:25:32 <devsnek>	right?
Sep 09 23:25:40 <jaawerth>	in addition to the gc pressure stuff, it would also make it a lot easier to have them on arbitrary objects
Sep 09 23:25:46 <devsnek>	right?
Sep 09 23:25:47 <jaawerth>	it's just a symbol you can't reflect
Sep 09 23:25:52 <devsnek>	right?
Sep 09 23:25:59 <jaawerth>	haha yeah I'm just agreeing with you
Sep 09 23:26:15 <devsnek>	i'm gonna write all this up
Sep 09 23:33:26 <wrkrcoop>	anyone know a good currency formatter library?
Sep 09 23:40:03 <prometh>	wrkrcoop: Intl.NumberFormat
Sep 09 23:52:04 <luist>	how do i check if the object exists? if (window.SomeObject.user != "undefined") {
Sep 09 23:52:05 <luist>	            this.userId = window.SomeObject.user.id;
Sep 09 23:59:11 <prometh>	luist: !== undefined
Sep 09 23:59:21 <nateriver>	 how can i do this with css?  https://images.complex.com/complex/images/c_crop,h_862,w_1533,x_200,y_136/c_scale,q_auto,w_1920/fl_lossy,pg_1/pbakudcgxlfmmduw46iw/sole-supremacy-homepage
Sep 09 23:59:30 <nateriver>	so that the image source is perfectly over the desktop mockup thing
Sep 10 00:00:06 <prometh>	nateriver: absolutely positioned div?
Sep 10 00:00:07 <devsnek>	ljharb: https://feature-private-symbols--devsnek-ecma262.netlify.com/
Sep 10 00:07:08 <ljharb>	specifying it was never the problem
Sep 10 00:08:50 <devsnek>	ljharb: i know i was just bored
Sep 10 00:09:14 <devsnek>	but on the bright side this can theoretically be championed to stage 4 now
Sep 10 00:11:42 <ljharb>	rofl, how so
Sep 10 00:11:54 <ljharb>	v8 isn’t enough impls
Sep 10 00:12:06 <devsnek>	ljharb: i mean using that spec text
Sep 10 00:12:15 <devsnek>	would still need an additional impl
Sep 10 00:12:18 <devsnek>	and some changes to v8
Sep 10 00:12:19 <ljharb>	 oh sure
Sep 10 00:12:23 <ljharb>	also consensus
Sep 10 00:12:29 <devsnek>	pff consensus
Sep 10 00:12:40 <devsnek>	just sneak it in during lunch
Sep 10 00:12:50 <jaawerth>	itym snek it in
Sep 10 00:24:28 <celphi>	i just got a pay raise- :D my hard work is paying off
Sep 10 00:25:42 <GreenJello>	nice :-)
Sep 10 00:27:36 <prometh>	celphi: congrats
Sep 10 00:27:49 <prometh>	celphi: i'm jealous
Sep 10 00:28:03 <celphi>	Thanks :)
Sep 10 00:34:01 <prometh>	celphi: do they need a frontend dev? :)
Sep 10 00:34:24 <celphi>	Are you in the USA?\
Sep 10 00:34:27 <prometh>	canada
Sep 10 00:34:45 <prometh>	my career has been 99% remote
Sep 10 00:34:49 <hmw_metalab>	Assigning HTML to DIV.innerHTML creates an additional, empty <p> element: https://paste.asmcbain.net/a791d0f2 - Any explanations and perhaps nice solutions?
Sep 10 00:34:58 <celphi>	Oh right i remember. Yeah i think they only hiring locally.
Sep 10 00:35:14 <prometh>	celphi: maybe htey'll make an exception for me cuz i'm awesome?
Sep 10 00:35:21 <celphi>	:D
Sep 10 00:37:02 <celphi>	has anyone here used SSE? If so,. is the npm package "sse" the one to use?
Sep 10 00:38:35 <hmw_metalab>	^ happens in Chromium and Firefox, so it doesn't look like a bug, but I can't find anything related on the web either. This can't be intended behaviour, though. Weird.
Sep 10 00:39:12 <GreenJello>	celphi, you probably want something that integrates with express
Sep 10 00:39:35 <GreenJello>	or whatever you use for defining routes
Sep 10 00:39:51 <celphi>	actually i need to add to an existing node web server
Sep 10 00:40:00 <celphi>	and it doesnt use express
Sep 10 00:41:52 <GreenJello>	celphi, it's not documented, but it looks like this could work there
Sep 10 00:42:06 <GreenJello>	celphi, new SSE(server, { path: '/some/route' })
Sep 10 00:42:25 <celphi>	can it be a different origin?
Sep 10 00:42:28 <celphi>	GreenJello:
Sep 10 00:42:54 <devsnek>	celphi: https://www.npmjs.com/package/@snek/sse
Sep 10 00:43:12 <devsnek>	mine is massively simpler and faster
Sep 10 00:43:58 <celphi>	does yours only work with http2?
Sep 10 00:43:59 <systemfault>	Eventually, when all the older IE and pre-chromium Edges are going to be dead... SSEs are going to be usable
Sep 10 00:44:01 <celphi>	devsnek:
Sep 10 00:44:07 <devsnek>	celphi: it works with both
Sep 10 00:45:03 <celphi>	whers your documentation?! :P
Sep 10 00:45:26 <devsnek>	the readme
Sep 10 00:45:47 <devsnek>	i mean the entire lib is 40 lines
Sep 10 00:45:53 <devsnek>	SSE is really simple
Sep 10 00:50:11 <celphi>	what does the client code look like devsnek
Sep 10 00:50:33 <devsnek>	celphi: https://developer.mozilla.org/en-US/docs/Web/API/Server-sent_events/Using_server-sent_events
Sep 10 00:50:42 <celphi>	so the same ok
Sep 10 00:50:57 <devsnek>	sse has a specification
Sep 10 00:51:58 <celphi>	so let me see if i understand it correctly.. the server just emits an event and with your browser you listen for events emitted by server?
Sep 10 00:52:28 <devsnek>	mem
Sep 10 00:52:31 <devsnek>	mhm*
Sep 10 01:00:18 <celphi>	if my server is on a differ domain-- do i add https:// to front of url?
Sep 10 01:00:21 <celphi>	devsnek:
Sep 10 01:00:35 <devsnek>	its like any other url
Sep 10 01:03:30 <celphi>	can you send me that link again for linter for vim
Sep 10 01:03:51 <celphi>	the one where you highlighted that section-- i saved on my laptop but not work computer
Sep 10 01:03:54 <celphi>	devsnek:
Sep 10 01:04:17 <devsnek>	all my dotfiles are here https://github.com/devsnek/dotfiles
Sep 10 01:05:33 <celphi>	i dont see the one you linked in it
Sep 10 01:05:51 <celphi>	i need the lines for adding to vimrc for eslint
Sep 10 01:05:59 <celphi>	devsnek:
Sep 10 01:06:21 <devsnek>	https://github.com/devsnek/dotfiles/blob/c75d4719e1da2eac1a24cabfd3108a33b4f28979/dotfiles/base.vim#L115-L118
Sep 10 01:07:17 <celphi>	ty
Sep 10 01:12:06 <luist>	hey, how can i extend my prototype and change / add one function?
Sep 10 01:12:09 <luist>	https://paste.ofcode.org/fAUbSMKDNMNvZ2vXFQUGTv
Sep 10 01:13:59 <nateriver>	prometh but i absolutely position which div
Sep 10 01:14:00 <nateriver>	and does the screenshot gotta be the same size
Sep 10 01:21:06 <devsnek>	luist: use classes
Sep 10 01:21:49 <sinclair>	vscode, Microsoft going from strength to strength
Sep 10 01:21:55 <luist>	devsnek: how about this approach? https://paste.ofcode.org/32ksGbpHNEGzSb9Z62Mgkah
Sep 10 01:23:13 <devsnek>	luist: kinda nasty, and you'd still need a Super.call in the base class
Sep 10 01:24:06 <sinclair>	gotta wonder, is vscode an IDE yet
Sep 10 01:24:33 <luist>	is that bad?
Sep 10 01:24:57 <sinclair>	the original focus for vscode was to be more text editor than full blown IDE, but as time as gone by, the features and overall functionality is starting to feel pretty IDE-ish
Sep 10 01:25:59 <sinclair>	well, perhaps vscode pushes back on the underlying language tooling to provide the 'bits' that are language specific, things like TypeScript and RLS and other language specifically tooling, but the overall experience is pretty close to that of an IDE
Sep 10 01:34:34 <cjohnson>	I would say anything more involved than "edit text files with syntax highlighting" is an IDE
Sep 10 01:34:42 <cjohnson>	Any programming-specific tooling at all
Sep 10 01:34:53 <cjohnson>	The line is rather fuzzy and not all that useful
Sep 10 01:39:11 <sinclair>	cjohnson, javascript function of the day https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/clz32
Sep 10 01:40:04 <ljharb>	why
Sep 10 01:40:10 <cjohnson>	I'm sure I'll be using it every day from now on
Sep 10 01:40:26 <sinclair>	ljharb, why what?
Sep 10 01:40:30 <ljharb>	why is that notable
Sep 10 01:40:33 <devsnek>	why does clz stop at 32
Sep 10 01:40:37 <devsnek>	:P
Sep 10 01:40:39 <ljharb>	because all bitwise ops are 32
Sep 10 01:40:47 <devsnek>	twas a joke ljharb
Sep 10 01:40:51 <sinclair>	devsnek, The Math.clz32() function returns the number of leading zero bits in the 32-bit binary representation of a number.
Sep 10 01:40:55 <devsnek>	i know
Sep 10 01:40:57 <ljharb>	devsnek: must have been truncated before i got it
Sep 10 01:41:06 <devsnek>	oof
Sep 10 01:41:08 <sinclair>	in a '32-bit binary representation of a number'
Sep 10 01:41:09 <ljharb>	lol
Sep 10 01:41:17 <devsnek>	sinclair: it should just return all the leading zeros
Sep 10 01:42:18 <sinclair>	hmm, i should write a 'javascript function of the day' but that randomly picks something out of MDN to service as a talking point
Sep 10 01:42:54 <sinclair>	*but/bot
Sep 10 01:43:23 <phobosoph>	hi
Sep 10 01:43:59 <sinclair>	would be interesting to write a bot like that, that picks a function, then broadcasts (function of the day) then logs the discussions around it for additional context for developers trying to understand it
Sep 10 01:44:06 <sinclair>	useful stuff
Sep 10 01:44:59 <phobosoph>	hi
Sep 10 01:45:06 <phobosoph>	https://github.com/nodejs/node/issues/21482
Sep 10 01:45:16 <phobosoph>	so the example there works, I can indeed await the connect thing
Sep 10 01:45:27 <phobosoph>	but - I don't have any references to call close() on it for proper shut down
Sep 10 01:48:22 <sinclair>	phobosoph, you mean using promisify to start a web server?
Sep 10 01:48:38 <phobosoph>	sinclair: yes!
Sep 10 01:48:39 <phobosoph>	express
Sep 10 01:48:48 <phobosoph>	I use it for listening to a simple HTTP API method
Sep 10 01:48:49 <sinclair>	phobosoph, you probably can't
Sep 10 01:48:52 <phobosoph>	:(
Sep 10 01:49:05 <sinclair>	const server = http.createServer();
Sep 10 01:49:19 <sinclair>	for (const {req, res} of server.incoming()) { ... }
Sep 10 01:49:27 <sinclair>	server.dispose()
Sep 10 01:49:36 <sinclair>	that seems a more reasonably interface to me
Sep 10 01:49:40 <sinclair>	well...
Sep 10 01:49:45 <sinclair>	for await(const {req, res} of server.incoming()) { ... }
Sep 10 01:51:09 <phobosoph>	sinclair: this would be computionally ok?
Sep 10 01:53:56 <ljharb>	phobosoph: #node.js btw
Sep 10 01:56:04 <phobosoph>	ah ok
Sep 10 01:56:28 <sinclair>	can anyone vouch for Campbells chicken noodle soup?
Sep 10 01:56:56 <sinclair>	anyone from the US
Sep 10 01:57:17 <sinclair>	im looking at the can, and somewhat apprehensive about giving it a try
Sep 10 01:59:15 *	sinclair is not from the US
Sep 10 02:00:58 <celphi>	Hi Sinclair
Sep 10 02:01:13 <celphi>	That soup was awesome as a kid. I havent had it in years though.
Sep 10 02:01:58 <celphi>	But chicken and star soup (Campbells) was the one i ate almost everyday lol.
Sep 10 02:02:25 <sinclair>	got a bit of a cold atm, missus went out looking for chicken soups (used to be the thing to have in New Zealand when you had a cold/flu), and she brought back imported Campbells chicken noodle soup
Sep 10 02:02:38 <sinclair>	im starting at the can, not sure what to make of it
Sep 10 02:02:45 <celphi>	soup + water are awesome for colds
Sep 10 02:02:57 <sinclair>	Andy Warhol has some thoughts on it
Sep 10 02:03:02 <celphi>	try it- you'll either love it or hate it
Sep 10 02:03:13 <sinclair>	first time ive ever seen a can IRL
Sep 10 02:03:18 <celphi>	lol
Sep 10 02:03:28 <sinclair>	alright, here i go >_>
Sep 10 02:03:29 <celphi>	every grocery store here has it
Sep 10 02:03:52 <celphi>	they're good with crackers too
Sep 10 02:04:11 <celphi>	it's salty btw
Sep 10 02:04:17 <celphi>	so hopefuly you like salt
Sep 10 02:05:54 <celphi>	hmm i wonder what im missing for my eslint to work in vim
Sep 10 02:06:03 <celphi>	not registering
Sep 10 02:06:24 <celphi>	oh nvm i remvmer that last issue
Sep 10 02:06:28 <celphi>	version was wrong
Sep 10 02:20:03 <sinclair>	celphi, alright, had my first US canned soup, 7.5/10
Sep 10 02:20:15 <celphi>	lol nice
Sep 10 02:20:17 <sinclair>	celphi, the questionable chicken bits in there were......questionable
Sep 10 02:20:26 <sinclair>	i assume it was a chicken once
Sep 10 02:20:27 <celphi>	lol indeed they are lol
Sep 10 02:20:39 <celphi>	*indeed they are questionable that is
Sep 10 02:21:18 <celphi>	I wouldnt think too much or expect too much.. the canned soup cost less than a dollar in a lot of grocery stories
Sep 10 02:21:30 <celphi>	depending on the size you get
Sep 10 02:21:58 <celphi>	to import it- it's probably a lot more
Sep 10 02:22:28 <celphi>	but canned food is awesome because it takes forever to expire
Sep 10 02:23:09 <celphi>	last 1-4yrs
Sep 10 02:23:15 <sinclair>	celphi, this is the NZ equiv of cambpells https://www.watties.co.nz/Our-Products/Soup/Hearty/Beef-Hotpot
Sep 10 02:23:26 <sinclair>	celphi, this stuff is amazing with some toast
Sep 10 02:23:53 <sinclair>	can even put that stuff in a pie, bit of pastry, great stuff
Sep 10 02:23:54 <celphi>	neat. yeah there's hundreds to choose from
Sep 10 02:24:38 <sinclair>	celphi, ah, this is the stuff https://www.watties.co.nz/Our-Products/Soup/Hearty/Peppered-Steak
Sep 10 02:24:57 <celphi>	you're making me hungry!
Sep 10 02:25:33 <sinclair>	celphi, being in South Korea, i sorta miss NZ food bro, all the imported stuff is either from the states (to which i have little experience), or from Australia (a second rate New Zealand quality food)
Sep 10 02:25:52 <celphi>	which part
Sep 10 02:26:03 <nibzAU>	Hello all
Sep 10 02:26:03 <celphi>	Seoul?
Sep 10 02:26:07 <sinclair>	i can deal with Aussie imported stuff tho, its somewhat close to the NZ stuff
Sep 10 02:26:08 <celphi>	hi nibzAU
Sep 10 02:26:18 <sinclair>	celphi, nope, Busan
Sep 10 02:26:40 <celphi>	Ok. Cool. I was stationed there for 1yr when i was active duty army.
Sep 10 02:26:50 <celphi>	but further north
Sep 10 02:26:58 <sinclair>	in Busan?
Sep 10 02:27:07 <sinclair>	did you land at Gimhae international?
Sep 10 02:27:08 <celphi>	Nah. Camp Casey.
Sep 10 02:27:17 <sinclair>	yeah, not sure where that is
Sep 10 02:27:39 <celphi>	40 miles north of Seoul
Sep 10 02:27:52 <sinclair>	oh, far far up north near the parallel
Sep 10 02:27:53 <celphi>	20mins from DMZ
Sep 10 02:27:58 <sinclair>	mmm
Sep 10 02:28:12 <celphi>	yeah we were stationed there to protect SK from NK
Sep 10 02:28:22 <celphi>	the base is still there
Sep 10 02:28:37 <brandonkal>	simple question but I just want to make sure. Is this valid in a constructor: `cache[this.id] = this`
Sep 10 02:29:07 <sinclair>	brandonkal, that is not a valid constructor
Sep 10 02:29:25 <nibzAU>	return (age > 18) || confirm("Did your parents allow?");  if age is 15, false isnt returned... Does or return a true first... if available???
Sep 10 02:29:30 <celphi>	he asked if is valid "in" though right?
Sep 10 02:29:59 <celphi>	nibzau if a || b (if a is true) then use a,. otherwise use b
Sep 10 02:30:19 <nibzAU>	Right so whatever is true is returned
Sep 10 02:30:28 <celphi>	no neccessairly
Sep 10 02:30:36 <brandonkal>	Yeah. I imagine it wouldn't work so well as inheritance can be involved. That is too bad.
Sep 10 02:30:43 <celphi>	false || false returns false
Sep 10 02:30:44 <nibzAU>	Ohhh right
Sep 10 02:30:46 <MightBeParanoid>	confirm("text") will return a truthy value (as long as the function doesnt explicitly return a falsy value) so the conditional is always true nibzAU
Sep 10 02:30:53 <sinclair>	brandonkal, you should never assign 'this' to anything
Sep 10 02:31:13 <sinclair>	brandonkal, never assign 'this' to anything, ever
Sep 10 02:31:24 <sinclair>	brandonkal, instead, do this...
Sep 10 02:31:32 <celphi>	n>false || false
Sep 10 02:31:34 <jellobot>	(okay) false
Sep 10 02:31:40 <celphi>	null || false
Sep 10 02:31:43 <celphi>	n>null || false
Sep 10 02:31:44 <sinclair>	const cache = ...; const x = new X(); cache[x.id] = x;
Sep 10 02:31:45 <jellobot>	(okay) false
Sep 10 02:31:56 <celphi>	n>'' || false
Sep 10 02:31:56 <nibzAU>	Yup got it now
Sep 10 02:31:57 <jellobot>	(okay) false
Sep 10 02:31:59 <sinclair>	brandonkal, never assign 'this' to something interior
Sep 10 02:32:00 <celphi>	ok cool
Sep 10 02:32:03 <nibzAU>	Thanks
Sep 10 02:32:34 <sinclair>	brandonkal, always exterior and obvious, if you set 'this' to cache inside the constructor, then you've coupled your class to the cache (meaning it can never run without the cache), and that is bad
Sep 10 02:33:22 <brandonkal>	Makes sense. I prefer to avoid classes for the most part in favor of small functions. So I am a bit raw here.
Sep 10 02:43:02 <nibzAU>	So i know htnl and css..from what i understad i want To learn js and react.. And angular for single pages and bootstrap for multi pages and the node.js for backend and them im set to be a web dev :)
Sep 10 02:43:45 <sinclair>	brandonkal, nothing wrong with classes
Sep 10 02:43:59 <brandonkal>	one at a time nibzAU
Sep 10 02:44:28 <nibzAU>	Yeah im learning js
Sep 10 02:44:31 <brandonkal>	sinclair, never said there was anything wrong with classes. I just prefer smaller functions.
Sep 10 02:44:35 <sinclair>	brandonkal, you should use classes, but assigning 'this' to external things inside the class is a encapsulation break
Sep 10 02:45:41 <sinclair>	brandonkal, mmmm, i never know what to make of statements like 'i just prefer smaller functions', it leaves a lot of open questions
Sep 10 02:48:14 <brandonkal>	Well as an example if you are familiar, I prefer Go's approach to OOP. There is no class keyword.
Sep 10 02:49:18 <sinclair>	brandonkal, stahp, please
Sep 10 02:50:14 <sinclair>	brandonkal, i prefer Rust traits to Haskell type classes because Rust uses a 'trait' keyword
Sep 10 02:50:17 <sinclair>	<_<
Sep 10 03:05:25 <brandonkal>	It's not about a different keyword. It's about being able to attach a method to an object when you need it. But you said you had questions sinclair. ttyl
Sep 10 03:10:19 <sms>	Has anybody used antdesign before?
Sep 10 03:10:35 <sms>	Trying to figure out why defaultChecked={true} isn't setting my Checkbox to true by default
Sep 10 03:17:19 <evulish>	would all failed proposals for js be in the git history for that proposals page?
Sep 10 03:19:20 <GreenJello>	evulish, proposals that gained a champion, and only as far back as that page goes
Sep 10 03:20:33 <GreenJello>	evulish, or just look here https://github.com/tc39/proposals/blob/master/inactive-proposals.md
Sep 10 03:24:44 <evulish>	lol @ the world's second most popular react ui
Sep 10 03:28:28 <sinclair>	n> 16 >> 1
Sep 10 03:28:29 <jellobot>	(okay) 8
Sep 10 03:28:37 <sinclair>	n> 8 >> 1
Sep 10 03:28:39 <jellobot>	(okay) 4
Sep 10 03:28:44 <sinclair>	n> 4 >> 1
Sep 10 03:28:46 <jellobot>	(okay) 2
Sep 10 03:28:50 <sinclair>	n> 2 >> 1
Sep 10 03:28:51 <jellobot>	(okay) 1
Sep 10 03:28:55 <sinclair>	n> 1 >> 1
Sep 10 03:28:56 <jellobot>	(okay) 0
Sep 10 03:28:59 <sinclair>	n> 0 >> 1
Sep 10 03:29:00 <jellobot>	(okay) 0
Sep 10 03:29:06 <sinclair>	thank you
Sep 10 03:30:05 <incognito>	n > eval(console.log("it works")) >> 1
Sep 10 03:30:09 <incognito>	:)
Sep 10 03:56:30 <personx>	how can I open a connection to an irc server from within a page?
Sep 10 03:56:41 <sinclair>	personx, you can't
Sep 10 03:57:57 <sinclair>	personx, is this answer satisfactory?
Sep 10 03:58:08 <personx>	hmm. so opening a socket to any random port to a random server not possible? is websocket just better ajax?
Sep 10 03:58:35 <prometh>	you'll need a proxy, such as a websocket, yeah
Sep 10 03:59:16 <sinclair>	personx, browsers do not support raw TCP sockets, and IRC talks TCP
Sep 10 03:59:58 <personx>	yeah, that part is what I'm trying to get clear on.
Sep 10 04:00:18 <personx>	I mean I do already I know what you said above. but here's my situation
Sep 10 04:00:18 <sinclair>	personx, there isn't anything else to know, browsers don't do raw TCP
Sep 10 04:00:38 <sinclair>	no TCP, there-fore, no connection to IRC server
Sep 10 04:01:01 <personx>	here's some sample code I'm running on heroku [ https://shoutpx.herokuapp.com/ ] using nodejs. how is this creating new individual connections everytime someone opens the page?
Sep 10 04:01:52 <sinclair>	server -> web host -> browser
Sep 10 04:02:12 <niggler>	they're increasing the goal size in ECMASports 2022 sinclair, RealWebSockets are coming
Sep 10 04:02:27 <niggler>	tbh it would be neat to run a socket server in-browser
Sep 10 04:02:36 <sinclair>	niggler, there is a WebTransport spec in the works
Sep 10 04:02:42 <sinclair>	its still not raw TCP
Sep 10 04:03:08 <sinclair>	niggler, also, being able to create raw outbound TCP connections seems dangerous
Sep 10 04:03:40 <sinclair>	niggler, or even Raw UDP, imagine if you loaded my web page, and i UPnP port mapped your router from inside your network
Sep 10 04:03:42 <personx>	I'm not too familiar with nodejs either so I'll need a lil help with the concepts at work here. when a browser fetches this page, the server creates a new socket connection to irc using the server's own ip?
Sep 10 04:04:24 <sinclair>	niggler, at least with WS/HTTP, you have to access remote resources through a domain securable protocol scheme
Sep 10 04:04:25 <niggler>	any different from webgl / canvas?
Sep 10 04:04:43 <niggler>	canvas fingerprinting is still a thing
Sep 10 04:05:15 <sinclair>	niggler, imagine if i could port scan your internal network by you loading a webpage.
Sep 10 04:05:34 <sinclair>	niggler, the question is, could you reasonably apply same domain / origin policies to TCP/UDP
Sep 10 04:05:41 <niggler>	im saying the security rubicon has been passed
Sep 10 04:05:53 <sinclair>	tcp://whatever.com
Sep 10 04:06:06 <sinclair>	udp://hack_my_router.com
Sep 10 04:07:17 <sinclair>	niggler, raw tcp connections from a browser would be nice, but not without the same origin policy / security stuff mandated all in
Sep 10 04:07:52 <sinclair>	niggler, i mean, if you want to talk cross origin today, you need to return a policy as a http header
Sep 10 04:08:04 <personx>	before we get lost in the debate. when a person on machine A with ip X fetches this webpage, does the server somehow opens an isolated connection with the irc server where the user ip appears as X or is it the servers?
Sep 10 04:08:19 <sinclair>	if you're talking cross origin TCP, how would you ever get that policy over?
Sep 10 04:08:24 <personx>	*server's ip
Sep 10 04:08:59 <sinclair>	personx, the web page opens a web socket connection to a web server, the web server opens a 'tcp' connection to the irc server.
Sep 10 04:09:18 <sinclair>	page -> [ws] -> web server -> [tcp] -> irc server
Sep 10 04:09:23 <personx>	that part I understand.
Sep 10 04:09:41 <personx>	what I'd like details is about the websocket
Sep 10 04:10:00 <sinclair>	personx, there is no details about the websocket
Sep 10 04:10:50 <sinclair>	personx, the web socket can send/receive whatever, the web server talking to the irc server needs to talk IRC protocol (obviously), but how that data is sent to and from the page, that is a meh implementation detail
Sep 10 04:10:54 <sinclair>	personx, you could...
Sep 10 04:11:19 <sinclair>	1) send the IRC protocol to the browser (forcing the browser to parse IRC protocol lines) - don't do this...
Sep 10 04:11:51 <personx>	no no, I want the server to handle that
Sep 10 04:11:52 <sinclair>	2) send a message / object messaging protocol to the browser (with the IRC protocol line parsed and objectified on the server)
Sep 10 04:12:25 <personx>	I suppose this is more of a nodejs question I guess but the channel is too quiet. :3
Sep 10 04:12:44 <sinclair>	personx, right, so have the server handle that, it doesn't matter what the protocol looks like, i doubt very much there is a recommended WS IRC protocol to implement
Sep 10 04:13:13 <sinclair>	anymore than there would be a XMPP IRC Protocol (well, actually, there probably would be a XMPP protocol for IRC)
Sep 10 04:13:33 <sinclair>	personx, just use XMPP
Sep 10 04:13:47 <sinclair>	personx, and no one likes node anymore, so we all just hang out in here
Sep 10 04:14:23 <personx>	okay, so, here's my question : is it possible for the irc server to identify the user ip as the one that's fetching the webpage even when the connection is being made via websocket proxy?
Sep 10 04:14:56 <kapilp_>	hello
Sep 10 04:15:06 <personx>	oh? is there a better replacement for it out? one I can use to create a webbased irc client?
Sep 10 04:15:21 <kapilp_>	i want to write todo list like website like todoist.
Sep 10 04:15:32 <kapilp_>	which framework should I use?
Sep 10 04:16:05 <kapilp_>	or i should not use any framework?
Sep 10 04:16:46 <sinclair>	personx, no
Sep 10 04:17:11 <sinclair>	personx, its not possible
Sep 10 04:17:31 <sinclair>	personx, because the browser isn't connecting to the irc server, the web server is.
Sep 10 04:17:39 <personx>	the unique ip on every page fetch part?
Sep 10 04:17:51 <personx>	yes, understood.
Sep 10 04:18:40 <personx>	okay, another question, more to do with irc specs than anything else. can one ip address connect to an irc server again and again with different nicks simultaneously and not be banned?
Sep 10 04:19:19 <roomba>	that's not irc specs
Sep 10 04:19:41 <roomba>	that's individual server config / network policy
Sep 10 04:20:15 <roomba>	typically unless you're irccloud or a similar service, you can probably get away with a few but not a lot.
Sep 10 04:20:25 <personx>	yeah I'm not too sure about those either. :P so theoretically, its possible to have multiple connections to the save irc server simultaneously?
Sep 10 04:20:37 <roomba>	not theoretically. is.
Sep 10 04:20:42 <roomba>	just not a lot.
Sep 10 04:20:43 <personx>	yes, that.
Sep 10 04:21:19 <personx>	also, all those cloud based irc clients, are they employing multiple IP addresses to solve this issue or what?
Sep 10 04:21:53 <roomba>	they have multiple IP addresses to scale but i think they also have agreements with the irc networks.
Sep 10 04:23:05 <personx>	oh, so basically I'm screwed in that regard. xD that means this nodejs irc client is also restricted in this manner, yup?
Sep 10 04:23:41 <roomba>	yep.
Sep 10 04:24:42 <roomba>	limiting the number of clients from a single IP has been around for a loooong time.
Sep 10 04:24:53 <sinclair>	personx, wait, no
Sep 10 04:25:09 <sinclair>	personx, you don't have the page repeatedly call fetch
Sep 10 04:25:26 *	personx is intrigued. 
Sep 10 04:25:44 <sinclair>	why would you be, this is obvious, use a web socket
Sep 10 04:26:31 <kapilp_>	sinclair: i want to write todo list like website like todoist.  which framework i should use?
Sep 10 04:26:39 <personx>	use a websocket to overcome the limited connections restriction? o.O
Sep 10 04:26:47 <sinclair>	kapilp_, react
Sep 10 04:26:50 <kapilp_>	no
Sep 10 04:26:56 <sinclair>	k
Sep 10 04:27:01 <personx>	xD
Sep 10 04:27:01 <roomba>	wat
Sep 10 04:27:13 <roomba>	Rebooting channel...
Sep 10 04:27:23 <personx>	sinclair, how would a websocket help in that regard?
Sep 10 04:27:31 <kapilp_>	sinclair: please suggest vanilla framework without virtual dom
Sep 10 04:27:43 <sinclair>	kapilp_, DOM
Sep 10 04:28:04 <sinclair>	kapilp_, const todo = document.createElement('ul')
Sep 10 04:28:27 <sinclair>	kapilp_, ^ its next gen
Sep 10 04:28:46 <kapilp_>	sinclair: thanks a lot
Sep 10 04:29:49 <sinclair>	personx, you need to read what a web socket is, a IRC connection is real time, you DONT want to be asking the server "do you have data yet? do you have data yet? do you have data yet? do you have data yet? "
Sep 10 04:30:24 <personx>	sinclair, that part I'm already clear on. no intention to do that. where did you get that idea? o.O
Sep 10 04:30:36 <afawfweaf>	where did you get that idea? o.O
Sep 10 04:30:40 <afawfweaf>	where did you get that idea? o.O...
Sep 10 04:30:43 <afawfweaf>	where did you get that idea? o.O......
Sep 10 04:30:49 <afawfweaf>	(sorry, couldn't help it xD)
Sep 10 04:31:20 <personx>	we were talking about limited number of connections from a single ip, did you have a workaround for that?
Sep 10 04:32:15 <sinclair>	personx, yes, have the web socket server drop connections that exceed the allowed number of connections
Sep 10 04:32:15 <roomba>	websockets don't magically fix how irc network operators mitigate abuse
Sep 10 04:33:17 <personx>	sinclair, I think you've lost context. :3  roomba , yeah, ain't that a bitch. xD
Sep 10 04:33:43 <sinclair>	personx, you can join the IRC network itself as a federated IRC node, then just expose a WS socket on it
Sep 10 04:33:47 <roomba>	no. i think sinclair was just focusing on a different aspect of solving the problem
Sep 10 04:33:48 <sinclair>	personx, isn't it obvious?
Sep 10 04:34:24 <roomba>	sinclair: ummm... no lol
Sep 10 04:34:26 <sinclair>	personx, then your server isn't going to care how many clients connect
Sep 10 04:34:27 <personx>	sinclair, that is interesting. I had no idea about that. federated irc node, anyone can become one?
Sep 10 04:34:28 <roomba>	well yes... but no.
Sep 10 04:34:44 <roomba>	you can't just federate into an irc network
Sep 10 04:34:48 <sinclair>	roomba, its what the pros do when IRC networks limit the number of users originating from a single IP
Sep 10 04:34:54 <sinclair>	(as would be the case for a web server)
Sep 10 04:35:00 <roomba>	sinclair: yes
Sep 10 04:35:02 <sinclair>	roomba, so 'yes' >_>
Sep 10 04:35:04 <roomba>	but not anyone can just do it
Sep 10 04:35:13 <sinclair>	roomba, its not what you know, its who you know
Sep 10 04:35:32 <sinclair>	personx, ask in #freenode
Sep 10 04:35:47 <roomba>	right. personx can't just install ircd and bring up their own link to freenode unless freenode allows it.
Sep 10 04:36:22 <roomba>	and i don't think will just do it if you ask rofl
Sep 10 04:36:33 <roomba>	like ... there is likely some level of palm-greasing and whatnot
Sep 10 04:36:49 <sinclair>	roomba, details details
Sep 10 04:36:52 <personx>	asking won't hurt. xD
Sep 10 04:36:57 <roomba>	sure :)
Sep 10 04:37:06 <sinclair>	personx, there is one more option
Sep 10 04:37:31 <personx>	sinclair, yeah? which is
Sep 10 04:37:45 <sinclair>	personx, https://repl.it/@sinclairzx81/rust-irc-logger
Sep 10 04:38:07 <sinclair>	personx, write a IRC client on repl.it and when users want to connect, send them a link and tell them to press 'run'
Sep 10 04:38:19 <sinclair>	personx, that's what the pros do >_>
Sep 10 04:38:21 <roomba>	lol that's so evil
Sep 10 04:38:32 <sinclair>	roomba, got bored late last week
Sep 10 04:38:42 <sinclair>	roomba, felt like writing some rust
Sep 10 04:38:54 <roomba>	sinclair: in theory could do this across a few other sandbox playgrounds too
Sep 10 04:39:21 <sinclair>	roomba, well, any of them that allow one to run docker containers at the click of a button
Sep 10 04:39:27 <sinclair>	future tech
Sep 10 04:39:32 <personx>	can this handshake be done without requiring user input?
Sep 10 04:39:34 *	sinclair <3 repl.it
Sep 10 04:40:11 <roomba>	another thing to try would be getting a vps that has an ipv6 prefix delegation
Sep 10 04:40:29 <personx>	[party pooped. :3 "<thumbs> personx: there is no such thing on freenode, if you're thinking of linking your server" ]
Sep 10 04:40:39 <roomba>	not sure if freenode's servers consider entire prefixes but it's worth a try
Sep 10 04:40:54 <personx>	roomba, yeah, not in my budget. xD
Sep 10 04:41:01 <roomba>	$5/mo is too much?
Sep 10 04:41:37 <roomba>	i'm ircing from a $5/mo box that has 2^64 ipv6 ips at my disposal.
Sep 10 04:42:28 <personx>	roomba, well, my father's paying for my current hosting. :P and its cheaper still. but not a vps.
Sep 10 04:42:51 <personx>	I just have one ipv4 static.
Sep 10 04:42:54 <roomba>	ah
Sep 10 04:43:18 <kapilp_>	is vanilla javascript is best than any framework? but its not declarative
Sep 10 04:43:19 <personx>	and it still won't allow me to run my apps on it. so I'm using heroku for it.
Sep 10 04:43:30 <sinclair>	kapilp_, just use react
Sep 10 04:43:38 <niggler>	kapilp_: chocolate JS is best JS
Sep 10 04:44:22 <sinclair>	kapilp_, react is pretty much the defacto nowadays, the tooling for it is pretty decent and its fairly lightweight to run
Sep 10 04:44:56 <sinclair>	kapilp_, there is svelte if you're brave, that doesn't have a virtual dom, niggler would probably like it because its inspired by spreadsheet computed expressions
Sep 10 04:45:00 <roomba>	gonna stay on vue for a while
Sep 10 04:45:24 <niggler>	knockout is also "inspired by spreadsheet computed expressions"
Sep 10 04:45:35 <kapilp_>	sinclair: thank you so much
Sep 10 04:45:47 <kapilp_>	niggler: oh which you recommand?
Sep 10 04:45:50 <sinclair>	niggler, yeah, i remember using knockout for a while
Sep 10 04:46:10 <niggler>	kapilp_: are you trying to pick a framework to learn or trying to solve a problem
Sep 10 04:46:16 <personx>	do we trust facebook developers? o.O
Sep 10 04:46:27 <kapilp_>	niggler: trying to solve a problem.
Sep 10 04:46:33 <niggler>	then use what you know kapilp_
Sep 10 04:46:36 <kapilp_>	i was highly burned by the react
Sep 10 04:46:39 <niggler>	personx: its not that
Sep 10 04:46:55 <niggler>	you're implicitly supporting facebook by using their tech
Sep 10 04:47:07 <kapilp_>	niggler: i currently using svelte
Sep 10 04:47:14 <niggler>	then continue using svelte
Sep 10 04:47:21 <kapilp_>	thanks
Sep 10 04:47:39 <personx>	niggler, that's also another concern. do we even want to support Zark Mukerberg? :3
Sep 10 04:47:42 <sinclair>	kapilp_, it doesn't matter what you use, framework of the week discussions are pretty much a thing of the past
Sep 10 04:47:57 <niggler>	as the man said himself, you're a "dumb fuck" if you use react
Sep 10 04:48:10 <sinclair>	lol, when did he say that?
Sep 10 04:48:52 <niggler>	ok technically he said "you're ... a ... dumb fuck ... if ... you ... use ... react", the "..." might span days or months
Sep 10 04:49:13 <niggler>	but id bet those words were uttered in that order
Sep 10 04:49:31 <sinclair>	personx, you should use technologies on their merit, not because the the owner of the tech company appears to be some alien in human skin
Sep 10 04:49:49 <niggler>	no thats wrong sinclair, you should care
Sep 10 04:50:00 <sinclair>	niggler, well, probably, i don't know i don't follow zuckerburg
Sep 10 04:50:00 <niggler>	its used as part of the apology tour
Sep 10 04:50:11 <niggler>	see what great things we're doing for the tech community?  we released react
Sep 10 04:50:22 <niggler>	that doesn't absolve them from other travesties
Sep 10 04:50:23 <sinclair>	niggler, sounds like conflating politics with engineering to me
Sep 10 04:50:23 <roomba>	not an alien. a transhuman. the greys are not from another galaxy. they're from an underground base in australia where they are grown in vats and programmed with specific tasks.
Sep 10 04:50:33 <niggler>	engineering is politics
Sep 10 04:50:43 <sinclair>	niggler, only because millenials happened
Sep 10 04:50:44 <niggler>	anytime there is more than one approach to solve a problem
Sep 10 04:50:50 <niggler>	no this is a general rule
Sep 10 04:51:00 <personx>	hahah. I hate the guy. And most of the geeks I know, do too. xD
Sep 10 04:51:06 <niggler>	when you really dig down into it, there's no technical reason to prefer react over vue
Sep 10 04:51:16 <niggler>	vice versa, there's no real technical reason to prefer vue over react
Sep 10 04:51:18 <jaawerth>	I mean, like, it's not like he makes money every time you use react
Sep 10 04:51:21 <niggler>	both solve the same set of problems
Sep 10 04:51:26 <sinclair>	niggler, there are a few reasons actually
Sep 10 04:51:29 <niggler>	jaawerth: sort
Sep 10 04:51:43 <roomba>	technical reasons?
Sep 10 04:51:43 <jaawerth>	mrege-sort
Sep 10 04:51:48 <jaawerth>	lol
Sep 10 04:52:05 <sinclair>	niggler, better type and language support in TS, fairly sane programming model...JSX being portable, etc etc
Sep 10 04:52:07 <personx>	could it be increased overhead?
Sep 10 04:52:13 <niggler>	meaning, you contribute to a usage statistic that im sure they're using as part of R&D tax credit calculation
Sep 10 04:52:38 <niggler>	but its not really directly a cash payment, merely a vote of support
Sep 10 04:52:42 *	personx is loving niggler's hate for Mukerberg. :'
Sep 10 04:52:46 <niggler>	and it just seems hypocritical
Sep 10 04:52:49 <roomba>	niggler: which is like 0.00000000000001% implicitly support FB
Sep 10 04:52:53 <niggler>	nah if you love facebook, embrace react
Sep 10 04:53:02 <sinclair>	niggler, i think TS supports Vue in some capacity, but i mean, TSX is a thing, and type checked and intellisense on props is pretty good
Sep 10 04:53:07 <niggler>	just don't hold the untenable position of not using facebook, disliking facebook ,and loving react
Sep 10 04:53:08 <sinclair>	so, technical reasons
Sep 10 04:53:19 <niggler>	vue has its own thing
Sep 10 04:53:37 <niggler>	again, there's no technical reason, its your predilection
Sep 10 04:53:40 <jaawerth>	I thought most of those tax credits were just whether you *do* release it /maintain it open source and less to do with how many people are using it
Sep 10 04:53:51 <niggler>	you have to put a valuation on it
Sep 10 04:54:10 <sinclair>	niggler, i've weighed the merits and demerits of react, of all the crap out there, react seems the least crap
Sep 10 04:54:13 <roomba>	niggler: walking around in public is supporting FB just as much as using react, with all the zombies around you - their black rectangles listening, seeing, sensing, reporting.
Sep 10 04:54:22 <jaawerth>	by using it you are part of a community that leads to people doing free dev/bug-fixing/QA on it which means you're in a sense giving them free maintenance help
Sep 10 04:54:29 <jaawerth>	but I'm ok with that if it's a tool I actually want to use
Sep 10 04:54:55 <niggler>	its a facebook project at the end of the day in the sense that they are the stewards and its their project
Sep 10 04:54:57 <sinclair>	niggler, if it were up to me, react wouldn't need to exist...but as it stands, react is better equipped at integrating with native web components than other stuff
Sep 10 04:55:12 <niggler>	if what you want is at odds with the book, the book gets thrown at your face
Sep 10 04:55:13 <sinclair>	integrating with 'less magic'
Sep 10 04:55:19 <roomba>	sinclair: only because the hive mind chose react
Sep 10 04:55:24 <niggler>	^^
Sep 10 04:55:38 <personx>	I don't really care about where the code originates as long as its good code. My dislike for FB and Mukerberg is just one of the variables in choosing/not choosing react
Sep 10 04:55:44 <niggler>	technically polymer is better equipped with web components
Sep 10 04:55:46 <sinclair>	roomba, um, i don't think so, i have never been particularily hive mind about react
Sep 10 04:55:55 <niggler>	sinclair: you aren't arguing technical advantages
Sep 10 04:56:00 <jaawerth>	last I knew polymer still did dirty-checking
Sep 10 04:56:04 <jaawerth>	though.. I imagine that's changed by now
Sep 10 04:56:07 <niggler>	everything you've suggested is personal opinion
Sep 10 04:56:24 <niggler>	technical = I can do ___ in react and cannot do the same in ____
Sep 10 04:56:27 <roomba>	sinclair: maybe not you per-se. but there is a hive mind. it's very real. and it's growing. humanity only has about 5-10 years left.
Sep 10 04:56:36 <lf94>	man oh man
Sep 10 04:56:40 <sinclair>	roomba, could say the same for Rust
Sep 10 04:56:51 <niggler>	and the number of words you need to use to describe ____ is inversely proportional to the technical merit of your claim
Sep 10 04:57:08 <sinclair>	niggler, i already listed the technical reasons tho, ill list them again
Sep 10 04:57:12 <sinclair>	1) react is lightweight
Sep 10 04:57:16 <sinclair>	2) the tooling is good
Sep 10 04:57:16 <niggler>	you listed a series of opinions
Sep 10 04:57:17 <roomba>	sinclair: Think Rust will go the way of elixir?
Sep 10 04:57:23 <niggler>	vue is lightweight with solid tooling
Sep 10 04:57:25 <jaawerth>	I like react's approach better than vue's in that the react abstraction is very widely applicable because of how generic it is with components/props
Sep 10 04:57:32 <sinclair>	3) its well supported with typescript (including type checked components)
Sep 10 04:57:40 <jaawerth>	but vue is decent enough for web-facing stuff
Sep 10 04:57:50 <sinclair>	4) its not doing anything particularly magic
Sep 10 04:57:53 <lf94>	any else see the treenotation site?
Sep 10 04:57:53 <niggler>	https://vuejs.org/v2/guide/typescript.html
Sep 10 04:58:04 <sinclair>	5) JSX / TSX is portable (as evident by next.js)
Sep 10 04:58:09 <jaawerth>	react's approach to functional components is applicable to a lot of different ui abstractions beyond DOM, which I think has great potential
Sep 10 04:58:09 <roomba>	isn't vue's typescript support not very polished in v2?
Sep 10 04:58:11 <niggler>	vue isn't doing anything magicale ither
Sep 10 04:58:19 <niggler>	next.js :: nuxt.js
Sep 10 04:58:27 <sinclair>	6) React integrates very well with native web components
Sep 10 04:58:28 <niggler>	i dunno i searched vue typescript and that was the first result
Sep 10 04:58:37 <sinclair>	niggler, so, 6 technical reasons
Sep 10 04:58:58 <personx>	I don't mind react. But as long as another dev using react is converting to a stat helping FB, still a dick move.
Sep 10 04:59:00 <niggler>	"1) react is lightweight" unless you're suggesting vue is not lightweight, its not a technical reason for using react over anything
Sep 10 04:59:27 <niggler>	there are numerous lightweight frameworks
Sep 10 04:59:29 <jaawerth>	and I'm pretty sure vue is lighter than react in terms of raw code content
Sep 10 04:59:33 <sinclair>	niggler, well, last time i pulled react, it had 4 dependencies, that makes me happy
Sep 10 04:59:36 <sinclair>	let me check view
Sep 10 04:59:39 <sinclair>	*vue
Sep 10 04:59:49 <niggler>	https://www.npmjs.com/package/vue oh snap[
Sep 10 04:59:58 <niggler>	"0 DEPENDENCIES"
Sep 10 05:00:15 <niggler>	you're getting a boot sinclair, how dare you besmirch the vue
Sep 10 05:00:23 <niggler>	lol
Sep 10 05:00:29 <sinclair>	niggler, it actually has 1 dependency
Sep 10 05:00:39 <sinclair>	that makes vue better (in my book)
Sep 10 05:00:40 *	roomba bends the knee to Lord Vuerys
Sep 10 05:00:46 <jaawerth>	lol booo
Sep 10 05:00:58 <niggler>	if there's a dep, https://www.npmjs.com/package/vue doesnt know about it
Sep 10 05:01:01 <jaawerth>	but yeah I've nothing against vue
Sep 10 05:01:02 <evulish>	hey if we're goint by dependencies
Sep 10 05:01:04 <evulish>	https://www.npmjs.com/package/angular
Sep 10 05:01:04 <sinclair>	well, 0 dependencies
Sep 10 05:01:09 <evulish>	angularjs ties!
Sep 10 05:01:14 *	personx is preparing people for a boot to the head. xD
Sep 10 05:01:19 <sinclair>	npm install vue === 1 node_module folder
Sep 10 05:01:24 <sinclair>	containing....vue
Sep 10 05:01:28 <sinclair>	that pleases me
Sep 10 05:01:37 <niggler>	ok we've heard enough facebook propaganda for one day
Sep 10 05:01:48 <roomba>	yes
Sep 10 05:01:49 *	ChanServ gives channel operator status to niggler
Sep 10 05:01:49 <roomba>	on to google!
Sep 10 05:01:53 *	niggler has kicked sinclair from ##javascript (sinclair)
Sep 10 05:01:57 *	ChanServ removes channel operator status from niggler
Sep 10 05:01:59 <niggler>	lol
Sep 10 05:02:17 <sinclair>	niggler, maybe don't kick me eh
Sep 10 05:02:18 <evulish>	abuse of power!
Sep 10 05:02:45 <evulish>	demand a public apology!
Sep 10 05:02:56 <roomba>	evulish: i suppose niggler is going to tell you to take up your concerns with Zark Muckerbang
Sep 10 05:02:59 <niggler>	we don't need a facebot here pushing anti-vue fake news
Sep 10 05:03:27 <sinclair>	i don't care about react anyway, its just a thing i happen to use without even thinking about it
Sep 10 05:03:37 <roomba>	yea! no more anti-vue fake news from the Reacuckts!
Sep 10 05:03:37 *	sinclair has next to 0 interest in web frameworks
Sep 10 05:03:48 <niggler>	in all seriousness tho, there are differences in opinion regarding the approach vue, react, angular take
Sep 10 05:03:53 <jaawerth>	I mean I don't think there's a huge reason to pick vue over react either, they're both perfectly cromulent frameworks
Sep 10 05:03:59 <niggler>	and they have strengths and weaknesses
Sep 10 05:04:09 <niggler>	but none are technically superior to the others
Sep 10 05:04:18 <jaawerth>	THOUGH I was tempted to kick niggler for daring to besmirch react, thereby starting a war that would tear the channel apart
Sep 10 05:04:19 <niggler>	just along different axes = different opinions
Sep 10 05:04:37 <jaawerth>	but I fear reprisal
Sep 10 05:04:40 <niggler>	so im actually guilty of a deeper sin
Sep 10 05:04:41 <sinclair>	except for svelte, with is technically (and morally) superior as it does not have a virtual dom
Sep 10 05:04:43 <roomba>	having only ever used vue - but looked at others - vue seems like somewhere between angular and react. is that a good VUEpoint? lelz sorry couldn't help it.
Sep 10 05:04:44 <evulish>	##javascript-react and ##javascript-vue no more ##javascript
Sep 10 05:04:46 <evulish>	you have to pick a side
Sep 10 05:04:52 <evulish>	even if you use neither
Sep 10 05:05:01 <jaawerth>	##javascript: Civil War
Sep 10 05:05:17 <personx>	This will be a very uncivil war.
Sep 10 05:05:20 <niggler>	jaawerth: so somehow code i wrote made its way into react 15 https://github.com/facebook/react/blob/v16.0.0/src/renderers/shared/utils/adler32.js#L17 which makes me question what other technologies my open source code enabled :(
Sep 10 05:05:40 <personx>	niggler, good god, is that true?
Sep 10 05:05:47 <jaawerth>	good!
Sep 10 05:06:21 <niggler>	i must atone for the fact that a facebook employee thought it appropriate to integrate some apache2 licensed js into react
Sep 10 05:06:51 <personx>	WARRRRRRRRRRR
Sep 10 05:06:56 <personx>	Fuck the System!
Sep 10 05:06:57 <niggler>	fwiw it wasnt even me who submitted it, i found out after the fact, still feel bad about it
Sep 10 05:06:57 <personx>	xD
Sep 10 05:07:02 <jaawerth>	niggler: doesn't the apache license require you include it if you use part of the code?
Sep 10 05:07:06 <sinclair>	niggler, of some interest and food for thought, svelte achieves its stuff without a virtual DOM, however....Blazor implements a virtual DOM for server / wasm diffing. The question is....are virtual doms necessary at all, and is svelte a short sighted hack that can't be accelerated with WASM due to not having a Virtual DOM to accellerate
Sep 10 05:07:15 <niggler>	yeah it was discussed in the PR https://github.com/facebook/react/pull/11250
Sep 10 05:07:21 <niggler>	err
Sep 10 05:07:26 <niggler>	https://github.com/facebook/react/pull/4400
Sep 10 05:08:07 <roomba>	It was 2019 AD, and the Sinclairites were preparing to invade the Protected States of Vuex. The master spy niggler got wind by intercepting a Promise to fly a sparrow containing a json object detailing the invasion. A civil war was averted.
Sep 10 05:08:11 <niggler>	but again sinclair that reflects a difference of opinion
Sep 10 05:08:50 <jaawerth>	yeah not sure how I feel about their argument there
Sep 10 05:09:04 <personx>	^^
Sep 10 05:09:39 <niggler>	anyway, they are different techs
Sep 10 05:09:45 <sinclair>	niggler, not at all
Sep 10 05:09:50 <niggler>	there are advantages and disadvantages to using each
Sep 10 05:09:58 <personx>	Muckerberg ~ no better than the Night King.
Sep 10 05:10:00 <jaawerth>	yeah, that
Sep 10 05:10:06 <evulish>	roomba: heh that's pretty similar to the book i'm reading! The Moon is a Harsh Mistress
Sep 10 05:10:19 <jaawerth>	and I do have a preference to react's api/approach or a few reasons but those reasons still come down to my priorities
Sep 10 05:10:40 <sinclair>	niggler, right, and weighing those technical advantages and disadvantages is not political, anything that is measurable can't (or shouldn't) be political
Sep 10 05:11:02 <jaawerth>	I disagree, politics can still matter
Sep 10 05:11:07 <roomba>	yea definitely
Sep 10 05:11:22 <roomba>	i don't use anything that has a contributor covenant based code of conduct.
Sep 10 05:11:23 <sinclair>	if it is political, then there exists a cancer around said thing...and it needs to be weeded out, least we get lost in a sea of frivolous distractions
Sep 10 05:11:27 <roomba>	j/k
Sep 10 05:11:29 <niggler>	sinclair: suppose that jeffrey epstein funded development of a project
Sep 10 05:11:33 <niggler>	would you want to touch it?
Sep 10 05:11:57 <jaawerth>	in my opinion the politics here aren't enough to keep me from using react but there are scenarios where they would be
Sep 10 05:12:00 <sinclair>	not particularily
Sep 10 05:12:26 <niggler>	so there are certainly redlines that most people agree should never be crossed
Sep 10 05:12:44 <niggler>	and beyond that, it's a matter of opinion what factors should and shouldn't be applied
Sep 10 05:13:00 <jaawerth>	I mean, I quit my last job over politics lol
Sep 10 05:13:07 <sinclair>	niggler, so if Einstein was jeffrey epstein, would you reject general relatively despite the evidence supporting it?
Sep 10 05:13:27 <personx>	sinclair, that's stupid.
Sep 10 05:13:39 <sinclair>	niggler, how is it any less stupid than what niggler said?
Sep 10 05:13:50 <personx>	if 1=1, then 1 is always 1.
Sep 10 05:14:06 <jaawerth>	if react is general relativity, then vue is quantum mechanics
Sep 10 05:14:20 <niggler>	if/when we find out that einstein ran a child sex trafficking ring, we can revisit that question sinclair
Sep 10 05:14:25 <sinclair>	niggler, there is a subtle distinction and nuance with the question you asked
Sep 10 05:14:26 <jaawerth>	one theory doesn't preclude the other
Sep 10 05:14:50 <four33>	/part
Sep 10 05:14:50 <sinclair>	niggler, well, you brought up hypotheticals
Sep 10 05:14:53 <personx>	lets PLEASE not put react on any pedestal. use it or don't. just don't support FB. Civil war over.
Sep 10 05:15:42 <niggler>	sinclair: people at research labs throughout the country took money from epstein knowing what he did
Sep 10 05:16:01 <roomba>	personx: but we haven't gotten to the part where FB, amazon, google, microsoft combine into a Mother AI that rules humanity forever and ever!
Sep 10 05:16:49 <jaawerth>	I meant a civil war where niggler and I increasingly abuse our op powers to destroy one another (and before anyone points out that would be over almost immediately, I was kidding!)
Sep 10 05:16:51 <personx>	roomba, just a random question : are we the weird survivalists on the tech age? xDDDD
Sep 10 05:17:13 <sinclair>	niggler, i expect you wouldn't reject 'general relatively', even if it did happen to originate from 'Epstein'. I expect you would accept the testable, provably correct theory on physics grounds, but still find Epstein morally reprehensible
Sep 10 05:17:14 <roomba>	personx: i donno. i mean... i don't have a smartphone if that's what you're asking.
Sep 10 05:17:15 <niggler>	it affects all of SV
Sep 10 05:17:35 <niggler>	like how yuri milner flooded the valley with tainted money
Sep 10 05:18:31 <jaawerth>	sinclair: is responding as if react is under attack and the rest of us as if vue is under attack, these are all mostly deffense-of-framework arguments
Sep 10 05:18:44 <personx>	follow up : are we doing anything to stop the mother AI or are we just bitching?
Sep 10 05:18:45 <niggler>	nah there are different arguments at play
Sep 10 05:18:48 <jaawerth>	so maybe we can all agree that either is fine lol
Sep 10 05:18:49 <sinclair>	jaawerth, i don't care about vue or react >_>
Sep 10 05:19:01 <jaawerth>	well there's that AND the politics argument sure
Sep 10 05:19:10 <niggler>	i personally believe that using a technology is implicit support of the technology and of the related politics
Sep 10 05:19:11 <roomba>	personx: just bitching. there is no stopping the mother AI.
Sep 10 05:19:12 <sinclair>	jaawerth, im talking about being able to keep politics out of engineering
Sep 10 05:19:30 <niggler>	you can't tho sinclair
Sep 10 05:19:33 <jaawerth>	yeah but you're jumping into a pretty far simile
Sep 10 05:19:37 <roomba>	LiftLeft: lelz. whois me please
Sep 10 05:19:44 <sinclair>	jaawerth, read the conversation
Sep 10 05:19:46 <jaawerth>	I mean, theories aren't licensed and copyrighted
Sep 10 05:20:03 <jaawerth>	theoretically evil Einstein wouldn't get money every time I calculated time dilation
Sep 10 05:20:14 <sinclair>	jaawerth, im responding to what niggler asked of me, responding with a hypothetical with another hypothetical
Sep 10 05:20:22 <jaawerth>	in rearct's case I don't think react gets more money either but, like, there is more *business* involved
Sep 10 05:20:41 <jaawerth>	yeah I'm saying why I don't think that hypothetical is analogous under scrutnity
Sep 10 05:20:51 <personx>	okay wait, is our problem that muckerberg monetizing our use of his tech or just the fact that we do not like muckerberg at all?
Sep 10 05:21:05 <sinclair>	jaawerth, well, you either reject the theory based on who came up with it, or you don't.
Sep 10 05:21:13 <niggler>	the question is whether using react is showing support for facebook
Sep 10 05:21:27 <sinclair>	if you don't reject it, you're able to separate politics from 'insert domain here'
Sep 10 05:21:42 <niggler>	and whether it is internally consistent to use and support react but still dislike the parent organization and its other offerings
Sep 10 05:21:46 <jaawerth>	sinclair: yes and I'm saying the ramifications of use for a peer-reviewed and experimentally-confirmed scientific theory that came from evil are different from using a technology product that came from evil
Sep 10 05:22:05 <sinclair>	jaawerth, depends on the technology
Sep 10 05:22:05 <niggler>	especially a technology product with comparable alternatives
Sep 10 05:22:24 <jaawerth>	again, *I* don't think those ramifications weigh enough to preclude react
Sep 10 05:22:29 <jaawerth>	but there are scenarios where they would be
Sep 10 05:22:34 <niggler>	sinclair: you hadn't presented a real technical argument for react over vue or an alternative, everything you listed was an opinion
Sep 10 05:22:42 <sinclair>	jaawerth, what if Epstein came up with the notion of turing completeness (or epstien completeness) >_>
Sep 10 05:22:46 <jaawerth>	like, I avoid Oracle because of their business practices and licensing
Sep 10 05:23:00 <sinclair>	niggler, i did tho, i listed 6, scroll up
Sep 10 05:23:15 <jaawerth>	sinclair: the notion of something is still more akin to scientific theory
Sep 10 05:23:20 <jaawerth>	unless you can license a notion
Sep 10 05:23:25 <niggler>	"6) React integrates very well with native web components" so does vue angular and in fact polymer has better integration
Sep 10 05:23:45 <jaawerth>	niggler: I find vue's outer api is more tightly coupled to certain functions
Sep 10 05:23:55 <roomba>	all of those points mentioned earlier had very little to do with technological advantages. they are too subjective.
Sep 10 05:24:00 <niggler>	sure, no one said its superlative
Sep 10 05:24:14 <jaawerth>	and angular is so opinionated that if you repurposed its api for a different kind of ui abstraction you'd likely run into more limiters
Sep 10 05:24:15 <niggler>	im saying that the listed items are "opinions" moreso than technical arguments
Sep 10 05:24:36 <jaawerth>	niggler: yeah, I mentioned them in terms of my preference
Sep 10 05:24:42 <sinclair>	niggler, yeah, but there is less 'magic' going on with the angular case, and i can't speak for polymer
Sep 10 05:24:49 <jaawerth>	I am not disagreeing that tehy're opinions - they're technical arguments bbaseed on *my* priorities
Sep 10 05:24:52 <jaawerth>	which is an opinion
Sep 10 05:24:59 <personx>	this is basically like having an empty hollow skull and a mug, both doing the same to quench our thirst, one 'maybe' better than other. which utensil do we use?
Sep 10 05:25:12 <jaawerth>	niggler: In other words, I wasn't disagreeing wiht you taht they were opinions
Sep 10 05:25:25 <niggler>	right, sinclair was arguing they were technical arguments
Sep 10 05:25:31 <niggler>	i was arguing they were opinions
Sep 10 05:25:32 <jaawerth>	I think vue is fine for various usecases and I would not object to using it
Sep 10 05:25:40 <jaawerth>	ah ok
Sep 10 05:25:40 <sinclair>	jaawerth, there are many ways to measure a 'thing' on techincal terms, and mostly those 'technical' considerations come down to the task at hand.
Sep 10 05:25:43 <niggler>	but getting back to the very beginning
Sep 10 05:25:50 <niggler>	sinclair: politics is inextricably linked
Sep 10 05:25:52 <jaawerth>	I thought you thought *I* was claiming athem as technical arguments rather than opoinions heh
Sep 10 05:26:05 <niggler>	its not some "millenial" thing
Sep 10 05:26:08 <sinclair>	jaawerth, if there is reason to use vue over react, use vue...i don't care what people use.
Sep 10 05:26:10 <niggler>	its the nature of the beast
Sep 10 05:26:23 <sinclair>	niggler, i don't care if you like vue dude >_>
Sep 10 05:26:25 <personx>	as long as we have opinions, politics cannot be kept away.
Sep 10 05:26:31 <sinclair>	i don't hate vue >_>
Sep 10 05:26:35 <roomba>	npm install react
Sep 10 05:26:37 <roomba>	Please select a payment option: [BezosBucks, Libra, UBI credit deduction]
Sep 10 05:26:51 <personx>	that's why we better come up with ways to counter the mother AI, roomba. we don't have the hive taking over.
Sep 10 05:26:58 <niggler>	too bad Libra wasn't called FaceBucks
Sep 10 05:26:59 <jaawerth>	that's why I try to avoid oracle stuff
Sep 10 05:27:11 <sinclair>	but, i haven't been technically compelled to shift from react to vue...(the only reason i would shift from A to B)
Sep 10 05:27:44 <sinclair>	and i certainly wouldn't throw react in the bin on political grounds (like thinking facebook is arse, which it is)
Sep 10 05:27:50 <roomba>	personx: countering the mother AI is easy. become a luddite before 2030. otherwise u screeeewed
Sep 10 05:28:04 <sinclair>	react 'is what it is' and i don't think facebook when i use it.
Sep 10 05:28:10 <jaawerth>	anyway if things get TOO politically readioactive and they're open source, people fork the thing
Sep 10 05:28:21 <niggler>	hence preact, threeact, freeact
Sep 10 05:28:21 <roomba>	^
Sep 10 05:28:31 <roomba>	yes that has always been the case
Sep 10 05:28:37 <sinclair>	im not adverse to using those
Sep 10 05:28:44 <jaawerth>	and sometimes the fork kills its parent if enough people dont' wanna touch it
Sep 10 05:28:45 <roomba>	especially with huge projects
Sep 10 05:29:11 <niggler>	of course not everyone has the luxury of swaying their company
Sep 10 05:29:43 <personx>	roomba, yeah, I don't think I'm that flexible. I don't think anyone here is that flexible. We need a counter. At times like these, those with the power to change have the responsibility to change. :3
Sep 10 05:30:06 <niggler>	from my vantage point, angular is super popular
Sep 10 05:30:22 <jaawerth>	certain kinds of shops love it, yeah
Sep 10 05:30:24 <niggler>	angular the TS one, not the JS 1.x version
Sep 10 05:30:30 <roomba>	personx: that is not realistic.
Sep 10 05:30:34 <niggler>	government and corporate work
Sep 10 05:30:47 <roomba>	i heard someone say earlier china loves angular
Sep 10 05:30:48 <roomba>	but
Sep 10 05:30:53 <niggler>	china loves vue
Sep 10 05:30:56 <jaawerth>	yeah it has that "opinionated framework for big teams" thing
Sep 10 05:30:58 <roomba>	yea
Sep 10 05:31:08 <roomba>	isn't vue based out of china anyway?
Sep 10 05:31:12 <niggler>	angular fills the role of java
Sep 10 05:31:12 <roomba>	like the original devs are chinese?
Sep 10 05:31:20 <niggler>	the primary author is ethnically chinese
Sep 10 05:31:36 <jaawerth>	hell it was originally, in 1.x at least, entirely built around making java devs feel at home
Sep 10 05:31:43 <roomba>	crap. are they gonna put tariffs on vue?
Sep 10 05:31:47 <ljharb>	roomba: like if you subtract china, almost nobody uses vue
Sep 10 05:31:47 <niggler>	what hurts vue in english JS circles is that a lot of the ecosystem is chinese
Sep 10 05:31:56 <roomba>	ljharb: i do. lol
Sep 10 05:32:02 <niggler>	documentation is chinese first, english second
Sep 10 05:32:03 <ljharb>	roomba: that just means you're in the "almost"
Sep 10 05:32:14 <niggler>	vue is pretty popular
Sep 10 05:32:25 <niggler>	esp given the political concerns around the zucc
Sep 10 05:32:36 <roomba>	i like vue because using it makes me feel like a rebel against the react hive mind. that's really ALL there is to it. i don't care about technical merits.
Sep 10 05:32:43 <sinclair>	niggler, what's the 'zucc' been up to now?
Sep 10 05:32:53 <personx>	okay, can we all just agree that no coder in their right mind has ever liked FB or muckerberg and neither will. Does not negate the intrinsic value of any utility produced by them. ALSO does not warrants tech produced by them being thrown in the bin, never to be used. Use it any where you see fit, if it makes your life easier. Just be aware of the amount of salt you need in the mix to trust it with.
Sep 10 05:33:34 <niggler>	the problem is many people in the tech community made boatloads of money thanks to him and thus are disincentivized from having an honest discussion
Sep 10 05:33:50 <niggler>	same problem we see in open source projects that raised VC money
Sep 10 05:33:59 <sinclair>	yeah, like npm
Sep 10 05:34:01 <niggler>	same problem with mozilla selling out
Sep 10 05:34:07 <sinclair>	i can agree
Sep 10 05:34:08 <roomba>	personx: think about it like this... both sides of the react vs. vue civil war are using github, a proprietary platform recently acquired by microsoft...
Sep 10 05:34:25 <niggler>	so thats what i mean when i say politics are always involved sinclair
Sep 10 05:34:34 <ljharb>	niggler: there are no concerns about react related to facebook at this point
Sep 10 05:34:45 <niggler>	you're thinking this is about licensing ljharb
Sep 10 05:34:47 <ljharb>	niggler: other than typical "is the corporation that owns this project going to maintain it properly"
Sep 10 05:34:52 <roomba>	niggler: who did mozilla sell out to?
Sep 10 05:34:58 <ljharb>	niggler: licensing issues are long since resolved
Sep 10 05:35:12 <jaawerth>	yeah like "trust it with salt" - it's open source and its code is auditable, I don't trust it any less than I would other large open source codebases
Sep 10 05:35:13 <niggler>	mozilla's been slowly chipping away at the privacy and advertising wall for years
Sep 10 05:35:20 <ljharb>	and even if i worked for facebook i'd complain loudly about react if i had something to complain about
Sep 10 05:35:31 <niggler>	ljharb: we're talking about how using react is a political decision in support of facebook
Sep 10 05:35:32 <ljharb>	nobody's withholding criticism of react because of facebook
Sep 10 05:35:34 <sinclair>	niggler, well, sure, but that doesn't mean you can tear into a domain on technical grounds without involving larger political concerns that only serve to dilute any technical discussion with noise
Sep 10 05:35:35 <ljharb>	right, but it's not
Sep 10 05:35:45 <niggler>	it absolutely is
Sep 10 05:35:46 <ljharb>	niggler: any more than using google for searching is a political decision in support of google
Sep 10 05:35:49 <ljharb>	nah that's crazy talk
Sep 10 05:36:01 <jaawerth>	I still question how much it's actually supporting facebook
Sep 10 05:36:03 <niggler>	so you can choose not to use google search
Sep 10 05:36:05 <ljharb>	jaawerth: zero
Sep 10 05:36:16 <niggler>	there are other search engines
Sep 10 05:36:19 <ljharb>	niggler: and you can choose not to use react, but neither decision makes the slightest impact on those companies
Sep 10 05:36:20 <jaawerth>	other than contributing to a community that will help them maintain the library via free QA and PR's
Sep 10 05:36:25 <jaawerth>	but that benefits everyone
Sep 10 05:36:43 <niggler>	ljharb: so i take it you don't believe in the philosophy of voting with your wallet?
Sep 10 05:36:59 <roomba>	there is no such thing as voting with your wallet
Sep 10 05:37:00 <ljharb>	niggler: a) no, i happen not to; b) react is free, so no wallet is involved.
Sep 10 05:37:05 <jaawerth>	I'm pretty sure any tax breaks they might get for it, they'd get regardless of usage numbers (they'd just have to tkae on more maintenance burden themselves if nobody else was using it)
Sep 10 05:37:37 <ljharb>	niggler: using facebook dot com is perhaps a political decision, or the absence of one, but using react has *zero* connection to facebook itself.
Sep 10 05:37:51 <niggler>	the defeatist attitude isn't really helpful, in context you are free to choose other frameworks, in no meaningful sense has react become the defacto standard outside of the avant garde
Sep 10 05:37:55 <ljharb>	it's not defeatist
Sep 10 05:37:57 <ljharb>	it's *irrelevant*
Sep 10 05:37:59 <jaawerth>	especially after they removed that one sneaky license addendum
Sep 10 05:38:02 <niggler>	it absolutely is defeatist
Sep 10 05:38:02 <personx>	ljharb, oh good god. you spend time on ANY google produced tech == you support them.  [so not saying to or not to use it. just the concept. ]
Sep 10 05:38:21 <ljharb>	personx: false tho
Sep 10 05:38:25 <niggler>	its the same argument the mozilla zealots use to support firefox
Sep 10 05:38:27 <ljharb>	niggler: even if everything died but react, that wouldn't cause facebook to change their policies
Sep 10 05:38:32 <niggler>	why use chrome? you're supporting google when you do
Sep 10 05:38:41 <niggler>	i dont disagree ljharb
Sep 10 05:38:44 <ljharb>	niggler: you remain the only person i have *ever met or heard of* who has a negative opinion of mozilla, fwiw
Sep 10 05:38:47 <jaawerth>	except google has monetized chrome usage
Sep 10 05:39:01 <jaawerth>	it can allow all kinds of data collection and whatnot
Sep 10 05:39:02 <ljharb>	using chrome relates to google *way* more than using react relates to facebook, and neither really do anyways.
Sep 10 05:39:10 <jaawerth>	which google uses to make money
Sep 10 05:39:15 <ljharb>	if facebook makes a browser, that'd apply the same as chrome
Sep 10 05:39:21 <nwoob>	Can I access .className > div:nth-child(3n-1) this kind of name in react className
Sep 10 05:39:24 <niggler>	as a rule of thumb, if you're going to gaslight users into thinking that ads are user-enhancing, you don't stand for privacy
Sep 10 05:39:44 <innovati>	hello javascribes
Sep 10 05:39:50 <ljharb>	niggler: you remain the only person who considers that one incident gaslighting
Sep 10 05:39:54 <innovati>	javascriptwriters?
Sep 10 05:40:00 *	personx seconds niggler 
Sep 10 05:40:02 <niggler>	multiple documented incidents
Sep 10 05:40:03 <ljharb>	innovati: lol javascribes
Sep 10 05:40:03 <sinclair>	ljharb, what incident?
Sep 10 05:40:05 <jaawerth>	but react can't introduce any of that stuff without the change being caught, because it's all auditable code
Sep 10 05:40:12 <jaawerth>	there's scrutiny on it
Sep 10 05:40:30 <jaawerth>	it doesn't collect data or disable ad-blocking or anything like that, we know this
Sep 10 05:40:31 <ljharb>	niggler: ok fine, but as we've gone over before, being not-perfect 1% of the time still makes you way better than everyone else who's not-perfect > 50% of the time
Sep 10 05:40:34 <niggler>	https://twitter.com/dherman76/status/433320156496789504
Sep 10 05:40:35 <nwoob>	Can I access .className > div:nth-child(3n-1) this kind of name in react className
Sep 10 05:40:37 <niggler>	no it doesnt ljharb
Sep 10 05:40:38 <nwoob>	Can I access .className > div:nth-child(3n-1) this kind of name in react className
Sep 10 05:40:41 <ljharb>	niggler: yes, it does.
Sep 10 05:40:41 <roomba>	chrome is just a telemetry box for a marketing company that is totally not at all trying to be evil and unleash an AI to rule turn humanity into a hive mind slave race for the elite.
Sep 10 05:40:43 <nwoob>	sorry for multiple message
Sep 10 05:40:45 <niggler>	if you are making the argument that you stand for privacy and security
Sep 10 05:40:51 <niggler>	and you make a misstep on that front
Sep 10 05:41:01 <ljharb>	niggler: then you made a misstep. mistakes happen.
Sep 10 05:41:08 <niggler>	once twice maybe
Sep 10 05:41:09 <ljharb>	nwoob: why are you using css selectors in react
Sep 10 05:41:13 <personx>	ljharb, don't throw statistics from the hive mind. or folk wisdom.
Sep 10 05:41:20 <niggler>	what's the saying? fool me once, shame on you, fool me twice ...
Sep 10 05:41:21 <sinclair>	personx, lol
Sep 10 05:41:25 <jaawerth>	nwoob: now sure I understand the question tbh but with react generally you want to be working with its abstraction, and not the DOM directly, unless you use a ref
Sep 10 05:41:36 <ljharb>	niggler: "let's trust this murderer, because at least he's honest about killing!"
Sep 10 05:41:40 <sinclair>	personx, you're lucky to get statistics from ljharb tho, its mostly heresay
Sep 10 05:41:52 <ljharb>	sinclair: don't be hostile, that is a personal attack.
Sep 10 05:41:53 <nwoob>	ljharb: I want to remove some style conditionally which is applied on that selector jaawerth
Sep 10 05:42:00 <ljharb>	niggler: pretending to be good is objectively way better than not pretending, whether you're good or not.
Sep 10 05:42:03 <niggler>	so firefox updates have been known to re-enable studies
Sep 10 05:42:14 <jaawerth>	I mean you can define styles that use a selector
Sep 10 05:42:15 <niggler>	something which users opted out of in previous versions
Sep 10 05:42:28 <rustyshackleford>	so normally if I want to do something when a component is first rendered, i'd use componentDidMount. For example to fetch data
Sep 10 05:42:29 <niggler>	chrome never once changed your default search engine back to google
Sep 10 05:42:32 <ljharb>	niggler: and that's not cool. but if every other browser does it *more* then they're still better
Sep 10 05:42:35 <jaawerth>	but generally speaking I would make the styling you want to change togglable by adding/removing a css class
Sep 10 05:42:40 <rustyshackleford>	is there a hook I could use to make this a functional component instead?
Sep 10 05:42:42 <ljharb>	niggler: somehow i doubt that.
Sep 10 05:42:45 <jaawerth>	so those details are abstracted from the actual component code
Sep 10 05:42:49 <niggler>	ljharb: mozilla lost the plot
Sep 10 05:42:53 <ljharb>	rustyshackleford: `useEffect` iirc
Sep 10 05:43:00 <niggler>	and that you support the behavior is disappointing
Sep 10 05:43:03 <ljharb>	niggler: that still doesn't make them worse.
Sep 10 05:43:05 <ljharb>	niggler: i never said that.
Sep 10 05:43:13 <niggler>	the hypocrisy makes it worse tbh
Sep 10 05:43:17 <sinclair>	ljharb, no its not
Sep 10 05:43:18 <ljharb>	niggler: i just said that "not living up to a claimed moral imperative" doesn't make it worse
Sep 10 05:43:24 <ljharb>	sinclair: yes, it is.
Sep 10 05:43:30 <sinclair>	ljharb, was an observation
Sep 10 05:43:33 <niggler>	you can't make said moral imperative your raison d'etre and not expect pushback
Sep 10 05:43:42 <ljharb>	sinclair: this observation was also a personal attack. observations aren't immune from being that.
Sep 10 05:43:42 <sinclair>	ljharb, anyway, just reading the backlog
Sep 10 05:43:47 <sinclair>	ljharb, still reading the backlog
Sep 10 05:43:48 <ljharb>	sinclair: keep your observations about me to yourself.
Sep 10 05:43:53 <sinclair>	ljharb, keep having your discussion
Sep 10 05:43:55 <sinclair>	go go
Sep 10 05:43:56 <ljharb>	niggler: sure, pushback is fine
Sep 10 05:44:00 <jaawerth>	rustyshackleford: useEffect, I believe
Sep 10 05:44:17 <ljharb>	niggler: you, on the other hand, continually sound like an anti-mozilla zealot
Sep 10 05:44:21 <niggler>	chrome isn't arguing it respects your privacy better than firefox
Sep 10 05:44:27 <ljharb>	niggler: and i don't even use firefox, i'm not a pro-mozilla zealot.
Sep 10 05:44:29 <niggler>	^^ that's why mozilla's actions are worse
Sep 10 05:44:32 <rustyshackleford>	now I wonder if useEffect is easier than making a class component
Sep 10 05:44:42 <rustyshackleford>	just trying to get up to speed with all the new react stuff
Sep 10 05:44:44 <ljharb>	niggler: establishing good norms, whether you follow them or not, is better than not establishing them.
Sep 10 05:44:54 <ljharb>	niggler: hypocrisy isn't worse, accepting bad behavior as normal is.
Sep 10 05:44:58 <sinclair>	niggler, what's mozilla done wrong?
Sep 10 05:45:04 <personx>	ljharb, oh good god. you're probably one of the very few coders [if you're one?] in direct conflict with the philosophy we all live on. and no, not a personal attack. we are not fighting here.
Sep 10 05:45:22 <niggler>	https://venturebeat.com/2018/12/31/mozilla-ad-on-firefoxs-new-tab-page-was-just-another-experiment/
Sep 10 05:45:26 <ljharb>	personx: srsly i have no idea what you're talking about
Sep 10 05:45:27 <niggler>	"Mozilla: Ad on Firefox’s new tab page was just another experiment "
Sep 10 05:45:28 <niggler>	kek
Sep 10 05:45:44 <niggler>	like they can't even own up to what they did, it's just an "experiment"
Sep 10 05:45:54 <personx>	also, a killer who admits freely about the murders and you still choose to be around them, that is WAY better than being around someone who's pretending.
Sep 10 05:46:00 <ljharb>	personx: disagree
Sep 10 05:46:07 <ljharb>	personx: because others will see that as "killing is ok"
Sep 10 05:46:13 <niggler>	actions speak louder than words
Sep 10 05:46:14 <sinclair>	niggler, must have missed the ad stuff
Sep 10 05:46:39 <sinclair>	niggler, um, ads .... not necessarily the worst thing in the world
Sep 10 05:47:05 <sinclair>	bit suprising coming from mozilla (i assumed they were fairly non profit and lived on donations)
Sep 10 05:47:07 <roomba>	it's not just ads thuogh
Sep 10 05:47:09 <niggler>	to a product whose primary argument is privacy and security? absolutely
Sep 10 05:47:09 <jaawerth>	no niggler's right that it was kind of a betrayal of their own principle when they did it. they undid it though
Sep 10 05:47:13 <niggler>	there were quite a few cases
Sep 10 05:47:15 <personx>	ljharb, ... you're one of those, aren't you? the self-righteous puritanical hypocrites? xD
Sep 10 05:47:26 <sinclair>	niggler, yeah, its questionable as it flies in the face of privacy
Sep 10 05:47:35 <jaawerth>	ok let's cool this off before it gets more ad hominem
Sep 10 05:47:37 <ljharb>	personx: again, no idea what you're talking about
Sep 10 05:47:47 <niggler>	https://blog.mozilla.org/press-uk/2017/10/06/testing-cliqz-in-firefox/
Sep 10 05:47:48 <ljharb>	personx: but yeah you're making lots of personal attacks and i'm pretty sure you've never spoken in here before a few hours ago
Sep 10 05:47:57 <niggler>	"This experiment also includes the data collection tool Cliqz uses to build its recommendation engine. Users who receive a version of Firefox with Cliqz will have their browsing activity sent to Cliqz servers, including the URLs of pages they visit"
Sep 10 05:48:16 <niggler>	We hope that users will appreciate the improved experience, but if users want to turn it off, they can always disable data collection or remove the Cliqz add-on entirely.
Sep 10 05:48:20 <niggler>	aka opt-out
Sep 10 05:48:21 <nwoob>	Why are you guys fighting
Sep 10 05:48:40 <nwoob>	I am mod i kick people
Sep 10 05:48:48 *	ChanServ gives channel operator status to niggler
Sep 10 05:48:51 <jaawerth>	two of us are mods
Sep 10 05:48:53 <niggler>	yeah say that again nwoob :)
Sep 10 05:48:57 <nwoob>	:D
Sep 10 05:49:04 *	ChanServ removes channel operator status from niggler
Sep 10 05:49:06 <nwoob>	my apologies
Sep 10 05:49:09 <nwoob>	:D
Sep 10 05:49:13 <personx>	xDDD
Sep 10 05:49:41 <roomba>	niggler: boiling frogs
Sep 10 05:49:44 <personx>	and ljharb, not a pissing contest. :3 really. xD
Sep 10 05:49:44 <niggler>	https://www.theregister.co.uk/2017/12/18/mozilla_mr_robot_firefox_promotion/
Sep 10 05:49:45 <roomba>	is all mozilla is doing
Sep 10 05:49:48 <sinclair>	niggler, and moz likes to wave the privacy banner
Sep 10 05:49:54 <niggler>	exactly roomba and sinclair
Sep 10 05:49:55 <hussar>	is 'input :not(#Agree)' a valid querySelector?
Sep 10 05:50:09 <sinclair>	niggler, yeah, questionable
Sep 10 05:50:15 <roomba>	i stil use firefox
Sep 10 05:50:31 <jaawerth>	I still want to use it, if they ever add the highlight-scrollbar-with-find-matches feature
Sep 10 05:50:40 <jaawerth>	(or make it possible to do so with an extension again)
Sep 10 05:50:55 <niggler>	that's the part that pisses me off the most, i feel like im alone in thinking there's deep moral rot in the industry as a whole
Sep 10 05:51:05 <roomba>	i'd rather use a frog boiler that i know is at least trying to maintain a facade of respecting privacy than an ad-company telemetry box that will be responsible for the end of humanity within a decade.
Sep 10 05:51:17 <personx>	as long as its possible to sandbox, using any tech is okay. isn't it?
Sep 10 05:51:20 <jaawerth>	yeah it's a matter of degrees
Sep 10 05:51:21 <sinclair>	niggler, still, their decision to try and push ads is not really a technical issue, its a business-ish decision somewhere up the chain
Sep 10 05:51:28 <ljharb>	niggler: i don't disagree
Sep 10 05:51:43 <niggler>	i agree sinclair but your usage of mozilla is arguably an implicit vote in favor of those practices
Sep 10 05:51:46 <ljharb>	niggler: but "deep moral rot" doesn't mean "everything is bad", it means "we desperately need to support whoever's the least bad, so the trend starts moving in the right direction"
Sep 10 05:51:48 <jaawerth>	sinclair: yeah but we disagree with your premise that only technical issues should matter
Sep 10 05:51:59 <ljharb>	^ +1, that's a terrible premise
Sep 10 05:52:00 <sinclair>	niggler, oh hey, have you noticed that when places do things like this, they label it as a 'experiment' as if labelling it that makes it perfectly fine.
Sep 10 05:52:02 <jaawerth>	and it IS kind of a technical issue if your technical issues include privcy
Sep 10 05:52:17 <jaawerth>	(it can be more than just a political consideration)
Sep 10 05:52:29 <sinclair>	ljharb, that's a personal attack on me, keep your personal attacks to yourself
Sep 10 05:52:38 <ljharb>	sinclair: no, it's an attack on the premise
Sep 10 05:52:49 <ljharb>	sinclair: if i said "sinclair consistently makes terrible premises" that'd be a personal attack
Sep 10 05:53:02 <roomba>	no that would be an observation
Sep 10 05:53:10 <ljharb>	roomba: it'd be both
Sep 10 05:53:17 <roomba>	ljharb: no.
Sep 10 05:53:22 <sinclair>	you just said it then, and i do consistently make terrible premises, sooo....personal attack
Sep 10 05:53:31 <sinclair>	obviously
Sep 10 05:53:36 <personx>	lets not get personal and be united in our hate against advertised hypocrisy.
Sep 10 05:53:54 <jaawerth>	yellow cards all around, stahp
Sep 10 05:53:56 <ljharb>	roomba: observations aren't immune from being attacks.
Sep 10 05:54:07 <ljharb>	sinclair: lol now you attacked yourself tho
Sep 10 05:54:13 <ljharb>	but yes, stahp is a good call, sorry
Sep 10 05:54:15 <hussar>	is 'input :not(#Agree)' a valid querySelector?
Sep 10 05:54:29 <ljharb>	hussar: looks right to me. if you try it, does it throw?
Sep 10 05:54:38 <sinclair>	jaawerth, anyway, not really, if im looking at a technology, and wondering 'why is this thing not doing a thing', im not particularily interested in the political, im interested 100% in the technical, unless said thing isn't working because 'political reasons'
Sep 10 05:55:04 <jaawerth>	hussar: should be but the best way to find out is to try it. oh, and I would avoid upper-case id's
Sep 10 05:55:22 <sinclair>	jaawerth, and there has been scenarios for a thing not working on political sounds in the past, and that is cancer
Sep 10 05:55:30 <innovati>	hussar since <input> cannot contain HTML elements as content it would never ever match anything in HTML…but if you were using XML or something with a custom <input> element, then that would match any element that didn't have id="Agree" inside an <input> element that was not an HTMLInputElement
Sep 10 05:55:32 <jaawerth>	sinclair: and "why is this thing leaking my behavioral data" doesn't meet that metric?
Sep 10 05:55:36 <hussar>	it's not for js, just a method that uses query selectors in a situation that's hard to test
Sep 10 05:56:04 <jaawerth>	I mean, :not is allowed to contain selectors you want to blacklist so
Sep 10 05:56:11 <personx>	jaawerth, it so does. sinclair would agree, I think
Sep 10 05:56:27 <sinclair>	jaawerth, depends if it was designed to do that
Sep 10 05:56:32 <hussar>	I'm worried that it may need a space before the ':'
Sep 10 05:56:38 <personx>	umm, but react IS doing that, no?
Sep 10 05:56:49 <innovati>	input:not(#Agree) would target any <input> that wasn't <input id=Agree>
Sep 10 05:56:57 <personx>	not leaking private data, but behavioral stats>
Sep 10 05:56:58 <personx>	?
Sep 10 05:57:11 <ljharb>	personx: um, no?
Sep 10 05:57:16 <ljharb>	personx: react doesn't transmit any data anywhere
Sep 10 05:57:17 <sinclair>	jaawerth, you can question the intent in other discussions, if the intent of something is to 'leak your private data', lets have a discussion on 'how best to leak personal data at massive scale' and consider the ethical concerns in other channels
Sep 10 05:57:32 <innovati>	a space in a CSS selector is significant, it's a descendant combinator and targets an element inside another element's content
Sep 10 05:57:41 <jaawerth>	sinclair: I mean, there are practical and technical considerations for why that might make it bad to use
Sep 10 05:57:55 <jaawerth>	beyond the question of one's opinion about whether it's right thati t does that
Sep 10 05:58:01 <jaawerth>	so IMO it falls under both criteria
Sep 10 05:58:08 <jaawerth>	*both realms
Sep 10 05:58:15 <niggler>	some of the CLI tools have built-in telemetry
Sep 10 05:58:19 <sinclair>	jaawerth, perhaps, but i mean, i think its perfectly fine to question 'wait, why am i writing something to leak personal data at scale', but its tangential from the engineering
Sep 10 05:58:28 <personx>	okay, are we moral and / or ethical people?
Sep 10 05:58:29 <niggler>	not sure if CRA does
Sep 10 05:58:40 <roomba>	personx: no
Sep 10 05:58:50 <niggler>	id like to think so
Sep 10 05:59:02 <roomba>	but technically we are not
Sep 10 05:59:13 <sinclair>	jaawerth, and for what its worth, no, i wouldn't blindly write something, or partake in projects i deemed 'ethically questionable'
Sep 10 05:59:25 <personx>	and we're not opposed to advertisment either, as long as you say that's what you're doing. but if you say "we're just trying to make the world a better place" and shoving ads, that's disrespectful.
Sep 10 05:59:26 <roomba>	we complicit in tyranny
Sep 10 05:59:36 <niggler>	alternatively, id like to think we're in this industry to do what we love and not merely to enrich our bank accounts
Sep 10 05:59:43 <ljharb>	niggler: oh maybe CRA does, dunno
Sep 10 05:59:53 <ljharb>	but react itself doesn't
Sep 10 05:59:56 <niggler>	the browser libraries dont
Sep 10 06:00:13 <niggler>	vue, react, angular, polymer, none of them have telemetry built into the web libraries
Sep 10 06:00:30 <jaawerth>	most of the cli tools I've used that have telemetry ask you whether you want to allow it though
Sep 10 06:00:45 <jaawerth>	though I suppose the ones that don't ask would naturally be the ones I'm going to be less aware of, sooo
Sep 10 06:01:00 <niggler>	many have documented opt-out procedures
Sep 10 06:01:08 <niggler>	but by default those tools enable it
Sep 10 06:01:41 <ljharb>	which ones do?
Sep 10 06:01:47 <ljharb>	have default telemetry, i mean
Sep 10 06:01:57 <personx>	I feel as long as we've ensured our survival, any steps that we take to enrich our bank account on the cost of data, dick move.
Sep 10 06:02:15 <niggler>	the react-native toolchain used to have something as part of the expo integration
Sep 10 06:02:26 <ljharb>	niggler: in expo specifically?
Sep 10 06:02:36 <jaawerth>	default without a prompt?
Sep 10 06:02:46 <jaawerth>	yeah I don't like that
Sep 10 06:02:58 <niggler>	gatsby has it and i don't recall prompting https://www.gatsbyjs.org/docs/telemetry/
Sep 10 06:03:15 <niggler>	i think the confusion ljharb was that the expo stuff wasn't properly communicated in the CLI
Sep 10 06:03:41 <niggler>	so you'd go through the process, enabling it by default without knowing that it required credentials
Sep 10 06:04:00 <niggler>	and would find out near the end of the workflow
Sep 10 06:04:22 <personx>	I call a MotherAI-Counter Initiative. Who's in? xD
Sep 10 06:04:43 <ljharb>	niggler: ok, fair
Sep 10 06:05:03 <roomba>	personx: how do we know you're not a shill for BigTech(tm) ?
Sep 10 06:06:14 <personx>	Muckerberg ki maa ka bhosda. roomba : if you understood hindi, you'd know you can trust me. xD
Sep 10 06:06:35 *	roomba uses google translate
Sep 10 06:07:14 <personx>	yeah, I'm not entirely sure if that can be translated easily. :3
Sep 10 06:07:43 <roomba>	illuminati confirmed
Sep 10 06:08:34 <personx>	umm, I'm thinking I'd be proud to have influenced so much. :3
Sep 10 06:10:56 *	personx is looking for volunteers for the MAIC Initiative.
Sep 10 06:14:34 <ljharb>	still no idea what that means
Sep 10 06:15:16 <personx>	Mother AI Counter Initiative. The world's last resort before the hive mind takes over.
Sep 10 06:16:04 <ljharb>	in what universe is that a thing
Sep 10 06:16:24 <personx>	roomba knows. so does niggler. :'3
Sep 10 06:16:53 <ljharb>	sounds like you've got the perfect recipe for lots of people volunteering - only 3 people know what it is
Sep 10 06:17:11 <nibzAU>	Hey all.. So agin im learning but why would i want to use a function expression over a function declaration ( i bet the next page explains this heheh)
Sep 10 06:17:40 <ljharb>	!fe vs fd @ nibzAU
Sep 10 06:17:40 <ecmabot>	nibzAU: A function declaration `function declared() {}` & a function expression e.g. `var bar = function expressed() {}`: the former is !hoisted, the latter can be immediately invoked (see !iife) and can be anonymous (eg can omit the name "expressed"). "function" as the first word of a statement at global scope or directly inside a function starts a function declaration; otherwise, it starts a function expression.
Sep 10 06:17:53 <ljharb>	nibzAU: avoid relying on hoisting; declarations allow you to rely on hoisting.
Sep 10 06:18:00 <personx>	A Few Good Men. ;) xD
Sep 10 06:20:16 <nibzAU>	Never used expressions always used declarations in other languages  so Not used them
Sep 10 06:20:37 <nibzAU>	!hoisted
Sep 10 06:20:37 <ecmabot>	nibzAU: ‘Hoisting’ is the name given to the mechanism whereby names defined with ‘var’ or function declarations (see !fe) are made available throughout their scope, even before the declaration is encountered textually.  Beware: though the *definition* of a variable is available, its value (if given) will be undefined until the var declaration is encountered or the variable is otherwise assigned to.
Sep 10 06:26:26 <innovati>	am I the only denotard here?
Sep 10 06:35:51 <ljharb>	type not found, it seems
Sep 10 06:39:15 <sinclair>	niggler, ever remember the Amiga?
Sep 10 06:39:32 <niggler>	no that was before my time
Sep 10 06:39:36 <sinclair>	niggler, im blown away by this demo https://www.youtube.com/watch?v=iD9xk3SDSYc
Sep 10 06:39:44 <sinclair>	how could the Amiga be before your time
Sep 10 06:40:07 <sinclair>	the black lotus - like the greatest of all demosceners
Sep 10 06:40:13 <niggler>	The Amiga is a family of personal computers introduced by Commodore in 1985.
Sep 10 06:40:17 <ljharb>	because the amiga is insanely old?
Sep 10 06:40:59 <sinclair>	well, watch that demo make that 1980's tech sing
Sep 10 06:41:01 <niggler>	consider that someone born in 1985 is like 34 now, basically a boomer :P
Sep 10 06:41:11 <niggler>	almost aged out of the 18-35 demographic
Sep 10 06:41:13 <sinclair>	the Amiga should have been an alternative to Apple
Sep 10 06:41:24 <ljharb>	to be old enough to have seriously used an amiga you'd have to be solidly in your 50s or older, so it shouldn't be surprising that few people remember it
Sep 10 06:41:48 <sinclair>	the Amiga tho, it was pretty popular in the 90's
Sep 10 06:41:57 <sinclair>	the A500 was everywhere
Sep 10 06:42:10 <sinclair>	maybe it was a europe thing, had em in NZ tho
Sep 10 06:42:21 <niggler>	On April 29, 1994, Commodore filed for bankruptcy
Sep 10 06:42:34 <sinclair>	niggler, yeah, it sucks
Sep 10 06:42:45 <sinclair>	the Amiga was years ahead of its time
Sep 10 06:43:05 <ljharb>	yeah, definitely not pretty popular in the US in the 90s
Sep 10 06:43:14 <sinclair>	the C64 was years ahead of its time in terms of the audio hardware it used, the Amiga's tho, graphics power houses for the time.
Sep 10 06:43:16 <ljharb>	commodore 64, arguably
Sep 10 06:43:24 <ljharb>	altho that was much more 80s
Sep 10 06:44:14 <sinclair>	makes me sad there wasn't a continuation of the Amiga brand, they would have made for Apple rivals in todays world
Sep 10 06:45:05 <niggler>	only 3 console makers left
Sep 10 06:45:13 <sinclair>	but seriously, give this a watch https://www.youtube.com/watch?v=iD9xk3SDSYc, that demo was release this year.
Sep 10 06:45:23 <niggler>	sony / microsoft / nintendo
Sep 10 06:45:58 <ljharb>	how "console" is nintendo really, at this point tho
Sep 10 06:46:08 <ljharb>	the switch is a handheld you can plug into your tv, barely a console
Sep 10 06:46:31 <niggler>	true, its running old tech
Sep 10 06:46:45 <ljharb>	the wii was just embarrassing on so many levels
Sep 10 06:46:58 <niggler>	its all about the software (games) tbh
Sep 10 06:47:13 <niggler>	although on the games front sony is catching up
Sep 10 06:47:36 <ljharb>	also tho, if you don't look at the platform exclusives, which platform would you use - that's the real tell
Sep 10 06:47:39 <niggler>	and ironically nintendo is getting into phones
Sep 10 06:47:45 <sinclair>	just a note on that demo, i note one of the programmers behind pushing things on Amiga is working at EA on Frostbite, pushing the tech forward
Sep 10 06:48:03 <niggler>	for me the switch's portability is great
Sep 10 06:48:22 <niggler>	and its not marketing fluff, maybe half the time docked and half the time handheld
Sep 10 06:49:10 <niggler>	but if you're getting a dedicated unit for tv, xbox at least lets you write apps
Sep 10 06:49:16 <niggler>	the others are like pulling teeth
Sep 10 06:52:57 <sinclair>	god that demo is amazing
Sep 10 06:55:20 <sinclair>	ljharb, its sad a lot of that 'lets push this hardware beyond its limits' ethos has largely died off over the years, there is usually more compute and memory than anyone really needs, but something is ultimately lost when you watch the latest game / demo graphics and are like ... meh
Sep 10 06:58:18 <sinclair>	i mean, anyone can make 'art' on modern computer hardware, but only a few have the chops to push 30+ year old hardware to make something equally compelling, you have to respect those that spend the time pushing tech beyond its limits.
Sep 10 07:00:05 <sinclair>	ljharb, its like those days when you would see a JavaScript prog doing something interesting....and you're like "wait, javascript can do that!?"
Sep 10 07:00:24 <sinclair>	seemed almost absurd
Sep 10 07:00:39 <niggler>	we're past that point sinclair
Sep 10 07:00:46 <ljharb>	I’m not like meh
Sep 10 07:00:47 <sinclair>	niggler, nowadays we are
Sep 10 07:01:00 <niggler>	i mean in terms of being impressed by pushing old hardware
Sep 10 07:01:10 <ljharb>	maybe you’re just too cynical to appreciate things
Sep 10 07:01:15 <niggler>	even pushing new hardware isnt as interesting as it used to be
Sep 10 07:01:44 <sinclair>	niggler, not at all, not if you've been following demoscene since the 90's
Sep 10 07:01:56 <niggler>	the thriving indie community suggests that gaming community is looking more and more for well executed game mechanics
Sep 10 07:02:09 <sinclair>	every now and again, a demo pops out of the wood work and you're like "that's next level"
Sep 10 07:02:32 <sinclair>	that demo i linked is one of those kinds of demos
Sep 10 07:02:50 <sinclair>	running on A500 hardware, seems impossible
Sep 10 07:06:48 <sinclair>	ljharb, its not about being cynical about things, these days developers have commercial engines and immense about of tools at their disposal
Sep 10 07:06:55 <sinclair>	*amounts
Sep 10 07:07:11 <niggler>	then make your own demo
Sep 10 07:07:46 <sinclair>	ljharb, when you see similar things emerge for ancient hardware, you know everything has been hand crafted from the ground up to achieve a result, there is art in that.
Sep 10 07:07:54 <sinclair>	and you appreciate it on that level
Sep 10 07:08:57 <sinclair>	niggler, ah, id like to one day, i used to watch demo scene happenings from a far in NZ, but NZ was far removed from Europe where a lot of the scene and people were doing this stuff.
Sep 10 07:10:20 *	sinclair just looks on in awe
Sep 10 07:23:27 <personx>	just me or vue is much more cleaner than react? o.o
Sep 10 07:24:08 <sinclair>	personx, depends on your definition of clear
Sep 10 07:24:21 <personx>	how about sleeker? :P
Sep 10 07:24:47 <sinclair>	personx, again, depends on your definition of sleek
Sep 10 07:25:16 <sinclair>	personx, id say those React hooks are pretty sleek, but that's just me
Sep 10 07:25:47 <personx>	hmm, makes sense. lets not give way to another civil war. xD
Sep 10 07:26:48 <sinclair>	personx, are you looking to use a front end framework for something?
Sep 10 07:27:23 <personx>	yeah, and I think I'm leaning towards Vue
Sep 10 07:28:02 <sinclair>	personx, i don't think it matters what you pick really, anything will work
Sep 10 07:29:15 <evulish>	functional react components are nice and neat, i had to switch back to React.Component and it was gross
Sep 10 07:29:16 <sinclair>	personx, they all work well enough, tho i had been a bit apprehensive about using Vue primarily because of how TS was supposed to work with Vue templates
Sep 10 07:29:30 <sinclair>	not sure how well TS works with Vue
Sep 10 07:30:34 <sinclair>	https://vuejs.org/v2/guide/typescript.html
Sep 10 07:31:39 <sinclair>	personx, looking at how Vue integrates with TS, might as well be using React, as the react hook stuff mitigates the need for component decorates and class syntax almost entirely.
Sep 10 07:32:27 <sinclair>	personx, well, actually, https://github.com/vuejs/vue-class-component
Sep 10 07:33:26 <sinclair>	personx, this looks like the preferred approach for component orientated stuff in Vue (as most people would approach it), but it doesn't seem to bring much to the table other than a slightly different approach.
Sep 10 07:34:21 <sinclair>	personx, also... const Component = Vue.extend({ ... }) is pretty gross
Sep 10 07:35:48 <sinclair>	personx, class MyComponent extends Vue {} is probably how you want to approach things, but it seems to mandate on a decorator, not sure why
Sep 10 07:36:30 <sinclair>	personx, and as it stands, decorators are questionable things to use in JS until the TC39 figures out what its doing with them
Sep 10 07:52:45 <MJCD>	what's up doofuses
Sep 10 07:52:50 <MJCD>	doofii
Sep 10 07:56:51 <evulish>	i'm trying to figure out how to make spotify recongize the songs on my sd card after i accidentally unmounted it
Sep 10 07:57:03 <evulish>	it switched storage devices and i can't get it to switch back :'(
Sep 10 07:58:59 <evulish>	super annoying. i have like 30gb of music on there and i think i have to delete all of it
Sep 10 07:59:45 <MJCD>	evulish, step 1)
Sep 10 07:59:54 <MJCD>	don't use spotify
Sep 10 07:59:59 <MJCD>	step 2) piracy ?
Sep 10 08:00:03 <MJCD>	step 3) profit ?
Sep 10 08:00:14 <MJCD>	jdownloader 2 + youtube ftw
Sep 10 08:00:35 <MJCD>	+ youtube vanced (some of youtube subscription for free)
Sep 10 08:01:02 <MJCD>	can even download just as audio :O
Sep 10 08:01:03 <evulish>	keeping up with a music collection is too much work
Sep 10 08:01:14 <MJCD>	you just make a playlist like in spotify
Sep 10 08:01:20 <sinclair>	MJCD, what's new? currently looking at the larrabee rasterization algorithm on recommendation from a friend to look at it.
Sep 10 08:01:24 <MJCD>	and then jdownloader 2 to sdcard makes it available 'offline' :D
Sep 10 08:01:29 <evulish>	i already have like 20tb in video
Sep 10 08:01:37 <MJCD>	hahah yeah you don't need that
Sep 10 08:01:40 <evulish>	i just use other people's spotify playlist
Sep 10 08:01:46 <sinclair>	MJCD, rasterization with integer math sounds alright yeah?
Sep 10 08:01:49 <MJCD>	unless you're planning on some kind of worldwide disaster
Sep 10 08:02:00 <MJCD>	in which case probably no time for 50232304230 movies
Sep 10 08:02:03 <MJCD>	(:
Sep 10 08:02:04 <evulish>	some sort of porn disaster
Sep 10 08:02:19 <MJCD>	people who hoard a porn collection are super weird
Sep 10 08:02:35 <evulish>	sites go offline!
Sep 10 08:02:42 <MJCD>	lucky there's like 23492359239
Sep 10 08:02:48 <MJCD>	with mostly the same stuff
Sep 10 08:02:49 <MJCD>	lol
Sep 10 08:03:16 <evulish>	yeah that's the problem, the weird freaky deaky stuff gets forgotten about!
Sep 10 08:05:41 <MJCD>	scraping bots forget nothing sir
Sep 10 08:05:41 <evulish>	i wonder if i have my old mp3 collection backed up somewhere, i think i deleted it years ago
Sep 10 08:05:43 <MJCD>	nothing
Sep 10 08:05:49 <MJCD>	good
Sep 10 08:05:57 <MJCD>	like
Sep 10 08:06:11 <MJCD>	a full hd m4v is like 40-60mb a song
Sep 10 08:06:23 <MJCD>	m4a is like 3-6mb
Sep 10 08:06:31 <evulish>	man i def messed something up on my phone
Sep 10 08:06:49 <evulish>	shouldn't have deleted the spotify dir
Sep 10 08:06:57 <evulish>	probably should have uninstalled the app first
Sep 10 08:06:59 <evulish>	oh well
Sep 10 08:07:41 <sinclair>	evulish, i can't receive emails on my windows phone anymore, for some reason trying to open my email inbox results in the phone wanting to open the windows phone store, with the caveat the windows phone store isn't even a thing anymore....my phone has been software bricked
Sep 10 08:07:48 <sinclair>	thanks microsoft
Sep 10 08:08:45 <sinclair>	evulish, i can still make phone calls on the thing...i suppose i should probably upgrade my phone to a android
Sep 10 08:08:55 <carlino3>	hello
Sep 10 08:09:01 <carlino3>	i was thinking
Sep 10 08:09:26 <grr12314>	guys whats your usual approach when you need a change in some 3rd party package, but haven't made it generic or polished enough for public contribution/official merge request, but only a quick hack for your own purpose
Sep 10 08:09:51 <grr12314>	copy the package in a local subfolder?
Sep 10 08:09:52 <carlino3>	would be able a malicious site to send XHR request to the default gateway of the user and access router configuration?
Sep 10 08:09:56 <sinclair>	grr12314, what is the package out of interest?
Sep 10 08:10:03 <carlino3>	is there any protection mechanism against this?
Sep 10 08:10:10 <MJCD>	grr12314, npm link ofcourse
Sep 10 08:10:23 <grr12314>	sinclair odata-v4-sql
Sep 10 08:10:35 <sinclair>	grr12314, oh wow, kudos
Sep 10 08:10:48 <sinclair>	a odata user in the wild
Sep 10 08:11:08 <evulish>	what about branching it on github and doing npm install right from the repo?
Sep 10 08:11:33 <evulish>	er forking, whatever
Sep 10 08:12:09 <grr12314>	thought about it but thats still feel sorta a bit too public
Sep 10 08:12:14 <sinclair>	carlino3, no, you can't get a a browser to leak router info (i assume trying to http on your gateway), your gateway address is considered a remote origin from some page you're loading from.
Sep 10 08:12:21 <evulish>	private repo?
Sep 10 08:12:23 <grr12314>	though it might push me to generalize the change sooner
Sep 10 08:12:36 <MJCD>	you fork on github
Sep 10 08:12:40 <MJCD>	then npm link that
Sep 10 08:12:53 <MJCD>	push/commit/pr when polished
Sep 10 08:12:56 <sinclair>	carlino3, i suppose it would be possible if your router had a permission cors policy on it, but that seems unlikely
Sep 10 08:13:19 <evulish>	MJCD: why npm link over just npm install the repo?
Sep 10 08:13:25 <evulish>	i've never used npm link
Sep 10 08:13:35 <carlino3>	sinclair: that idea came to my mind and i did the test
Sep 10 08:13:35 <MJCD>	because you should never ever edit anything directly in node_modules
Sep 10 08:13:45 <carlino3>	and it worked
Sep 10 08:13:51 <grr12314>	not sure npm link even works right on windows and gommits right in git etc
Sep 10 08:14:03 <sinclair>	carlino3, nope
Sep 10 08:14:04 <grr12314>	but install from git url seems ok
Sep 10 08:14:10 <sinclair>	carlino3, test harder
Sep 10 08:14:22 <carlino3>	sinclair: what do you suggest?
Sep 10 08:14:30 <evulish>	MJCD: you wouldn't be.. it'd pull the changes from your repo
Sep 10 08:14:37 <sinclair>	carlino3, loading the page from a domain that isn't your domain
Sep 10 08:14:51 <MJCD>	that requires you to commit the unpolished thing
Sep 10 08:14:54 <MJCD>	ie publish it
Sep 10 08:15:01 <MJCD>	and to keep the repo up to date
Sep 10 08:15:05 <carlino3>	sinclair: i set up a simple website on 000webhost and put the script there
Sep 10 08:15:06 <MJCD>	ie publish every change
Sep 10 08:15:10 <MJCD>	and then update the project
Sep 10 08:15:15 <carlino3>	request was successfull to my surprise
Sep 10 08:15:16 <MJCD>	unworkable.
Sep 10 08:15:20 <sinclair>	carlino3, actually, do you run on port 7777 ?
Sep 10 08:15:22 <MJCD>	thus npm link
Sep 10 08:15:39 <carlino3>	sinclair: run what?
Sep 10 08:15:44 <sinclair>	carlino3, your server
Sep 10 08:15:53 <carlino3>	sinclair: what server?
Sep 10 08:16:14 <carlino3>	the webserver is listening in standard http port
Sep 10 08:16:16 <carlino3>	(80)
Sep 10 08:16:42 <sinclair>	address?
Sep 10 08:16:57 <sinclair>	carlino3, send link
Sep 10 08:17:09 <carlino3>	of my test?
Sep 10 08:17:12 <sinclair>	yup
Sep 10 08:18:43 <carlino3>	sinclair: https://pastebin.com/Z5ifz8qf just that simple code
Sep 10 08:19:45 <sinclair>	carlino3, it doesn't work, you would have to be loading the page from http://192.168.255.1/page.html
Sep 10 08:20:04 <sinclair>	carlino3, as the origin would have to be 192.168.255.1
Sep 10 08:20:19 <carlino3>	it does, or i think it does
Sep 10 08:20:43 <sinclair>	then its not some exploit, otherwise the planet would be hacked by now
Sep 10 08:20:56 <carlino3>	i can see the request in the developer toolbar succeded with a message from the router complaining about credentials
Sep 10 08:21:32 <sinclair>	carlino3, past e the code into codepen and see if it still works then
Sep 10 08:22:01 <sinclair>	carlino3, https://codepen.io/
Sep 10 08:22:34 <grr12314>	we should stop suggesting codepen
Sep 10 08:22:40 <grr12314>	now that they dont allow anonymous pens
Sep 10 08:23:28 <carlino3>	sinclair, tried in jsfiddle and it was blocked. that is ok
Sep 10 08:23:33 <carlino3>	but not in the 000webhost page
Sep 10 08:23:39 <sinclair>	carlino3, said that 10 mins ago
Sep 10 08:24:29 <carlino3>	it seems like it was blocked for mixed content
Sep 10 08:26:03 <carlino3>	sinclair still working in the 000webhost page. why?
Sep 10 08:27:11 <carlino3>	it is blocked if i access the site over https, because mixed content. otherwise the request is successfull
Sep 10 08:29:15 <BlaDe^>	Hi-- I'm trying to make a loop blocking..... because reasons.. failing tho - what's the issue with:
Sep 10 08:30:15 <BlaDe^>	const addRows = async (sheet, rows) => { rows.map(async (day) => { return await new Promise((resolve, reject) => { lameThing(row, () => resolve()); }); } }
Sep 10 08:32:09 <evulish>	weird i'm getting parse errors from eslint for all my jsx files but i've changed nothing :/
Sep 10 08:32:27 <grr12314>	BlaDe^ return promise all of the map
Sep 10 08:32:41 <BlaDe^>	OHHH DUH
Sep 10 08:32:42 <BlaDe^>	lol
Sep 10 08:32:46 <grr12314>	tho its not really a blocking loop
Sep 10 08:33:05 <BlaDe^>	yeah wait, that wouldn't do what I want
Sep 10 08:33:26 <BlaDe^>	I need to block on each lameThing() -- the damn API doesn't let me specify order so if I fire off a bunch of async inserts it's not deterministic
Sep 10 08:33:43 <BlaDe^>	I can do it recursively but I thought it'd be easy to block
Sep 10 08:33:48 <grr12314>	make it an actual loop then
Sep 10 08:33:53 <grr12314>	with await in it and all
Sep 10 08:34:11 <BlaDe^>	why isn't the await inside the map blocking right now?
Sep 10 08:34:21 <grr12314>	it is
Sep 10 08:34:36 <BlaDe^>	then why is it firing off a ton of concurrent requests
Sep 10 08:34:38 <grr12314>	"blocks" each separate invocation of the map callback\
Sep 10 08:34:47 <grr12314>	but they still all get fired up at once
Sep 10 08:35:08 <BlaDe^>	gah, ok :p
Sep 10 08:35:41 <grr12314>	you can have anything after the await inside the same function and it would actually wait
Sep 10 08:35:50 <grr12314>	but things after the whole map are totally different
Sep 10 08:36:09 <grr12314>	or separate calls of the map
Sep 10 08:36:10 <BlaDe^>	I didn't think the map would advance to the next key before the first returned _if_ it was blocking
Sep 10 08:37:01 <grr12314>	thinking of blocking/nonblocking is a bit wrong to begin with
Sep 10 08:37:25 <grr12314>	but you could say each async function invocation is "blocking" if called with await infront of it
Sep 10 08:37:33 <grr12314>	map doesnt call its argument with await tho
Sep 10 08:39:00 <BlaDe^>	loop worked as expected :/   heh
Sep 10 08:39:53 <grr12314>	so, consider what happens if you remove the "await" inside your loop body. thats what map is like
Sep 10 08:40:26 <BlaDe^>	yup yup. makes sense now.. ty
Sep 10 08:41:38 <graingert>	BlaDe^: it's best to separate your new Promise api comparability code from your business logic
Sep 10 08:42:13 <BlaDe^>	graingert whatcha mean?
Sep 10 08:42:33 <graingert>	Eg const asyncLameThing = utils.promisify(lameThing);
Sep 10 08:42:51 <graingert>	As early as possible
Sep 10 08:43:16 <BlaDe^>	I ended up w/ https://pastebin.com/sYYGWw7N
Sep 10 08:43:57 <BlaDe^>	the `addRowsSync` is sufficiently abstracted away I think.. given addRow is a 3rd party library already addRowsSync wrapping it with the hack seems sane enough
Sep 10 08:45:38 <graingert>	BlaDe^: is not sync tho
Sep 10 08:45:57 <BlaDe^>	the loop is
Sep 10 08:46:02 <graingert>	BlaDe^: no it's not
Sep 10 08:46:20 <graingert>	Also I'd go for reduce instead of a for loop
Sep 10 08:46:25 <BlaDe^>	not sure if we're being picky on terminology but it is not concurrently making rest requests as it was before
Sep 10 08:46:58 <grr12314>	putting "sync" in an async functon's name is nuts
Sep 10 08:47:02 <grr12314>	just saying
Sep 10 08:47:21 <grr12314>	you have some serious misunderstanding of sync/async/blocking
Sep 10 08:47:32 <graingert>	It's not nuts
Sep 10 08:47:36 <graingert>	It's confusing
Sep 10 08:47:42 <graingert>	Or wrong
Sep 10 08:48:04 <BlaDe^>	fair it's misleading
Sep 10 08:48:09 <BlaDe^>	addRowsOrdered.. happy? :p
Sep 10 08:48:20 <grr12314>	"series" is a term often used for that
Sep 10 08:48:25 <graingert>	BlaDe^: ordered?
Sep 10 08:48:28 <grr12314>	or serial etc
Sep 10 08:48:31 <graingert>	waterfall
Sep 10 08:48:39 <BlaDe^>	yeah serial also works
Sep 10 08:49:02 <graingert>	BlaDe^: why do you also mutate the row items?
Sep 10 08:49:30 <BlaDe^>	you mean appending the date?
Sep 10 08:49:39 <grr12314>	your loop is weird too
Sep 10 08:49:46 <grr12314>	seems like just a for-of would do
Sep 10 08:49:58 <grr12314>	or for-in
Sep 10 08:50:27 <graingert>	BlaDe^: it doesn't look like an append
Sep 10 08:50:32 <grr12314>	for-in since you want the keys
Sep 10 08:50:50 <BlaDe^>	yeah, flipped it to for-in
Sep 10 08:51:30 <grr12314>	and indeed use util.promisify
Sep 10 08:52:02 <graingert>	BlaDe^: I'd doe something like const rowData = { ...item, date: }
Sep 10 08:52:04 <grr12314>	ah damn but it's on a method not just a function
Sep 10 08:52:29 <grr12314>	you can still use it but you have to .bind it, its a bit more awkward
Sep 10 08:52:43 <graingert>	Or arrow it
Sep 10 08:52:57 <graingert>	Or find the prototype of the object outside your function
Sep 10 08:54:25 <BlaDe^>	huh that's weird, that claims date isn't defined if I try expand it (i removed the trailing : because that said unexpected "}" )
Sep 10 08:54:52 <grr12314>	{a} is same as {a:a}
Sep 10 08:54:57 <grr12314>	so it looks for a
Sep 10 08:55:24 <grr12314>	you want date: arr[i]
Sep 10 08:57:00 <BlaDe^>	ah I had not renamed correctly.. wanted for (const date in rows) { const rowData = { ...rows[date], date }
Sep 10 08:57:12 <grr12314>	but its not clear from the code so far - do you need this date field just for this particular addrows function call, or do you want it to stick around in the original rows array too.
Sep 10 08:57:27 <BlaDe^>	it needs to be in the original rows array
Sep 10 08:57:54 <grr12314>	then you'd need the mutation anyway
Sep 10 08:58:12 <BlaDe^>	oh I see what you mean
Sep 10 08:58:29 <BlaDe^>	only needs to be in this one function for the one lameThing()
Sep 10 08:59:54 <grr12314>	nice, thats the cleaner approach
Sep 10 09:00:04 <BlaDe^>	haven't written much JS in years.. so the shorthand expansion thing / promises are pretty new to me
Sep 10 09:01:00 <evulish>	is there a better way to turn an array of digits into a number?
Sep 10 09:01:13 <evulish>	n> new Number([1,2,3].join(''))
Sep 10 09:01:14 <jellobot>	(okay) [Number: 123]
Sep 10 09:01:18 <evulish>	n> Number([1,2,3].join(''))
Sep 10 09:01:19 <jellobot>	(okay) 123
Sep 10 09:01:22 <evulish>	^
Sep 10 09:02:02 <ashnur>	parseInt(string, 10) ?
Sep 10 09:02:12 <ashnur>	or use BigInt ;)
Sep 10 09:05:47 <grr12314>	better in what way
Sep 10 09:06:48 <grr12314>	n> [1,2,3].reduce((a,b)=>a*10+b)
Sep 10 09:06:49 <jellobot>	(okay) 123
Sep 10 09:07:35 <grr12314>	better in that it avoids pointless intermediate string conversions
Sep 10 09:07:49 <grr12314>	but maybe less obvious as far as readability
Sep 10 09:09:17 <grr12314>	n> [1,'2',3].reduce((a,b)=>a*10+b) // also more finicky about the input
Sep 10 09:09:18 <jellobot>	(okay) 1023
Sep 10 09:09:54 <evulish>	n> parseInt(""+[1,2,3])
Sep 10 09:09:56 <jellobot>	(okay) 1
Sep 10 09:10:09 <grr12314>	dont parseint
Sep 10 09:10:17 <grr12314>	Number or +
Sep 10 09:10:22 <evulish>	just wanted to see if it worked
Sep 10 09:10:27 <evulish>	n> +[1,2,3]
Sep 10 09:10:28 <jellobot>	(okay) NaN
Sep 10 09:10:36 <evulish>	n> +[1]
Sep 10 09:10:36 <jellobot>	(okay) 1
Sep 10 09:10:45 <grr12314>	n> +[].join``
Sep 10 09:10:46 <jellobot>	(okay) 0
Sep 10 09:10:50 <grr12314>	n> +[1,2,3].join``
Sep 10 09:10:51 <jellobot>	(okay) 123
Sep 10 09:10:59 <grr12314>	if you feel golfy
Sep 10 09:12:52 <grr12314>	n> [1,'2',3].reduce((a,b)=>a*10+b*1) // of course you could coerce types if that bothered you
Sep 10 09:12:53 <jellobot>	(okay) 123
Sep 10 09:17:25 <sloth>	First you get the sugar, then you get the do do do do do do, then you get the honey
Sep 10 09:35:49 <evulish>	n> String.raw({raw:[1,2,3]})
Sep 10 09:35:50 <jellobot>	(okay) '123'
Sep 10 09:35:58 <evulish>	zoom zoom
Sep 10 09:36:09 <evulish>	n> +String.raw({raw:[1,2,3]})
Sep 10 09:36:10 <grr12314>	thats not a number :p
Sep 10 09:36:10 <jellobot>	(okay) 123
Sep 10 09:57:43 <stennowork>	nice
Sep 10 10:08:53 <MJCD>	lol is it tho
Sep 10 10:09:30 <stennowork>	really doe
Sep 10 10:21:20 *	Disconnected ()
**** ENDING LOGGING AT Tue Sep 10 10:21:20 2019

**** BEGIN LOGGING AT Tue Sep 10 10:21:44 2019

Sep 10 10:21:44 *	Now talking on ##javascript
Sep 10 10:21:44 *	Topic for ##javascript is: JavaScript is *not* Java. | Just ask your question. | Say "!mdn abc" for docs on "abc". | Don't paste code in the channel. | Can't talk? Get registered on freenode ( https://git.io/vaTS2 )
Sep 10 10:21:44 *	Topic for ##javascript set by niggler!~niggler@unaffiliated/niggler (Tue Jan 15 07:16:23 2019)
Sep 10 10:45:35 <sinclair>	its a shame JavaScript will never support SIMD
Sep 10 10:47:50 <personx>	https://pastebin.com/SQwxVWrv I understand what's happening here but could someone lay down the flowchart of the references' transfers for me?
Sep 10 10:48:56 *	personx is blazed out. 
Sep 10 10:50:00 <MJCD>	lol
Sep 10 10:50:05 <MJCD>	I need to get on that
Sep 10 10:50:14 <MJCD>	get my medicine into me
Sep 10 10:50:45 <personx>	We got techquila right here. ;) xD
Sep 10 10:50:54 <MJCD>	haha too early to start drinking
Sep 10 10:51:00 <MJCD>	unless I wanna crash at 8pm
Sep 10 10:51:01 <MJCD>	lol
Sep 10 10:51:28 <bjorngi>	It's always 4 o'clock somewhere.
Sep 10 10:51:34 <personx>	3pm here. xD
Sep 10 10:52:05 <techquila>	;-P
Sep 10 10:52:09 <personx>	drinking right after toking, there's only pills that are better than that. :3 xD
Sep 10 10:54:02 *	personx is just realizing there's many many desi people here! 
Sep 10 10:54:54 <grr12314>	n> 1_000
Sep 10 10:54:55 <jellobot>	(okay) 1000
Sep 10 10:55:05 <grr12314>	n> +'1_000'
Sep 10 10:55:06 <jellobot>	(okay) NaN
Sep 10 10:55:17 <grr12314>	n> parseInt('1_000')
Sep 10 10:55:19 <jellobot>	(okay) 1
Sep 10 10:55:44 <grr12314>	n> JSON.parse('1_000')
Sep 10 10:55:45 <jellobot>	(fail) SyntaxError: Unexpected token _ in JSON at position 1
Sep 10 10:55:47 <Intelo>	How can I return "" if required result is not found? https://jsfiddle.net/3zy7atfp/
Sep 10 10:56:08 <MJCD>	Intelo, return ""
Sep 10 10:56:09 <MJCD>	:))
Sep 10 10:56:16 <MJCD>	!next
Sep 10 10:56:16 <ecmabot>	MJCD: Another satisfied customer! NEXT!!
Sep 10 10:56:29 <grr12314>	you cant return from foreach
Sep 10 10:57:01 <grr12314>	i mean you can but it only applies to the inner function and is ignored
Sep 10 10:57:13 <MJCD>	lol
Sep 10 10:57:20 <MJCD>	#jokes
Sep 10 10:57:30 <grr12314>	you want .find
Sep 10 10:57:34 <MJCD>	but also not
Sep 10 10:57:35 <MJCD>	lol
Sep 10 10:57:43 <grr12314>	or a loop
Sep 10 10:57:44 <MJCD>	like look for thing, if found, store somewhere
Sep 10 10:57:55 <MJCD>	after the iterator, check the result store
Sep 10 10:58:02 <MJCD>	if not there, return "" done
Sep 10 10:58:10 <MJCD>	not rocket surgery
Sep 10 10:58:21 <grr12314>	^ works too, but a bit roundabout vs .find
Sep 10 10:58:38 <MJCD>	.find in the above would just take the place of the iterator
Sep 10 10:58:42 <grr12314>	then again, if you didn't know all array methods, you should at least know that one
Sep 10 10:58:44 <MJCD>	the same as using .some
Sep 10 10:59:02 <MJCD>	or any other with a short-circuit mechanism inside the function passed in
Sep 10 10:59:13 <grr12314>	find would save you from storing the found item tho
Sep 10 10:59:15 <grr12314>	as it returns it
Sep 10 10:59:19 <MJCD>	sure
Sep 10 10:59:21 <MJCD>	sounds fine
Sep 10 11:00:32 <Intelo>	MJCD, which line.
Sep 10 11:00:41 <personx>	people, help.
Sep 10 11:00:45 <personx>	https://pastebin.com/SQwxVWrv I understand what's happening here but could someone lay down the flowchart of the references' transfers for me?
Sep 10 11:00:59 <Intelo>	MJCD,  as per my code, it loops over all items even if it gets the required result. As per my code, it always returns ""
Sep 10 11:01:03 <Intelo>	MJCD,  why is that?
Sep 10 11:02:36 <MJCD>	Intelo, urgh fine ill open the link
Sep 10 11:02:37 <MJCD>	lol
Sep 10 11:03:08 <Intelo>	MJCD, what?
Sep 10 11:03:11 <MJCD>	Intelo, as grr12314 said you cannot return within most iterators
Sep 10 11:03:16 <MJCD>	forEach included
Sep 10 11:03:17 <Intelo>	MJCD,  oh..
Sep 10 11:03:22 <Intelo>	hm.. strange..
Sep 10 11:03:24 <Intelo>	why?
Sep 10 11:03:29 <Intelo>	so whats the correct way?
Sep 10 11:03:31 <MJCD>	because it makes no sense
Sep 10 11:03:33 <grr12314>	Intelo understand functions
Sep 10 11:03:36 <MJCD>	its not returned to anywhere
Sep 10 11:03:40 <grr12314>	return returns a result from a function
Sep 10 11:03:48 <grr12314>	do you see in shich function you wrote it?
Sep 10 11:03:52 <grr12314>	which*
Sep 10 11:04:03 <Intelo>	grr12314,  it was in .each
Sep 10 11:04:08 <Intelo>	.forEach
Sep 10 11:04:19 <grr12314>	so it wasn't in the main one
Sep 10 11:04:22 <MJCD>	it is technically in a function
Sep 10 11:04:29 <MJCD>	it just makes no sense to have a return there
Sep 10 11:04:30 <grr12314>	so the main one is always undefined
Sep 10 11:04:41 <MJCD>	as grr12314 said just replace it with .find
Sep 10 11:04:48 <MJCD>	!mdn find
Sep 10 11:04:49 <jellobot>	MJCD, Array.prototype.find(), JavaScript - The find() method returns the value of the first element in the provided array that satisfies the provided testing function. https://mdn.io/find
Sep 10 11:04:59 <grr12314>	well its not as simple as "just replace it with .find"
Sep 10 11:05:14 <grr12314>	when the actual problem is not understanding functions as a concept
Sep 10 11:05:15 <MJCD>	I mean short of me writing all the code for them it is
Sep 10 11:05:16 <MJCD>	:P
Sep 10 11:07:34 <grr12314>	personx there are no references and certainly no transfers, what are you on about?
Sep 10 11:09:01 <grr12314>	or are we calling argument passing "reference transfer" now
Sep 10 11:09:06 <grr12314>	idk
Sep 10 11:09:24 <grr12314>	even then what is there to flowchart lol
Sep 10 11:10:12 <MJCD>	lol yeah
Sep 10 11:10:25 <MJCD>	and why would we do all that for you
Sep 10 11:10:30 <MJCD>	sounds like homework to me
Sep 10 11:24:58 <grr12314>	n> 0b1010_0001_1000_0101
Sep 10 11:25:00 <jellobot>	(okay) 41349
Sep 10 11:25:03 <grr12314>	n> 0b_1010_0001_1000_0101
Sep 10 11:25:04 <jellobot>	(fail) SyntaxError: Invalid or unexpected token
Sep 10 11:25:14 <grr12314>	n> 0b1010__0001_1000_0101
Sep 10 11:25:15 <jellobot>	(fail) SyntaxError: Only one underscore is allowed as numeric separator
Sep 10 11:27:45 <Intelo>	grr12314, MJCD  how to do it correctly?
Sep 10 11:27:57 <MJCD>	!tutorial @ Intelo
Sep 10 11:27:58 <ecmabot>	Intelo: It is HIGHLY recommended that you establish a firm grasp of the core syntax within both JavaScript, HTML, and basic CSS. Before asking any syntax error related questions you can use `!eslint` to detect any contextual errors. A critically acclaimed tutorial is available @ http://eloquentjavascript.net/
Sep 10 11:28:11 <MJCD>	!ydkjs @ Intelo
Sep 10 11:28:11 <ecmabot>	Intelo: You Don't Know Javascript - Free book series on Github (https://github.com/getify/You-Dont-Know-JS)
Sep 10 11:28:56 <MJCD>	!learn ydkjs=You Don't Know Javascript - A free book series for intermediate-advanced skill levels (https://github.com/getify/You-Dont-Know-JS)
Sep 10 11:28:56 <ecmabot>	MJCD: Learned `ydkjs`.
Sep 10 11:31:32 <rindolf>	Hi all! "time npm install camel-case eslint eslint-config-google html-minifier jquery param-case prettier sass uglify-es" is taking 11s without updating anything :( how can i speed it up?
Sep 10 11:35:19 <grr12314>	dont run it?
Sep 10 11:35:25 <grr12314>	why would you run it?
Sep 10 11:35:43 <rindolf>	v
Sep 10 11:36:12 <grr12314>	"without updating anything" is wrong - it's fully replacing all those packages, even if it happens to be with the exact same versions
Sep 10 11:36:23 <rindolf>	grr12314: it is part of my site's rebuild process
Sep 10 11:36:51 <rindolf>	grr12314: ah
Sep 10 11:37:16 <grr12314>	just change it to a simple npm install
Sep 10 11:37:35 <grr12314>	hm
Sep 10 11:37:46 <rindolf>	grr12314: using package.json?
Sep 10 11:38:30 <grr12314>	yes
Sep 10 11:38:56 <grr12314>	since you ran that full install xxxx thing it should have already added them to package.json tho
Sep 10 11:39:01 <grr12314>	if you had one at least
Sep 10 11:39:14 <rindolf>	grr12314: ok, thanks
Sep 10 11:39:36 <rindolf>	grr12314: sources are here for reference - https://github.com/shlomif/shlomi-fish-homepage
Sep 10 11:40:47 <kristian_>	any hints how I can get last quarters start date with momentjs?
Sep 10 11:41:14 <kristian_>	moment().startOf('quarter') gives me the current quarters start but I need last quarters start
Sep 10 11:42:23 <grr12314>	.....startOf('quarter').subtract(something).startOf('quarter') ?
Sep 10 11:42:56 <kristian_>	grr12314: thanks, almost :P moment().subtract(1, 'quarter').startOf('quarter')
Sep 10 11:43:01 <grr12314>	does subtract(1, 'quarter') maybe work too?
Sep 10 11:43:11 <kristian_>	grr12314: yup :)
Sep 10 11:44:31 <grr12314>	n> !!require('moment')
Sep 10 11:44:32 <jellobot>	(fail) Error: Cannot find module 'moment' Require stack: - /run/run.js
Sep 10 11:46:10 <DnzAtWrk>	can you declare and call an arrow function in one statement?
Sep 10 11:46:30 <grr12314>	n> (_=>'yes')()
Sep 10 11:46:31 <jellobot>	(okay) 'yes'
Sep 10 11:46:42 <DnzAtWrk>	ah, nice
Sep 10 11:46:47 <grr12314>	why wouldnt you
Sep 10 11:47:12 <DnzAtWrk>	addEventListener('resize', (() => resize stuff)());
Sep 10 11:47:15 <DnzAtWrk>	so this should work then
Sep 10 11:47:26 <grr12314>	no
Sep 10 11:47:58 <grr12314>	this will call it but it will also pass its result to addEventListener, not the function itself
Sep 10 11:48:08 <DnzAtWrk>	hmm
Sep 10 11:51:57 <Intelo>	as per my code, it loops over all items even if it gets the required result. As per my code, it always returns ""
Sep 10 11:52:19 <Intelo>	https://paste.ubuntu.com/p/gq57VskXsG/
Sep 10 11:53:44 <grr12314>	not really "", but undefined
Sep 10 11:54:01 <grr12314>	is there a question hidden in your message somewhere?
Sep 10 11:55:14 <MJCD>	lol
Sep 10 11:58:47 <escherial>	hey, i'm trying to write a small browser game using webpack with a graphics library called pixi.js, but i'm having trouble adapting a library, tmx-parser, that was apparently meant for use with node to being used with the browser and webpack-created bundles
Sep 10 11:59:27 <MJCD>	escherial, k
Sep 10 11:59:29 <MJCD>	what about it
Sep 10 11:59:51 <escherial>	mostly tmx-parser relies on fs for reading files by default, but i'm struggling to understand how i'd replace that with a call to require(), or whatever i'm supposed to use to read arbitrary files out of the bundle that webpack creates
Sep 10 12:00:19 <escherial>	MJCD: er, or less dunning-krueger, i just want to load a tiled TMX map somehow; i don't particularly care how as long as i don't have to rewrite tmx-parser completely
Sep 10 12:01:44 <escherial>	i'm sorry, i realize there's a lot going on in this question...basically i'd like to read TMX maps, but all the support for that for pixi.js is based on ancient non-es6 versions of pixi afaict
Sep 10 12:02:01 <MJCD>	escherial, you may find this useful
Sep 10 12:02:02 <MJCD>	https://github.com/tmux-plugins/tpm
Sep 10 12:02:06 <grr12314>	tmx-parser has a function that works on strings too
Sep 10 12:02:35 <MJCD>	easy modular tmux :D
Sep 10 12:02:38 <MJCD>	manager
Sep 10 12:02:44 <grr12314>	so just load your files separately, with a webpack static file loader
Sep 10 12:03:12 <MJCD>	i'd imagine you'd want to use a webpack loader!thing
Sep 10 12:03:42 <escherial>	grr12314: right, but it still needs to read other files, e.g. tilesets; it uses an overrideable method called readFile to do that, but...hrm, alright, is it possible to use webpack's loader at runtime, since i won't know the tmx file references before i parse it?
Sep 10 12:03:56 <escherial>	MJCD: sadly tmux and tiled's TMX format are unrelated
Sep 10 12:04:03 <MJCD>	webpack is not a loader
Sep 10 12:04:07 <MJCD>	so no
Sep 10 12:04:33 <MJCD>	escherial, ah my apologies I typed my search wrong
Sep 10 12:04:33 <MJCD>	https://github.com/Antonin-Deniau/tmx-loader
Sep 10 12:04:40 <MJCD>	webpack tmx loader
Sep 10 12:04:50 <escherial>	MJCD: ah, that is  interesting, thanks
Sep 10 12:04:58 <MJCD>	you will need a backend api endpoint for the readFile's
Sep 10 12:05:17 <MJCD>	that can just return require('loader!thing.tmx')
Sep 10 12:05:19 <MJCD>	or somesuch
Sep 10 12:06:36 <escherial>	MJCD: i'm hoping this tmx-loader you linked handles that for me, because frankly i still don't get what require() actually does...correct me if i'm wrong, but my understanding is that webpack will statically analyze all the calls to require() and then bundle those things, replacing the call to require() with references to elements in the bundle
Sep 10 12:06:58 <escherial>	so how does that work if you're require()ing something you don't know about at build time?
Sep 10 12:07:13 <escherial>	e.g. an embedded reference to a TSX file in your TMX file that you parse at runtime?
Sep 10 12:09:19 <grr12314>	https://medium.com/front-end-weekly/webpack-and-dynamic-imports-doing-it-right-72549ff49234
Sep 10 12:10:08 <grr12314>	then the readfile thing you mentioned can do require(somedynamicxxx)
Sep 10 12:10:28 <grr12314>	but yea hopefully the tmx-loader saves you all that
Sep 10 12:11:17 <grr12314>	eh sorry i meant the section about /* webpackMode: "eager" */ from that article in particular
Sep 10 12:11:26 <grr12314>	tho i guess the whole thing is a good read too
Sep 10 12:15:28 <grr12314>	alternatively https://github.com/webpack/docs/wiki/context#requirecontext if you prefer actual code instead of comments
Sep 10 12:16:24 <escherial>	grr12314: neat, thanks; i'll give those links a look
Sep 10 12:39:56 <escherial>	if anyone's curious, i think i'm making progress; i was able to replace tmx-loader's readFile with a call to fetch() to a folder that i've made publicly-accessible via webpack, and it appears to be loading the files as expected
Sep 10 12:40:38 <escherial>	just tracking down and resolving weird path choices in the TMX format, e.g. tilesets are given as relative paths from the location of the TMX file, and graphics assets mentioned in the tilesets are relative to the tileset's path...
Sep 10 12:40:56 <escherial>	not hard to deal with, just annoying
Sep 10 12:53:04 <grr12314>	the node-side readfile (default one) seems to just pass path to fs.readfile, so its always relative to cwd imo
Sep 10 12:55:48 <grr12314>	(that is, the path that gets passed to the function, not the path in the format itself)
Sep 10 13:13:43 <robin___>	hi! how can I call a static method from a static method in the same class? https://pastebin.com/raw/y33cUYwh thanks
Sep 10 13:16:05 <Maxdamantus>	robin___: MethodClass.method1()
Sep 10 13:17:31 <Maxdamantus>	robin___: JS doesn't do anything like making class members available in scope.
Sep 10 13:18:31 <robin___>	Thanks!
Sep 10 22:51:48 *	Disconnected ()
**** ENDING LOGGING AT Tue Sep 10 22:51:48 2019

**** BEGIN LOGGING AT Tue Sep 10 22:52:12 2019

Sep 10 22:52:12 *	Now talking on ##javascript
Sep 10 22:52:12 *	Topic for ##javascript is: JavaScript is *not* Java. | Just ask your question. | Say "!mdn abc" for docs on "abc". | Don't paste code in the channel. | Can't talk? Get registered on freenode ( https://git.io/vaTS2 )
Sep 10 22:52:12 *	Topic for ##javascript set by niggler!~niggler@unaffiliated/niggler (Tue Jan 15 07:16:23 2019)
Sep 10 22:59:11 <niggler>	vscode folding is weird when you have large files
Sep 10 23:00:16 <niggler>	it thinks a function is folded but still kept an array around
Sep 10 23:01:05 <ningu>	you gotta know when to code em, know when to fold em
Sep 10 23:01:22 <niggler>	https://i.imgur.com/5xI7gDa.png
Sep 10 23:01:31 <niggler>	so it successfully folded the array
Sep 10 23:01:39 <niggler>	but kept the close brace and the inner callback
Sep 10 23:01:57 <useretail>	i have npm-module and inside there is src folder. how to compile it into esm/lib
Sep 10 23:02:08 <niggler>	import the src entrypoint
Sep 10 23:02:14 <useretail>	how?
Sep 10 23:02:28 <niggler>	most will tell you what to import
Sep 10 23:02:40 <niggler>	*most READMEs will tell you the entry point for esm
Sep 10 23:03:01 <ningu>	useretail: you want to compile the module into _your_ build or you want to build the module itself?
Sep 10 23:03:03 <useretail>	how to develop such module on a running webserver?
Sep 10 23:03:25 <useretail>	i want to develop that module further and see how it works with my app
Sep 10 23:03:50 <ningu>	useretail: if you are modifying an existing module and want to build it, I'd look into package.json to see what build scripts it has
Sep 10 23:04:01 <ningu>	or just try npm build, I suppose
Sep 10 23:04:53 <useretail>	npm build doesn't work
Sep 10 23:05:30 <useretail>	  "main": "lib/index.js",  "module": "esm/index.js",
Sep 10 23:06:05 <useretail>	but it's a pain in the ass to develop a module this way
Sep 10 23:06:25 <useretail>	i mean after every change i have to build it wo work with main app
Sep 10 23:07:10 <ljharb>	useretail: typically when using `npm link` you'd run the build process in another shell tab with a watcher.
Sep 10 23:07:27 <ljharb>	useretail: but better is, build your module so that it's architected well enough, with good enough tests, that you don't need to test it inside another app
Sep 10 23:08:58 <useretail>	i'm trying to develop a data provider module for react-admin
Sep 10 23:09:09 <useretail>	what's the proper way to do this?
Sep 10 23:09:32 <ljharb>	you'll probably want to use `npm link` for that, given that it sounds like a plugin
Sep 10 23:10:31 <useretail>	it wants to create a symlink in /usr/lib/node_modules/
Sep 10 23:10:48 <useretail>	i'm not sure what it solves
Sep 10 23:11:24 <useretail>	besides, i have to restart react-admin app every time i make a change
Sep 10 23:11:39 <useretail>	is that what modern development looks like?
Sep 10 23:13:00 <GreenJello>	npm link isn't very friendly to file watchers, but try `touch node_modules/the-package-name`
Sep 10 23:14:55 <useretail>	GreenJello, but how to avoid restarting the main app every time i make some changes?
Sep 10 23:15:55 <GreenJello>	useretail, sometimes touching the symlink causes a program to reread the files behind the link
Sep 10 23:16:29 <useretail>	main app starts with: react-scripts start
Sep 10 23:16:54 <useretail>	anyone familiar with react?
Sep 10 23:21:13 <GreenJello>	useretail, hmm, I used `yarn link` but my create-react-app project picked up the change
Sep 10 23:21:59 <GreenJello>	useretail, you might just need to run the build script
Sep 10 23:22:33 <useretail>	sure, but like i said, such development is a pain in the ass
Sep 10 23:22:49 <GreenJello>	useretail, I mean the build script in the project you're linking from
Sep 10 23:22:52 <useretail>	there must be more efficient way
Sep 10 23:24:27 <useretail>	GreenJello, i have only these: "scripts": {"start": "react-scripts start","build": "react-scripts build","test": "react-scripts test","eject": "react-scripts eject"  }
Sep 10 23:25:17 <GreenJello>	useretail, I'm talking about the build script in the package you're linking, but I guess if it works when you restart create-react-app then you're already running that
Sep 10 23:25:35 <useretail>	GreenJello, that
Sep 10 23:25:43 <useretail>	*that's exactly the problem
Sep 10 23:25:59 <useretail>	how to avoid restarting?
Sep 10 23:27:21 <useretail>	plugins has: "scripts": {"build": "yarn run build-cjs && yarn run build-esm","build-cjs": "rimraf ./lib && tsc","build-esm": "rimraf ./esm && tsc --outDir esm --module es2015","watch": "rimraf ./lib && tsc --watch"}
Sep 10 23:27:33 <useretail>	but this doesn't solve anything
Sep 10 23:28:01 <useretail>	because plugin has to be compiled to be used in main app
Sep 10 23:28:16 <useretail>	*build, not compiled
Sep 10 23:29:58 <useretail>	and in main app, everything goes into a webpack
Sep 10 23:31:04 <niggler>	n> 0 == ""
Sep 10 23:31:05 <jellobot>	(okay) true
Sep 10 23:31:39 <useretail>	n> 0 != ""
Sep 10 23:31:40 <jellobot>	(okay) false
Sep 10 23:32:46 <useretail>	it's hard to believe that among 1000+ users present in this channel, nobody faced the same problem
Sep 10 23:33:21 <niggler>	heh ^^ was doing a regex to test for complex numbers and forgot to put back the "1" for the implicit cases of 1+i and 3-j
Sep 10 23:34:06 <niggler>	useretail: id recommend looking at some other starter that does it right and see what they are doing
Sep 10 23:34:28 <niggler>	you need a PhD in webpackology to understand what's going on half the time
Sep 10 23:36:37 <useretail>	react, angular, typescript and all that crap is so overrated
Sep 10 23:37:05 <niggler>	i always thought the technology churn served as a form of job security for those involved
Sep 10 23:37:53 <Dirak>	assuming the technology market is effecient, nothing is truly overrated
Sep 10 23:38:11 <niggler>	thats the point
Sep 10 23:38:18 <niggler>	technology is inherently inefficient
Sep 10 23:39:09 <niggler>	as individuals, we are participants in the labor half of the divide, while as businesses we are on the capital side, we are effectively doing work to ensure we don't have future work
Sep 10 23:39:10 <DeltaHeavy>	How is technology inefficient?
Sep 10 23:39:28 <niggler>	so the individual participants are incentivized to crawl as slowly as possible subject to market constraints
Sep 10 23:39:29 <DeltaHeavy>	Like I'm sure that's not what they said when they invented the horse drawn plow.
Sep 10 23:40:45 <useretail>	angular = google; react = facebook; typescript = microsoft;
Sep 10 23:40:51 <useretail>	great
Sep 10 23:41:31 <useretail>	which makes all modern js devs slaves
Sep 10 23:41:41 <niggler>	you dont have to use them
Sep 10 23:41:42 <DeltaHeavy>	lol
Sep 10 23:41:45 <niggler>	and there's vue
Sep 10 23:42:02 <DeltaHeavy>	React is licensed under the MIT license which means I owe nothing to FB.
Sep 10 23:42:12 <DeltaHeavy>	I'm free to use the software as I see fit pretty much.
Sep 10 23:42:18 <Dirak>	yikes. All those technologies are owned by the community because they're free as in freedom and open source
Sep 10 23:42:41 <useretail>	DeltaHeavy, facebook still own a patent for react
Sep 10 23:42:45 <niggler>	we were sort of discussing this yesterday Dirak
Sep 10 23:42:45 <DeltaHeavy>	Quality work is likely going to be behind projects where very high grade developers are paid to focus on the development and improvment of said software.
Sep 10 23:42:49 <ljharb>	useretail: it's not overrated at all
Sep 10 23:42:53 <DeltaHeavy>	useretail So?
Sep 10 23:42:53 <ljharb>	useretail: not anymore they don't
Sep 10 23:43:00 <ljharb>	useretail: oh well, i guess they still do, that's true
Sep 10 23:43:03 <niggler>	patent concerns aside, react is a facebook production
Sep 10 23:43:04 <ljharb>	useretail: but also yes, so?
Sep 10 23:43:06 <Dirak>	When FB threatened to pull the MIT license, the community was ready to switch off to a FOSS fork
Sep 10 23:43:13 <ljharb>	Dirak: that never happened
Sep 10 23:43:18 <useretail>	DeltaHeavy, check you local patent laws
Sep 10 23:43:20 <DeltaHeavy>	I don't recall thath appening either
Sep 10 23:43:23 <ljharb>	Dirak: FB had a modified MIT license that *also* was a patent grant
Sep 10 23:43:28 <DeltaHeavy>	useretail I know the situation. I don't owe React anything.
Sep 10 23:43:31 <niggler>	there's no governance model outside of FB, and that's also true of angular
Sep 10 23:43:33 <ljharb>	a revocable patent grant
Sep 10 23:43:38 <ljharb>	Dirak: and everyone wanted them to use a regular MIT license. so they eventually did.
Sep 10 23:43:45 <niggler>	*google being the sole arbiter of angular's future
Sep 10 23:43:58 <ljharb>	niggler: "no governance model outside of the company" is a super valid complaint about a great many open source software projects, irrespective of the company.
Sep 10 23:44:11 <DeltaHeavy>	niggler Anybody is free to fork it and create a new one.
Sep 10 23:44:15 <niggler>	that's a vote in favor of vue btw
Sep 10 23:44:20 <DeltaHeavy>	But what's the value in it when FB is already doing it and doing it well?
Sep 10 23:44:47 <useretail>	https://svelte.dev/blog/virtual-dom-is-pure-overhead
Sep 10 23:44:51 <ljharb>	rofl, yeah
Sep 10 23:44:52 <niggler>	the value is in not implicitly supporting the entity behind it, same reason people reject blood diamonds
Sep 10 23:45:06 <ljharb>	useretail: re the earlier thing, many of us have run into the problem; the solution is `npm link` and a tab with a build process with a watcher.
Sep 10 23:45:15 <ljharb>	blood diamonds are hardly comparable to facebook or google
Sep 10 23:45:29 <ljharb>	also, you buy diamonds. you don't buy oss software.
Sep 10 23:45:33 <ljharb>	so, false equivalency.
Sep 10 23:45:37 <niggler>	sure they are, its the same principle except one step removed
Sep 10 23:45:42 <jaawerth>	didn't facebook get rid of its license addendum after the community made noise about it?
Sep 10 23:45:45 <niggler>	you vote with your technology choices
Sep 10 23:45:59 <niggler>	yes FB switched to MIT license, that isn't the discussion here
Sep 10 23:46:18 <jaawerth>	well ljharb  mentioned it and I was just making sure I remembered right that they removed the addon
Sep 10 23:46:21 <useretail>	ljharb, might work, but not efficient, cause it has to webpacked on every change
Sep 10 23:46:33 <niggler>	it was BSD with a dubious patent grant
Sep 10 23:46:36 <jaawerth>	(it was always MIT iirce, it just had an additional license file that went into the patent crap)
Sep 10 23:46:39 <jaawerth>	ahh ok
Sep 10 23:46:53 <niggler>	historically, it was originally Apache2
Sep 10 23:47:00 <ljharb>	jaawerth: FB's original thing was a gift
Sep 10 23:47:02 <niggler>	and to some extent its unfortunate they didnt just go back
Sep 10 23:47:03 <useretail>	jaawerth, doesn't matter, they still have the patent and the right to sue you
Sep 10 23:47:09 <ljharb>	jaawerth: it was a patent grant, but a revocable one if you sued facebook
Sep 10 23:47:26 <ljharb>	jaawerth: they removed the grant, is all, so now instead of "you're only sue-able if you sue facebook" now it's "you're always sue-able"
Sep 10 23:47:29 <ljharb>	useretail: so?
Sep 10 23:47:29 <jaawerth>	useretail: I mean they always have the rights to sue me for anything
Sep 10 23:47:39 <jaawerth>	and they have more lawyers than I do
Sep 10 23:47:57 <ljharb>	useretail: i'm 100% certain - have consulted with lawyers - that anyone using vue also is sue-able by facebook because it's infringing on some of their react patents.
Sep 10 23:48:07 <ljharb>	useretail: but facebook would never do that because it's untenable and unwise from a PR perspective.
Sep 10 23:48:31 <ljharb>	useretail: almost everything is patented at this point.
Sep 10 23:48:47 <useretail>	ljharb, that's exactly the plan - to get more attention
Sep 10 23:49:45 <useretail>	why there's no such hype about libphonenumber developed by google?
Sep 10 23:50:31 <useretail>	it's a great library that i personally used, but unfortunately it wasnt covered in the media as well as angular/react/typescript
Sep 10 23:50:54 <useretail>	it's all about pr
Sep 10 23:51:10 <useretail>	and for me personally angular/react/typescript = fake news
Sep 10 23:51:15 <ljharb>	my point is that who owns the patent is irrelevant unless they’re a known troll
Sep 10 23:51:23 <bambanx>	there is a webpack channel specific on irc?
Sep 10 23:51:30 <niggler>	ljharb: companies are unknown trolls until they start trolling
Sep 10 23:51:32 <bambanx>	or you ask here too about it?
Sep 10 23:51:35 <niggler>	that's not a defense of anything
Sep 10 23:51:41 <niggler>	if the $$ is big enough they'll flip
Sep 10 23:51:45 <ljharb>	perhaps so
Sep 10 23:51:57 <ljharb>	but at that point there’s too many users to sue everyone
Sep 10 23:51:59 <niggler>	so all we can say is that they are currently not suspected of patent trolling
Sep 10 23:52:05 <niggler>	didnt stop oracle from going after google
Sep 10 23:52:06 <ljharb>	and they lose the patent if they don’t
Sep 10 23:52:43 <niggler>	we all vote with our technology choices
Sep 10 23:53:03 <useretail>	yeah, just imagine some rival company of facebook using react. no doubt that they will sue
Sep 10 23:53:09 <ljharb>	You’re legally compelled to sue everyone infringing your patents, or you lose your patents. At this point is doubtful Facebook could ever win a lawsuit over their react patents
Sep 10 23:53:31 <systemfault>	useretail: Why, React is not how facebook makes their money.
Sep 10 23:54:31 <systemfault>	The facebook share is not at 187$ because of React.
Sep 10 23:54:41 <useretail>	systemfault, i thought the same way until apple sued samsung
Sep 10 23:55:17 <systemfault>	useretail: Apple does tablets and phones... Samsung doess ????
Sep 10 23:55:24 <systemfault>	(Hint: tablets and phones)
Sep 10 23:55:31 <niggler>	samsung was forced to adopt asymmetric designs because of apple's suit
Sep 10 23:55:43 <niggler>	which is funny in many ways
Sep 10 23:56:12 <sidetracking>	samsung does refrigerators
Sep 10 23:56:31 <mandude>	I have input name = itemqtyorder65 and I need to grab the last digits (coudl be 2 or 3 digits) to get the line #
Sep 10 23:56:33 <mandude>	not sure how
Sep 10 23:56:40 <useretail>	samsung produces a lot of stuff
Sep 10 23:56:41 <niggler>	samsung is the korean ACME
Sep 10 23:57:14 <ningu>	yamaha is my favorite grand piano/motorcycle company
Sep 10 23:59:55 <mandude>	nevermind
Sep 11 00:00:06 <mandude>	I think I'll pass in line number as data-line='echo php stuff'
Sep 11 00:00:16 <niggler>	mandude:  you need the digits from the string ?
Sep 11 00:00:18 <ningu>	mandude: eh? regex match for digits is really easy
Sep 11 00:00:24 <niggler>	like var name = "itemqtyorder65"?
Sep 11 00:00:44 <niggler>	n> var name = "itemqtyorder65"; name.match(/\d+$/)
Sep 11 00:00:45 <jellobot>	(okay) [ '65', index: 12, input: 'itemqtyorder65', groups: undefined ]
Sep 11 00:00:48 <useretail>	mandude, remove  itemqtyorder from the string and you'll get what you want
Sep 11 00:00:48 <ningu>	passing as data attribute is likely a better idea but sure
Sep 11 00:00:52 <ningu>	regex is easy too
Sep 11 00:01:23 <niggler>	also recommended, if you have control over the source, to prepend with an underscore or dollar sign to avoid confusion
Sep 11 00:01:42 <ningu>	prepend to what?
Sep 11 00:01:50 <niggler>	itemqtyorder$65 like that so you can distinguish itemqtyorder6$5 from itemqtyorder$65
Sep 11 00:02:01 <ningu>	ah yeah
Sep 11 00:02:04 <ningu>	agreed
Sep 11 00:02:47 <useretail>	if you have control over the source don't add itemqtyorder at all
Sep 11 00:06:47 <ningu>	useretail: that is a bit more complicated, depends a lot on specific details. in general I agree though
Sep 11 00:18:24 <sinclair>	ljharb, is correcting comment spelling across a codebase as a PR considered a shit thing to do, or a welcome thing?
Sep 11 00:18:50 <niggler>	depends, the good thing to do is introduce a spellcheck
Sep 11 00:18:52 <sinclair>	ljharb, im not sure how id feel about someone submitting a PR to correct my comment spelling tbh
Sep 11 00:19:06 <Aquazi>	n> const p = new Promise(res => {res('hi'); console.log('ho')}); p.then(val => console.log)
Sep 11 00:19:07 <jellobot>	(okay) ho [Function: bound consoleCall]
Sep 11 00:19:11 <systemfault>	A good way to become famous
Sep 11 00:19:34 <Aquazi>	why does it print 'ho'?
Sep 11 00:19:56 <Aquazi>	I would've thought a promise would exit when you resolve it
Sep 11 00:20:00 <niggler>	Aquazi: calling resolve doesn't exit
Sep 11 00:20:10 <niggler>	sinclair: relevant https://github.com/mochajs/mocha/pull/2983
Sep 11 00:20:17 <Aquazi>	what do you mean niggler
Sep 11 00:20:19 <niggler>	someone ran spell check noticed a test wasn't being run and identified an issue
Sep 11 00:20:27 <niggler>	Aquazi: its not like process.exit in node
Sep 11 00:20:29 <deltab>	Aquazi: it's not a return statement, nor does it throw
Sep 11 00:20:49 <Aquazi>	it's a bit stupid of a design imho tho
Sep 11 00:21:10 <niggler>	there's no pure-JS way of doing that
Sep 11 00:21:11 <Dirak>	why should it return once resolve is called? lol
Sep 11 00:21:26 <Aquazi>	why should it not?
Sep 11 00:21:38 <Aquazi>	what are you gonna do inside the promise anymore?
Sep 11 00:21:39 <Dirak>	because there's no indication that it should imo
Sep 11 00:21:43 <deltab>	because that'd be inconsistent with how other function calls work
Sep 11 00:21:51 <jaawerth>	because that's not how functions work
Sep 11 00:21:58 <graingert>	Dirak jaawerth it could throw
Sep 11 00:22:17 <jaawerth>	yeah but the Promise constructor is a callback that, in turn, takes resolve as a callback
Sep 11 00:22:17 <deltab>	graingert: it could, but there's no need to
Sep 11 00:22:21 <ningu>	I would expect code after resolve() to still run
Sep 11 00:22:21 <Aquazi>	idk, would've made more sense if it just quit after it resolved or rejected
Sep 11 00:22:27 <deltab>	it'd be wasteful overhead most of the time
Sep 11 00:22:33 <jaawerth>	what that function does *after* resolving, there's no way for the Promise to know unless the callback tries to re-invoke resolve/reject
Sep 11 00:22:34 <niggler>	sinclair: ljharb people have found bugs through spellcheck and it's 100% worth spellchecking comments to potentially find bugs
Sep 11 00:22:45 <ningu>	Aquazi: how would the interpreter know to do that?
Sep 11 00:22:58 <graingert>	we spellcheck for stuff like metatdata
Sep 11 00:23:05 <Aquazi>	idk, I'm not a language designer
Sep 11 00:23:09 <ningu>	do they spell check in harry potter?
Sep 11 00:23:10 <graingert>	common stuff that can never be wrong
Sep 11 00:23:15 <jaawerth>	I'm just saying that's how functions work
Sep 11 00:23:33 <Aquazi>	idk imho resolving or rejecting should have the same effect of returning
Sep 11 00:23:34 <jaawerth>	function won't return early unless you tell it to - it's up the author of the callback to return after invoking resolve()
Sep 11 00:23:51 <Aquazi>	should've been implicit behavior
Sep 11 00:23:51 <graingert>	Aquazi: what
Sep 11 00:23:57 <ningu>	Aquazi: there is no facility in the language to return from a function other than "return"
Sep 11 00:24:07 <niggler>	that's not the point ningu
Sep 11 00:24:07 <ningu>	or end of block
Sep 11 00:24:08 <graingert>	and throw
Sep 11 00:24:09 <jaawerth>	you would have to define a special magic function that does that
Sep 11 00:24:17 <jaawerth>	which would make things even more complicated
Sep 11 00:24:17 <graingert>	you could use goto
Sep 11 00:24:19 <ningu>	niggler: also there is no guarantee than Promise is builtin
Sep 11 00:24:20 <niggler>	the spec couldve made it an implicit bailout
Sep 11 00:24:22 <graingert>	python also has comefrom
Sep 11 00:24:29 <graingert>	which is the duel of goto
Sep 11 00:24:33 <niggler>	but they chose not to
Sep 11 00:24:33 <graingert>	dual*
Sep 11 00:24:33 <ningu>	although I guess you could ban things like bluebird or ignore this case for them
Sep 11 00:24:49 <Dirak>	Also, a common pattern with Promises is to do { if (success) { resolve() } else { reject() } ... cleanup logic }
Sep 11 00:24:55 <Aquazi>	I'm just saying it's a bit confusing with the utility of a promise
Sep 11 00:24:58 <deltab>	ningu: yes; it's even more important in HP, where the intonation or rhythm can change the effect :-)
Sep 11 00:25:02 <ningu>	niggler: well, yeah, because that kind of implicit behavior is really surprising to language users, if it's not consistent/systematic
Sep 11 00:25:33 <graingert>	Dirak: cleanup logic?
Sep 11 00:25:40 <jaawerth>	yeah I thin it just working as a regular callback is actually less confusing so long as you remember a promise is just an object with methods that take callbacks, which is created by a constructor that takes a callback
Sep 11 00:25:43 <Aquazi>	just doesn't make sense to me it executes code when you're resolving or rejecting nor it has any desireable utility other than executing some side effect
Sep 11 00:25:49 <jaawerth>	no magic - just functions that take/pass functions
Sep 11 00:26:03 <graingert>	imho use nodebacks or async/await only
Sep 11 00:26:05 <Dirak>	@graingert post-processing logic* I guess
Sep 11 00:26:07 <niggler>	Aquazi: it was a design choice
Sep 11 00:26:13 <graingert>	and util.promisify as asap as possible
Sep 11 00:26:16 <jaawerth>	nodebacks? ew
Sep 11 00:26:17 <Aquazi>	I dislike asinc await
Sep 11 00:26:37 <niggler>	they decided "be consistent with JS implementations" over "implicit return"
Sep 11 00:26:39 <Aquazi>	that's just a personal preference, you just end up try catching entire blocks
Sep 11 00:26:56 <graingert>	Aquazi: ?
Sep 11 00:26:59 <jaawerth>	yeah - magic implicit behavior like that adds to the syntax complexity
Sep 11 00:27:17 <jaawerth>	and would also make native promises really hard to polyfill
Sep 11 00:27:19 <niggler>	also consider a case like
Sep 11 00:27:24 <Aquazi>	don't understand the ?
Sep 11 00:27:39 <niggler>	res => { do_something(res); something_else(); } where do_something(res) resolves
Sep 11 00:27:44 <graingert>	Aquazi: when you do you not try catch entire blocks?
Sep 11 00:27:44 <Aquazi>	if you fetch some data it can fail, you use async await and think you have a value, you don't
Sep 11 00:27:50 <niggler>	it becomes more confusing to read because now you need to know that do_something does resolve
Sep 11 00:27:57 <niggler>	will something_else be called?
Sep 11 00:28:06 <niggler>	action at a distance is bad
Sep 11 00:28:17 <graingert>	Aquazi: what can fail?
Sep 11 00:28:22 <Aquazi>	anything?
Sep 11 00:28:24 <graingert>	Aquazi: when can you think you have a value but not?
Sep 11 00:28:41 <Aquazi>	request can throw
Sep 11 00:28:52 <Aquazi>	so does axios for any non 200-300 status code
Sep 11 00:28:55 <Aquazi>	they just throw
Sep 11 00:29:07 <graingert>	ok so
Sep 11 00:29:10 <jaawerth>	yeah that's often the desired behavior - a rejected promise, which throws with async/await
Sep 11 00:29:14 <graingert>	you can get that with .thens
Sep 11 00:29:18 <Aquazi>	every monadic behavior has to be trycatched but async/await does not make it obvious
Sep 11 00:29:18 <systemfault>	Yes, async/await is imperative, not functional.
Sep 11 00:29:23 <jaawerth>	though I'll sometimes await res.catch(handleRejection) if I don't wanna put try/catch everywhere
Sep 11 00:29:39 <graingert>	systemfault: comprehensions would have been better
Sep 11 00:29:52 <systemfault>	There's no hope for JS in that area.
Sep 11 00:30:01 <jaawerth>	async comprehensions?
Sep 11 00:30:12 <Aquazi>	people even forget to try catch JSON.parse
Sep 11 00:30:20 <Aquazi>	let alone async code that does 200 things
Sep 11 00:30:41 <Aquazi>	I like promises better, but it's a matter of personal preference, not arguing about any objective "betterness"
Sep 11 00:30:57 <niggler>	we should optimize for readability
Sep 11 00:31:02 <jaawerth>	I mean, sometimes you don't need to catch every single thing in an async fufnction and just need to handle the outer promise rejection - I only individually catch things that might be recoverable
Sep 11 00:31:08 <niggler>	and any sort of action at a distance or magic detracts from readability
Sep 11 00:31:16 <jaawerth>	(and I'll often use .catch even inside an async function)
Sep 11 00:31:29 <jaawerth>	people forget that async/await and promises +./then/.catch aren't mutually exclusive
Sep 11 00:31:34 <Aquazi>	well, I don't really think promises are hard to read..
Sep 11 00:31:44 <jaawerth>	I only use await when the code will be cleaner if made a bit more imperative
Sep 11 00:31:46 <Aquazi>	they are as much as you make them hard to read
Sep 11 00:32:02 <niggler>	having `res` return detracts from readaability
Sep 11 00:32:02 <jaawerth>	I sometimes use async functions without any await at all
Sep 11 00:32:40 <jaawerth>	just to ensure any synchronnous throws are wrapped in the promise, plus I find `async` to be a nice little cue that "this function returns a promise"
Sep 11 00:32:47 <Aquazi>	that's exactly like not catching a promise btw
Sep 11 00:32:52 <Aquazi>	no difference at all
Sep 11 00:33:02 <Aquazi>	oh didn't read the second line
Sep 11 00:33:02 <jaawerth>	what? no it isn't
Sep 11 00:33:55 <jaawerth>	like, you can write an async function with no try/catch so long as you use .catch on the promise it returns. it depends on where you need to intercept the error
Sep 11 00:33:58 <Aquazi>	that being said as a ts user it's pretty obvious from the function signature that it would return a promise
Sep 11 00:34:01 <sinclair>	niggler, https://github.com/mochajs/mocha/pull/2983 doesn't need a spell checker, it needs a type checker
Sep 11 00:34:08 <Aquazi>	so never had this issue
Sep 11 00:34:51 <niggler>	spellchecker wouldve picked up both without the need for worrying about types and whatnot
Sep 11 00:35:41 <jaawerth>	like I might do `const res = await foo.catch(handleRejection)`, where handleRejection knows how to recover from certain types of error - and it will do that, or else re-reject, in which case the throw happens and some outer error handler (that, say, displays an error message to the user or whatever) will deal with the non-specific error case
Sep 11 00:36:33 <Aquazi>	got another question, anybody knows a plug and play jest reporter that gives me test results in a simple html page?
Sep 11 00:37:00 <Aquazi>	not really readable to follow them in a terminal
Sep 11 00:37:51 <niggler>	use mocha
Sep 11 00:38:22 <prometh>	mocha++
Sep 11 00:38:44 <jaawerth>	Aquazi: there's an istanbul html reporter you can use, and jest works with all istanbul reporters
Sep 11 00:38:48 <jaawerth>	and also boo mocha
Sep 11 00:38:51 <jaawerth>	tape > jest > mocha
Sep 11 00:39:10 <niggler>	jest < tape < mocha
Sep 11 00:39:35 <prometh>	mocha
Sep 11 00:39:40 <jaawerth>	and the lcov reporter generates both lcov text AND html
Sep 11 00:39:44 <niggler>	jest, by din of being a facebook product, already starts in the hole
Sep 11 00:40:04 <niggler>	and mocha, being a gift from our patron saint TJ Holowaychuk, already starts with +1
Sep 11 00:40:19 <jaawerth>	mocha and tape both introduce globals: -100
Sep 11 00:40:21 <jaawerth>	er
Sep 11 00:40:23 <jaawerth>	mocha nad jest
Sep 11 00:40:26 <jaawerth>	tape does not: +100
Sep 11 00:40:28 <prometh>	jaawerth: that's the only negative for mocha
Sep 11 00:41:07 <prometh>	you can avoid it with lints, though
Sep 11 00:41:15 <prometh>	and do `import {it} from 'mocha'`
Sep 11 00:41:38 <jaawerth>	I don't love jest but it does have a bunch of built-in goodies that ease client-side testing when you don't want to hand-craft your testing toolchain
Sep 11 00:41:47 <jaawerth>	so I allowed my team to adopt it
Sep 11 00:41:56 <prometh>	i haven't used jest enough, but i did find its setup weird
Sep 11 00:42:20 <jaawerth>	there are things I dislike about it still but if I'm gonna deal with things I dislike, it might as well make it worth my while by having goodies
Sep 11 00:42:21 <prometh>	i really prefer chai, too
Sep 11 00:42:37 <niggler>	my exposure to jest was primarily through gatsby and it was painful to get setup
Sep 11 00:42:48 <jaawerth>	just so long as you aren't using chai's should api :P
Sep 11 00:42:49 <niggler>	but that was a few years ago, it mightve improved since then
Sep 11 00:42:53 <prometh>	jaawerth: expect
Sep 11 00:43:06 <jaawerth>	yeah that's fine, I just can't stand the one that pollutes all the prototypes
Sep 11 00:43:08 <prometh>	"nothing should work"
Sep 11 00:43:25 <jaawerth>	"oh sure let's inject magic prototypes into everything"
Sep 11 00:43:38 <prometh>	yep
Sep 11 00:43:47 <prometh>	but also the fact that "should" instills doubt
Sep 11 00:44:01 <jaawerth>	I used to prefer expect but these days I prefer a minimalist set of assert functions that can be extended if need be
Sep 11 00:44:20 <jaawerth>	but expect is still fine
Sep 11 00:44:21 <prometh>	assert functions look too much like code to me.. it takes longer to read
Sep 11 00:44:59 <Aquazi>	last quick question, my test suite took like few seconds before, added an html reporter and it takes like 4 times more...? how's that related :v
Sep 11 00:46:01 <jaawerth>	I wouldn't expect the html reporter to slow it down THAT bad. What happens when you rerun it? Wondering if it maybe had to generate some static resources that are now cached
Sep 11 00:46:31 <Aquazi>	still takes the same time (went from 3s to 23)
Sep 11 00:46:53 <jaawerth>	23 seconds? that's nuts
Sep 11 00:47:10 <jaawerth>	yeah that is not at all my experience
Sep 11 00:47:12 <Aquazi>	there has to be something wrong there
Sep 11 00:47:27 <jaawerth>	you plugged it directly in via jest's coverage reporter api, right?
Sep 11 00:47:30 <Aquazi>	I noticed async callbacks are not called in 5'000 ms, I'll check why
Sep 11 00:47:36 <jaawerth>	ahh
Sep 11 00:47:40 <jaawerth>	maybe something else changed
Sep 11 00:47:50 <jaawerth>	in which case it should also take longer if you remove the html reporter
Sep 11 00:48:30 <Aquazi>	it's strange tho, same test, no code changes.. and yes not runner related
Sep 11 00:48:56 <jaawerth>	sounds like a promise somewhere is being left pending
Sep 11 00:49:22 <Aquazi>	yeah but again..no changes from before..probably I fked up somewhere :D I'll go fix
Sep 11 00:51:23 <Aquazi>	that's my test: https://gist.github.com/VulcanRav/8ba3bc0c5ae25b3d81c274b3ac06048c
Sep 11 00:52:09 <Aquazi>	also noticed a bug, but unrelated to the issue
Sep 11 00:54:12 <systemfault>	That test is bad and breaks the promise chain.
Sep 11 00:54:30 <Aquazi>	could you expand maybe?
Sep 11 00:54:31 <systemfault>	You need to return the inner promise so the error propagates
Sep 11 00:55:01 <systemfault>	Or... line 8 is missing an await or something
Sep 11 00:55:15 <jaawerth>	both inside the query function, and also you'll need to etiher return the outer promise to jset or add .catch(done) to teh outer promise in lieu of the try/catch
Sep 11 00:55:48 <Aquazi>	wait I didn't understand what you both said
Sep 11 00:56:25 <Aquazi>	first of all idc about the error atm, second, shouldn't jest wait for the done callback to be called?
Sep 11 00:57:08 <jaawerth>	and if the done callback is never called, like if there's an error and you aren't invoking done in the error handler, it will just sit there until jest's timeout is reached
Sep 11 00:57:18 <Aquazi>	oh I see
Sep 11 00:57:41 <Aquazi>	now it's clear
Sep 11 00:58:57 <jaawerth>	no reason to .catch and console.log the error - if your tests don't *want* an error to happen, you can just let it throw and the test framework will handle it. OR if it's a promise rejecting, just do .catch(done) - since done(error) reports the failure to jest
Sep 11 00:59:19 <Aquazi>	yes that was the issue, I didn't realize I had to call done() in the error block
Sep 11 00:59:24 <jaawerth>	OR you can not use the done callback at all and instead return a promise from inside test(), and jest will know how to handle it - it supports both styles
Sep 11 00:59:38 <jaawerth>	the try/catch won't work if the promise rejects though
Sep 11 00:59:49 <jaawerth>	I would get rid of it and just .catch(done) on the promise
Sep 11 01:00:03 <Aquazi>	I tried without the done callback
Sep 11 01:00:09 <Aquazi>	but it never worked for me
Sep 11 01:00:20 <Aquazi>	maybe I wasn't returning a promise tho
Sep 11 01:00:30 <Aquazi>	but executing a block with a promise in it
Sep 11 01:00:35 <jaawerth>	yeah you can only omit the callback entirely for async stuff when you return a promise to est
Sep 11 01:00:38 <jaawerth>	to jest*
Sep 11 01:01:09 <jaawerth>	jest can then use that promise to know when the test is finished, OR when it's failed, using .then/.catch under the hood
Sep 11 01:01:35 <Aquazi>	now it works as supposed, but to be fair I think that if you didn't tell me it would've taken me an afternoon to catch the issue
Sep 11 01:02:10 <Aquazi>	now that I look at it seems obvious
Sep 11 01:02:15 <Aquazi>	lol
Sep 11 01:06:07 <jaawerth>	for what it's worth, that's not an uncommon confusion to run into at first
Sep 11 01:06:39 <jaawerth>	it's pretty easy to spot once you get used to it ;-)
Sep 11 01:19:49 <_ohm>	what's that html input where it presents you a list of values, and when you click an element it is simply highlighted?
Sep 11 01:22:54 <grr12314>	select[multiple]
Sep 11 01:24:20 <_ohm>	grr12314: <select[multiple]> ?
Sep 11 01:26:26 <nibzAU>	Hello.. So.. let sum = (a,b) => a+b;  from what  reading is an arrow function.. Thats the example they gave so...  Why not just... Let sum = a+ b; ? I dont see the use of arrow functions
Sep 11 01:27:01 <ningu>	nibzAU: that isn't a function then
Sep 11 01:27:23 <ningu>	it's just a number stored in a variable called sum
Sep 11 01:27:34 <niggler>	n> foo: if(true) { if(true) break foo; console.log("inner") }
Sep 11 01:27:35 <jellobot>	(okay) undefined
Sep 11 01:28:03 <nibzAU>	Ooooooohh so let sum makes sum a function i can call
Sep 11 01:28:25 <nibzAU>	Its not just storing the return value as a variable
Sep 11 01:29:24 <nibzAU>	So i could later go newSum = sum(1,3) ???
Sep 11 01:29:27 <_ohm>	grr12314: ty
Sep 11 01:30:32 <GreenJello>	nibzAU, yes
Sep 11 01:31:24 <netgene>	Can anyone help me with this? Why the events don't trigger correctly??????  https://paste.ofcode.org/dR2mzgcVQERpHP6LQxAa8C
Sep 11 01:33:16 <evulish>	healthy food is disgusting
Sep 11 01:35:21 <evulish>	netgene: maybe this? https://stackoverflow.com/a/7476832/6833683
Sep 11 01:35:48 <netgene>	I tried that too... doesn't work.  The onload doesn't trigger!
Sep 11 01:39:14 <deltab>	nibzAU: here's another one:  let isEven = (x) => x % 2 == 0;
Sep 11 01:39:46 <deltab>	n> let isEven = (x) => x % 2 == 0; [1, 2, 3, 4, 5, 6, 7, 8].filter(isEven)
Sep 11 01:39:47 <jellobot>	(okay) [ 2, 4, 6, 8 ]
Sep 11 01:40:02 <poboy>	how are we even supposed to know which version of ES javascript is using?
Sep 11 01:40:11 <poboy>	I'm still trying to wrap my brain around es6.   :)
Sep 11 01:41:35 <deltab>	poboy: the important question is: does the implementation I'm using have the feature I want to use?
Sep 11 01:42:01 <poboy>	well I'm fine with using jQuery the rest of my days, but apparently the rest of the world is not
Sep 11 01:42:33 <deltab>	and there are websites that can answer that
Sep 11 01:42:36 <deltab>	!kangax
Sep 11 01:42:37 <ecmabot>	deltab: ES5,ES6/ES2015,ES2016-ES2020 (ES2015 was formerly known as ES6) and proposal support tables: http://kangax.github.io/compat-table/
Sep 11 01:42:41 <nibzAU>	Thanks deltab Im new and can only just underatand that. Ive forgotten what filter did
Sep 11 01:43:59 <deltab>	nibzAU: filter looks at each element of an array in turn, calling a function. If the function returns true, filter adds the element to a new array, which it returns at the end
Sep 11 01:44:36 <deltab>	so in that example, it's made an array of only the even numbers
Sep 11 01:45:17 <deltab>	you could do the same thing with  function isEven(x)
Sep 11 01:45:44 <deltab>	n> function isEven(x) { return x % 2 == 0; }; [1, 2, 3, 4, 5, 6, 7, 8].filter(isEven)
Sep 11 01:45:45 <jellobot>	(okay) [ 2, 4, 6, 8 ]
Sep 11 01:46:27 <poboy>	so looks like es8 is already released
Sep 11 01:46:39 <poboy>	haha 2+ years ago
Sep 11 01:47:05 <devsnek>	poboy: just refer to them by year
Sep 11 01:47:06 <devsnek>	its easier
Sep 11 01:47:17 <devsnek>	es2015, es2016, es2017, etc
Sep 11 01:47:22 <poboy>	so there's an es2019 somewhere?
Sep 11 01:47:33 <deltab>	yes, it's the most recent one
Sep 11 01:47:44 <deltab>	next year we'll have es2020
Sep 11 01:47:48 <poboy>	not trying to be clueless.  as a php dev I'm just ecstatic that I've been able to do super basic stuff in both React and Vue
Sep 11 01:47:59 <devsnek>	es2020 is already drafted https://tc39.es/ecma262/
Sep 11 01:48:07 <poboy>	but .some() and .find() are pretty cool
Sep 11 01:49:12 <deltab>	yep
Sep 11 01:51:03 <evulish>	my dinner is gross, i'm about to throw it out and get some wendy's and a beer
Sep 11 01:53:08 <ljharb>	sinclair: it's usually a nice thing to do, if you're not a jerk about it. if you do it tho, do it all in one commit/PR, not like 50 separate ones
Sep 11 01:53:20 <ljharb>	poboy: there's one every year
Sep 11 01:53:26 <ljharb>	poboy: and no browser implements exactly one edition
Sep 11 01:53:40 <ljharb>	poboy: they all have a mix of "lacking older stuff" and "having newer stuff"
Sep 11 01:54:55 <sinclair>	ljharb, mmm, not sure, i might leave it, i don't want to be a jerk about it, but i mean, in time, i imagine tools will exist to auto correct spelling mistakes in repos any
Sep 11 01:55:17 <sinclair>	ljharb, its a cheap way to contribute to a project.
Sep 11 01:55:21 <ljharb>	sinclair: i doubt it. programming words are hard to detect.
Sep 11 01:55:26 <sinclair>	might as well let a machine do it
Sep 11 01:55:46 <sinclair>	ljharb, ah, these are just general spelling mistakes in an otherwise brillant piece of software
Sep 11 01:56:05 <sinclair>	0 impact on the code at all
Sep 11 01:56:08 <devsnek>	my first pr to node was a spelling mistake
Sep 11 01:56:14 <ljharb>	one kind of sloppiness implies others
Sep 11 01:56:18 <devsnek>	and now look at me
Sep 11 01:56:23 <devsnek>	inventing js
Sep 11 01:56:44 <devsnek>	maybe a lack of spelling fixes is what's holding you back sinclair
Sep 11 01:57:00 <sinclair>	devsnek, ill think ill pass
Sep 11 01:57:23 <sinclair>	id like to think i have more to provide to a software than fixing spelling errors in comments
Sep 11 02:01:29 <ynggekko>	note: spelling → grammar → coding
Sep 11 02:01:31 <ljharb>	sinclair: fixing prose is often much more valuable than code.
Sep 11 02:01:38 <ynggekko>	ie, spelling precedes coding
Sep 11 02:01:58 <sinclair>	ljharb, maybe in JS land
Sep 11 02:02:12 <ljharb>	sinclair: in all lands
Sep 11 02:03:44 <sinclair>	ljharb, secondary concern, i think what's important is someone is able to grok a comment irrespective of the comment being grammically and spelling correct.
Sep 11 02:04:00 <devsnek>	those last two bits help with the first bit
Sep 11 02:04:08 <devsnek>	especially in open source
Sep 11 02:04:15 <devsnek>	because you get people who don't speak your language
Sep 11 02:04:21 <devsnek>	and google translate can't fix spelling mistakes
Sep 11 02:04:31 <sinclair>	ljharb, its a nice to have, but submitting a PR fixing spelling errors demonstrates a certain level of pedantic, id interpret it as annoying, but thanks
Sep 11 02:04:54 <devsnek>	every oss project i work on loves getting those
Sep 11 02:05:37 <sinclair>	devsnek, it can be automated
Sep 11 02:05:46 <niggler>	sinclair: spelling errors in documentation and comments are oftentimes indicative of sloppy practices elsewhere.  A comment is useless if no one has read it, and spelling errors more often than not indicate that the developers never revisited that code segment or bothered to look at the comments
Sep 11 02:06:04 <devsnek>	people try to do automated comment fixes and they all suck
Sep 11 02:06:17 <niggler>	so merely identifying those areas is enough to get a fresh pair of eyes on code blocks that probably haven't been touched in years
Sep 11 02:06:25 <ljharb>	sinclair: so it sounds like you're more concerned with how a maintainer will feel about you making their project better, than about making it better
Sep 11 02:06:26 <sinclair>	niggler, in this particular scenario, i don't think that's true.
Sep 11 02:06:36 <sinclair>	ljharb, yeah, in this instance, yeah actually
Sep 11 02:06:50 <ljharb>	sinclair: which seems odd given your insistence on technical issues being much more important than human issues.
Sep 11 02:06:59 <niggler>	it absolutely is true
Sep 11 02:07:03 <devsnek>	even the linux kernel has a tradition of newcomers starting out fixing typos
Sep 11 02:07:10 <ljharb>	so which is it - do human issues matter more, or do technical issues?
Sep 11 02:07:16 <sinclair>	ljharb, not really, comments are not technical issues, they are human issues
Sep 11 02:07:39 <sinclair>	ljharb, if the comments had any bearing on the overall functioning of the software, i wouldn't care.
Sep 11 02:07:46 <ljharb>	sinclair: comments that don't help maintenance of the code are bloat and should be expunged.
Sep 11 02:08:02 <ljharb>	so if it's not important enough to fix them, send a PR removing them ¯\_(ツ)_/¯
Sep 11 02:08:11 <sinclair>	ljharb, fwiw, i could easily grok all the comments, and its a well commented project
Sep 11 02:08:22 <niggler>	sinclair: the human parts are always important
Sep 11 02:08:27 <ljharb>	then it seems like the maintainer would appreciate the improvement
Sep 11 02:08:30 <hassoon>	who are we
Sep 11 02:08:43 <hassoon>	meh.
Sep 11 02:08:59 <niggler>	https://github.com/gatsbyjs/gatsby/issues/13011 if "technical issues" like tests are disregarded, it calls into question the quality of the project as a whole
Sep 11 02:09:21 <niggler>	and there's a spectrum, "spelling and grammar" definitely matter for many people
Sep 11 02:09:50 <sinclair>	ljharb, i think this is a matter of OSS etiquette, I know i've been annoyed in the past for a PR that corrected comments, when im knee deep in technical details
Sep 11 02:10:13 <niggler>	you shouldn't be in OSS then
Sep 11 02:10:22 <ljharb>	sinclair: OSS etiquette is to appreciate all sorts of spelling corrections. getting annoyed at it is de passe in OSS.
Sep 11 02:10:34 <sinclair>	niggler, you're not the judge of that
Sep 11 02:10:38 <ljharb>	iow, you should discount your own reaction as being not representative.
Sep 11 02:10:44 <niggler>	99% of the advantage of making something open source is getting other people to look at your code
Sep 11 02:10:47 <sinclair>	ljharb, yeah maybe
Sep 11 02:10:51 <niggler>	otherwise you wouldn't make it open in the first place
Sep 11 02:10:56 <prometh>	spelling errors can be the result of english as a second language
Sep 11 02:11:05 <sinclair>	^ this is a factor also
Sep 11 02:11:09 <prometh>	it might require three times the effort from the dev
Sep 11 02:11:10 <ljharb>	right, which is good to correct
Sep 11 02:11:16 <prometh>	sure, correct them
Sep 11 02:11:31 <ljharb>	anyone who gets upset that someone nicely corrects their non-native language is someone looking for reasons to be upset
Sep 11 02:11:42 <devsnek>	i really can't think of anything but positives for fixing spelling mistakes
Sep 11 02:11:48 <prometh>	rewording them can be annoying as it can require a lot of context to review
Sep 11 02:11:51 <devsnek>	hacktoberfest is coming up too
Sep 11 02:12:09 <devsnek>	and a lot of hacktoberfest prs are little things like documentation and comments
Sep 11 02:12:17 <sinclair>	ljharb, i think when you're writing native OS abstractions for unix, windows, and redox, comment spelling correctness is the least of your concerns
Sep 11 02:12:21 <prometh>	but if the comment rewording is part of other relevant fixes, then sure
Sep 11 02:12:23 <sinclair>	well, food for thought
Sep 11 02:12:29 <devsnek>	sinclair: or its the most of your concerns
Sep 11 02:12:55 <devsnek>	the importance of comments tends to scale with the complexity of the system
Sep 11 02:12:56 <prometh>	comments are language, just a code is langauge... if teh comment is needed, then it should be correct
Sep 11 02:13:04 <prometh>	"just as"
Sep 11 02:13:05 <sinclair>	devsnek, im just questioning the etiquate around submitting spelling mistakes in comments when it has 0 bearing on a softwares functioning
Sep 11 02:13:15 <ljharb>	sinclair: there is no software where prose correctness is the least of one's concerns.
Sep 11 02:13:19 <devsnek>	and everyone is saying its a positive thing
Sep 11 02:13:33 <sinclair>	yeah, guess so
Sep 11 02:13:40 <devsnek>	https://github.com/nodejs/node/blob/master/lib/internal/timers.js#L3-L73
Sep 11 02:13:41 <ljharb>	sinclair: you asked the question, suggesting you have doubts. ZERO people here have doubts that it's a positive thing.
Sep 11 02:13:41 <prometh>	if you notice it, fix it
Sep 11 02:13:44 <RenjieAbarai>	celphi: I still haven't. Any thoughts?
Sep 11 02:13:46 <prometh>	someone else may not notice it
Sep 11 02:13:53 <devsnek>	you all should definitely appreciate the comment i linked
Sep 11 02:13:54 <ljharb>	sinclair: how is "maybe you" vs "definitely everyone" not a clear outcome?
Sep 11 02:13:56 <RenjieAbarai>	NoiseEee: No there was no # on my url.
Sep 11 02:14:00 <devsnek>	i didn't write it but its fantastic
Sep 11 02:14:16 <ljharb>	devsnek: fantasticness confirmed
Sep 11 02:14:36 <devsnek>	this comment allowed me to implement my own system twice with similar performance characteristics
Sep 11 02:14:43 <prometh>	that probably should've been its own lib
Sep 11 02:14:54 <prometh>	that long comment oculd've been a readme
Sep 11 02:15:13 <ljharb>	devsnek: original source: https://github.com/nodejs/node/commit/67963c8c6643f0f6f406b0645814faf88f88b679
Sep 11 02:15:43 <prometh>	at this point, node.js source code should use npm
Sep 11 02:15:44 <sinclair>	ljharb, personally, i think eqittate would dictate 2 PR's, one to enhance or fix an issue, and another one fixing spelling errors.
Sep 11 02:15:52 <poboy>	spelling errors are the worst
Sep 11 02:15:58 <ljharb>	sinclair: i agree, if the spelling issues aren't related to the issue
Sep 11 02:16:00 <devsnek>	prometh: it almost does
Sep 11 02:16:06 <ljharb>	sinclair: if they're related, bundle them together.
Sep 11 02:16:06 <devsnek>	node core has a dependency on acorn
Sep 11 02:16:21 <ningu>	squirrels do too
Sep 11 02:16:25 <prometh>	devsnek: a lot of js in node.js source code shouldn't even be part of the codebase.. they should be depednencies
Sep 11 02:16:27 <sinclair>	ljharb, just randomly submitting a PR correcting spelling mistakes comes of pedantic to me without offering something of actual technical value to a project to demonstrate investment
Sep 11 02:16:39 <ljharb>	sinclair: it's not pedantic, it's helpful
Sep 11 02:16:42 <ljharb>	the same as randomly submitting any PR
Sep 11 02:16:51 <ningu>	I completely agree it's helpful
Sep 11 02:16:53 <ljharb>	we've all said multiple times that spelling corrections ARE actual technical value.
Sep 11 02:17:02 <ningu>	right. documentation is of technical value
Sep 11 02:17:04 <devsnek>	prometh: strong disagree
Sep 11 02:17:04 <prometh>	comments are language, code is language
Sep 11 02:17:29 <sinclair>	it may be, but i think you can approach it more tactfully with demonstrating investment in a project by offering technical assistance in some other capacity.
Sep 11 02:17:33 <sinclair>	that's just me
Sep 11 02:17:38 <prometh>	devsnek: the code can be reused elsewhere, instead of re-publishing
Sep 11 02:19:22 <ningu>	sinclair: most projects welcome help on "boring" tasks like fixing documentation, improving tests, etc
Sep 11 02:19:24 <sinclair>	ljharb, well, perhaps as part of a larger effort to provide documentation for said project, then perhaps....just pedantically fixing spelling mistakes in isolation in a otherwise brillant project, just seems a bit off to me. But im weird like that
Sep 11 02:19:29 <ningu>	that is also a way to build trust
Sep 11 02:19:32 <devsnek>	prometh: pretty much everything in node core requires native backing
Sep 11 02:19:43 <devsnek>	with the exception of eventemitter
Sep 11 02:19:55 <devsnek>	but so much stuff depends on eventemitter its not worth moving
Sep 11 02:20:10 <ningu>	sinclair: documentation is always an effort, there doesn't need to be a specific ongoing effort to improve it
Sep 11 02:20:36 <prometh>	ningu: there is if no one wants to do it
Sep 11 02:21:20 <ningu>	prometh: huh?
Sep 11 02:21:39 <ningu>	my point is I don't see why there would be a moment where documentation improvements would be unwelcome
Sep 11 02:23:48 <LACampbell>	trying to debug an async function in chrome. put a break point in the first line. press F10 for step over function call. it takes me to the declaration of the function, then starts debugging runtime.js. how are you supposed to do it?
Sep 11 02:25:21 <devsnek>	runtime.js as in babel-runtime?
Sep 11 02:25:36 <devsnek>	if its transpiled you're out of luck
Sep 11 02:25:55 <lloydxmas>	we'll write the docs after we write the tests ;)
Sep 11 02:26:37 <LACampbell>	devsnek: oh right, that's probably the problem. I suppose I should make a non-transpiled build so I can debug
Sep 11 02:33:04 <prometh>	LACampbell: source maps?
Sep 11 02:33:13 <devsnek>	source maps won't let the debugger hop
Sep 11 02:33:15 <prometh>	i don't use the debugger, though
Sep 11 02:33:17 <prometh>	ok
Sep 11 02:33:26 <devsnek>	they just map source code
Sep 11 02:33:32 <devsnek>	hence source map
Sep 11 02:33:43 <devsnek>	they don't tell the engine how to interpret the change
Sep 11 02:33:48 <prometh>	i don't see why it can't map break points
Sep 11 02:34:25 <prometh>	if 3 transpiled lines equates to 1 mapped line, it can break before or after those 3 lines
Sep 11 02:34:32 <devsnek>	prometh: its not that
Sep 11 02:35:07 <devsnek>	its that the engine doesn't know where to place the breakpoint in the output because the entire control flow is different
Sep 11 02:35:46 <prometh>	i'll take your word for it
Sep 11 02:35:56 <prometh>	but things seemed to line up pretty well in code coverage
Sep 11 02:36:16 <devsnek>	its possible in theory
Sep 11 02:36:22 <devsnek>	but its infinitely complex
Sep 11 02:36:34 <prometh>	sounds like something that will eventually happen, then :)
Sep 11 02:36:38 <devsnek>	every new way source text can be transformed requires the engine to understand that new way
Sep 11 02:36:41 <prometh>	i mean, the js runtime is complex
Sep 11 02:36:50 <mia>	Hey all, what do you think about embedded document/object databases
Sep 11 02:36:56 <mia>	such as nedb
Sep 11 02:37:10 <devsnek>	prometh: engines can do trivial sourcemap breakpoints
Sep 11 02:37:22 <devsnek>	the problem is when the control flow changes
Sep 11 02:37:45 <jaawerth>	mia: I like them but don't use them unless the project calls for it
Sep 11 02:38:15 <mia>	jaawerth, which one do you use
Sep 11 02:38:37 <mia>	I found taffy, loki, nedb
Sep 11 02:38:45 <jaawerth>	I have plans for a hybrid notes app that uses pouchdb (which I've used a bit before on other things) locally and can can optionally sync up to anything that supports the couchdb api, which could be a server running pouchdb or a full couch instance
Sep 11 02:38:46 <mia>	I'm sure there are others, I just don't know which one to go for
Sep 11 02:38:57 <mia>	I can't find benchmarks about these things
Sep 11 02:39:08 <jaawerth>	generally it depends on what your usecase is
Sep 11 02:39:28 <jaawerth>	like, pouchdb isn't particularly fast for querying, comparatively speaking, but it's very good for syncing since it can act as a node in a couchdb cluster
Sep 11 02:40:43 <mia>	jaawerth, I'll keep user data in it after successful oauth
Sep 11 02:40:43 <jaawerth>	then there are graph databases like gun (which is also real-time and can sync/be decentralized). others are more optimized for efficient querying etc
Sep 11 02:40:48 <Dirak>	can js intercept a browser refresh?
Sep 11 02:41:04 <jaawerth>	often localStorage is good enough but not always
Sep 11 02:41:13 <jaawerth>	mia: how much user data we talking?
Sep 11 02:41:48 <mia>	jaawerth, not much I suppose
Sep 11 02:41:59 <mia>	if it grows I'll switch to postgres
Sep 11 02:42:03 <jaawerth>	so a db might be overkill. nedb has a good rep for basic local db usage though
Sep 11 02:42:06 <mia>	I jsut wanted something compact
Sep 11 02:42:32 <mia>	jaawerth, hm, what should be done if there is no db?
Sep 11 02:42:46 <jaawerth>	oh wait is this for server-side?
Sep 11 02:43:52 <mia>	Here is my aapproach (if there is a better I'd love to know) --- when oauth is done I'll record tokens and user email to an object db (for ease of use while inserting the received json object) - when the user wants to make a query I'll check if their email exists in the db and if their token is still valid
Sep 11 02:44:13 <mia>	jaawerth, yes server side
Sep 11 02:44:16 <jaawerth>	ahh ok
Sep 11 02:44:21 <jaawerth>	in that case yeah you'll want a db
Sep 11 02:44:38 <jaawerth>	if you want an embedded thing that doesn't require a separate db server, I would use leveldb or even (from the look of it) nedb
Sep 11 02:45:03 <jaawerth>	You COULD just persist to a file but if you do that by hand you have to worry about safe writes (e.g. making sure you don't end up with a corrupt file if the server crashes mid-write)
Sep 11 02:45:17 <jaawerth>	nedb and leveldb both do that and should be fast
Sep 11 02:45:24 <mia>	jaawerth, yeah I want to deal with as less as I can
Sep 11 02:45:48 <jaawerth>	for smaller loads you should be able to use sqlite3 no problem, too, if you want sql
Sep 11 02:46:03 <jaawerth>	and it's generally easy to convert sqlite3 to postgres later if need be
Sep 11 02:46:07 <mia>	thank you!
Sep 11 02:46:12 <mia>	well postgres takes objects as well
Sep 11 02:46:17 <mia>	I use t weirdly, as a document storage
Sep 11 02:46:37 <jaawerth>	yeah I use the hybrid stuff in postgres a fair bit, especially when I'm syncing data from an external api to a local database
Sep 11 02:46:43 <mia>	generally I don't querty anything in my document so I don't use fields - maybe a stupid way of using postgres
Sep 11 02:46:55 <jaawerth>	I might project it into a flattened thing or not but storing the raw data as jsonb makes it easy to iterate on how I process it
Sep 11 02:46:58 <mia>	so I just put in the whole object/json into a field/column
Sep 11 02:56:59 <LACampbell>	jaawerth: I spent a lot of time looking into couch/pouch, and my take away at the end was great tech, great idea, but both projects have manpower issues. they're too complex to rely on a few lone un-sponsored hackers
Sep 11 02:57:17 <jaawerth>	I get that
Sep 11 02:57:18 <LACampbell>	which is why couchdb 2 still can't be a debian package because it relies on an unsupported spider monkey version, etc
Sep 11 02:57:48 <jaawerth>	it's been a year or so since I touched it but I did find the pouchdb devs extremely responsive in their gitter, though, which struck me as a good sign
Sep 11 02:58:19 <LACampbell>	I thought pouchdb was mainly just one, stressed out dev
Sep 11 02:58:26 <jaawerth>	couch, well... it's still good but the fact that it's now maintained by the apache foundation does not speak well about its forward maintenance
Sep 11 02:58:29 <LACampbell>	(who is a clever dude, don't get me wrong, great guy, but yeah)
Sep 11 02:58:38 <Dirak>	anybody who works on dbs with great developer experiences deserve a gold medal. SQL is a joke in terms of usability
Sep 11 02:58:59 <jaawerth>	(apache foundation is often where open source software goes to die)
Sep 11 02:59:06 <LACampbell>	huh? SQL is great. it just requires learning SQL.
Sep 11 02:59:14 *	jaawerth glares at Google Wave
Sep 11 02:59:17 <LACampbell>	which people don't wnat to do, hence ORMs and all the nightmares they bring
Sep 11 02:59:39 <ljharb>	LACampbell: hence query builders, which are great.
Sep 11 02:59:46 <jaawerth>	(still, better apache maintaining it as much as they can spare the time than nobody maintaining it at all)
Sep 11 02:59:55 <ljharb>	ORMs are because people have this completely ridiculous fantasy that they'll be able to swap out the database backend without making major change
Sep 11 02:59:56 <ljharb>	s
Sep 11 03:00:19 <jaawerth>	well, or ORMs are so they can get total abstractions and not have to deal with the db directly
Sep 11 03:00:29 <LACampbell>	the idea of an ORM is good but it's never worked well for me
Sep 11 03:00:30 <jaawerth>	which is kinda the same thing but it also falls under "avoiding sql"
Sep 11 03:00:42 <LACampbell>	yeah jaawerth that sounds great in theory ;)
Sep 11 03:00:44 <poboy>	Laravel's Eloquent ORM is freaking phenomenal
Sep 11 03:00:49 <LACampbell>	if it worked seemelssly, cool
Sep 11 03:01:07 <jaawerth>	I have used ORM-lite things that are pretty good - but they're more toolkits to BUILD a data model than automagic abstractions
Sep 11 03:01:17 <evulish>	my company uses laravel extensively and we're switching to writing SQL instead of relying on the ORM
Sep 11 03:01:24 <evulish>	or the query builder rather
Sep 11 03:01:34 <poboy>	evulish: what's the reason?
Sep 11 03:01:36 <jaawerth>	(Objection is the best ORMish thing I've tried for node, for example, or the non-magical parts of sqlalchemy, which are mostly the query builder)
Sep 11 03:01:44 <jaawerth>	and knex of course is the querybuilder of recorrd in node
Sep 11 03:02:05 <jaawerth>	then there's graphql which is not an orm but probably belongs in the conversation
Sep 11 03:02:07 <evulish>	i think it was clarity, we have some real monster queries
Sep 11 03:02:17 <LACampbell>	none of the JS ORMs use better-sqlite3. yeah I use sqlite on websites, deal with it
Sep 11 03:02:55 <evulish>	i think complex queries which are sometimes hard to represent in query builders are easier to read in just pure SQL
Sep 11 03:03:05 <jaawerth>	what's better about better-sqlite3?
Sep 11 03:03:33 <evulish>	i'm using knex in js and pretty much just do knex.raw('..') for everything
Sep 11 03:03:33 <jaawerth>	I mean, when I use knex, I am not shy about using knex.raw when the query calls for it
Sep 11 03:03:35 <poboy>	working on a side project that requires fairly indepth queries, so I'm using sql but normally for things like CRUD stuff, there's little to no need for any sql in the entire project
Sep 11 03:03:55 <evulish>	yeah anything more complex than a simple join or something, i break out raw
Sep 11 03:03:59 <jaawerth>	I've even made custom functions for it to wrap stuff like pg jsbon operators in a function for composition
Sep 11 03:04:24 <jaawerth>	since you can use knex.raw inside the querybuilder
Sep 11 03:04:28 <LACampbell>	jaawerth: https://github.com/JoshuaWise/better-sqlite3/blob/master/docs/benchmark.md
Sep 11 03:04:30 <jaawerth>	(if you know what you're doing)
Sep 11 03:04:31 <poboy>	evulish: I love the ability to just chain things.  $user->posts()->lastWeek()   etc...
Sep 11 03:05:28 <jaawerth>	LACampbell: on the one hand that's pretty compelling - on the other hand if you're using sqlite then your primary concern likely isn't perf
Sep 11 03:05:55 <jaawerth>	or at least perf concerns are likely more "fast enough" than "fastest"
Sep 11 03:06:10 <jaawerth>	ymmv
Sep 11 03:07:04 <jaawerth>	and it seems like they should be able to make a knex-compatible api for that just by making an api that's compliant with the regular sqlite3 driver
Sep 11 03:07:16 <jaawerth>	though it appears they haven't done that :-\
Sep 11 03:08:59 <LACampbell>	the faster the query completes, the faster you can release the write lock ;)
Sep 11 03:09:09 <jaawerth>	fair enough
Sep 11 03:09:22 <LACampbell>	sqlite is much faster than its competitors when it comes to queries by themselves
Sep 11 03:09:43 <LACampbell>	it's a lot of concurrent writing where it falls apart
Sep 11 03:10:11 <LACampbell>	well, "competitors", I guess postgres isn't really "competing" with it. but you get what i mean
Sep 11 03:10:18 <jaawerth>	yeah
Sep 11 03:10:31 <jaawerth>	though I also haven't seen any comparisons since, like, postgres 7
Sep 11 03:10:35 <jaawerth>	I don't think they update that page anymore
Sep 11 03:11:30 <jaawerth>	but it wouldnt' surprise me if sqlite was still faster for non-concurrent queries
Sep 11 03:12:23 <jaawerth>	though that might change if you change postgres's transaction serialization setting and a few other tweaks
Sep 11 03:12:40 <LACampbell>	sqlite can have multiple readers now, remember
Sep 11 03:12:44 <jaawerth>	(though obviously sqlite3 has other benefits for certain usecases, like embeddability)
Sep 11 03:12:49 <jaawerth>	oh sure, it's just not optimized for that
Sep 11 03:13:21 <LACampbell>	yeah. but with fast SSDs, caching on the browser, and WAL mode, the space where sqlite can operate has definitely grown
Sep 11 03:13:21 <jaawerth>	it's impressive than it can do it at all tbh
Sep 11 03:13:32 <jaawerth>	oh I'm not denigrating the product
Sep 11 03:13:58 <LACampbell>	neither. but you'd agree where there's a point you'd definitely bust out postgres et al, right?
Sep 11 03:14:08 <jaawerth>	yeah
Sep 11 03:14:19 <jaawerth>	I mean all else being equal, I default to postgres
Sep 11 03:14:20 <LACampbell>	I'd argue that that point is further along than most people think
Sep 11 03:14:29 <jaawerth>	but if I don't want to be running a db server, sqlite is great
Sep 11 03:15:21 <prussian>	I tried arguing at my university the db class should focus on sqlite3 instead since it's the most immediately useful for small and personal projects.
Sep 11 03:15:34 <Dirak>	Are iffes acceptable in modern javascript? I want to write code like `const myVar = (() => complex logic )()`
Sep 11 03:15:46 <jaawerth>	it's also inspired by (or at least related to) postgres, so moving from one to the other is easy for new learners
Sep 11 03:15:47 <prussian>	IIFEs are fine
Sep 11 03:15:50 <LACampbell>	one great thing about sqlite is you can create a datbase in memory. so you can write your schema, and set up/destroy in-memory databases each time you run a test. there's probably a way to do that in postgres but I bet it's not easy
Sep 11 03:15:50 <jaawerth>	(comparatively easy)
Sep 11 03:16:14 <jaawerth>	Dirak: you shouldn't have to do it too often but they're acceptable when the usecase calls for it
Sep 11 03:16:19 <LACampbell>	Dirak: I don't see why not? what else would people do
Sep 11 03:16:26 <prussian>	Dirak: yes. that usecase is basically what they are trying to kill with do-expresionns
Sep 11 03:16:37 <prussian>	god I hate do-expressions.
Sep 11 03:16:48 <jaawerth>	if you're already breaking stuff into small composable functions, though, you shouldn't need to use an iife to hide your vars as much
Sep 11 03:16:59 <LACampbell>	oh i haven't kept up with ECMA standard. have they decided on what kind of pipe operator they'll use?
Sep 11 03:17:38 <jaawerth>	|>
Sep 11 03:17:49 <prussian>	nah. IIFEs are still useful for stuff like // bootiful const\n const somethingThatMayThrow = (() => { // throwing thingie })()
Sep 11 03:18:12 <prussian>	also lack of top level await
Sep 11 03:18:36 <prussian>	LACampbell: pretty sure pipe is dead
Sep 11 03:18:40 <LACampbell>	jaawerth: but there's like 3 different semantics they were considering
Sep 11 03:18:43 <LACampbell>	prussian: oh :( damn
Sep 11 03:19:08 <prussian>	it's mired in contraversy. I mean look. the class-fields are still drawing contraversy after like... what 4-5 years?
Sep 11 03:19:25 <prussian>	pipes would probably take a decade
Sep 11 03:20:01 <prussian>	at this point, I don't see the contention in just using sweetjs
Sep 11 03:20:12 <prussian>	i mean, everyone is transpiling everything anyway anyhow
Sep 11 03:20:21 <prussian>	might as well write your own macros
Sep 11 03:20:43 <jaawerth>	oh right it's the chaining operator that's still alive
Sep 11 03:20:48 <jaawerth>	tbh I was always ambivalent about the pipe operator
Sep 11 03:21:14 <jaawerth>	not sure it's actually more readable than a simple compose/pipe function
Sep 11 03:21:29 <LACampbell>	I have a lot of code that ends up being f(g(h(x)))
Sep 11 03:21:38 <jaawerth>	like you could add pipe to Function.prototype
Sep 11 03:21:45 <jaawerth>	to create a piped function
Sep 11 03:21:46 <LACampbell>	yeah I'd be done for that
Sep 11 03:21:49 <LACampbell>	*down
Sep 11 03:22:08 <jaawerth>	I already use the functional versions of those a lot
Sep 11 03:22:21 <LACampbell>	the functional versions of what?
Sep 11 03:22:30 <jaawerth>	of pipe/compose
Sep 11 03:22:33 <prussian>	the only modern tc39 thing I thought was cool was the context manager thing
Sep 11 03:22:44 <jaawerth>	just via my own implementation, or a library, etc
Sep 11 03:23:14 <netgene>	Can anyone help me with this? Why the events don't trigger correctly??????  https://paste.ofcode.org/dR2mzgcVQERpHP6LQxAa8C     I already tried this, didnt work https://stackoverflow.com/questions/7476660/why-does-window-open-onunload-function-not-work-as-i-expect/7476832#7476832
Sep 11 03:24:39 <LACampbell>	jaawerth: like lodash?
Sep 11 03:25:30 <jaawerth>	well I *typically* prefer using smaller util libraries but I am known to use ramda or lodash/fp
Sep 11 03:25:45 <prussian>	ya the pipeline operator doesn't even have a "stage" on the proposal
Sep 11 03:25:46 <prussian>	https://github.com/tc39/proposal-pipeline-operator
Sep 11 03:25:47 <prussian>	damn
Sep 11 03:26:52 <LACampbell>	netgene: what event doesn't trigger? line 16?
Sep 11 03:27:14 <prussian>	netgene: I mean, I'd just redirect to a /login. I'm not sure what the expected events of a window would even be available
Sep 11 03:27:38 <LACampbell>	(wtf is that website called where you can write a little web page with css/html/js, like a paste bin?)
Sep 11 03:28:09 <jaawerth>	b> const pipe = (...funcs) => (...args) => funcs.slice(1).reduce((v, f) => f(v), funcs[0](...args)), add = x => y => x + y, prod = x => y => x * y;  pipe(add(1), prod(5))(2)
Sep 11 03:28:10 <jellobot>	(okay) 15
Sep 11 03:28:12 <prussian>	or redir to google I mean
Sep 11 03:28:17 <prussian>	and just callback
Sep 11 03:28:30 <jaawerth>	LACampbell: usually a (language)bin or fiddle
Sep 11 03:28:38 <LACampbell>	jsfiddle! that was it
Sep 11 03:28:42 <prussian>	one's in the topic
Sep 11 03:28:48 <jaawerth>	I'm partial to repl.it, personally
Sep 11 03:28:50 <prussian>	err... I thought there was
Sep 11 03:29:08 <LACampbell>	jaawerth: yeah I am wary of lodash/rambda as well, I'm a kilobyte weenie
Sep 11 03:29:10 <jaawerth>	(though you have to search "web" in the list for the one that gives you html + css + js and not just js + a console)
Sep 11 03:29:39 <LACampbell>	I wrote my own implementation of the 'either' monad because at the time I couldn't find a small stand a lone one. should document that properly at some point
Sep 11 03:29:47 <jaawerth>	LACampbell: though in its defense, both libraries now publish individual modules for many of their functions
Sep 11 03:30:06 <nibzAU>	So.. If i have a login form on my index.html page.. Can i make it check the server get the user validate and check and login wihoutthe page refreshing all with java and nothing else??
Sep 11 03:30:27 <jaawerth>	with... java?
Sep 11 03:30:27 <evulish>	javascript, yes
Sep 11 03:30:32 <evulish>	!java
Sep 11 03:30:32 <ecmabot>	evulish: Remember, Java is to JavaScript as Pain is to Painting, or Ham is to Hamster. We don't know Java, and if you're trying to apply your Java knowledge to JavaScript, it probably won't work. See also: http://ow.ly/GMctL and https://twitter.com/ryber/status/567681894662164480 - Try ##java
Sep 11 03:30:39 <nibzAU>	Sorry javascript only not java
Sep 11 03:31:23 <nibzAU>	Nice. I heard i would need php and mysql
Sep 11 03:31:42 <jaawerth>	well, you need to have or make a server
Sep 11 03:31:52 <jaawerth>	but you could use node to create the server in js
Sep 11 03:31:54 <nibzAU>	But then i heard about node.js not quite sure what it is.. Replacemebt for php maybr.. Not up to node yet
Sep 11 03:32:00 <jaawerth>	and you may or may not need a database depending on what you're doing
Sep 11 03:32:41 <nibzAU>	So does node talk to mysql or does it replacemysql and php anf id use just node
Sep 11 03:32:50 <jaawerth>	nibzAU: node is just a js runtime (powered by teh same engine as chrome) that's hooked to some core libraries for io and some extra utils - you can use it to create servers, among other things
Sep 11 03:33:06 <jaawerth>	any server-side language can talk to mysql
Sep 11 03:33:10 <nibzAU>	Interesting
Sep 11 03:33:19 <evulish>	kind of like instead of running: php myapp.php you'd run node myapp.js
Sep 11 03:33:24 <evulish>	to oversimplify
Sep 11 03:33:50 <nibzAU>	Cool that makes me happy
Sep 11 03:34:08 <jaawerth>	mysql is a database - you generally use that WITH your server, though node (among others) do have libraries that let it BE a db more or less. though usually you only do that in certain use-cases since a dedicated database is more powerful
Sep 11 03:34:21 <evulish>	essentially you can do similar things with php and javascript/node.
Sep 11 03:34:25 <nibzAU>	Im sooooooo excoted to learneverything javascript im enjoying it so far
Sep 11 03:35:13 <MightBeParanoid>	:)
Sep 11 03:35:22 <LACampbell>	express.js might be worth checking out
Sep 11 03:35:33 <LACampbell>	(or does everyone hate that now? stuff moves so fast)
Sep 11 03:36:16 <MightBeParanoid>	Just make sure to not sidetrack yourself with too much stuff, focus on 1 or 2 things at a time
Sep 11 03:37:21 <nibzAU>	Basically i was writing a txt adventure but then it changed to a space yxt adventure but db driven. For example you go to a region in space.. In the region there are astetoid belts and stations and planets.. At the moment im using php to pull things in amd out of the database depending on your region on what u see.
Sep 11 03:37:58 <nibzAU>	If u go to a belt u can see asteroids and their type and mind then depending ob ur skill lvl etc.. Allcoming from the db
Sep 11 03:38:33 <nibzAU>	But .. I dont wanna get into php yet i wanna learn all things js so i can get a career change to front end web
Sep 11 03:38:44 <jaawerth>	LACampbell: nah, express is still the go-to for sure. like most server libraries in the Sinatra family it's a really nice balance of minimal and extensible/powerful
Sep 11 03:39:34 <MightBeParanoid>	No reason to use PHP, just use nodejs if u were to program in the backend
Sep 11 03:39:57 <netgene>	LACampbell, the onload doesn't trigger .  if i use just the onunload then, it gets triggered on open, lilke stackoverflow explains
Sep 11 03:39:59 <nibzAU>	Thats what i wanted to hear
Sep 11 03:40:54 <netgene>	LACampbell,  line 5,6.. dont run when the popup opens
Sep 11 03:41:03 <MightBeParanoid>	a neat trick nibzAU , to prevent a page reload on submit events, use e.preventDefault()
Sep 11 11:12:47 *	Disconnected ()
**** ENDING LOGGING AT Wed Sep 11 11:12:47 2019

**** BEGIN LOGGING AT Wed Sep 11 11:13:12 2019

Sep 11 11:13:12 *	Now talking on ##javascript
Sep 11 11:13:12 *	Topic for ##javascript is: JavaScript is *not* Java. | Just ask your question. | Say "!mdn abc" for docs on "abc". | Don't paste code in the channel. | Can't talk? Get registered on freenode ( https://git.io/vaTS2 )
Sep 11 11:13:12 *	Topic for ##javascript set by niggler!~niggler@unaffiliated/niggler (Tue Jan 15 07:16:23 2019)
Sep 11 11:13:13 <sinclair>	stennowork, it assume people actually know anything >_>
Sep 11 11:13:27 <sinclair>	stennowork, they thought it wouldn't pass
Sep 11 11:13:57 <sinclair>	all while ranking up political points promoting a nationalist / protectionist UK stance
Sep 11 11:13:59 <Aquazi>	fml anyway, I got fired from my last job without getting any motivation 6 weeks ago
Sep 11 11:14:19 <sinclair>	which is fine....i guess, except when you get the majority on board and .... whoops....brexit
Sep 11 11:14:21 <Aquazi>	I insisted on getting feedback and they only told me the reason wasn't technical but I didn't communicate well
Sep 11 11:15:26 <Aquazi>	which was a bullshit reason as the company was basically anarchy when you only met your managers/leads when they assigned you and reviewed your tasks, and I always completed them well and in time, while also code reviewing, improving the codebase, writing docs, bugfixing, assisting my colleagues and designers, etc...
Sep 11 11:15:58 <Aquazi>	now every company I send my cv to at some point asks me the reasons of me being fired, I cannot lie and say I left it as they can (and actually did) background checks
Sep 11 11:16:08 <Aquazi>	but I have no answer to the reason why I got fired
Sep 11 11:16:10 <sinclair>	Aquazi, leave them off your resume
Sep 11 11:16:25 <Aquazi>	so I didn't work for the last 6 months?
Sep 11 11:16:35 <Aquazi>	by the way you know your suggestion is actually good
Sep 11 11:16:45 <sinclair>	Aquazi, yeah, say you went soul searching in Greece or something
Sep 11 11:16:47 <Aquazi>	now that I think of it
Sep 11 11:17:09 <sinclair>	only 6 months, who cares, people take 6 months off
Sep 11 11:17:23 <Aquazi>	yeah...but I started working november 2018...
Sep 11 11:17:51 <Aquazi>	so that would reduce my xp to 6 months total...
Sep 11 11:18:00 <sinclair>	Aquazi, sorry, why did they fire you?
Sep 11 11:18:08 <Aquazi>	I have no idea!
Sep 11 11:18:18 <sinclair>	did you get along with people?
Sep 11 11:18:29 <Aquazi>	I think the reason is that our team went from 2 to 7 js developers in like 3 months
Sep 11 11:18:36 <Aquazi>	and I was fired at the very end of a cycle
Sep 11 11:18:46 <Aquazi>	before vacations started
Sep 11 11:18:47 <thykka>	sounds like 'financial reasons'
Sep 11 11:19:12 <thykka>	"they've built most of what we needed, time to trim the fat"
Sep 11 11:19:19 <Aquazi>	that's what I think
Sep 11 11:19:20 <sinclair>	thykka, yeah, but you can't just fire people like that based on finance issues, that would be a management fuck up
Sep 11 11:19:36 <Aquazi>	but honestly that's what I think it happened
Sep 11 11:19:39 <thykka>	sinclair, doesn't mean it doesn't happen
Sep 11 11:19:41 <thykka>	¯\_(ツ)_/¯
Sep 11 11:19:41 <Aquazi>	since they couldn't give me any valid feedback
Sep 11 11:19:59 <thykka>	^ lack of valid reasons points towards invalid reasons
Sep 11 11:19:59 <sinclair>	thykka, well, if it was a management fuck up, blaming him that he wasn't technical enough is vile shit
Sep 11 11:20:00 <Aquazi>	even tho I insisted and my seniors said they had no idea
Sep 11 11:20:10 <Aquazi>	nono
Sep 11 11:20:14 <Aquazi>	they told me the reason wasn't technical
Sep 11 11:20:18 <Aquazi>	nor productivity related
Sep 11 11:20:27 <sinclair>	Aquazi, soooo, why you and not someone else?
Sep 11 11:20:33 <Aquazi>	they just threw in a generic "communication issues"
Sep 11 11:20:49 <Aquazi>	only when I insisted
Sep 11 11:20:53 <thykka>	sinclair, "our team went from 2 to 7 js developers"
Sep 11 11:21:07 <thykka>	no wait..
Sep 11 11:21:08 <Aquazi>	maybe because I had the least experience
Sep 11 11:21:09 <thykka>	xD
Sep 11 11:21:14 <Aquazi>	or I was making more than the others
Sep 11 11:21:20 <sinclair>	Aquazi, were you the 7th?
Sep 11 11:21:25 <Aquazi>	no, the 3rd
Sep 11 11:21:29 <sinclair>	wtf
Sep 11 11:21:32 <Aquazi>	but we all got hired like in a very short span
Sep 11 11:21:43 <Aquazi>	I mean except the two seniors who were there from years
Sep 11 11:21:50 <sinclair>	you were the 3rd, which means the company valued 4th, 5th and 7th more than you
Sep 11 11:22:02 <Aquazi>	well yes
Sep 11 11:22:07 <Aquazi>	but never told me why
Sep 11 11:22:14 <Aquazi>	and to be honest the other two were very weak programmers
Sep 11 11:22:17 <sinclair>	that doesn't bother you in a very deep way?
Sep 11 11:22:20 <prometh>	how do i find a specific object using chrome's memory profiler?
Sep 11 11:22:23 <Aquazi>	I mean two of the people that came after me
Sep 11 11:22:34 <Aquazi>	ofc it does sinclair
Sep 11 11:23:04 <Aquazi>	there was one incident one week before I got laid off, but I can't believe that could be it
Sep 11 11:23:11 <sinclair>	what was it?
Sep 11 11:23:29 <Aquazi>	basically I didn't show up for work as the sister of my mother died, we had a rule that if you don't show you should communicate it before 10 am
Sep 11 11:23:32 <Aquazi>	I did at 10.30
Sep 11 11:23:33 <sinclair>	Aquazi, did the other developers get on better with one another?
Sep 11 11:23:52 <sinclair>	Aquazi, your sister of your mother is your Aunt
Sep 11 11:23:55 <Aquazi>	and the day after HR was very angry during the meeting
Sep 11 11:23:56 <sinclair>	>_>
Sep 11 11:24:17 <Aquazi>	and started asking me a general feedback to my xp in their company and what I could improve
Sep 11 11:24:21 <sinclair>	who cares about HR
Sep 11 11:24:25 <Aquazi>	and I just threw a generic "maybe communication"
Sep 11 11:24:38 <Aquazi>	it has lots of weight in my prev company
Sep 11 11:24:50 <sinclair>	communication is the most important thing
Sep 11 11:24:52 <Aquazi>	and they reused that motivation when they fired me one week later
Sep 11 11:24:57 <Aquazi>	but it was bs
Sep 11 11:25:13 <Aquazi>	nobody communicated, gave you feedbacks nor we had planned meetings
Sep 11 11:25:22 <Aquazi>	not me, nor my colleagues
Sep 11 11:25:31 <sinclair>	Aquazi, how much notice did they give before saying you're fired?
Sep 11 11:25:32 <Aquazi>	not with your superiors at least
Sep 11 11:25:38 <Aquazi>	none
Sep 11 11:25:43 <Aquazi>	I was fired the same day
Sep 11 11:25:50 <sinclair>	Aquazi, so you just don't turn up to work the next day?
Sep 11 11:25:54 <rocktop>	can anyone help to achieve this : https://stackoverflow.com/questions/55608214/whatsapp-web-disable-scrolling-and-move-chat-to-top-when-send-new-message
Sep 11 11:25:55 <Aquazi>	yes
Sep 11 11:26:12 <sinclair>	Aquazi, you have grounds for complaint, and possible legal there
Sep 11 11:26:20 <Aquazi>	not really in Italian law
Sep 11 11:26:41 <Aquazi>	Because per contract I had a trial period of 120 working days
Sep 11 11:26:52 <Aquazi>	And only after those 120 they needed a reason to fire me
Sep 11 11:26:52 <thykka>	how much left?
Sep 11 11:27:00 <Aquazi>	40ish
Sep 11 11:27:02 <sinclair>	Aquazi, if you haven't been given adequate reason for termination, and no notice, then you surely have grounds to contact a solicitor and see if you can make a claim
Sep 11 11:27:20 <sinclair>	120 days
Sep 11 11:27:27 <Aquazi>	no man, you don't need an adequate reason during the first 120 days
Sep 11 11:27:38 <sinclair>	you were there 6 months tho
Sep 11 11:27:41 <sinclair>	right?
Sep 11 11:27:43 <thykka>	sinclair, not where I live. If you're on trial period, the contract can be terminated by either side with no notice
Sep 11 11:27:43 <Aquazi>	no
Sep 11 11:27:46 <Aquazi>	april-august
Sep 11 11:27:48 <kapil_>	can I use class Instead of object?
Sep 11 11:27:50 <Aquazi>	didn't make it to 120 working days
Sep 11 11:27:57 <sinclair>	Aquazi, oh, well, that sucks
Sep 11 11:28:12 <Aquazi>	but idc, that's the past, what bothers me is the lack of feedback
Sep 11 11:28:13 <sinclair>	still, i don't understand why the more juniors weren't let go
Sep 11 11:28:27 <Aquazi>	they weren't more juniors
Sep 11 11:28:31 <Aquazi>	only one was
Sep 11 11:28:39 <Aquazi>	the rest has had a longer cv and xp than me
Sep 11 11:28:56 <Aquazi>	I had only 6 months of company xp on my back
Sep 11 11:29:05 <sinclair>	i don't think the resume aspect means much once you're actually employed at a place
Sep 11 11:29:12 <Aquazi>	but I don't think that was the major factor, like I think productivity and quality would matter more
Sep 11 11:29:17 <Aquazi>	yes indeed, was writing that
Sep 11 11:29:19 <sinclair>	you'll have demonstrated your competence by then
Sep 11 11:30:05 <sinclair>	Aquazi, i think, either you were targetted by management, or the other developers had a little clique and channel to management, and conspired against you
Sep 11 11:30:21 <sinclair>	ive seen it in a couple of places
Sep 11 11:30:25 <Aquazi>	but tbh I didn't really get along with other colleagues
Sep 11 11:30:31 <Aquazi>	not like we had issues of any sort
Sep 11 11:30:43 <sinclair>	right, but that supports the second case
Sep 11 11:30:48 <Aquazi>	just I'm more of a quiet and loner, and would not always go with them on lunch
Sep 11 11:30:59 <Aquazi>	or join them for after work activities
Sep 11 11:31:16 <Aquazi>	I mean, why should I be forced to do social extra work stuff
Sep 11 11:31:29 <sinclair>	well, there you go, it was the second case i mentioned above
Sep 11 11:31:37 <Aquazi>	still I don't think that was the reason as one of the seniors told me it wasn't
Sep 11 11:31:45 <Aquazi>	what do I know
Sep 11 11:31:46 <sinclair>	management talks to 'the in group' and if you're not in it, your cast out
Sep 11 11:32:00 <sinclair>	it sucks, but that's how it works :(
Sep 11 11:32:08 <Aquazi>	anyway I got a good suggestion of removing them from my cv
Sep 11 11:32:17 <sinclair>	yeah, remove em
Sep 11 11:32:24 <Aquazi>	I did some freelance work in the meanwhile
Sep 11 11:32:33 <Aquazi>	I'll put that in so it doesn't look empty in those months
Sep 11 11:32:41 <kapil_>	sinclair:  can i use class instead of object?
Sep 11 11:32:54 <sinclair>	kapil_, sure, go for it
Sep 11 11:33:17 <kapil_>	but how to initialise class like object?
Sep 11 11:33:19 <sinclair>	Aquazi, you don't need to put anything really, if someone asks what you did for those months, you can say 'holiday'
Sep 11 11:33:23 <thykka>	or, you know, leave it, and if someone asks, you can tell that you didn't get a proper reason, but you suspect A or B, and that you've thought about those things and plan to take action
Sep 11 11:33:36 <sinclair>	kapil_, dunno, thought you had that worked out already
Sep 11 11:33:59 <kapil_>	n> form = {a: 1, b: 2}
Sep 11 11:34:00 <jellobot>	(okay) { a: 1, b: 2 }
Sep 11 11:34:09 <kapil_>	how to write it as a class?
Sep 11 11:34:20 <sinclair>	Aquazi, if you say 'you did contract work' all your going to get is 'why not keep up the contracting'
Sep 11 11:34:44 <kapil_>	sinclair: i make websockets working. thanks.
Sep 11 11:34:45 <sinclair>	kapil_, k, you wouldn't write that up as a class
Sep 11 11:35:29 <sinclair>	kapil_, there are things called 'record types' and there are 'interface implementations'
Sep 11 11:35:39 <sinclair>	classes === interface implementations
Sep 11 11:35:46 <sinclair>	{a: 1, b: 2} === record type
Sep 11 11:35:55 <Aquazi>	kapil why do you want it to be a class
Sep 11 11:36:06 <kapil_>	it open so many possiblilites
Sep 11 11:36:14 <Aquazi>	so do simple functions
Sep 11 11:36:21 <Aquazi>	they are also much clearer and reusable
Sep 11 11:36:22 <kapil_>	sinclair: thanks a lot
Sep 11 11:36:23 <sinclair>	kapil_, note, interface implementations and record types are not 'actual' things in any JS literature, but there are distinctions between these concept in terms of 'usage'
Sep 11 11:36:25 <thykka>	n> class myForm { constructor() { this.a = 1; this.b = 2; } } new myForm() @ kapil_
Sep 11 11:36:26 <jellobot>	kapil_, myForm { a: 1, b: 2 }
Sep 11 11:36:47 <Aquazi>	anyway you can mdn that stuff..
Sep 11 11:36:58 <kapil_>	thykka: thanks
Sep 11 11:37:17 <kapil_>	I make this website with websocket: http://scesoftwares.com:3056
Sep 11 11:37:41 <kapil_>	i want to transfer 1 gb file over websocket to the websocket server. is it possible
Sep 11 11:37:44 <sinclair>	Aquazi, anyway, im sorry to hear about your story dude
Sep 11 11:37:49 <sinclair>	that sucks
Sep 11 11:37:57 <kapil_>	i tried to transfer 230mb file and transfer is successfull
Sep 11 11:38:15 <thykka>	yeah, hopin better luck for your next job Aquazi !
Sep 11 11:38:21 <kapil_>	i transferred without making chunk
Sep 11 11:39:17 <rnmhdn>	I have foo that can be called like foo(1) and foo(1,{a:2})
Sep 11 11:39:26 <rnmhdn>	now I want to pass foo
Sep 11 11:39:26 <ashnur>	Aquazi: maybe it was because of the money
Sep 11 11:39:31 <rnmhdn>	oh
Sep 11 11:39:38 <rnmhdn>	I'm passing like x => foo(x)
Sep 11 11:39:50 <rnmhdn>	but I can actually even pass foo itself right? lol I'm silly
Sep 11 11:40:12 <kapil_>	thykka: thank you. you opened new world to me.
Sep 11 11:40:13 <ashnur>	rnmhdn: yes, functions are first  class and can pass them as arguments just using their names
Sep 11 11:40:23 <rnmhdn>	thanks
Sep 11 11:40:42 <ashnur>	lol, such hurry, wanted to say to use .bind or .call too
Sep 11 11:41:22 <prometh>	Aquazi: i was laid off in april and haven't been getting hired... i think i'll use the "i've been on vacation" line
Sep 11 11:41:59 <thykka>	just say you were working undercover
Sep 11 11:42:24 <prometh>	waht's that? hookers?
Sep 11 11:42:25 <thykka>	and that if you told more, you'd have to kill them
Sep 11 11:42:44 <thykka>	could be that, could be something else!
Sep 11 11:42:59 <prometh>	fat girls :P
Sep 11 11:43:02 <alexsuraphel>	hey guys, I want to practice leaflet.js online. Which fiddling website do you recommend. I want something fast
Sep 11 11:43:19 <thykka>	jsfiddle is fastish
Sep 11 11:43:42 <thykka>	but setting up a basic web server and developing locally is even faster
Sep 11 11:43:54 <kapil_>	I have:
Sep 11 11:43:54 <kapil_>	n > form = {a: 1, b:2};
Sep 11 11:44:01 <kapil_>	how to make above class thykka ?
Sep 11 11:44:07 <SaraDR>	Hi, anyone with experience for Chrome extensions? When I try to use anonomous functions, it doesn't know see the variable? -- https://pastebin.com/raw/4KXwz7mH
Sep 11 11:44:21 <SaraDR>	Maybe it's not related to chrome extensions in particular, but just that i don't know how to do this right lol.
Sep 11 11:45:25 <SaraDR>	I'm assuming that the anonomous function I insert, isn't evaluated, since names[i] becomes undefined when it actually runs. Am I doing this totally wrong?
Sep 11 11:46:30 <SaraDR>	Or maybe I'm using eventListener wrong?
Sep 11 11:48:38 <grr12314>	you are using i wrong
Sep 11 11:48:57 <grr12314>	if you change the var to let it will work
Sep 11 11:49:26 <grr12314>	or for-of
Sep 11 11:49:32 <grr12314>	or forEach
Sep 11 11:49:47 <SaraDR>	wow, really.. What should I read up on for this, the let keyword?
Sep 11 11:50:39 <thykka>	SaraDR, you could use an anonymous function for the click handler
Sep 11 11:50:44 <grr12314>	yes, and variable scope
Sep 11 11:50:44 <thykka>	err no..
Sep 11 11:50:48 <thykka>	an arrow function
Sep 11 11:50:54 <grr12314>	let/const are block scoped
Sep 11 11:51:14 <grr12314>	let inside a for loop is a bit more complicated to explain
Sep 11 11:51:27 <grr12314>	it is separate variable for each loop iteration
Sep 11 11:51:37 <Alexendoo>	It does what you expect
Sep 11 11:51:55 <SaraDR>	Well it works. Thanks a lot grr12314 (and thykka)
Sep 11 11:52:00 <grr12314>	while var is function scoped, only one variable instance, that goes 0 1 2 3
Sep 11 11:52:12 <grr12314>	so by the time you click anything it is already 3
Sep 11 11:52:18 <grr12314>	and guess what names[3] is
Sep 11 11:52:19 <SaraDR>	Yeah that's what I was seeing.
Sep 11 11:52:45 <thykka>	a forEach would work well instead of the for loop
Sep 11 12:00:57 <forbiddenera>	SaraDR: You could use  use .bind(names) at the end of the anonymous function
Sep 11 12:01:20 <SaraDR>	That sounds a bit too complicated for my javascript level :)
Sep 11 12:01:58 <forbiddenera>	UNCTION
Sep 11 12:01:59 <forbiddenera>	 THE NAMES VARIABLE TO THE SCOPE OF THE FUNCTION
Sep 11 12:01:59 <forbiddenera>	 THE NAMES VARIABLE TO THE SCOPE OF THE FUNCTION
Sep 11 12:02:05 <forbiddenera>	oops
Sep 11 12:02:30 <forbiddenera>	not sure what happened there sorry.. it's not that complicated .bind just binds the scope of a variable to the scope of whatever you're binding it to
Sep 11 12:03:13 <thykka>	SaraDR, it's not as complicated as it might sound, and you'll want to understand the subject area anyway, sooner or later
Sep 11 12:03:50 <forbiddenera>	document.querySelector('#' + names[i]).addEventListener('click', function () { document.querySelector('img').src = 'img/' + names[i] + '.png'; }); becomes document.querySelector('#' + names[i]).addEventListener('click', function () { document.querySelector('img').src = 'img/' + names[i] + '.png';  }.bind(names));
Sep 11 12:04:46 <stennowork>	UNCTION UNCTION
Sep 11 12:05:03 <forbiddenera>	scope is important in JS.. when you do function () {}, you're creating an anonymous function..this functioany other variables.ate 'scope' thus can't access any other variables.
Sep 11 12:07:39 <niggler>	dunno why labeled blocks don't get more love
Sep 11 12:07:41 <forbiddenera>	you should check out something like jquery though.. it can make life easier.. you'd just do $('.myCSSSelector').on('click', function(){ /* handle */ } ); and it assigns handlers to every eleemtn with tha tselector
Sep 11 12:08:09 <forbiddenera>	you can also easily do things like $('.myselector').each(function() { /* do something for each element */ });
Sep 11 12:12:27 <forbiddenera>	people?! never.
Sep 11 12:12:46 <forbiddenera>	Example indeed.
Sep 11 12:14:00 <SaraDR>	Maybe it's the exact same problem, but when I try to save options (in chrome extension), nothing happen. It's hard to say as I can't console.log from there, but the problem might be the exact same? -- https://pastebin.com/raw/t5wh0p07
Sep 11 12:14:28 <howdoi>	How would you solve a situation where the header in page loads in two part, the first part is plain HTML, the second is created post an AJAX call, this latency causes janks in rendering. [We get the first part and then the second part]
Sep 11 12:14:44 <forbiddenera>	yes.. again, you're inside a function that doesn't have scope
Sep 11 12:14:47 <SaraDR>	In the first one, I assume I'm referencing this, to something else. But in the second I tried to use the let, to bind the value before calling it.
Sep 11 12:14:54 <howdoi>	skeleton DOM and some animation?
Sep 11 12:15:51 <SaraDR>	forbiddenera, which part? The event listeners scope, should be able to understand this.checked right?
Sep 11 12:16:28 <M3TAGH0ST>	good day everyone, I'm having a bit of trouble settings up order for each element using a for loop https://jsfiddle.net/M3TAGH0ST/3pqachtk/4/ do you think guys could help me out ? It seems that that is getting set is order 1; and order6; and i'm not sure what i'm doing wrong.
Sep 11 12:16:36 <mursu>	I don't know why people use jQuery when instead of importing a pretty big library you can just document.querySelectorAll('.myCSSSelctor').forEach(function() { /*do stuff /})
Sep 11 12:17:43 <forbiddenera>	mursu: I don't disagree as JS has come a long way over the last 10 years but it can still help with some things.
Sep 11 12:18:38 <mursu>	especially with older browsers :+1:
Sep 11 12:19:15 <forbiddenera>	SaraDR: yes, the function in addEventListener can't see K .. your last pastebin has syntax error too btw .. but it should be like this kinda probably :
Sep 11 12:19:17 <forbiddenera>	for (let k in names){document.querySelector('#' + k + ' input').addEventListener('change', function (){chrome.storage.sync.set({k : this.checked}, function() {});}.bind(k));}
Sep 11 12:27:34 <SaraDR>	forbiddenera, it seems that this.checked is undefined. As even before i call the chrome set call, I tried changing the color of an element to: (v == undefined ? 'red' : 'blue'); .. and it becomes red.
Sep 11 12:28:28 <SaraDR>	( in this: https://pastebin.com/raw/PaWYqfRK )
Sep 11 12:29:08 <ccapndave>	Hey everyone
Sep 11 12:29:35 <ccapndave>	My logs are full of errors saying: "Error code 20 [The operation was aborted.]" (coming from Safari)
Sep 11 12:29:39 <ccapndave>	Has anyone ever seen that before?
Sep 11 12:30:44 <ccapndave>	Google doesn't have much to say about it
Sep 11 12:32:25 <SaraDR>	forbiddenera, it appears when I add that .bind(k) .. it no longer can read this.checked. If i remove it, it can read it (but then it can't read k)
Sep 11 12:32:57 <SaraDR>	Does bind set a different scope, which would make this.checked not appear?
Sep 11 12:33:39 <mursu>	bind sets the this of the function to the value of the argument
Sep 11 12:33:55 <mursu>	poorly worded probably
Sep 11 12:34:13 <mursu>	but in your case if you do bind k and use this in the function this would equal k
Sep 11 12:34:45 <SaraDR>	Ah, so that's why it can't see the this scope. Right. Need to think a bit about this then.
Sep 11 12:36:19 <SaraDR>	I'll give it a break and then rethink it, and try to read up on the concepts. Thanks everyone <3
Sep 11 12:40:28 <rocktop>	anyidea?
Sep 11 12:52:13 <SaraDR>	Can I pass a null instead of a callback function? or should I just put an empty function? There's no console output in this stupid chrome environment.
Sep 11 13:04:16 <deadbeat>	SaraDR: you will get an error, something like "cb is not a function" when the function tries to call the callback, and it is null
Sep 11 13:12:18 <will>	I wanna add translation capabilty to my app, but first I want to create a structure where I can look up supposed languages, and their attributes
Sep 11 13:12:39 <will>	Is this good pratice for js https://hastebin.com/omikadosen.js
Sep 11 13:13:51 <will>	To me it is structured well enough for me to add attributes down the line without having to restructure the whole thing, bit it also looks a bit hard to read. is there a better aproach
Sep 11 13:20:28 <alexsuraphel>	Can I ask LeafletJS questions here?
Sep 11 13:25:27 <alexsuraphel>	how do I add buttons on Leaflet to show/hide markers?
Sep 11 14:04:20 <DnzAtWrk>	window.open().document.write('test'); opens a new tab with test in it
Sep 11 14:04:28 <DnzAtWrk>	but it still treats the page as if it was the original page
Sep 11 14:04:39 <DnzAtWrk>	so ctrl+s saves the .html page
Sep 11 14:04:42 <DnzAtWrk>	in this case
Sep 11 14:20:13 <MJCDawy>	what
Sep 11 14:20:17 <MJCDawy>	where would it save that
Sep 11 14:20:25 <MJCDawy>	sounds weird
Sep 11 14:29:40 <xvx>	I have function parameters `fun1(name=uniqueName(), setNameInJson=true)` which are used in many functions
Sep 11 14:29:52 <xvx>	I want a separate function to return the two params. e.g. `fun2(defaultNameParams)` inserts those params into the original function's parameters
Sep 11 14:30:21 <xvx>	what would `fun2` function have to return?
Sep 11 14:30:43 <niggler>	what are some fun features supported only in chrome
Sep 11 14:31:06 <mursu>	having all your browsing habits sent to Google
Sep 11 14:31:29 <grr12314>	not having the concept of temp downloads
Sep 11 14:31:58 <Kirjava>	sanity check: if you have an async function that does nothing async, and you await it elsewhere, does it happen sync or on another event loop cycle?
Sep 11 14:32:13 <grr12314>	another loop cycle
Sep 11 14:32:18 <Kirjava>	damn, okay
Sep 11 14:32:28 <grr12314>	or rather, the end of the current one, like all promises
Sep 11 14:32:38 <grr12314>	still not sync
Sep 11 14:32:41 <Kirjava>	k, so it wont happen inline
Sep 11 14:33:07 <Kirjava>	I'm using mobx with autorun(() => { <something awaited sync> })
Sep 11 14:33:09 <Kirjava>	so that won't work
Sep 11 14:33:14 <grr12314>	thats a feature, for predictability
Sep 11 14:33:41 <Kirjava>	yeah, that's fine
Sep 11 14:35:05 <xvx>	no noe know how to have a function returning function parameters?
Sep 11 14:35:50 <thykka>	wh-whaat
Sep 11 14:36:17 <thykka>	function derp(foo, bar, baz) { return { foo, bar, baz }; }
Sep 11 14:36:19 <thykka>	?
Sep 11 14:37:26 <grr12314>	xvx its just that your question made no sense.
Sep 11 14:37:49 <xvx>	the function (takes no parameters) needs to return: `name=uniqueName(), setNameInJson=true`
Sep 11 14:37:51 <stennowork>	why not write fun2 so that it just calls fun1 with certain parameters?
Sep 11 14:37:56 <xvx>	what this function returns will be used as parameters in another function
Sep 11 14:38:16 <stennowork>	const fun2 = () => fun1('foo', 'bar');
Sep 11 14:38:23 <grr12314>	it can return [uniqueName(), true]
Sep 11 14:38:38 <grr12314>	then the other can use f()[0], f()[1] as defaults
Sep 11 14:38:45 <grr12314>	but this seems too silly
Sep 11 14:38:58 <xvx>	there are 50 functions with more parameters, however I want those default parameters to be the same for all functions
Sep 11 14:39:07 <stennowork>	soudns like an xy problem
Sep 11 14:39:44 <xvx>	insert_text(name=uniqueName(), setNameInJson=true, inclSchemaProps={...}, inclOptionsFields={...}, data=...) {...}
Sep 11 14:39:56 <xvx>	this is what the 50 functions look like. the first two params are always the same
Sep 11 14:40:21 <xvx>	so I want a separate function to return the exact same (name=uniqueName(), setNameInJson=true)
Sep 11 14:40:39 <stennowork>	do you want partial application or argument binding instead?
Sep 11 14:40:56 <xvx>	so that function then looks like: `insert_text(defaultNameSettings(), inclSchemaProps={...}, inclOptionsFields={...}, data=...) {...} `
Sep 11 14:41:06 <grr12314>	thats not valid js
Sep 11 14:41:28 <grr12314>	functions dont return just random program fragments
Sep 11 14:41:46 <xvx>	you can't insert parameters in a function by calling another function (with it returning the actual params)?
Sep 11 14:42:18 <xvx>	_6a68 not sure what that means
Sep 11 14:42:19 <MikeD_>	xvx, you might just make new functions
Sep 11 14:43:15 <xvx>	in other words I don't want to keep typing `name=uniqueName(), setNameInJson=true`. instead let another function take care of putting that in the parameter
Sep 11 14:43:55 <MikeD_>	curried_insertTex( name, foo ){ return ( bar ) => { insert_text( name, foo, bar } }
Sep 11 14:44:50 <stennowork>	already suggested that  but it was ignored
Sep 11 14:45:02 <grr12314>	well its not really fitting
Sep 11 14:45:28 <MikeD_>	yeah, don't write 50 functions with the same parameters and you don't have this problem to solve, amirite?
Sep 11 14:45:41 <grr12314>	but some version that returns an object with 50 methods, and then some helper that maps over them all and uncurries them... maybe
Sep 11 14:46:29 <xvx>	I need all the functions. they insert different "types"
Sep 11 14:46:38 <xvx>	and there are about 50 different types
Sep 11 14:46:44 <MikeD_>	also if you'd have used a single object parameter, you could merge properties with the default object
Sep 11 14:46:57 <xvx>	gets confusing because some types rely on other types e.g. insert_textarea calls insert_string
Sep 11 14:47:15 <MikeD_>	refactor - your future self with thank you for it
Sep 11 14:47:30 <MJCDawy>	check for features/capabilities not for any concept of classes as you know from other languages
Sep 11 14:47:34 <xvx>	then insert_textarea adds more stuff on top of insert_string
Sep 11 14:47:38 <MJCDawy>	also true of most things on the web
Sep 11 14:47:57 <MJCDawy>	so check the thing has xyz method, don't try to check it's 'class'
Sep 11 14:48:08 <MJCDawy>	that's reflection nonsense in most languages anyway
Sep 11 14:48:09 <MJCDawy>	lol
Sep 11 14:48:21 <MJCDawy>	which is not really desirable for most usecases
Sep 11 14:48:38 <MJCDawy>	if you want strict typing that compiles to javascript there's always typescript :)
Sep 11 14:48:44 <grr12314>	MJCDawy who you talking to?
Sep 11 14:49:02 <MJCDawy>	<xvx> gets confusing because some types rely on other types
Sep 11 14:50:08 <xvx>	i'm new to JS, let alone using TS lol
Sep 11 14:50:25 <MikeD_>	h:\
Sep 11 14:50:36 <MikeD_>	oops, nm
Sep 11 14:50:45 <MJCDawy>	xvx, that doesn't really matter
Sep 11 14:50:55 <MJCDawy>	they're very, very similar
Sep 11 14:51:09 <MJCDawy>	typescript infact abstracts a lot of underlying concepts by its very nature
Sep 11 14:51:18 <stennowork>	typescript is a strict superset of SJ
Sep 11 14:51:19 <stennowork>	JS
Sep 11 14:51:22 <MJCDawy>	and includes a built in build chaind
Sep 11 14:51:30 <xvx>	by senior at work makes these decisions though :/
Sep 11 14:51:31 <stennowork>	therefore, any JS code is valid TS code
Sep 11 14:51:43 <MJCDawy>	wellll
Sep 11 14:51:56 <MJCDawy>	while (true) {} will error that it's a redundant thing
Sep 11 14:51:57 <grr12314>	thats all really irrelevant to his question tho
Sep 11 14:52:02 <MJCDawy>	sure
Sep 11 14:52:06 <MJCDawy>	just a suggestion
Sep 11 14:52:16 <MJCDawy>	I gave one as to how to solve it first
Sep 11 14:52:23 <MJCDawy>	and how its approached in js
Sep 11 14:52:29 <grr12314>	like, oh he used the word "type" in his question, lets go school him on typescript
Sep 11 14:52:31 <MJCDawy>	and more widely the web
Sep 11 14:52:42 <xvx>	haha
Sep 11 14:52:45 <MJCDawy>	lol except I addressed the problem then just mentioned a thing
Sep 11 14:52:52 <MJCDawy>	I don't even use/like TS
Sep 11 14:53:17 <grr12314>	no, the features/capabilities thing was also irrelevant
Sep 11 14:53:28 <grr12314>	or i'm too blind to see the connection
Sep 11 14:53:37 <MikeD_>	that's ok... when the JW come to your door to tell you about Jesus, you can say "but do you know about Typescript?"  and expound on it's virtue
Sep 11 14:54:40 <grr12314>	anyway, refactor to use a single argument with different properties. may even be able to combine the 50 functions into one
Sep 11 14:54:56 <grr12314>	is my vague best guess so far
Sep 11 14:56:26 <xvx>	it's kind of what I'm doing. each function will take 5 params, but there are objects in 3 params which can have 30+ items
Sep 11 14:57:20 <MikeD_>	xvx, it sounds like you should have 1 parameter
Sep 11 15:00:38 <MikeD_>	function(p){ return p.prop1 + p.prop2 }  or use destructuring like function({ prop1: 1, prop2: 2 }) => { return prop1 + prop2; }
Sep 11 15:02:03 <MikeD_>	then you trade the problem of enumeration of agnostic properties for the requirement that the sender must use the correct property names - but i think that still sensible.
Sep 11 15:02:22 <aLeSD>	hi all js world
Sep 11 15:02:50 <aLeSD>	How could I unit test a class that is dealing with a postgres db ?
Sep 11 15:03:35 <thykka>	you'll probably want a separate db for testss
Sep 11 15:03:54 <aLeSD>	I have the schema file, so ideally I could create a sqlite3 inmemory db
Sep 11 15:06:30 <grr12314>	not really helpful unless you use some universal orm/query builder
Sep 11 15:08:20 <aLeSD>	grr12314, yes. You're right
Sep 11 15:14:38 <celphi>	how do you get req.url when using http2 stream
Sep 11 15:15:13 <MJCDawy>	streams still have urls/endpoints...
Sep 11 15:15:38 <MJCDawy>	so you feed in the url when you instantiate the thing, and then it's stored in reqObj.url (probably)
Sep 11 15:17:52 <celphi>	what you're saying doesnt make sense to me
Sep 11 15:18:04 <grr12314>	https://nodejs.org/api/http2.html#http2_event_stream_2 ?
Sep 11 15:18:12 <grr12314>	theres a path header apparently
Sep 11 15:18:22 <grr12314>	idk, dump all the thing
Sep 11 15:18:36 <celphi>	oh probably headers
Sep 11 15:29:48 <ashnur>	https://www.isitdownrightnow.com/developer.mozilla.org.html noice
Sep 11 15:34:32 <trampi>	yeah, saw that too :-/
Sep 11 15:37:47 <horribleprogram>	Hey guys
Sep 11 15:38:01 <horribleprogram>	I'm having troubles understanding this typeof operator on weird values
Sep 11 15:38:15 <horribleprogram>	for example, typeof(null) returns "object" whereas typeof(undefined) returns "undefined"
Sep 11 15:38:38 <horribleprogram>	so when typeof returns "object" what exactly does this mean?
Sep 11 15:38:54 <horribleprogram>	because from my programming experience, since undefined is a global variable, it should be the one returning "object"
Sep 11 15:39:30 <horribleprogram>	and the whole thing about typeof returning a string verses a type object, such as in Python, is weird as well, but let's not get into flame wars
Sep 11 15:40:17 <horribleprogram>	for example:
Sep 11 15:40:23 <horribleprogram>	n> typeof([])
Sep 11 15:40:24 <jellobot>	(okay) 'object'
Sep 11 15:40:30 <horribleprogram>	n> typeof(null)
Sep 11 15:40:32 <jellobot>	(okay) 'object'
Sep 11 15:40:47 <horribleprogram>	okay why the hell is [] returning "object", shouldn't it return something like "array"
Sep 11 15:40:52 <thykka>	n> [] instanceof Array
Sep 11 15:40:53 <jellobot>	(okay) true
Sep 11 15:40:57 <horribleprogram>	EXACTLY
Sep 11 15:41:06 <thykka>	n>Array.isArray([])
Sep 11 15:41:08 <jellobot>	(okay) true
Sep 11 15:41:15 <horribleprogram>	That's my point exactly
Sep 11 15:41:36 <horribleprogram>	so instanceof works like Java
Sep 11 15:41:44 <stennowork>	no
Sep 11 15:41:48 <horribleprogram>	yes it does
Sep 11 15:41:50 <celphi>	Why does this fail? https://jsfiddle.net/p954yus3/
Sep 11 15:41:54 <stennowork>	no, it doesn't.
Sep 11 15:42:00 <thykka>	nothing here works like java
Sep 11 15:42:01 <stennowork>	instanceof checks the prototype chain
Sep 11 15:42:05 <Nach0z>	I think in javascript, an array technically is an object
Sep 11 15:42:19 <horribleprogram>	stennowork: what does that mean, prototype chain?
Sep 11 15:42:31 <stennowork>	prototype chain is a thing you don't have in java
Sep 11 15:42:43 <celphi>	I keep getting `TypeError [ERR_HTTP2_INVALID_CONNECTION_HEADERS]: HTTP/1 Connection specific headers are forbidden: "connection`
Sep 11 15:42:56 <stennowork>	damn MDN is down
Sep 11 15:42:59 <horribleprogram>	stennowork: link me to an article explaining it
Sep 11 15:43:09 <horribleprogram>	stennowork: yeah it is :P
Sep 11 15:43:14 <thykka>	can't, docs return 503 atm :P
Sep 11 15:43:16 <stennowork>	!g javascript prototype chain
Sep 11 15:43:20 <stennowork>	!google javascript prototype chain
Sep 11 15:43:20 <ecmabot>	stennowork: Google search: "javascript prototype chain" <http://www.google.com/search?q=javascript%20prototype%20chain>
Sep 11 15:43:26 <stennowork>	horribleprogram, the link ^
Sep 11 15:43:28 <horribleprogram>	stennowork: that's an insult.
Sep 11 15:43:39 <stennowork>	what?
Sep 11 15:43:46 <thykka>	lmgtfy is an insult, this is just a suggestion ;)
Sep 11 15:44:09 <horribleprogram>	actually the tylermcginnis video looks pretty in-depth
Sep 11 15:44:13 <horribleprogram>	so ty
Sep 11 15:44:18 <grr12314>	celphi obviously because of your Connection: 'keep-alive', thing
Sep 11 15:44:34 <stennowork>	isn't keepalive moot for http/2
Sep 11 15:44:39 <stennowork>	oh yeah it is
Sep 11 15:44:43 <stennowork>	obv. :D
**** BEGIN LOGGING AT Wed Sep 11 15:47:01 2019

Sep 11 15:47:01 *	Now talking on ##javascript
Sep 11 15:47:01 *	Topic for ##javascript is: JavaScript is *not* Java. | Just ask your question. | Say "!mdn abc" for docs on "abc". | Don't paste code in the channel. | Can't talk? Get registered on freenode ( https://git.io/vaTS2 )
Sep 11 15:47:01 *	Topic for ##javascript set by niggler!~niggler@unaffiliated/niggler (Tue Jan 15 07:16:23 2019)
Sep 11 15:47:13 <stennowork>	javascript doesn't have classes like in java
Sep 11 15:47:15 <horribleprogram>	stennowork: in this video, we see a global function declaration called Animal, it's not within a class construct
Sep 11 15:47:29 <horribleprogram>	ic
Sep 11 15:47:30 <stennowork>	they have something they call classes, but they are just syntax sugar on prototype
Sep 11 15:48:16 <robdrake>	developer.mozilla.org is back up
Sep 11 15:48:31 <horribleprogram>	yeah so basically you basically make a function-like Constructor, then attach specific things to the prototype attribute
Sep 11 15:49:06 <horribleprogram>	this guy is charging $17 for this course :'( I'm not complaining about the price at all
Sep 11 15:54:12 <luist>	is there a way to export / import / require classes from another file using ES5?
Sep 11 15:55:10 <bradleymeck>	luist: nope, use a module system or use ES modules
Sep 11 15:55:27 <luist>	isn’t module ES6?
Sep 11 15:55:43 <luist>	at least i need ES6 pre compiler to use it with django compress
Sep 11 15:55:45 <bradleymeck>	compile down via something like rollup
Sep 11 15:57:27 <bradleymeck>	also if you are using django compress but targetting more modern browsers the compiling down to ES5 is probably going to be a net loss
Sep 11 16:02:03 <niggler>	typescript getting confused with binds :(
Sep 11 16:02:17 <RLa>	why would you need binds
Sep 11 16:02:41 <niggler>	typing out foo.bar.baz(qux) gets old pretty quickly
Sep 11 16:03:23 <niggler>	so you'd think typescript would figure out at least that the arguments for foo.bar.baz would be the same as the arguments for foo.bar.baz.bind(foo.bar)
Sep 11 16:05:14 <niggler>	actually maybe the answer is replacing everything with one-letter variables
Sep 11 16:06:58 <niggler>	f.b.b(q) is arguably more readable
Sep 11 16:07:11 <OnkelTem>	I wonder why MDN regularly goes down
Sep 11 16:07:23 <OnkelTem>	It's down for me right now, again
Sep 11 16:07:32 <niggler>	isup.me
Sep 11 16:07:56 <niggler>	OnkelTem: https://downforeveryoneorjustme.com/developer.mozilla.org
Sep 11 16:07:58 <niggler>	yeah sure enough
Sep 11 16:08:03 <niggler>	"It's not just you! developer.mozilla.org is down. "
Sep 11 16:08:14 <OnkelTem>	Yeah, I check few VPNs already
Sep 11 16:08:17 <OnkelTem>	checked*
Sep 11 16:08:57 <OnkelTem>	It's just a bunch of static pages, what can go wrong? (you think)
Sep 11 16:09:09 <OnkelTem>	Sure I don't pay for it, but anyways... weird
Sep 11 16:09:45 <niggler>	ehh w/e
Sep 11 16:28:20 <nontester>	Hello! What does (0, func)(args) do? it seems to behave like calling the function normally, i.e func(args)
Sep 11 16:28:52 <niggler>	if func is eval, then there's a behavioral difference
Sep 11 16:29:20 <niggler>	nontester: http://perfectionkills.com/global-eval-what-are-the-options/#indirect_eval_call_theory
Sep 11 16:30:17 <stennowork>	not sure if i should actually read this
Sep 11 16:30:24 <stennowork>	it might be helpful for golfing
Sep 11 16:30:33 <niggler>	absolutely should as it goes over the spec
Sep 11 16:30:48 <stennowork>	fair
Sep 11 16:30:55 <niggler>	that particular section goes over direct vs indirect calls
Sep 11 16:31:41 <niggler>	the spec link is bad but it should point to https://es5.github.io/x15.1.html#x15.1.2.1.1
**** ENDING LOGGING AT Wed Sep 11 16:33:19 2019

**** BEGIN LOGGING AT Wed Sep 11 16:33:28 2019

Sep 11 16:33:28 *	Now talking on ##javascript
Sep 11 16:33:28 *	Topic for ##javascript is: JavaScript is *not* Java. | Just ask your question. | Say "!mdn abc" for docs on "abc". | Don't paste code in the channel. | Can't talk? Get registered on freenode ( https://git.io/vaTS2 )
Sep 11 16:33:28 *	Topic for ##javascript set by niggler!~niggler@unaffiliated/niggler (Tue Jan 15 07:16:23 2019)
Sep 11 16:34:52 <nontester>	Alright, but that seems to be only for eval - I can't really understand the implications for non-eval functions
Sep 11 16:35:16 <niggler>	you have an example
Sep 11 16:36:27 <nontester>	Nothing I can link to, but basically (0, makeitem)(query).then(item=>{code})
Sep 11 16:36:43 <niggler>	more generally, if you have an unbound function, the `this` will be the global
Sep 11 16:37:50 <niggler>	n> var bar = "global"; var foo = {bar: "foo", baz: function() { return this.foo; }}; [foo.baz(); (1,foo.baz)(), (1,foo.baz.bind(foo))()]
Sep 11 16:37:52 <jellobot>	(fail) SyntaxError: Unexpected token ;
Sep 11 16:37:53 <earend1>	wait.. (0, eval)() hack applies to other functions too?
Sep 11 16:38:05 <niggler>	n> var bar = "global"; var foo = {bar: "foo", baz: function() { return this.foo; }}; [foo.baz(), (1,foo.baz)(), (1,foo.baz.bind(foo))()]
Sep 11 16:38:06 <jellobot>	(okay) [ undefined, { bar: 'foo', baz: [Function: baz] }, undefined ]
Sep 11 16:38:17 <niggler>	n> var bar = "global"; var foo = {bar: "foo", baz: function() { return this.bar; }}; [foo.baz(), (1,foo.baz)(), (1,foo.baz.bind(foo))()]
Sep 11 16:38:19 <jellobot>	(okay) [ 'foo', 'global', 'foo' ]
Sep 11 16:38:20 <niggler>	^^
Sep 11 16:38:30 <niggler>	neat little trick eh?
Sep 11 16:39:28 <renlo>	clear
Sep 11 16:39:35 <renlo>	lol, thought I was in a terminal
Sep 11 16:39:46 <niggler>	reset :P
Sep 11 16:39:47 <renlo>	todays gonna be a long day
Sep 11 16:40:00 <stennowork>	df -h
Sep 11 16:40:07 <niggler>	hunter2
Sep 11 16:40:29 <stennowork>	mplayer spongebob_sex_tape.ogv
Sep 11 16:40:31 <stennowork>	oops
Sep 11 16:40:48 <stennowork>	is mplayer even still used
Sep 11 16:40:56 <stennowork>	or is it all vlc nowadays
Sep 11 16:41:07 <niggler>	vlc
Sep 11 16:41:18 <stennowork>	pity
Sep 11 16:41:26 <stennowork>	mplayer was the king of video players
Sep 11 16:41:45 <niggler>	remember winamp?
Sep 11 16:41:48 <stennowork>	sure
Sep 11 16:41:51 <stennowork>	yeah on windows
Sep 11 16:41:56 <stennowork>	but never played videos with that i think
Sep 11 16:41:59 <arve>	webamp.org
Sep 11 16:42:05 <stennowork>	maybe some AMVs
Sep 11 16:42:06 <stennowork>	>_>
Sep 11 16:42:07 <niggler>	yeah all those old apps died off, vlc is king
Sep 11 16:42:14 <stennowork>	rip
Sep 11 16:42:18 <stennowork>	well vlc is great though
Sep 11 16:42:20 <stennowork>	so its no problem
Sep 11 16:42:27 <niggler>	and open source
Sep 11 16:42:27 <stennowork>	and the programmer has the right attitude
Sep 11 16:42:30 <earend1>	n>var x=23;  (()=>{ x=6; var f=(a)=>console.log(a); (0,f)(x); })()
Sep 11 16:42:30 <stennowork>	yep
Sep 11 16:42:31 <jellobot>	(okay) 6 undefined
Sep 11 16:42:48 <niggler>	make a global earend1
Sep 11 16:43:08 <earend1>	n>var x=23;  (()=>{ x=6; var f=(a)=>console.log(x); (0,f)(x); })()
Sep 11 16:43:08 <niggler>	err
Sep 11 16:43:10 <jellobot>	(okay) 6 undefined
Sep 11 16:43:13 <niggler>	its arrow function
Sep 11 16:43:17 <niggler>	so `this` has different semantics
Sep 11 16:44:24 <nontester>	n> var bar = "global"; var foo = {bar: "foo", baz: function() { return this.bar; }}; [(0,foo.baz()), (1,foo.baz)()]
Sep 11 16:44:25 <jellobot>	(okay) [ 'foo', 'global' ]
Sep 11 16:45:15 <stennowork>	n> var bar = "global"; var foo = {bar: "foo", baz: function() { return this.bar; }}; with (foo) { return [(0,foo.baz()), (1,foo.baz)()]; }
Sep 11 16:45:17 <jellobot>	(fail) SyntaxError: Illegal return statement
Sep 11 16:45:22 <stennowork>	n> var bar = "global"; var foo = {bar: "foo", baz: function() { return this.bar; }}; with (foo) { [(0,foo.baz()), (1,foo.baz)()]; }
Sep 11 16:45:24 <jellobot>	(okay) [ 'foo', 'global' ]
Sep 11 16:45:26 <earend1>	wow
Sep 11 16:49:36 <earend1>	nontester: where can i read about this? keyword?
Sep 11 16:50:49 <darkseid>	`with`?
Sep 11 16:53:01 <renlo>	what is `with`
Sep 11 16:53:12 <earend1>	i wondered if it's some general feature that only needs to be understoof
Sep 11 16:54:08 <niggler>	you mean the indirect call? nah
Sep 11 16:54:14 <niggler>	most people don't write code like that
Sep 11 16:54:26 <niggler>	its like labeled blocks or >>>=
Sep 11 16:54:28 <bradleymeck>	avoid `with`, it doesn't work in strict mode contexts
Sep 11 16:54:36 <earend1>	i don't even get why stennowork used with at all. i mean that indirect referencing via (0,f) and (1,f)
Sep 11 16:54:36 <stennowork>	yes, never use 'with'
Sep 11 16:54:50 <stennowork>	i just tried something out, it was unrelated to your issues
Sep 11 16:54:59 <earend1>	ok.
Sep 11 16:55:03 <niggler>	its better to stick with simpler constructs
Sep 11 16:55:05 <renlo>	til JS has namespaces
Sep 11 16:55:06 <renlo>	lol
Sep 11 16:55:21 <renlo>	https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/with#Using_with ; that looks so weird to me
Sep 11 16:55:22 <stennowork>	`with` is just a thing that is probably from the very early days of JS and nobody cared to remove it yet
Sep 11 16:55:26 <niggler>	love labeled if blocks, but tslint is way too opinionated
Sep 11 16:55:40 <earend1>	i think it was related..hehe. however i mean that what we're all testing
Sep 11 16:55:42 <niggler>	`with` is great when used judiciously
Sep 11 16:55:55 <stennowork>	niggler, do you have an actual `with` usecase?
Sep 11 16:56:02 <renlo>	n> ctx={'blehhhhh': 2}; with(ctx) { console.log(blehhhhh) }
Sep 11 16:56:03 <jellobot>	(okay) 2 undefined
Sep 11 16:56:08 <renlo>	so weird
Sep 11 16:56:10 <stennowork>	i always looked at it a bit like looking on goto or so.
Sep 11 16:56:23 <earend1>	yeah .. but then you would have to use baz alone .. and it would be bound.. probably
Sep 11 16:56:29 <niggler>	its for situations where you have a large nested chain
Sep 11 16:56:33 <niggler>	foo.bar.baz.qux
Sep 11 16:56:41 <stennowork>	like those are things that were probably very important for something in the distant past where we didn't have any more powerful flow contrl
Sep 11 16:56:58 <earend1>	n> var bar = "global"; var foo = {bar: "foo", baz: function() { return this.bar; }}; with (foo) { [(0,baz()), (1,baz)()]; }
Sep 11 16:56:59 <jellobot>	(okay) [ 'foo', 'global' ]
Sep 11 16:57:06 <niggler>	if you're modifying foo.bar.baz.qux a lot, it gets old to type it every time, and a temporary variable potentially detracts from readability
Sep 11 16:57:15 <niggler>	same reason to use bind
Sep 11 16:57:21 <stennowork>	wait
Sep 11 16:57:35 <earend1>	n> var bar = "global"; var foo = {bar: "foo", baz: function() { return this.bar; }}; with (foo) { [(0,baz)()), (1,baz)()]; }
Sep 11 16:57:36 <jellobot>	(fail) SyntaxError: Unexpected token )
Sep 11 16:57:36 <stennowork>	n> const foo = {a: 23}; with (foo) { a = 24; }; foo
Sep 11 16:57:38 <jellobot>	(okay) { a: 24 }
Sep 11 16:57:40 <stennowork>	oh wow
Sep 11 16:57:46 <stennowork>	didn't know it'd behave like that
Sep 11 16:57:51 <earend1>	damn .. my arrow keys dont work
Sep 11 16:57:54 <niggler>	what did you expect?
Sep 11 16:58:12 <stennowork>	niggler, just a variable 'a' in the block scope
Sep 11 16:58:16 <earend1>	me neither.
Sep 11 16:58:21 <earend1>	just tested it.
Sep 11 16:58:24 <stennowork>	n> const foo = {a: 23}; with (foo) { b = 123; }; foo
Sep 11 16:58:25 <jellobot>	(okay) { a: 23 }
Sep 11 16:58:32 <stennowork>	strange
Sep 11 16:58:37 <niggler>	it's a limited form of VB's with
Sep 11 16:58:45 <niggler>	VB's with statement lets you add properties
Sep 11 16:58:46 <earend1>	have you blocked nontester?
Sep 11 16:58:51 <earend1>	or sth?
Sep 11 16:58:51 <niggler>	but that's because you're explicit
Sep 11 16:58:53 <renlo>	why is that strange stennowork ?
Sep 11 16:59:10 <niggler>	With foo : .Bar = "Baz" : End With
Sep 11 16:59:27 <niggler>	^^ you need the dot, so there's no ambiguity
Sep 11 16:59:53 <stennowork>	n> const foo = {a: 23}; with (foo) { a = 42; b = 23; }; foo /// @renlo
Sep 11 16:59:55 <jellobot>	renlo, { a: 42 }
Sep 11 16:59:56 <renlo>	with seems kinda cool now
Sep 11 17:00:29 <stennowork>	i treated `with` always as something that is just useful for golfing
Sep 11 17:00:36 <renlo>	golfing?
Sep 11 17:00:38 <niggler>	the modern trend favors code you can statically anaylze
Sep 11 17:00:45 <niggler>	code golf renlo
Sep 11 17:00:54 <stennowork>	javascript code golf like the cool kinds in ##jsgolf
Sep 11 17:05:04 <nontester>	Thanks for the help! I am still confused but now atleast I have something to dig into =)
Sep 11 17:05:29 <bradleymeck>	there are a few very rare uses for `with` but they all involve emulating virtual containment of some kind
Sep 11 17:05:38 <bradleymeck>	which is... extremely rare
Sep 11 17:05:48 <stennowork>	noted
Sep 11 17:07:08 <niggler>	there aren't "a few very rare uses", it's just that the community prefers other approaches in general
Sep 11 17:07:31 <bradleymeck>	niggler: Realms shim cannot be reproduced without it
Sep 11 17:07:55 <bradleymeck>	it literally is like 3-5 uses that I've seen that actually need it
Sep 11 17:07:55 <niggler>	i meant that it's useful far beyond "a few very rare uses"
Sep 11 17:08:03 <niggler>	but that the community decided that other approaches are better
Sep 11 17:08:16 <bradleymeck>	i don't think its costs are worth the code golf
Sep 11 17:08:19 <niggler>	its akin to the argument that for loops have "a few very rare uses" since there are array functions
Sep 11 17:08:53 <bradleymeck>	it introduces dynamic scope which is hard to reason about, which is very different from for loop vs methods
Sep 11 17:08:54 <prussian>	Ya, i've used with a few times but stopped after getting issues making everything 'use strict';
Sep 11 17:09:05 <prussian>	oh well
Sep 11 17:09:10 <threenuc>	Is this the right channel to ask why is running `mysql -uroot -proot < somescript.sql` producing different results when ran from an npm script vs from regular terminal (written by hand)?
Sep 11 17:10:16 <NoiseEee>	what does 'different results' mean
Sep 11 17:11:23 <dka>	Hi, I am trying tu use react-codemod as suggested by react v16.9.0 to add UNSAFE_ to deprecated lifecycle method
Sep 11 17:11:41 <dka>	When running the npx react-codemod command, I have errors, it does not work, and I don't see any information about it online
Sep 11 17:11:49 <dka>	this is the project I am trying to upgrade https://github.com/reactjs/react-codemod
Sep 11 17:11:50 <jaawerth>	threenuc: well, npm scripts (on linux) are executed by `sh`, and the PATH has <project root>/node_modules/.bin added to it
Sep 11 17:11:53 <damian__>	hi. please, is it posibble to build an array of strings in which every string is always the same but a number (the index I think), like ['sameName0', 'sameName1', 'sameName2'] ... ?
Sep 11 17:11:58 <dka>	https://github.com/bootstrap-styled/v4
Sep 11 17:12:00 <jaawerth>	threenuc: ^
Sep 11 17:12:19 <jaawerth>	!doesn't work @dka
Sep 11 17:12:20 <ecmabot>	dka: What do you mean it doesn't work? Is it unemployed? What happens when you try to run it? What did you try to run? What's the output? What's the error message? What did you want or expect to happen? Can you post a screenshot or a fiddle?
Sep 11 17:12:35 <earend1>	threenuc: i bet it's because of the < redirector
Sep 11 17:12:41 <stennowork>	damian__, yes, its possible
Sep 11 17:13:01 <damian__>	stennowork and do you know how ?
Sep 11 17:13:03 <jaawerth>	n> Array.from({ length: 5 }, (v, i) => `foo${i}`) @damian__
Sep 11 17:13:04 <jellobot>	damian__, [ 'foo0', 'foo1', 'foo2', 'foo3', 'foo4' ]
Sep 11 17:13:17 <stennowork>	damian__, create an array, and append the indices from the iteration
Sep 11 17:13:19 <stennowork>	or that
Sep 11 17:13:26 <stennowork>	spoonfed
Sep 11 17:13:40 <jaawerth>	lol yeah I suppose I should have done more "teach a man to fish" on that one lol
Sep 11 17:13:53 <earend1>	threenuc: u could try starting one process and then pipe its stdout via node api to the other
Sep 11 17:13:54 <stennowork>	shrug
Sep 11 17:13:59 <NoiseEee>	damian__: 'numbered variables' is codesmell
Sep 11 17:14:16 <jaawerth>	damian__: Array.from({ length: n }) generates an array of n length, and the second arg to Array.from is an optional mapper function (same signature as array.map)
Sep 11 17:14:16 <stennowork>	to be fair its not a variable but a string
Sep 11 17:14:24 <threenuc>	I'm creating a docker container with an empty db, then running redirecting the .sql script (mysql -uroot -proot -h 0 --port=4242). When ran from npm - 'ERROR 2013 (HY000): Lost connection to MySQL server at 'reading initial communication packet', when ran from terminal it runs fine.
Sep 11 17:14:31 <NoiseEee>	stennowork: ahh true that
Sep 11 17:14:44 <threenuc>	After I run it from terminal, running it from npm again works fine
Sep 11 17:14:46 <damian__>	thanks a lot jaawerth !
Sep 11 17:15:14 <dka>	jaawerth, I mean it says "Unexpected token export", full error is available in this reported issue  : https://github.com/facebook/jscodeshift/issues/344
Sep 11 17:15:39 <earend1>	threenuc: process.stdout.pipe(another_process.stdin)
Sep 11 17:17:16 <earend1>	you would need need to 'cat somescript.sql'  .. and pipe it to 'mysql blah'
Sep 11 17:17:18 <earend1>	i think
Sep 11 17:17:58 <Kartha>	 hi, I need an alternative for Sleep() and delay() in javascript (in processing.js)
Sep 11 17:18:06 <earend1>	or .. i think u can set the process as a shell or sth.. then it would support scripts
Sep 11 17:18:32 <earend1>	again?
Sep 11 17:18:34 <threenuc>	no theres no really any js code in the picture here, i'm writing npm scripts as like helper sripts
Sep 11 17:18:45 <stennowork>	!sleep @ Kartha
Sep 11 17:18:45 <ecmabot>	Kartha: JavaScript in the browser and Node.js doesn't have a sleep function -- as it's single threaded (if that makes no sense, ask). const sleep = util.promisify(setTimeout); Or const sleep = t => new Promise(r => setTimeout(r, t)); Then use await sleep(400);
Sep 11 17:19:03 <RLa>	really?
Sep 11 17:19:10 <threenuc>	but ill try the pipe thanks hang on
Sep 11 17:19:42 <earend1>	i would go for the script too :)
Sep 11 17:19:46 <RLa>	you could easily write your own sleep function but it would be really efficient
Sep 11 17:19:58 <RLa>	inefficient*
Sep 11 17:20:10 <stennowork>	RLa, see the code examples in that factoid
Sep 11 17:20:14 <earend1>	but in case u want to use the node process api .. you got a few things to try.
Sep 11 17:20:19 <threenuc>	nope, same error with cat db.sql | mysql hmm
Sep 11 17:20:28 <jaawerth>	dka: well, that error would suggest it's trying to process an uncompiled ES module export somewhere
Sep 11 17:20:50 <earend1>	threenuc:  first try if it works in console.. (no node)
Sep 11 17:21:21 <jaawerth>	looking at the "main" field of package.json, lib/index.js, and looking at that file, it's been compiled by babel into a commonjs export so I'm surprised it's having that issue
Sep 11 17:21:27 <jaawerth>	unless there's code of yours it's trying to parse
Sep 11 17:21:36 <earend1>	then know why and if you want not to use a npm script =bash for instance.
Sep 11 17:21:39 <mia>	How should I set the date to the first day of the next month
Sep 11 17:21:42 <mia>	For any given date
Sep 11 17:21:43 <jaawerth>	I dunno enough about that package to know what it does and doesn't support but it seems like something isn't beingg compiled
Sep 11 17:21:45 <dka>	jaawerth, yes we use esm, but that's fairly common
Sep 11 17:21:56 <mia>	is there any easy way or do I have to do the math myself
Sep 11 17:22:03 <dka>	there's no interest of running the codemod on compiled files
Sep 11 17:22:03 <jaawerth>	dka: well something in that build chain must be broken if you're getting that error
Sep 11 17:22:07 <earend1>	usually its for portability/universality  or so..
Sep 11 17:22:27 <dka>	jaawerth, build is not broken, and jscodeshift is supporting babel
Sep 11 17:22:32 <stennowork>	moment(date).add(1, 'month').startOf('month')
Sep 11 17:22:36 <dka>	I amusing a babel.config.js file, it should be picked up by default
Sep 11 17:22:56 <jaawerth>	I mean, it's etiher that or there's an actual syntax error somewhere
Sep 11 17:23:25 <jaawerth>	or that npx command isn't going through esm
Sep 11 17:23:31 <jaawerth>	(or isn't utilizing it)
Sep 11 17:24:05 <earend1>	threenuc: what i mean if you don't specify the command is to be executed in a shell .. the usage of pipes and redirectors will possibly not be interpreted ad hoc. so just dig there if u really need to.
Sep 11 17:24:11 <jaawerth>	in which case you'll need to modify the command so it does, probably with -r something if you mean the esm package
Sep 11 17:24:12 <dka>	that is just weird, it is widely used by facebook and again, there is no point of running the codemod on compiled source
Sep 11 17:24:23 <dka>	I have read their documentation and example show that esm work
Sep 11 17:24:30 <dka>	the project I am trying to run the codemod on is on github
Sep 11 17:24:33 <jaawerth>	well you should in theory be able to see where the unexpected token is coming from
Sep 11 17:24:40 <jaawerth>	since you didn't show me your actual error stack I can't tell you
Sep 11 17:24:47 <jaawerth>	but ify ou narrow down the problem file you can eliminate possible cluprits
Sep 11 17:25:04 <jaawerth>	it could be something the package author screwed up too
Sep 11 17:25:18 <jaawerth>	something they failed to compile etc
Sep 11 17:25:37 <jaawerth>	I did notice lib/ is compiled but their prepublish script also builds a dist/, which is odd
Sep 11 17:25:57 <jaawerth>	(unless dist is for non-bundled client-facing code or something)
Sep 11 17:26:05 <dka>	jaawerth, it come from : /home/dka/workspace/github.com/bootstrap-styled/v4/node_modules/react-codemod/transforms/rename-unsafe-lifecycles.js:18
Sep 11 17:26:19 <dka>	have you checked the error? I believe this should not happen something is going wrong
Sep 11 17:26:33 <jaawerth>	oh, same one as the issue - I thought that was someone else with a similar issue to yours
Sep 11 17:27:47 <dka>	no it is me
Sep 11 17:28:12 <dka>	so there own source can't be read, that doesn't make any sens
Sep 11 17:28:17 <dka>	and facebook did react, they know how to do
Sep 11 17:30:07 <dka>	I have tried in a sample project and the codemod work fine, just by doing `npm install react react-codemod` and by creating a source with `import React from 'react'; export default class Hello extends React.Component { componentWillMount() {} }`
Sep 11 17:30:17 <dka>	I have the expected result
Sep 11 17:30:44 <jaawerth>	it isn't react that's the issue
Sep 11 17:31:03 <jaawerth>	the file being pointed to there - the rename-unsafed-lifecycles - did you check to see if that's using export?
Sep 11 17:31:16 <jaawerth>	rename-unsafe-lifecycles*
Sep 11 17:31:36 <jaawerth>	facebook isn't the author of that boostrap-styled package you're using
Sep 11 17:31:57 <dka>	I am the author, as explained in the post, I just came back from a retreat and I wish to upgrade to react v16.9.0 for people
Sep 11 17:32:11 <dka>	I have removed all the source code within the file that fail and it keep failing
Sep 11 17:32:24 <dka>	the file look like: `class AbbrUnstyled extends React.Component {}`
Sep 11 17:32:32 <dka>	but I have the same error, while a sample empty project does it well
Sep 11 17:32:43 <jaawerth>	alright. sorry then, I don't have time to dig in deeper and it sounds like this is more involved than I can help with at a quick glance
Sep 11 17:33:09 <EmergencyMedical>	Hello folks
Sep 11 17:33:13 <EmergencyMedical>	09:32:28.378 var conversion = $('input[name=conversion'+65+']').val();
Sep 11 17:33:15 <EmergencyMedical>	09:32:28.418 undefined
Sep 11 17:33:24 <EmergencyMedical>	In javascript consolein browser I get confused by this
Sep 11 17:33:25 <dka>	damnb
Sep 11 17:33:37 <EmergencyMedical>	Instead of just saying '1' or whatever the value is, how come it says undefined?
Sep 11 17:33:48 <EmergencyMedical>	I have to actually type the variable name to get the actual value
Sep 11 17:33:54 <EmergencyMedical>	How does the console javascripting work?
Sep 11 17:34:06 <EmergencyMedical>	What exactly is undefined?
Sep 11 17:34:44 <jaawerth>	that most likely means it didn't find the input element, so when trying to get the value in the element it returned undefined
Sep 11 17:34:45 <RLa>	console.log first argument has value undefined
Sep 11 17:34:55 <EmergencyMedical>	 $('input[name=conversion'+65+']').val(); if I just do this or .value or whatever then I get the direct thing
Sep 11 17:35:03 <EmergencyMedical>	I just want to understand what the actual undefined bit is
Sep 11 17:35:17 <RLa>	oh
Sep 11 17:35:17 <EmergencyMedical>	the flow of the process from statement execution to output
Sep 11 17:35:28 <jaawerth>	oh
Sep 11 17:35:56 <EmergencyMedical>	Say you type this in console: var something = some.selector (pseudocode) and it says undefined.
Sep 11 17:36:06 <jaawerth>	well since you're assigning to a variable - that statement returns nothing to the REPL
Sep 11 17:36:12 <EmergencyMedical>	What does the js engine do when you type that statement, how does it execute it and tell me undefined? what is undefined
Sep 11 17:36:16 <jaawerth>	and a REPL always outputs somethign returned by an expression you input
Sep 11 17:36:21 <EmergencyMedical>	hmm
Sep 11 17:36:42 <jaawerth>	so if you input an expression that doesn't erturn a value (like a variable assignment), it says undefined
Sep 11 17:36:52 <RLa>	I think it's variable declaration that "returns" undefined, not assignment
Sep 11 17:37:03 <jaawerth>	ah, you're right
Sep 11 17:37:08 <jaawerth>	pure assignment DOES return
Sep 11 17:37:14 <jaawerth>	"return"
Sep 11 17:38:49 <EmergencyMedical>	u see
Sep 11 17:38:52 <EmergencyMedical>	I see
Sep 11 17:40:00 <EmergencyMedical>	Ok then thank you
Sep 11 17:40:03 <EmergencyMedical>	Time for candy
Sep 11 17:40:37 <EmergencyMedical>	Is there a better js console in browser that is better multiline editing
Sep 11 17:40:41 <EmergencyMedical>	thank you
Sep 11 17:42:42 <thykka>	what are you using now?
Sep 11 17:43:06 <jaawerth>	there might be some browser extensions out there
Sep 11 17:43:08 <jaawerth>	never checked tbh
Sep 11 17:45:11 <EmergencyMedical>	firefox developer edition
Sep 11 17:45:30 <EmergencyMedical>	Whatever happened to firebug
Sep 12 10:08:34 *	Disconnected ()
**** ENDING LOGGING AT Thu Sep 12 10:08:34 2019

**** BEGIN LOGGING AT Thu Sep 12 10:08:59 2019

Sep 12 10:08:59 *	Now talking on ##javascript
Sep 12 10:08:59 *	Topic for ##javascript is: JavaScript is *not* Java. | Just ask your question. | Say "!mdn abc" for docs on "abc". | Don't paste code in the channel. | Can't talk? Get registered on freenode ( https://git.io/vaTS2 )
Sep 12 10:08:59 *	Topic for ##javascript set by niggler!~niggler@unaffiliated/niggler (Tue Jan 15 07:16:23 2019)
Sep 12 10:10:01 <Stealthy>	10 pow 53 yottabytes
Sep 12 10:10:11 <Stealthy>	right... thats a dead end project
Sep 12 10:32:22 <incognito>	robin___: trunc the 0.009 and do a simple round of 2 decimals
Sep 12 10:33:00 <niggler>	wow gotta love xml that mixes betwen "" attrs and ''
Sep 12 10:38:16 <grr12314>	thats rare
Sep 12 10:38:26 <niggler>	its some vml nonsense
Sep 12 10:38:29 <grr12314>	i didnt think anyone still writes xml by hand in this day
Sep 12 10:38:39 <niggler>	pretty sure two different systems are colliding
Sep 12 10:38:41 <grr12314>	and machine output usually is consistent
Sep 12 10:38:43 <MJCDawy>	you're rare
Sep 12 10:39:00 <MJCDawy>	shut up niggler, you pretty
Sep 12 10:39:00 <grr12314>	i am indeed
Sep 12 10:39:15 <niggler>	lol sup MJCDawy
Sep 12 10:40:05 <MJCDawy>	losing my mind slowly, hope everyones having a lovely day tho
Sep 12 10:40:08 <MJCDawy>	lol
Sep 12 10:40:21 <niggler>	i feel that
Sep 12 10:41:05 <MJCDawy>	atleast there's some sunshine poking its head after a dreary winter
Sep 12 10:42:18 <qswz>	nested ternaries http://dpaste.com/1M8580A
Sep 12 10:42:27 <MJCDawy>	today I had to break the news to someone that vitamin d is not, infact, teleported via sunrays
Sep 12 10:42:32 <qswz>	I wrote this, but was asked to break it down
Sep 12 10:42:45 <qswz>	why ppl are not able to rea dit?
Sep 12 10:42:55 <qswz>	it's clear like cristal
Sep 12 10:43:06 <niggler>	its not the nested ternaries
Sep 12 10:43:11 <niggler>	its the abuse of jsx
Sep 12 10:43:21 <qswz>	abuse of jsx?
Sep 12 10:43:34 <qswz>	yo've got something aginst jsx it seems
Sep 12 10:43:41 <qswz>	a youth truamtism?
Sep 12 10:43:43 <niggler>	when you start racking up double digit context switches in a single statement, there's a problem
Sep 12 10:43:52 <qswz>	ah
Sep 12 10:44:04 <qswz>	I don't know, it feels easy to read for me
Sep 12 10:44:11 <niggler>	the flow is straightforward
Sep 12 10:44:14 <qswz>	looks how it is after breaking it down:
Sep 12 10:44:19 <niggler>	<Typography color="error">{`billing with "${settings.billing}" is not supported`}</Typography>
Sep 12 10:44:23 <niggler>	stuff like that is no fun
Sep 12 10:44:43 <niggler>	so you're trying to mix two different parts of the brain
Sep 12 10:45:07 <niggler>	the JSX part of the brain eschews antiquated constructs like ternary operators
Sep 12 10:45:09 <MJCDawy>	meh
Sep 12 10:45:17 <qswz>	http://dpaste.com/18MWYZJ soooo verbose
Sep 12 10:45:35 <qswz>	niggler: what would you write else?
Sep 12 10:45:36 <MJCDawy>	the marketshares of techs like jsx are just so bad in the context of greater global market forces
Sep 12 10:45:43 <MJCDawy>	that it's really like, who cares
Sep 12 10:45:56 <niggler>	i dunno, today is fun with regexes
Sep 12 10:45:59 <qswz>	<Typography color="error">billing with "{settings.billing}" is not supported</Typography>
Sep 12 10:46:00 <MJCDawy>	use it, don't. whatever is best for the actual use case surely
Sep 12 10:46:02 <qswz>	maybe
Sep 12 10:46:03 <MJCDawy>	are we not scientists
Sep 12 10:46:05 <qswz>	but it's buggy to do that
Sep 12 10:46:13 <qswz>	i creates multiple text nodes
Sep 12 10:46:15 <qswz>	it*
Sep 12 10:46:20 <qswz>	niggler: ^
Sep 12 10:46:26 <MJCDawy>	...
Sep 12 10:46:29 <qswz>	not buggy, but not recommended
Sep 12 10:46:33 <niggler>	i know what it does
Sep 12 10:46:40 <niggler>	imagine its 4:45 AM
Sep 12 10:46:40 <MJCDawy>	... lol
Sep 12 10:46:53 <niggler>	and you spent hours trying to figure out why something isn't working
Sep 12 10:46:56 <MJCDawy>	I have nothing positive to say about this opinion
Sep 12 10:46:56 <MJCDawy>	^
Sep 12 10:46:57 <qswz>	it's murica?
Sep 12 10:47:01 <qswz>	east coast
Sep 12 10:47:05 <qswz>	I guess
Sep 12 10:47:10 <niggler>	only to discover that excel stores 3 different representations of the same thing in three different places
Sep 12 10:47:36 <MJCDawy>	I would, as usual, advise you that this is not at all shocking
Sep 12 10:47:38 <qswz>	excel is like IE5
Sep 12 10:47:43 <MJCDawy>	because as per the previous x years
Sep 12 10:47:44 <niggler>	so i think there was an attempt to clean up VML
Sep 12 10:47:51 <MJCDawy>	"it's Excel"
Sep 12 10:47:54 <niggler>	except they forgot to change the source of truth
Sep 12 10:48:03 <niggler>	so you have this bs that's inconsistent with the VML
Sep 12 10:48:14 <niggler>	but the VML is still truth, so the right answer is to discard everything else
Sep 12 10:48:31 <niggler>	so you're left wondering why did two different teams try two different approaches to replace VML
Sep 12 10:48:41 <niggler>	and KEEP BOTH IN EXCEL 2019???
Sep 12 10:48:55 <MJCDawy>	!learn it's Excel=Got an error that's related to excels data methods? Ofcourse you do, it's EXCEL. More @ "!the niggler paradox"
Sep 12 10:48:55 <ecmabot>	MJCDawy: Learned `it's Excel`.
Sep 12 10:49:04 <qswz>	excel 2019
Sep 12 10:49:09 <qswz>	it's in the game
Sep 12 10:49:26 <niggler>	Excel is governed by ecma-376
Sep 12 10:49:35 <qswz>	who's the guest star in excel 2019?
Sep 12 10:49:55 <niggler>	oh that's definitely willie G
Sep 12 10:49:59 <MJCDawy>	niggler, meaning ... ?
Sep 12 10:50:13 <niggler>	like how there's ECMA-262 for JS
Sep 12 10:50:16 <MJCDawy>	like what do you expect from that being true
Sep 12 10:50:19 <niggler>	XLSX is covered under ECMA-376
Sep 12 10:50:32 <niggler>	notable lack of quality from the output of ECMA
Sep 12 10:50:40 <niggler>	not too dissimilar to the decline in the parent company EA
Sep 12 10:50:50 <MJCDawy>	which means what in terms of what MS does or does not do based on commercial grounds
Sep 12 10:51:06 <MJCDawy>	the same as chrome in theory implements just the standards
Sep 12 10:51:08 <niggler>	it means sheetjs can still be a thing
Sep 12 10:51:17 <MJCDawy>	but we all know that's pretty much the omplete reverse of the truth
Sep 12 10:51:55 <MJCDawy>	they basically buy seats on these groups to influence their own agenda
Sep 12 10:52:07 <MJCDawy>	and then the changes are upstreamed
Sep 12 10:52:10 <MJCDawy>	and then they call it spec compliance heh
Sep 12 10:52:12 <niggler>	yeah XLSX and ECMA-376 was an attempt to stifle ODS
Sep 12 10:52:24 <Stealthy>	https://i.imgur.com/p6nA2N7.png
Sep 12 10:52:26 <Stealthy>	whats cooking
Sep 12 10:52:28 <MJCDawy>	lool nobody cares about ods
Sep 12 10:52:32 <MJCDawy>	especially not MS
Sep 12 10:52:37 <Stealthy>	frying silicium
Sep 12 10:53:01 <niggler>	right, because microsoft came out with their own XML spec before ODS took off
Sep 12 10:54:08 <MJCDawy>	even then
Sep 12 10:54:26 <MJCDawy>	businesses dont WANT to use shitty openoffice
Sep 12 10:54:33 <niggler>	you're right
Sep 12 10:54:38 <qswz>	I'm going to to try to prove Collatz conjecture
Sep 12 10:54:40 <MJCDawy>	they literally sacrifice productivity
Sep 12 10:54:49 <MJCDawy>	everyones prior training and knowledge (in MS products)
Sep 12 10:55:08 <ashnur>	aren't you away?
Sep 12 10:55:09 <MJCDawy>	a web based component such as yours is fine because of its web nature
Sep 12 10:55:15 <qswz>	Stealthy: get linux
Sep 12 10:55:20 <MJCDawy>	which can be implemented and deployed internally
Sep 12 10:55:22 <qswz>	it'll run smoothly
Sep 12 10:55:38 <MJCDawy>	ashnur, depends, who's lookin' for me
Sep 12 10:55:43 <niggler>	like this MJCDawy https://bugs.documentfoundation.org/show_bug.cgi?id=83511
Sep 12 10:55:55 <niggler>	lol "We ignore the last two bits for many stuff to improve the user experience."
Sep 12 10:56:07 <niggler>	its like when edge broke math
Sep 12 10:56:18 <MJCDawy>	I have to take my landlords to the ombudsman
Sep 12 10:56:37 <MJCDawy>	-__-
Sep 12 10:56:46 <ashnur>	australia have ombudsmans?
Sep 12 10:56:49 <MJCDawy>	I hate fucking realtors so fucking much
Sep 12 10:56:56 <MJCDawy>	all they do is try to fuck you over
Sep 12 10:57:02 <ashnur>	realtor?
Sep 12 10:57:11 <MJCDawy>	realestate agent
Sep 12 10:57:16 <qswz>	they have musulmans
Sep 12 10:58:17 <qswz>	oh learn a new word
Sep 12 10:58:21 <qswz>	learned*
Sep 12 10:58:38 <MJCDawy>	congratulations.
Sep 12 10:59:17 <qswz>	if 3n+1 if n is odd, n/2 if n is even converges to 1
Sep 12 10:59:24 <qswz>	I bet 4n+1 too
Sep 12 10:59:34 <MJCDawy>	... what.
Sep 12 10:59:42 <MJCDawy>	modulus.
Sep 12 11:00:21 <niggler>	<v:textbox style='mso-direction-alt:auto' o:singleclick="f">
Sep 12 11:00:21 <MJCDawy>	sometimes I think I was the only one paying attention in highschool. Which is weird because I was on a LOT of ketamine
Sep 12 11:00:28 <niggler>	why would you do that
Sep 12 11:00:54 <MJCDawy>	why would I do that?
Sep 12 11:01:13 <niggler>	the VML niggles are irritating
Sep 12 11:01:21 <niggler>	some attributes have to be single quoted apparently
Sep 12 11:01:28 <niggler>	and others have to be double quoted lolol
Sep 12 11:02:41 <MJCDawy>	fwiw once again referencing back many years advising you against doing any of this
Sep 12 11:02:45 <MJCDawy>	too late now tho haha
Sep 12 11:03:56 <MJCDawy>	meanwhile I still haven't done anything at all ^_^
Sep 12 11:04:03 <MJCDawy>	that's where the smart moneys at
Sep 12 11:05:17 <MJCDawy>	gimme them $0 bills
Sep 12 11:07:55 <qswz>	just avoid excel
Sep 12 11:08:00 <qswz>	for sanity
Sep 12 11:08:26 <qswz>	and all its derived languages
Sep 12 11:11:14 <ashnur>	niggler: one is chars[] the other is string? :D
Sep 12 11:16:14 <niggler>	qswz: that wouldve been great career advice years ago
Sep 12 11:19:24 <qswz>	now it's too late
Sep 12 11:19:31 <qswz>	you've seen too much shit
Sep 12 11:19:50 <qswz>	irreversible
Sep 12 11:24:06 <niggler>	don't get me wrong, as frustrating as it is, this has kept me engaged for years
Sep 12 11:24:29 <niggler>	probably wouldve burned out on react or angular or vue or whatever the framework of the week is
Sep 12 11:24:41 <ashnur>	haha, tell niggler to forget excel
Sep 12 11:24:45 <qswz>	are google spreadsheets better?
Sep 12 11:25:13 <ashnur>	there is no such thing as better if you are so vague
Sep 12 11:25:21 <niggler>	its not better or worse
Sep 12 11:25:29 <niggler>	id say google spreadsheets addresses 90% of what people need
Sep 12 11:25:41 <qswz>	ok
Sep 12 11:25:42 <niggler>	but more people are now familiar with google docs offerings
Sep 12 11:25:55 <niggler>	so its not like microsoft is the obvious answer that it was 5 years ago
Sep 12 11:26:19 <niggler>	microsoft had familiarity going for it, but can't compete with free
Sep 12 11:26:42 <niggler>	so you'll find shops that would be willing to spend $$ on spreadsheet related stuff go with microsoft
Sep 12 11:26:52 <niggler>	because they need certain things that google sheets can't do
Sep 12 11:27:14 <niggler>	BUT for the overwhelming majority of people, google sheets is actually the better choice
Sep 12 11:31:38 <niggler>	the real irony in all this is that microsoft is shooting itself in the foot, if the core value proposition is compatibility with excel and you break excel, why does compatibility even matter?
Sep 12 11:31:58 <darkseid>	what's the difference between these 2 functions: https://gist.github.com/fdjones/1cb52415b40a119abbf2a4dabcf0532b
Sep 12 11:32:38 <niggler>	neither are valid functions
Sep 12 11:32:44 <niggler>	you don't returm anything
Sep 12 11:33:19 <niggler>	second, the top one doesnt make sense, did you mean to just resolve bar/baz ?
Sep 12 11:33:39 <oznt>	js idiot here, asking: how do I transform tests with jest? can some one look at this? https://pastebin.com/JDMW9W79 I don't get how to tell jest to compile the tests
Sep 12 11:56:46 *	CssNoob goodbye y'all . off to working out, Good evening :)
Sep 12 11:59:34 *	Disconnected ()
**** ENDING LOGGING AT Thu Sep 12 11:59:34 2019

**** BEGIN LOGGING AT Thu Sep 12 11:59:58 2019

Sep 12 11:59:58 *	Now talking on ##javascript
Sep 12 11:59:58 *	Topic for ##javascript is: JavaScript is *not* Java. | Just ask your question. | Say "!mdn abc" for docs on "abc". | Don't paste code in the channel. | Can't talk? Get registered on freenode ( https://git.io/vaTS2 )
Sep 12 11:59:58 *	Topic for ##javascript set by niggler!~niggler@unaffiliated/niggler (Tue Jan 15 07:16:23 2019)
Sep 12 12:54:24 <qswz>	Can CSP headers pose issues with firewalls or corporate networks?
Sep 12 12:56:55 <qswz>	I mean can 2 person, same browsers have different behaviors due to their network/firewalls and CSP headers
Sep 12 12:57:04 <qswz>	one of that person getting blocked
Sep 12 12:57:13 <qswz>	the other with no problem
Sep 12 13:12:54 <Maxdamantus>	qswz: in theory, not as long as they're using TLS with the standard root certificates.
Sep 12 13:13:40 <qswz>	so if the site is on HTTPS, it's all the same for everyone on every network?
Sep 12 13:13:49 <Maxdamantus>	qswz: but aiui some corporate proxies require people to use alternative root certificates so the proxy can intercept the connection.
Sep 12 13:13:59 <oznt>	what does start:dev in the scripts section of package.json mean/
Sep 12 13:14:02 <Maxdamantus>	Should be.
Sep 12 13:14:03 <oznt>	what does start:dev in the scripts section of package.json mean?
Sep 12 13:14:33 <thykka>	oznt, it's the name of the script. you can do "npm run start:dev" to use it
Sep 12 13:15:09 <oznt>	thykka, thanks
Sep 12 13:16:16 <qswz>	thanks Maxdamantus
Sep 12 13:17:02 <qswz>	oznt: imo you could just rename it to dev
Sep 12 13:41:31 <oznt>	so I manged to run a simple test with jest and svetle, but now I encountered this error: https://pastebin.com/P0XTpGKR
Sep 12 13:41:47 <oznt>	can someone here explain why I am getting eferenceError: fireEvent is not defined?
Sep 12 13:42:25 <oznt>	This directly taken from the svetle test examples https://testing-library.com/docs/svelte-testing-library/intro#examples
Sep 12 13:50:54 <oznt>	ok, I helped myself : import { fireEvent, waitForElement } from '@testing-library/dom' at the top
Sep 12 13:50:58 <oznt>	broken exampels
Sep 12 13:58:03 <AMANEDIEL>	heyho everyone
Sep 12 14:22:51 <DnzAtWrk>	god I hate automatically scrolling forums/message boards/comments/news
Sep 12 14:23:00 <DnzAtWrk>	just let me reach the bottom of the page you ****
Sep 12 14:35:29 <Intelo>	Hi
Sep 12 14:35:50 <qswz>	infinite scroll?
Sep 12 14:36:06 <qswz>	I like how GH collapse middle comments
Sep 12 14:40:47 <ashnur>	i don't like GH interface. I like the features, but not how it looks and how it is buitl
Sep 12 14:41:48 <thykka>	try bitbucket/gitlab then?
Sep 12 14:44:31 <qswz>	or gitea
Sep 12 14:45:10 <poboy>	cli
Sep 12 14:48:34 <qswz>	or gogs.io
Sep 12 14:49:24 <qswz>	is there a nodejs based self-hosted git servic
Sep 12 14:49:41 <stennowork>	why does it have to be nodejs based
Sep 12 15:01:23 <red82>	qswz: self hosted git is trivially easy.  arguably if you need git in the fist place you have the skills necessary to set one up yourself.  I have one on a 5/month host, that backs itself up to amazon aws.
Sep 12 15:08:20 <ashnur>	thykka: those are the same
Sep 12 15:09:13 <thykka>	?
Sep 12 15:09:36 <thykka>	same interface as GH?
Sep 12 15:09:40 <thykka>	probably  not
Sep 12 15:13:02 <ashnur>	maybe stretch your imagination for a bit more than that
Sep 12 15:13:18 <thykka>	maybe explain what you meant?
Sep 12 15:13:19 <ashnur>	otherwise it's going to be a windows vs linux debate which none of us wants :D
Sep 12 15:13:40 <ashnur>	nah, we both have better things to do
Sep 12 15:13:47 <thykka>	err.. okay?
Sep 12 15:14:23 <thykka>	it's not like you asked a question or anything xD
Sep 12 15:14:52 <ashnur>	exactly :)
Sep 12 15:15:08 <thykka>	i still have no idea what you meant with 'those are the same' though
Sep 12 15:15:22 <thykka>	bitbucket is the same as gitlab?
Sep 12 15:15:24 <ashnur>	well, what i dislike in github is there in bitbucket or gitlab too
Sep 12 15:15:35 <ashnur>	definitely not the same
Sep 12 15:15:49 <thykka>	and what exactly is it that you don't like?
Sep 12 15:16:36 <ashnur>	can't edit code from my smartphone on them
Sep 12 15:16:50 <thykka>	you can though
Sep 12 15:17:08 <thykka>	idk about the web interfaces, but i'm pretty sure there's a version of git for Android
Sep 12 15:17:34 <ashnur>	will have to see then
Sep 12 15:18:36 <thykka>	first google result, idk if good http://pocketgit.com/
Sep 12 15:20:24 <thykka>	https://pedronveloso.com/proper-git-client-android/
Sep 12 15:23:24 <thykka>	I guess my point is, being able to commit into a git repository doesn't really have much to do with whether you're using GitHub, GitLab, or any git provider. It's a function of git itself, so the answer is to find a suitable git client, instead of finding another git provider :PP
Sep 12 15:25:39 <thykka>	issue tracker, wiki, github pages.. these are GitHub features, rather than git's. I initially thought you were referring to those
Sep 12 15:25:52 <ashnur>	i agree
Sep 12 15:26:08 <qswz>	red82: I mean all the project management sufff as well
Sep 12 15:26:36 <qswz>	it's important in a team
Sep 12 15:30:08 <red82>	qswz: our company is 10 years old (more or less).  we’ve changed issue trackers and so on at least three times, because we were trying to find one that suited our workflow.   we’ve never changed our git service.
Sep 12 15:30:35 <red82>	it is my opinion that if you separate git from your PM stuff, then you have more flexibility.
Sep 12 15:30:44 <prometh>	a recruiter just cancelled his scheduled meeting with me, 10min before the call
Sep 12 15:30:46 <red82>	because there’s lot of PM tools that don’t have a software tracking component
Sep 12 15:30:58 <red82>	but that may be good for you
Sep 12 15:31:02 <prometh>	recruiters really are jerks
Sep 12 15:31:13 <prometh>	i think i'll just avoid them from now on
Sep 12 15:31:31 <prometh>	which is what i used to do
Sep 12 15:31:34 <red82>	prometh: they don’t get paid until you get paid
Sep 12 15:31:44 <NoiseEee>	like injury lawyers!
Sep 12 15:31:45 <qswz>	I bet you tried trello
Sep 12 15:31:50 <prometh>	red82: so?
Sep 12 15:31:52 <NoiseEee>	top of the human class
Sep 12 15:32:09 <prometh>	NoiseEee: which class of human?
Sep 12 15:32:23 <prometh>	or are we getting into order/etc ?
Sep 12 15:32:24 <NoiseEee>	prometh: sorry, the chart was upside down
Sep 12 15:32:39 <qswz>	red82: I like doing git ci "Fix #42 some bugged shit"
Sep 12 15:32:46 <red82>	prometh meaning that they are legitimiately tryign to get you a job, and avoid them completely because of a bad experience with one person may not be a good idea
Sep 12 15:32:53 <qswz>	and have the issue state automatically updates
Sep 12 15:32:56 <prometh>	red82: experience wiht many
Sep 12 15:33:01 <red82>	ah ok
Sep 12 15:33:27 <qswz>	ci=commit -m ofc
Sep 12 15:33:49 <stennowork>	git ci = continuous integration?
Sep 12 15:33:53 <stennowork>	autocommit on save? :D
Sep 12 15:34:09 <qswz>	nah just one of my 100 aliases
Sep 12 15:34:28 <red82>	yeah, I used to do that too.  I don’t do that anymore
Sep 12 15:34:36 <prometh>	red82: your name makes me think.... in 2020, i'll be 37, having been born in 1983
Sep 12 15:34:48 <red82>	because one day you will have to sit down at a co-workers desk without your aliases and you won’t be able to do anything
Sep 12 15:34:56 <qswz>	rbc = rebase --continue
Sep 12 15:35:01 <qswz>	typical git alias
Sep 12 15:35:25 <qswz>	without them you lost time
Sep 12 15:35:30 <qswz>	lose*
Sep 12 15:35:43 <prometh>	qswz: seconds
Sep 12 15:36:06 <prometh>	qswz: to be honest, using cli for interactive rebase loses more than seconds
Sep 12 15:36:20 <red82>	not really.  the ratio of time spent staring at the screen trying to figure out what to type vs. actually typing is so skewed, that the aliases are insignificant.
Sep 12 15:36:49 <qswz>	co = checkout
Sep 12 15:36:53 <qswz>	at least
Sep 12 15:37:00 <red82>	but the time lost (and embarrassment) of having to google how to do basic commands on someone’s machine because I don’t know the commands is priceless
Sep 12 15:37:00 <prometh>	to each their own... it's more laziness than optimization
Sep 12 15:37:01 <qswz>	everyone shouls have this
Sep 12 15:37:24 <prometh>	automation is far better than saving keystrokes
Sep 12 15:37:25 <qswz>	compare = "!f(){ git rev-list --count --left-right "${2:+$1}...${2:-$1}" | { read ahead behind; printf 'ahead: %s\tbehind: %s\n' $ahead $behind; } };f"
Sep 12 15:37:28 <qswz>	my fav
Sep 12 15:37:34 <qswz>	but I don't use it much
Sep 12 15:38:05 <qswz>	clgh = "!f() { git clone --no-tags git@github.com:$@; }; f"
Sep 12 15:38:15 <prometh>	i don't even using shorthand cli options (-a, etc)
Sep 12 15:38:25 <prometh>	--option is better for self-documentation
Sep 12 15:38:34 <qswz>	ragh = "!f() { repo=$(git r get-url origin 2> /dev/null || pwd); git remote add ${1:-origin} git@github.com:${2:-caub/$(basename $repo)}; }; f"
Sep 12 15:38:39 <qswz>	remte add gh
Sep 12 15:39:09 <prometh>	qswz: i use sourcetree :)
Sep 12 15:51:50 <prussian>	people at my work seem to hate sourcetree
Sep 12 15:51:58 <prussian>	is there something we're doing wrong?
Sep 12 15:52:39 <hmw_metalab>	I'd like to try rolling my own syntax highlighting. Do you have hints on what to think of, what to avoid?
Sep 12 15:52:57 <prussian>	syntax highlighting for...?
Sep 12 15:52:59 <prussian>	js?
Sep 12 15:53:06 <hmw_metalab>	I imagine, cutting a long text into many divs will impact performance
Sep 12 15:53:21 <prussian>	it's mostly just understanding lexical analysis, aka writing a lot of regexps.
Sep 12 15:53:24 <hmw_metalab>	Hm. Not sure yet, I just want to try it. I would start with JS and then a specific assembler language
Sep 12 15:53:42 <prussian>	more complex highlighting will likely require an AST
Sep 12 15:53:51 <hmw_metalab>	What topics should I research?
Sep 12 15:53:58 <prussian>	uh. lexical analysis
Sep 12 15:54:08 <prussian>	you just want to map a stream of tokens to a color basically
Sep 12 15:54:24 <hmw_metalab>	I thing I vaguely understand. Thanks for the hint
Sep 12 15:54:27 <hmw_metalab>	*think
Sep 12 15:55:16 <prussian>	this gross example I ran into when looking up something in python sort of points in the right direction
Sep 12 15:55:17 <prussian>	https://docs.python.org/3/library/re.html#writing-a-tokenizer
Sep 12 15:55:34 <hmw_metalab>	How is this formal language description format called?
Sep 12 15:55:41 <prussian>	the long and skinny is it's just a giant regexp that emits a bunch of sytanxtic tokens you can map to colos
Sep 12 15:56:02 <prussian>	uh idk?
Sep 12 15:57:27 <hmw_metalab>	An example is this:   alpha: A-Z | a-z | _ \n  numeral:  0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 \n alphanumeral: \n alpha | numeral ... I have no formal education, so I lack a lot of knowledge. This looks like it is meant to be parsed
Sep 12 15:58:13 <hmw_metalab>	I will find out :)
Sep 12 15:59:57 <qswz>	you want to highlight this text above?
Sep 12 16:02:04 <hmw_metalab>	https://en.wikipedia.org/wiki/Extended_Backus%E2%80%93Naur_Form
Sep 12 16:02:28 <stennowork>	oh the backus naur rform
Sep 12 16:02:37 <hmw_metalab>	Nah, this is just an example of those language descriptions, I keep stumbling over every now and then
Sep 12 16:02:42 *	stennowork gets vague flashback to his uni times
Sep 12 16:02:49 <Alexendoo>	What you pasted isn't BNF exactly, but they're not necessarily meant to be parsed
Sep 12 16:02:51 <hmw_metalab>	I might use something like this for my syntax highlighting
Sep 12 16:03:09 <hmw_metalab>	I've heard about parser generators
Sep 12 16:03:33 <hmw_metalab>	I imagine, they spit out a nested case structure for you, after reading something like this
Sep 12 16:04:25 <hmw_metalab>	I might have to make a meta-parser
Sep 12 16:04:50 <stennowork>	at this moment i am really glad that i don't have your problems because that sounds absolutely terrible
Sep 12 16:05:03 <hmw_metalab>	heheh :)
Sep 12 16:06:02 <hmw_metalab>	I prefer such things over working with ugly legacy code from two aeons ago
Sep 12 16:07:01 <hmw_metalab>	What I really need, is a simple text editor, not neccessarily with syntax highlightin, but with the capability of marking the "current" line (for a debugger)
Sep 12 16:07:47 <hmw_metalab>	So I am thinking about what I will need to get that and what else will be easy to build in while doing it, etc
Sep 12 16:07:59 <hmw_metalab>	also syntax highlighting would be nice
Sep 12 16:08:23 <hmw_metalab>	I am mostly worried about performance
Sep 12 16:09:32 <prometh>	why is regex considered more correct than a more functional approach?
Sep 12 16:10:01 <prometh>	is it perhaps because it's more cross-language?
Sep 12 16:10:19 <Alexendoo>	For syntax highlighting prometh?
Sep 12 16:10:22 <prometh>	no
Sep 12 16:10:23 <hmw_metalab>	I'd suppose. They told me, they weren't even fast
Sep 12 16:10:28 <prometh>	subject change
Sep 12 16:10:42 <Alexendoo>	Ah
Sep 12 16:11:18 <Alexendoo>	Syntax highlighting in practise is a bunch of regex fwiw hmw_metalab, usually adapted from textmate
Sep 12 16:11:51 <hmw_metalab>	mhm... adding it to my notes
Sep 12 16:12:14 <hyperisco>	How can I stream files over HTTP to Web Storage or IndexedDB? Also, how can I stream data from Web Storage or IndexedDB?
Sep 12 16:15:00 <Alexendoo>	hyperisco: There isn't an API for that AFAIK
Sep 12 16:15:23 <stennowork>	just write the stream chunks into webstorage?
Sep 12 16:15:26 <Alexendoo>	You could chunk it up and store it as multiple entries, but unless there's a real need for that I wouldn't bother
Sep 12 16:15:39 <MikeD_>	what are you trying to accomplish?
Sep 12 16:15:45 <stennowork>	yeah you'd expect that browser caching already does the job for you
Sep 12 16:16:57 <luist>	hey, where am i missing a return here? https://paste.ofcode.org/5jzExN2szez6XjFFaH9aQC
Sep 12 16:18:09 <notchris>	o/
Sep 12 16:18:39 <Alexendoo>	prometh: I don't think they are considered more correct, it can be less effort though. It can also be far more difficult. So depends on the context I guess
Sep 12 16:19:36 <grr12314>	luist what gave you the idea you're missing a return
Sep 12 16:19:43 <grr12314>	and not say missing an assignment
Sep 12 16:19:55 <luist>	grr12314: someone here said it
Sep 12 16:20:14 <grr12314>	you define a local SignupTracker and then do nothing with it and lose it
Sep 12 16:20:22 <luist>	grr12314: by the way i’m getting Uncaught ReferenceError: SignupTracker is not defined
Sep 12 16:20:35 <grr12314>	but rather than return, i'd expect to assign it to a global
Sep 12 16:20:39 <luist>	oh
Sep 12 16:20:41 <luist>	right
Sep 12 16:21:18 <luist>	grr12314: like window.SignupTracker = SignupTracker; ?
Sep 12 16:21:59 <hyperisco>	Is web API documentation that is Chrome-specific published? If so, where?
Sep 12 16:22:07 <grr12314>	yup
Sep 12 16:22:29 <Alexendoo>	There are plenty of things on MDN that are chrome specific
Sep 12 16:23:15 <grr12314>	https://developer.chrome.com/
Sep 12 16:23:18 <grr12314>	https://developer.chrome.com/apps/api_index
Sep 12 16:23:29 <prometh>	Alexendoo: at least in js, i've measured regex to perform faster than procedural/functional code
Sep 12 16:24:49 <luist>	grr12314: still getting Uncaught ReferenceError: SignupTracker is not defined
Sep 12 16:25:19 <grr12314>	use it like window.signuptracker too
Sep 12 16:25:22 <grr12314>	or idk
Sep 12 16:25:33 <grr12314>	check order of scripts
Sep 12 16:26:39 <Alexendoo>	prometh: That won't matter all that much for most use cases
Sep 12 16:26:45 <luist>	grr12314: the order is right… but i can’t see window.SignupTracker in the console either
Sep 12 16:27:30 <luist>	grr12314: this is what i’m using now: https://paste.ofcode.org/kjNxNaVnLuzmRGLRK8Hj46
Sep 12 16:28:33 <grr12314>	add some console logs to be sure it has ran
Sep 12 16:45:30 <mage_>	hello
Sep 12 16:45:53 <mage_>	is there a self-hosted solution for non-public js modules?
Sep 12 16:49:26 <qswz>	github packages
Sep 12 16:49:29 <qswz>	verdaccio
Sep 12 16:50:01 <mage_>	I'll take a look at verdaccio :)
Sep 12 17:05:21 <prometh>	i just learned something awesome about chai.js: you can chain assertions.... expect(result).to.be.an("object").with.property("isAllowed").that.is.a("function");
Sep 12 17:05:47 <prometh>	and just keep going `.with.property...`
Sep 12 17:09:55 <Nyle>	Hello, if php returns something as null, and I want to check it in javascript, how can do it?
Sep 12 17:10:04 <Nyle>	just test to see if the var returns string 'null'?
Sep 12 17:10:14 <stennowork>	Nyle, php is in the backend, javascript is in the frontend
Sep 12 17:10:14 <Nyle>	or is javascript have a null thing to check for
Sep 12 17:10:37 <stennowork>	so you cannot check the return value of a php function with javascript
Sep 12 17:10:44 <Nyle>	You're very much wrong about that.
Sep 12 17:10:53 <Nyle>	Or you're just arguing for the sake of it.
Sep 12 17:10:55 <jaawerth>	what do you mean "returns?" Is this an xhr/http request you're making from JS? Or do you mean you're server-rendering something from php?
Sep 12 17:11:10 <stennowork>	Nyle, no. PHP is on the SERVER SIDE, javascript is on the CLIENT SIDE
Sep 12 17:11:14 <Nyle>	You make ajax request, data from php comes back as json, sometimes php returns something as null, I want to check injs.
Sep 12 17:11:19 <Nyle>	Oh fuck fuck sake.
Sep 12 17:11:23 <Nyle>	Just stop talking to me man
Sep 12 17:11:25 <jaawerth>	ok, so it's xhr
Sep 12 17:11:28 <jaawerth>	I did ask :P
Sep 12 17:11:47 <Nyle>	jaawerth: :)
Sep 12 17:11:54 <jaawerth>	it depends on what kind of http request it is. if it's JSON, then once you parse the JSON it should be a regular null value
Sep 12 17:12:06 <stennowork>	lmao
Sep 12 17:12:07 <Nyle>	ah, so typof null?
Sep 12 17:12:20 <jaawerth>	in which case you can use `result === null` or the more permissive `result == null` which will match both null and undefined
Sep 12 17:12:20 <Nyle>	or something != 'null' etc.?
Sep 12 17:12:24 <Nyle>	ahh.
Sep 12 17:12:28 <Nyle>	Thanks.
Sep 12 17:12:32 <Nyle>	You're most helpful.
Sep 12 17:12:47 <stennowork>	note to self: don't tell people the truth, but what they want to hear
Sep 12 17:12:51 <jaawerth>	np
Sep 12 17:12:58 <stennowork>	keeps their ego intact and everyone is happy
Sep 12 17:13:09 <jaawerth>	stennowork: I mean what you said is true but it turns out they were asking a reasonable question and it just wasn't immediately clear which they were asking
Sep 12 17:13:12 <Nyle>	note to stennowork: first step in solving any problem is information gathering.
Sep 12 17:13:27 <Nyle>	Taking pride in 'oh I tell it how it is' that's just juvenile thinking.
Sep 12 17:14:06 <stennowork>	taking pride in asking properly on a question instead of trying to guess what the person wants?
Sep 12 17:14:11 <stennowork>	answering*
Sep 12 17:14:13 <stennowork>	anyway
Sep 12 17:14:16 <jaawerth>	Nyle: FWIW sometimes folks come in here and ask stuff that sounds a *little* like that and it turns out they aren't super clear about the boundary between server- and client-side code. but that's why I asked for clarification ;-)
Sep 12 17:14:16 <Nyle>	I take no pride. I don't suffer pride.
Sep 12 17:14:27 <Nyle>	That's your agony. Not mine. I'm working.
Sep 12 17:14:29 <Nyle>	:)
Sep 12 17:14:35 <prometh>	pride is fine, but there's such a thing as "new pride"
Sep 12 17:14:41 <Nyle>	Haha
Sep 12 17:14:49 <Nyle>	pride fighting championship
Sep 12 17:15:02 <stennowork>	there is no agony on my part - after all, you are the one with a request, not me
Sep 12 17:15:23 <prometh>	i feel good about the things i create and do, but i don't walk around feeling better tahn everyone unelss they're assholes
Sep 12 17:15:38 <Nyle>	I apologize. I assumed that it would be obvious, if one is trying to check for a php returned null value... it seems odd to inform someone of the obvious that they are backend/frontend/ etc. etc. whaever he said
Sep 12 17:15:49 <Nyle>	Next time I will be more obvious and specify the flow.
Sep 12 17:16:23 <pingo>	I put a breakpoint somewhere inside minified code in devtools. I have an object here, any idea how to find where in global scope (window) this object is stored? I am sure it is somewhere but no idea how to find it
Sep 12 17:16:33 <Nyle>	It just seems obvoius to me for you think that it's probably xhr type thing, php is returning a value, and instead of handling it in php, need to check it in js
Sep 12 17:16:37 <Nyle>	Anyway cheers
Sep 12 17:16:51 <stennowork>	yeah, if you asked: 'i am doing an xhr request to my php backend, and the backend returns JSON, how could i check if that backend returns the PHP value null?'
Sep 12 17:17:07 <prometh>	i didn't read the history, but let's try to hit the reset button
Sep 12 17:17:16 <jaawerth>	I mean, like, let's take it down a notch lol. I get why stennowork read the question that way but this could have been avoided if folks hadn't jumped right into talking at each other instead of with one another
Sep 12 17:17:20 <Nyle>	prometh: I've been at my current dev position for almost 4 months now, every now nd agian they tell me im doing a good job etc. and it elates me sure
Sep 12 17:17:35 <stennowork>	wot
Sep 12 17:17:38 <stennowork>	meh
Sep 12 17:17:43 <prometh>	Nyle: compliments give me no emotion :S but i say "thank you"
Sep 12 17:18:35 <Nyle>	Yesteryday someone said, I like your hoodie. Just for ease and to keep walking I said thankyou, but to my lead engineer, I said, I don't get it., how do I accept a compliment for something which has nothing to do with me
Sep 12 17:18:50 <jaawerth>	hey, you picked the hoodie
Sep 12 17:18:53 <prometh>	Nyle: it's just a hoodie
Sep 12 17:18:54 <Nyle>	What, are they trying to say I have 'good' taste? No. It just means my taste is in accordance with theirs.
Sep 12 17:19:03 <Nyle>	It's neither good nor bad. It's a mere fuzzy match.
Sep 12 17:19:07 <prometh>	Nyle: you both have something in common
Sep 12 17:19:13 <prometh>	sounds like an ice breaker
Sep 12 17:19:20 <Nyle>	However, everything that is common is not to be trusted.
Sep 12 17:19:25 <Nyle>	That's why we factor.
Sep 12 17:19:30 <jaawerth>	this is what we call "small talk"
Sep 12 17:19:31 <Nyle>	WE take out the commonalities.
Sep 12 17:19:33 <prometh>	Nyle: i'm not mathematical
Sep 12 17:19:35 <Nyle>	I'm not a very social person
Sep 12 17:19:42 <Nyle>	I'm seriously messed up in the head
Sep 12 17:19:47 <Nyle>	<- folks were psychiatrists
Sep 12 17:19:49 <prometh>	Nyle: neither am i anymore, but i used to be... different origins
Sep 12 17:20:26 <jaawerth>	I a when I'm "present" but when I'm walking around halls and such I tend to be lost in thought so sometimes I forget to put the social face on
Sep 12 17:20:32 <prometh>	i wish i was better at math, but my head gets cloudy
Sep 12 17:21:02 <prometh>	now i just get stoned when i need to be sociable
Sep 12 17:21:22 <Nyle>	Haha
Sep 12 17:21:26 <Nyle>	That's awesome dude
Sep 12 17:21:35 <Nyle>	Hopefully you live where you can go buy in store
Sep 12 17:21:37 <stennowork>	if you want to find a job, maybe you shouldn't talk about your drug consumption and your psychological problems in a public channel
Sep 12 17:21:40 <prometh>	canada ;)
Sep 12 17:21:50 <prometh>	stennowork: they read irc logs?
Sep 12 17:21:51 <Nyle>	Hey, they hired me right out of prison
Sep 12 17:21:56 <Nyle>	*shrug*
Sep 12 17:22:04 <stennowork>	you never know
Sep 12 17:22:07 <Nyle>	Just asked me what was the felony about?
Sep 12 17:22:13 <prometh>	stennowork:  i need to be myself somewhere
Sep 12 17:22:16 <Nyle>	I was like, bullshit terrorist charge. I'm the wrong kind of brown.
Sep 12 17:22:29 <ashnur>	lol
Sep 12 17:22:31 <Nyle>	So even with some jail time, you still get hired as a programmer
Sep 12 17:22:33 <Nyle>	np.
Sep 12 17:22:39 <prometh>	Nyle: i'm sensing extreme sarcasm
Sep 12 17:22:42 <Nyle>	durgs? the CEO is a former police chief.
Sep 12 17:22:45 <Nyle>	I'm not joking.
Sep 12 17:22:53 <stennowork>	yes, but a 1k people IRC channel about programming is probably not the right place
Sep 12 17:22:56 <Nyle>	He is good people. Also a coder.
Sep 12 17:23:00 <Nyle>	Interesting mix.
Sep 12 17:23:01 <ashnur>	nice company
Sep 12 17:23:07 <prometh>	stennowork: i find acceptance nowhere
Sep 12 17:23:08 <stennowork>	but of course its your choice where you tell what
Sep 12 17:23:13 <Nyle>	Very chill. I get high all day listen to youtube debug code
Sep 12 17:23:14 <ashnur>	cops and criminals working together for the better good:D
Sep 12 17:23:16 <Nyle>	it's brilliant.
Sep 12 17:23:25 <ashnur>	heh. sounds fun
Sep 12 17:23:32 <Nyle>	I'm trying to get him into the cannadis industry
Sep 12 17:23:38 <Nyle>	now what hemp is also federally legal
Sep 12 17:23:39 <prometh>	i can't write code while stoned
Sep 12 17:23:42 <Nyle>	these people need software
Sep 12 17:23:43 <Nyle>	man.
Sep 12 17:23:54 <Nyle>	need to find a need in the cannabis industry and meet it
Sep 12 17:23:56 <Nyle>	there's money
Sep 12 17:23:58 <Nyle>	right there
Sep 12 17:24:05 <prometh>	yes, "cannabis is the new wine" in canada
Sep 12 17:24:06 <ashnur>	i am on the wrong continent for that
Sep 12 17:24:14 <Nyle>	Green gold.
Sep 12 17:24:58 <prometh>	the most fun is stoned and drunk
Sep 12 17:25:19 <prometh>	slightly less fun is sober and writing code ;)
Sep 12 17:25:27 <prometh>	hmm, caffeine
Sep 12 17:25:45 <ashnur>	can't code when drunk
Sep 12 17:26:04 <prometh>	same.. i just want to socialize
Sep 12 17:26:35 <jaawerth>	https://observer.com/2012/04/bottoms-up-the-ballmer-peak-is-real-study-says/
Sep 12 17:26:36 <prometh>	the antisocial part of my brain wants to express that it's funny that we want to socialize when our brains are in "dumb mode" (intoxicated)
Sep 12 17:29:40 <prometh>	jaawerth: so, it's ideal to maintain a constant 0.139% blood/alcohol mix?
Sep 12 17:30:16 <prometh>	so, like, what is that?
Sep 12 17:31:02 <prometh>	oh.. the image caption is .1337%
Sep 12 17:31:07 <jaawerth>	lol
Sep 12 17:31:12 <prometh>	that article just lost credibility :P
Sep 12 17:31:33 <jaawerth>	well that's for the xkcd comic
Sep 12 17:32:07 <prometh>	i'm trying to calculate how much and how often i should consume aclohol
Sep 12 17:32:32 <jaawerth>	credibility-wise it links to a CBS article about the study and credibility is a matter of the study itself (science news is almost always terrible) but I just find it funny that people are studying whether the Ballmer Peak is real at all
Sep 12 17:42:12 <prometh>	jaawerth: performance optimization is valid
Sep 12 17:43:15 <qswz>	gitlab uses jQuery, but not github
Sep 12 17:43:31 <qswz>	GH is cleaner so
Sep 12 17:44:08 <luist>	is my prototype right? I don’t really know to send the event using it: https://paste.ofcode.org/5DTTGLcGTA8uQKyq9etPgw
Sep 12 17:45:58 <luist>	using: new EventTracker('Signed Up Confirmation').send();
Sep 12 17:54:42 <luist>	hey, i’m getting: Uncaught TypeError: this.setContextDefaults is not a function
Sep 12 17:54:43 <luist>	  in this extended prototype, can i get some help? https://paste.ofcode.org/8gjGQFcJhTtZhjyyXxSFsR
Sep 12 17:54:47 <jaawerth>	typically one creates a fix set of events they want to use, with simple lowercase names (no spaces), and inclues a message in the event's data payload (in your case, props)
Sep 12 17:55:33 <jaawerth>	luist: I mean, looking at the prototype, there is no setContextDefaults function defined.
Sep 12 17:55:46 <jaawerth>	there's a setServiceDefaults
Sep 12 17:56:09 <jaawerth>	oh nm it's defining it in the second paste you shared
Sep 12 17:56:21 <luist>	yes
Sep 12 17:57:24 <gehn>	prometh, only if you have profiled/benchmarked and established A) that there *is* a meaningful performance problem and B) precisely *where* that problem is
Sep 12 17:57:53 <prometh>	gehn: the context was humans, alcohol and writing code :)
Sep 12 17:58:12 <gehn>	those don't sound like they go together to me
Sep 12 17:58:18 <gehn>	also not sure how that relates to performance
Sep 12 17:58:22 <prometh>	gehn: science is trying to prove otherwise
Sep 12 17:58:29 <prometh>	gehn: human performance
Sep 12 17:58:33 <gehn>	[citation required]
Sep 12 17:58:40 <prometh>	https://observer.com/2012/04/bottoms-up-the-ballmer-peak-is-real-study-says/
Sep 12 17:58:57 <jaawerth>	luist: I mean, based on that code it should work
Sep 12 17:58:57 <gehn>	studies say a lot of false things
Sep 12 17:59:04 <luist>	jaawerth: any idea what’s wrong with my extended prototype? i managed to use the base EventTracker but not the extended SignupTracker
Sep 12 17:59:07 <jaawerth>	sure there isn't a typo in there or something different from the paste?
Sep 12 17:59:15 <prometh>	gehn: so? are you trying to upset me if i were drunk? :)
Sep 12 17:59:17 <gehn>	popular culture is also *really* bad at correctly and accurately representing scientific studies
Sep 12 17:59:25 <luist>	jaawerth: i’m calling it with: new SignupTracker('Signed Up Confirmation').send();
Sep 12 18:00:22 <prometh>	qswz: gitlab uses jquery? wtfux
Sep 12 18:00:36 <jaawerth>	luist: ohh ok, I see, it's using Object.create wrong
Sep 12 18:00:42 <prometh>	qswz: i guess js devs are switching to ie11
Sep 12 18:01:31 <gehn>	"the Ballmer Peak effect was present for creative problem solving but not for working memory"
Sep 12 18:01:32 <luist>	jaawerth: oh how should it be
Sep 12 18:01:53 <gehn>	working memory is probably the fundamentally more important of the two in terms of amount of usage on average during any given programming session
Sep 12 18:02:39 <gehn>	also, if you want to establish a pattern of habitual usage with a high liklihood of leading to dependence and problems, be my guest
Sep 12 18:02:58 <gehn>	for the rest of us, get good sleep, eat well, exercise, take periodic breaks, etc
Sep 12 18:03:36 <jaawerth>	luist: well, I would recommend you check out the docs at https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/create because you probably want to set stuff like enumerable: true, configurable: true, and maybe writable: true, but at minimum it'd need to be Object.create(EventTracker.prototype, { setContextDefaults: { value: <actual function here> } })
Sep 12 18:03:41 <jaawerth>	)
Sep 12 18:03:46 <gehn>	I would also argue that "brain teasers" are a bad metric here and not representative of actual day to day programming in most of the real world
Sep 12 18:04:11 <luist>	jaawerth: is there any better way to extend a prototype?
Sep 12 18:04:15 <gehn>	Google explicitly states that they don't use brain teasers in interviews because they have the data showing that brain teasers don't work for assessing a person's technical skill
Sep 12 18:04:36 <jaawerth>	I mean the Ballmer peak is actually a joke. It might be true in isolated cases but good luck with your liver if you try using booze as a regular performance enhancer
Sep 12 18:04:42 <gehn>	^
Sep 12 18:04:56 <gehn>	further, while a person may be able to perform a task they have previously learned relatively well while under the influence of alcohol, especially if that person uses alcohol regularly
Sep 12 18:05:09 <gehn>	learning is for sure going to be impaired and there will be a host of other negative outcomes as well
Sep 12 18:05:10 <jaawerth>	luist: I mean, you could use ES6 class syntax depending on whether you need to support legacy browsers
Sep 12 18:05:15 <GreenJello>	I used to use alcohol so that I had an excuse to not work lol
Sep 12 18:05:15 <jaawerth>	(and whether you're using babel)
Sep 12 18:05:29 <luist>	jaawerth: unfortunately i can’t usee ES6 atm
Sep 12 18:05:42 <jaawerth>	then yeah, that's the ES5 way and it works fine
Sep 12 18:08:28 <jaawerth>	luist: except rather than manually use Object.create yourself, you could write a wrapper function for it to make it simpler, or just use https://www.npmjs.com/package/util.inherits
Sep 12 18:08:58 <jaawerth>	luist: oh that's one thing that's often done that yours is missing - if Object.setPrototypeOf is available, it'll just use that instead of Object.create
Sep 12 18:10:30 <pingo>	Is there some tool to search the whole JS object tree for a property with a certain name?
Sep 12 18:11:38 <jaawerth>	probably on npm. maybe search for "recursive object filter" or "recursive object search"
Sep 12 18:14:02 <pingo>	I have found this https://github.com/angus-c/waldojs but I cannot manage to build it into something I load into browser console or maybe it is just broken :/
Sep 12 18:53:36 *	Disconnected ()
**** ENDING LOGGING AT Thu Sep 12 18:53:36 2019

**** BEGIN LOGGING AT Thu Sep 12 18:54:02 2019

Sep 12 18:54:02 *	Now talking on ##javascript
Sep 12 18:54:02 *	Topic for ##javascript is: JavaScript is *not* Java. | Just ask your question. | Say "!mdn abc" for docs on "abc". | Don't paste code in the channel. | Can't talk? Get registered on freenode ( https://git.io/vaTS2 )
Sep 12 18:54:02 *	Topic for ##javascript set by niggler!~niggler@unaffiliated/niggler (Tue Jan 15 07:16:23 2019)
Sep 12 18:54:03 <lf94>	Is the value being garbage collected?
Sep 12 18:54:10 <lf94>	or something
Sep 12 18:54:20 <lf94>	it's like a copy is being made and assigned instead
Sep 12 19:02:48 <hyperisco>	Say I have the first half an image file at URL A, and the second half at URL B, then is there a way I can construct a URL C which is the concatenation of A and B? I should then be able to use this URL in, say, an img src, and the browser would download the complete image.
Sep 12 19:04:16 <sillyslux>	hyperisco, lol...
Sep 12 19:04:37 <sillyslux>	explain...
Sep 12 19:04:42 <hyperisco>	What is unclear?
Sep 12 19:05:09 <sillyslux>	what's an half image file?
Sep 12 19:05:20 <sillyslux>	a broken file?
Sep 12 19:05:34 <lf94>	sounds like it
Sep 12 19:05:36 <hyperisco>	Take a complete image file, say a png file, then split it in half by bytes
Sep 12 19:05:45 <robertmaxrees>	why would you do that?
Sep 12 19:06:05 <hyperisco>	So the answer is "no"
Sep 12 19:06:16 <sillyslux>	!xy @hyperisco
Sep 12 19:06:17 <ecmabot>	hyperisco: The XY problem: You want to do X, but don't know how. You think you can solve it using Y, but don't know how to do that either. You ask about Y, which is a strange thing to want to do. Just ask about X. See also: http://xyproblem.info/
Sep 12 19:06:37 <hyperisco>	You can't understand X. You don't want to understand X. Thank me.
Sep 12 19:06:48 <sillyslux>	lol ok :)
Sep 12 19:07:05 <Stealthy>	you can return a proper header (total byte size) and output the data that you download from both, sequentially after eachother to the output buffer
Sep 12 19:07:13 <Stealthy>	php style; you can for sure do that in java too
Sep 12 19:08:46 <sillyslux>	you can send binary data to your browser and use js to put things together
Sep 12 19:09:12 <hyperisco>	I don't have enough RAM
Sep 12 19:09:28 <Stealthy>	you dont need two halves in memory at the same time
Sep 12 19:09:31 <sillyslux>	where? on your server or in your browser?
Sep 12 19:09:34 <hyperisco>	I can explain one level up but then you'll ask what W is
Sep 12 19:10:13 <hyperisco>	One level up is I have multiple chunks of a file stored in Web Storage, and I need to concatenate these without having them all in memory at once
Sep 12 19:11:14 <Stealthy>	needed 10**52 YB of ram or storage earlier lol
Sep 12 19:12:02 <Stealthy>	10**64*2 bytes of sha256 strings
Sep 12 19:12:24 <sillyslux>	"Web Storage" is on your server?
Sep 12 19:12:31 <hyperisco>	in the browser
Sep 12 19:12:50 <Stealthy>	he's running on apple watch
Sep 12 19:13:01 <Stealthy>	lol
Sep 12 19:13:05 <hyperisco>	Not far from the truth.
Sep 12 19:13:43 <jaawerth>	you could likely concatenate the binary chunks in an ArrayBuffer but you'd need a canvas to render it
Sep 12 19:13:44 <sillyslux>	once you put it all together for displaying it, you'll consume all the memory needed
Sep 12 19:14:30 <hyperisco>	Since you asked for more detail, now it is a video instead of an image.
Sep 12 19:14:32 <jaawerth>	and yeah the problem is that once you've concatenated them, they will all be in memory
Sep 12 19:14:32 <Stealthy>	why render it; just spit out buffer and proper header
Sep 12 19:14:33 <sillyslux>	displaying half an file won't work, i think
Sep 12 19:14:40 <Stealthy>	then you can use that url for your img src
Sep 12 19:14:51 <jaawerth>	unless you mean you just can't have all the pieces AND the sum in memory at once
Sep 12 19:14:53 <Stealthy>	first 1 half, then the other
Sep 12 19:14:55 <jaawerth>	in which case, yes, you can do that.
Sep 12 19:15:28 <hyperisco>	The video player will stream, but it has to be given a URL
Sep 12 19:16:00 <Stealthy>	just header octet stream, total up the bytes and spit out
Sep 12 19:16:25 <jaawerth>	wait if you have the binary data why is it a url?
Sep 12 19:16:31 <jaawerth>	are you trying to use a data url?
Sep 12 19:16:36 <hyperisco>	The data is on disk
Sep 12 19:16:49 <hyperisco>	In Web Storage, or IndexedDB, take your pick.
Sep 12 19:17:13 <jaawerth>	ah ok so base64
Sep 12 19:17:24 <jaawerth>	this begins to make sense ;-)
Sep 12 19:17:48 <Stealthy>	fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9
Sep 12 19:17:48 <Stealthy>	fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8
Sep 12 19:17:48 <Stealthy>	fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7
Sep 12 19:17:58 <Stealthy>	by the type i'll hit 0 we'll get it
Sep 12 19:18:43 <Stealthy>	10 million iterations per --
Sep 12 19:18:46 <Stealthy>	you can do it
Sep 12 19:20:21 <sillyslux>	45rdffffffffffffffffffffffffffffffffff
Sep 12 19:20:36 <sillyslux>	this was my cat
Sep 12 19:20:50 <sillyslux>	you have a cat too?
Sep 12 19:20:54 <hyperisco>	If this all sounds insane, the alternative is to send the bytes over a websocket to node.js so I can merely use its streaming file API.
Sep 12 19:21:25 <Stealthy>	i'm not going to cat my multiterabyte hash file lol
Sep 12 19:21:39 <hyperisco>	But then I may as well just have it download the file as well
Sep 12 19:22:01 <Stealthy>	you can do what you want in about 10 lines of php
Sep 12 19:22:02 <Stealthy>	and be done
Sep 12 19:22:06 <Stealthy>	if you have that option
Sep 12 19:22:10 <jaawerth>	hyperisco: ok, so: you could have each chunk stored, and use an ArrayBuffer to aggregate them using ArrayBuffer.transfer(oldBuffer, oldBuffer.byteLength + newChunk.byteLength)
Sep 12 19:22:47 <jaawerth>	hyperisco: you could then turn the final ArrayBuffer into a blob or the final string or whatever
Sep 12 19:23:24 <jaawerth>	however, there'd be a time where you'd have all the binary data in memory at once AND the output string
Sep 12 19:23:41 <jaawerth>	if you need to avoid that you'd need to, like, iteratively build up/concat the string itself I guess
Sep 12 19:23:45 <hyperisco>	I know, which I don't have the memory for. That's why I can't make a single file in the first place =\
Sep 12 19:23:59 <jaawerth>	but building up the string... now sure how gc is gonna treat that tbh
Sep 12 19:24:10 <Alexendoo>	So this is for video? This sounds like absolutely the wrong place to be looking into
Sep 12 19:24:27 <jaawerth>	so the problem is that even if you assemble it from parts, you can't actually assemble it lol
Sep 12 19:24:46 <hyperisco>	I think I am going to websocket over to node.js
Sep 12 19:24:47 <Stealthy>	why not sequentually
Sep 12 19:24:52 <Alexendoo>	There's things like DASH, HLS already
Sep 12 19:24:55 <sillyslux>	can't you just reduce quality and size?
Sep 12 19:25:06 <jaawerth>	hmmm
Sep 12 19:25:07 <Alexendoo>	They are precisely for chunking up videos into multiple files
Sep 12 19:25:47 <hyperisco>	Which I know makes absolutely no sense as an option but that's a good thing for your sanity.
Sep 12 19:25:47 <jaawerth>	hyperisco: oh I bet you could "stream" them chunk by chunk using the MediaSource api
Sep 12 19:25:53 <hyperisco>	Thanks for letting me pick your brains.
Sep 12 19:26:03 <jaawerth>	you might just have to tinker with how you'd want to handle rate-limiting it
Sep 12 19:26:32 <hyperisco>	jaawerth, looking now
Sep 12 19:29:12 <jaawerth>	hyperisco: googling, there are a couple articles out there that seem to apply - like https://developers.google.com/web/updates/2011/11/Stream-video-using-the-MediaSource-API and https://medium.com/@eyevinntechnology/how-to-build-your-own-streaming-video-html-player-6ee85d4d078a
Sep 12 19:30:20 <jaawerth>	you'd just need to work out the logic about how it buffers/seeks by fetching and transferring the rirght set of buffers
Sep 12 19:30:26 <jaawerth>	"buffer" in the video sense, that is
Sep 12 19:30:43 <jaawerth>	you could even set your max "video buffer" size in terms of chunks
Sep 12 19:31:16 <jaawerth>	mgiht even be able to plug the new ReadableStream api into it if you wanna get crazy
Sep 12 19:31:52 <hyperisco>	You might have just saved me in the last few seconds jaawerth. I just need to see that I can match the producer speed to the consumer speed so that I do not unnecessarily exhaust memory
Sep 12 19:32:02 <jaawerth>	nice
Sep 12 19:32:04 <hyperisco>	"get crazy"
Sep 12 19:32:06 <jaawerth>	haha
Sep 12 19:32:10 <hyperisco>	Have you been reading the questions I've been asking?
Sep 12 19:32:11 <qswz>	https://repl.it/@caub/fetch-upload-stream
Sep 12 19:32:16 <qswz>	fetch streams
Sep 12 19:32:18 <jaawerth>	some people don't like using the new DOM apis but I'd probably do it
Sep 12 19:32:57 <jaawerth>	I dunno what polyfills there are out there for it
Sep 12 19:33:00 <jaawerth>	!ciu ReadableStream
Sep 12 19:33:01 <ecmabot>	jaawerth: Can I Use Streams? [FF 65+ (partial) | Chrome 52+ (partial) | Opera 39+ (partial) | Safari 10+ (partial) | iOS 10.3+ (partial) | Android 76+ (partial)] (Unsupported: IE) Overall: 87.3% <http://caniuse.com/streams>
Sep 12 19:33:09 <qswz>	!polyfill.io @ jaawerth
Sep 12 19:33:10 <ecmabot>	jaawerth: <script nomodule src="https://polyfill.io/v3/polyfill.js?flags=always&features=default,fetch"></script>
Sep 12 19:33:43 <jaawerth>	qswz: why
Sep 12 19:33:44 <qswz>	just drop it in your index.html
Sep 12 19:33:50 <qswz>	no question
Sep 12 19:34:06 <Stealthy>	500mb script instakill
Sep 12 19:34:15 <qswz>	only for old browsers
Sep 12 19:34:17 <jaawerth>	that's a rather naive approach when you're trying to manage memory
Sep 12 19:34:19 <hyperisco>	I've been looking at ReadableStream and I see how it can be used to stream with the Fetch API
Sep 12 19:34:38 <jaawerth>	one would likely need to know about the specific polyfill and any edge cases or memory ramifications
Sep 12 19:34:47 <qswz>	nah
Sep 12 19:34:52 <qswz>	just download everything
Sep 12 19:34:57 <qswz>	for those stupid old browsrrs
Sep 12 19:35:01 <hyperisco>	This only needs to run on a specific Chrome version
Sep 12 19:35:01 <qswz>	the right punishment
Sep 12 19:35:21 <jaawerth>	ah then you're good
Sep 12 19:36:18 <hyperisco>	video.src = URL.createObjectURL(mediaSource);  that's the key there… at the end of the day I need a URL, because that's how the video player finds the video data
Sep 12 19:36:32 <hyperisco>	So, this could work. Let me give it a try.
Sep 12 19:36:38 <qswz>	a blobby url
Sep 12 19:38:30 <hyperisco>	this may solve another majour preloading problem I have…
Sep 12 19:39:03 <qswz>	Don't sha wish
Sep 12 19:39:07 <jaawerth>	you could even use WritableStream to wrap the mediaSource api
Sep 12 19:39:23 <jaawerth>	then you'd have backpressure to control the in-memory buffering
Sep 12 19:40:25 <hyperisco>	if this solves my preloading problem too then you're a hero jaawerth
Sep 12 19:40:30 <jaawerth>	hehe
Sep 12 19:40:52 <qswz>	there are preload attributes for media rscrs
Sep 12 19:41:01 <qswz>	resources
Sep 12 19:44:53 <lf94>	Man, this is _evil_
Sep 12 19:45:05 <lf94>	I have some angular code, that boils down to this basically:
Sep 12 19:45:08 <lf94>	`{ let e = false; setTimeout(() => console.log(e), 20); } setTimeout(() => e = true, 10);`
Sep 12 19:45:26 <lf94>	e being assigned is an entirely new e.
Sep 12 19:45:42 <lf94>	I wish this would throw an error or a warning or _something_
Sep 12 19:46:24 <prussian>	shouldn't it in strict mode?
Sep 12 19:46:57 <lf94>	doesn't in nodejs at least
Sep 12 19:47:11 <lf94>	'use strict'; { let e = false; setTimeout(() => console.log(e), 20); } setTimeout(() => e =true, 10)
Sep 12 19:47:27 <qswz>	why should it throw?
Sep 12 19:47:35 <lf94>	I'm not saying it should
Sep 12 19:47:40 <qswz>	it shouldn't
Sep 12 19:47:45 <lf94>	I agree
Sep 12 19:47:45 <prussian>	n> { let e = false; setTimeout(() => console.log(e), 20); }; setTimeout(() => { 'use strict'; return e = true; }, 10);
Sep 12 19:47:46 <jellobot>	(fail) Timeout { _idleTimeout: 10, _idlePrev: [TimersList], _idleNext: [TimersList], _idleStart: 44, _onTimeout: [Function], _timerArgs: undefined, _repeat: null, _destroyed: false, [Symbol(refed)]: true, [Symbol(asyncId)]: 13, [Symbol(triggerId)]: 0 }evalmachine.<anonymous>:1  { let e = false; setTimeout(() => console.log(e), 20); }; setTimeout(() => { 'use strict'; return e = true; },  ...
Sep 12 19:47:56 <prussian>	shoul;d throw for Reference error... wut
Sep 12 19:48:02 <lf94>	no
Sep 12 19:48:02 <qswz>	oh it should
Sep 12 19:48:10 <lf94>	it's hoisting or something
Sep 12 19:48:10 <qswz>	I missed the block scope
Sep 12 19:48:18 <prometh>	john carmack is a full-on engineer: https://www.youtube.com/watch?v=Ua-ikbZVofc
Sep 12 19:48:20 <lf94>	it's pretending it's a var or something
Sep 12 19:48:29 <prometh>	he understands software, cars and rockets... goddamn
Sep 12 19:49:08 <prussian>	ya that's normal in not strict mode.
Sep 12 19:49:32 <lf94>	but it will throw in strict? good to know.
Sep 12 19:49:36 <qswz>	n> 'use strict'; {let e=2} setTimeout(() => {e=3; console.log(e, global.e)}, 10)
Sep 12 19:49:37 <jellobot>	(fail) Timeout { _idleTimeout: 10, _idlePrev: [TimersList], _idleNext: [TimersList], _idleStart: 44, _onTimeout: [Function], _timerArgs: undefined, _repeat: null, _destroyed: false, [Symbol(refed)]: true, [Symbol(asyncId)]: 12, [Symbol(triggerId)]: 0 }evalmachine.<anonymous>:1  'use strict'; {let e=2} setTimeout(() => {e=3; console.log(e, global.e)}, 10)                                   ...
Sep 12 19:49:52 <qswz>	n> 'use strict'; {let e=2} setTimeout(() => {e=3; console.log(e, global.e)}, 10); 'shutup'
Sep 12 19:49:53 <jellobot>	(fail) 'shutup'evalmachine.<anonymous>:1  'use strict'; {let e=2} setTimeout(() => {e=3; console.log(e, global.e)}, 10); 'shutup'                                             ^  ReferenceError: e is not defined     at Timeout._onTimeout (evalmachine.<anonymous>:1:45)     at listOnTimeout (internal/timers.js:531:17)     at processTimers (internal/timers.js:475:7)
Sep 12 19:50:00 <qswz>	see it throws
Sep 12 19:50:23 <lf94>	good good :)
Sep 12 19:50:29 <qswz>	n> 'use strict'; {let e=2; setTimeoout(()=>console.log(e), 20)} setTimeout(() => {e=3; console.log(e, global.e)}, 10); 'shutup'
Sep 12 19:50:31 <jellobot>	(fail) ReferenceError: setTimeoout is not defined
Sep 12 19:50:37 <lf94>	I can't make this +100,000 line codebase strict unfortunately
Sep 12 19:50:38 <qswz>	n> 'use strict'; {let e=2; setTimeout(()=>console.log(e), 20)} setTimeout(() => {e=3; console.log(e, global.e)}, 10); 'shutup'
Sep 12 19:50:40 <jellobot>	(fail) 'shutup'evalmachine.<anonymous>:1  'use strict'; {let e=2; setTimeout(()=>console.log(e), 20)} setTimeout(() => {e=3; console.log(e, global.e)}, 10); 'shutup'                                                                                 ^  ReferenceError: e is not defined     at Timeout._onTimeout (evalmachine.<anonymous>:1:81)     at listOnTimeout (internal/timers.js:531:17)    ...
Sep 12 19:50:52 <qswz>	n> {let e=2; setTimeout(()=>console.log(e), 20)} setTimeout(() => {e=3; console.log(e, global.e)}, 10); 'shutup'
Sep 12 19:50:53 <jellobot>	(okay) 'shutup'3 3 2
Sep 12 19:51:21 <qswz>	non strict mode is real shit
Sep 12 19:51:37 <jaawerth>	I don't think the repl will respect a strict mode directive top-level
Sep 12 19:51:43 <jaawerth>	you need to wrap it in an iffe or some such
Sep 12 19:51:47 <jaawerth>	iife*
Sep 12 19:52:16 <qswz>	or node -e "'use strict'; ..."
Sep 12 19:52:27 <jaawerth>	easy to test
Sep 12 19:52:29 <jaawerth>	n> 'use strict'; x =1;
Sep 12 19:52:30 <jellobot>	(fail) ReferenceError: x is not defined
Sep 12 19:52:31 <prometh>	i like listening to john carmack speak
Sep 12 19:52:32 <qswz>	I bet there's CLI flag for strictness
Sep 12 19:52:33 <jaawerth>	ah, it does!
Sep 12 19:53:56 <lf94>	qswz: > non strict mode is real shit < tell me about it.
Sep 12 19:54:23 <lf94>	we should hard-accept strict mode by 2030 or sooner
Sep 12 19:54:25 <qswz>	see how it allowed {let e=2} ..
Sep 12 19:54:31 <lf94>	yep
Sep 12 19:54:36 <qswz>	n> {let e=5} global.e
Sep 12 19:54:38 <jellobot>	(okay) undefined
Sep 12 19:54:41 <lf94>	lol
Sep 12 19:54:44 <qswz>	hmm
Sep 12 19:54:52 <lf94>	it goes out of scope
Sep 12 19:54:54 <lf94>	just silently
Sep 12 19:54:58 <lf94>	it's frigged up
Sep 12 19:55:07 <qswz>	n> {let e=5} e
Sep 12 19:55:09 <jellobot>	(fail) ReferenceError: e is not defined
Sep 12 19:55:13 <lf94>	n> { let e=5; } e = 1; console.log(e);
Sep 12 19:55:14 <jellobot>	(okay) 1 undefined
Sep 12 19:55:23 <lf94>	so broken
Sep 12 19:55:31 <qswz>	n> {let e=5} setTimeout(()=>console.log(e)); ''
Sep 12 19:55:32 <jellobot>	(fail) ''evalmachine.<anonymous>:1  {let e=5} setTimeout(()=>console.log(e)); ''                                       ^  ReferenceError: e is not defined     at Timeout._onTimeout (evalmachine.<anonymous>:1:39)     at listOnTimeout (internal/timers.js:531:17)     at processTimers (internal/timers.js:475:7)
Sep 12 19:55:42 <lf94>	e will be undefined
Sep 12 19:55:52 <qswz>	yea I see
Sep 12 19:55:58 <lf94>	it's just a new space in memory with the same name
Sep 12 19:55:58 <jaawerth>	non-strict IS very broken yeah lol
Sep 12 19:56:07 <qswz>	n> {let e=5} setTimeout(()=>{e=1; console.log(e)}); ''
Sep 12 19:56:08 <jellobot>	(okay) ''1
Sep 12 19:56:14 <qswz>	n>'use strict'; {let e=5} setTimeout(()=>{e=1; console.log(e)}); ''
Sep 12 19:56:15 <jellobot>	(fail) ''evalmachine.<anonymous>:1 'use strict'; {let e=5} setTimeout(()=>{e=1; console.log(e)}); ''                                          ^  ReferenceError: e is not defined     at Timeout._onTimeout (evalmachine.<anonymous>:1:42)     at listOnTimeout (internal/timers.js:531:17)     at processTimers (internal/timers.js:475:7)
Sep 12 19:58:59 <jaawerth>	why do you keep doing that lol
Sep 12 20:04:35 <poboy>	https://getyarn.io/yarn-clip/9e444966-0e3a-44bf-94f6-1cebdd44b574
Sep 12 20:05:03 <qswz>	jaawerth: just isolating the particular thing
Sep 12 20:05:33 <qswz>	non-strict mode allow reassigning let
Sep 12 20:05:41 <qswz>	apparently
Sep 12 20:06:08 <jaawerth>	the setTimeout isn't really relevant there anyway - {let e = 5} e = 1; console.log(e) would also work
Sep 12 20:06:14 <jaawerth>	(in strict/non-strict)
Sep 12 20:06:31 <jaawerth>	with a cleaner stacktrace output probably :D
Sep 12 20:06:45 <qswz>	try
Sep 12 20:06:58 <qswz>	not sure, because e=1 is global.e=1
Sep 12 20:07:09 <qswz>	but inside a function closure it's not I think
Sep 12 20:07:14 <jaawerth>	it is if it's undeclared
Sep 12 20:07:30 <jaawerth>	undeclared assignment in non-strict is implicit global no matter which scope you're in
Sep 12 20:08:04 <qswz>	n> (() => { e=1; console.log(e, global.e) })()
Sep 12 20:08:05 <jellobot>	(okay) 1 1 undefined
Sep 12 20:08:09 <qswz>	ok TIL
Sep 12 20:08:23 <jaawerth>	haha I mean not using strict is madness regardless
Sep 12 20:08:56 <ljharb>	also not using a linter
Sep 12 20:09:18 <jaawerth>	n> with (new Proxy({}, {has: ()=>true, get:(t,k) => console.log('bork! '.repeat(k.length)) || ':D '})) { a + bb + ccc + dddd }
Sep 12 20:09:19 <jellobot>	(okay) bork!   bork! bork!   bork! bork! bork!   bork! bork! bork! bork!  ':D :D :D :D '
Sep 12 20:10:24 <qswz>	nice
Sep 12 20:10:37 <qswz>	intecepting global getters
Sep 12 20:18:11 <devsnek>	you can use proxies to create inescapable sandboxes that way
Sep 12 20:23:45 <jaawerth>	devsnek: wouldn't you have to account for every possible host exception lest they escape through e.constructor.constructor?
Sep 12 20:24:16 <devsnek>	jaawerth: you give them Error
Sep 12 20:24:23 <devsnek>	its different from a node context
Sep 12 20:24:38 <jaawerth>	ahh I wasn't sure if that exception was using global error or its own copy
Sep 12 20:24:39 <devsnek>	you start with nothing
Sep 12 20:29:43 <jaawerth>	I suppose I can't think offhand how to cause a host error with nothing, yeah
Sep 12 20:30:43 <devsnek>	null.a
Sep 12 20:31:10 <devsnek>	the realms shim replaces literals with special calls
Sep 12 20:32:09 <jaawerth>	yeah I just thought of null haha
Sep 12 20:32:21 <jaawerth>	but yeah so you still need to transform the src code
Sep 12 20:34:24 <qswz>	no need
Sep 12 20:35:48 <qswz>	n> with (new Proxy({}, {get: (t, k) => ({})})) { console.log(null.a) }
Sep 12 20:35:49 <jellobot>	(fail) TypeError: Cannot read property 'a' of null
Sep 12 20:35:55 <qswz>	hmm
Sep 12 20:36:18 <qswz>	n> with (new Proxy({}, {get: (t, k) => ({})})) { console.log(o.a) }
Sep 12 20:36:20 <jellobot>	(fail) ReferenceError: o is not defined
Sep 12 20:36:46 <qswz>	I need to return a Proxy instead of {}
Sep 12 20:36:54 <devsnek>	yep
Sep 12 20:41:15 <jaawerth>	you can't stop null.a that way
Sep 13 07:15:49 *	Disconnected ()
**** ENDING LOGGING AT Fri Sep 13 07:15:49 2019

**** BEGIN LOGGING AT Fri Sep 13 07:16:13 2019

Sep 13 07:16:13 *	Now talking on ##javascript
Sep 13 07:16:13 *	Topic for ##javascript is: JavaScript is *not* Java. | Just ask your question. | Say "!mdn abc" for docs on "abc". | Don't paste code in the channel. | Can't talk? Get registered on freenode ( https://git.io/vaTS2 )
Sep 13 07:16:13 *	Topic for ##javascript set by niggler!~niggler@unaffiliated/niggler (Tue Jan 15 07:16:23 2019)
Sep 13 07:16:30 <niggler>	yeah more time to talk about it
Sep 13 07:16:34 <boodllebat>	Hi, I have a function which is supposed to return true when the internal call to promise returns true , quite confused how do i achieve this https://paste.ubuntu.com/p/WcF3YRjv7g/
Sep 13 07:16:54 <niggler>	its funny to watch some people defend insurance companies
Sep 13 07:17:14 <jaawerth>	lol yeah a lot of gymnastics
Sep 13 07:17:22 <theskillwithin>	boodllebat https://codesandbox.io/s/react-form-example-gm9o6
Sep 13 07:17:24 <niggler>	as a general thing, we like the doctor and the ability to get medicine, but some people genuinely think we like insurance
Sep 13 07:17:25 <MJCDawy>	xup
Sep 13 07:17:38 <jaawerth>	boodllebat: huh?
Sep 13 07:18:31 <niggler>	boodllebat: it will resolve to true if value is not null
Sep 13 07:18:36 <niggler>	but you're using !==
Sep 13 07:18:37 <jaawerth>	once you go promise you can never get out of async-land and back to returning raw values
Sep 13 07:18:40 <niggler>	n> undefined !== null
Sep 13 07:18:41 <jellobot>	(okay) true
Sep 13 07:18:45 <systemfault>	boodllebat: Once you go async, there's no turning back, it infects everything it touches so you cannot take the value out of the promise.
Sep 13 07:18:47 <theskillwithin>	my dad was a dentist and he enjoyed paying off his college loans
Sep 13 07:19:01 <boodllebat>	systemfault: ah i see
Sep 13 07:19:05 <niggler>	also that whitespace is horrifying
Sep 13 07:19:08 <jaawerth>	you can get it out of the promise and into some other kind of time-independent wrapper
Sep 13 07:19:13 <jaawerth>	but that's still async-land
Sep 13 07:19:39 <boodllebat>	niggler: lol please ignore internals
Sep 13 07:19:41 <jaawerth>	async-land is like Hotel California
Sep 13 07:19:53 <theskillwithin>	welcome to the hotel California
Sep 13 07:19:58 <niggler>	thats why i wish there were more sync utils
Sep 13 07:20:04 <niggler>	stupid warfare against sync
Sep 13 07:20:12 <theskillwithin>	bolderdash
Sep 13 07:20:15 <jaawerth>	You can check out any time you like but you can never leave
Sep 13 07:20:28 <niggler>	blob operations are async
Sep 13 07:20:40 <niggler>	FileReaderSync only available within worker threads
Sep 13 07:21:01 <theskillwithin>	ignore him hes from the past
Sep 13 07:21:08 <theskillwithin>	( <3 )
Sep 13 07:21:26 <niggler>	dont make the present bring out the future boot to kick you to the past
Sep 13 07:21:43 <theskillwithin>	well u can use fetch atleast now huh?
Sep 13 07:21:52 <niggler>	XHR supports sync, fetch doesnt
Sep 13 07:21:55 <niggler>	stupid fetch
Sep 13 07:22:05 <theskillwithin>	if u use that it will give u a warning
Sep 13 07:22:15 <theskillwithin>	silly goose
Sep 13 07:22:36 <niggler>	warning schwarning
Sep 13 07:22:40 <theskillwithin>	lol
Sep 13 07:22:44 <theskillwithin>	ignore browser warnings ok
Sep 13 07:22:52 <systemfault>	He's gonna take you back to the past... to code in JavaScript that sucks ass. He'd rather have a buffalo take a diarrhea dump in his ears... He's the Angry ECMASport Niggler!
Sep 13 07:22:53 <theskillwithin>	but don't claim ur not outdated at the same time
Sep 13 07:22:58 <MJCDawy>	schwarning
Sep 13 07:23:04 <MJCDawy>	of the jewish shwarners
Sep 13 07:23:08 <theskillwithin>	we haven't had that spirit here since 1999
Sep 13 07:23:12 <jaawerth>	counterpoitn: I've been tinkering with an nrepl socket server and it's really difficult to balance the socket's cpu usage for the read/write + wait loop without async behavior (it also doesn't have a thread pool unless I install a threading module)
Sep 13 07:23:14 <niggler>	that last part didnt rhyme
Sep 13 07:23:22 <MJCDawy>	systemfault, some people like to suck ass
Sep 13 07:23:27 <MJCDawy>	why you hatin
Sep 13 07:23:39 <jaawerth>	I'm gonna refactor it so one can leave it as the basic socket or plug in libuv (or into the event loop of a host operation)
Sep 13 07:23:40 <theskillwithin>	ECMASports 2019
Sep 13 07:23:42 <niggler>	im a huge fan of code that works
Sep 13 07:23:42 <systemfault>	MJCDawy: Ask the Angry Video Game Nerd.
Sep 13 07:23:50 <jaawerth>	but I do find myself wishing it was all async out of the box
Sep 13 07:23:58 <MJCDawy>	jaawerth, what's this?
Sep 13 07:24:12 <jaawerth>	a lua nrepl thing (for lua and a language that compiles to lua)
Sep 13 07:24:17 <theskillwithin>	OMG u were MJCD the whole time!!
Sep 13 07:24:17 <MJCD>	oh haha
Sep 13 07:24:23 <MJCD>	lua repl
Sep 13 07:24:25 <MJCD>	but why
Sep 13 07:24:29 <jaawerth>	it's a WIP, and it's using socket.lua, which is sync
Sep 13 07:24:39 <theskillwithin>	you can checkout any branch you like
Sep 13 07:24:51 <MJCD>	but
Sep 13 07:24:52 <MJCD>	why
Sep 13 07:25:01 <jaawerth>	I just haven't made time to decouple the communication from the mechanics so I can make an abstraction you can plug other socket implemenations into
Sep 13 07:25:04 <jaawerth>	(like async ones)
Sep 13 07:25:45 <MJCD>	I mean
Sep 13 07:25:55 <MJCD>	you use an sync thing in a sync thing
Sep 13 07:26:01 <MJCD>	then decry that it's not all Rust
Sep 13 07:26:03 <jaawerth>	though I found a method call today that should help make the wait loop cheaper
Sep 13 07:26:05 <MJCD>	or something?
Sep 13 07:26:16 <MJCD>	seems odd heh
Sep 13 07:26:26 <jaawerth>	oh I'm just saying in response to niggler's comment about wanting more sync things
Sep 13 07:26:38 <jaawerth>	sometimes when I'm in lots-of-sync-libarires land I miss the async uniformity
Sep 13 07:26:50 <ashnur>	wut
Sep 13 07:26:57 <ashnur>	what uniformity of async
Sep 13 07:26:57 <MJCD>	wanting more sync things
Sep 13 07:27:06 <MJCD>	that's just niggle-nonsense
Sep 13 07:27:15 <jaawerth>	eh it's a valid viewpoint
Sep 13 07:27:19 <jaawerth>	I just don't necessarily share it
Sep 13 07:27:23 <jaawerth>	not all the time, anyway
Sep 13 07:27:33 <MJCD>	nigglesense I say!
Sep 13 07:27:35 <jaawerth>	async/await is close enough for me when I need to code imperatively
Sep 13 07:27:50 <MJCD>	not really the same thing doe
Sep 13 07:28:01 <MJCD>	just helps to grok whats going on heh
Sep 13 07:28:07 <jaawerth>	ashnur: promises and async generators cover it and are slowlllly taking over
Sep 13 07:28:19 <jaawerth>	(promises more than async generators, but async generators will get there)
Sep 13 07:28:25 <jaawerth>	promises also including async/await, since that's all promises
Sep 13 07:28:28 <MJCD>	ehh largely because you can just await the async thing
Sep 13 07:28:30 <MJCD>	voila
Sep 13 07:28:33 <MJCD>	sync version
Sep 13 07:28:37 <MJCD>	:D
Sep 13 07:28:41 <jaawerth>	it's still async when you await it :P
Sep 13 07:28:46 <ashnur>	jaawerth: 1. async/generators are two things no? and they don't work the same?
Sep 13 07:29:04 <ashnur>	2. you need polyfill that's larger than an operating system to run it in ie11
Sep 13 07:29:05 <MJCD>	only because async is used in multiple confusing contexts
Sep 13 07:29:08 <jaawerth>	ashnur: an async generator is to promise what an array is to a value
Sep 13 07:29:08 <MJCD>	semantics
Sep 13 07:29:14 <MJCD>	the best kind of man tics
Sep 13 07:29:15 <ashnur>	3. callbacks are still another thing
Sep 13 07:29:42 <ashnur>	jaawerth: i know about async/await and I know about generators. i am not familiar with "async generators"
Sep 13 07:29:58 <MJCD>	they're like regular generators
Sep 13 07:29:58 <jaawerth>	the polyfill isn't small but it's not THAT bad, all you need is the generator runtime
Sep 13 07:30:01 <MJCD>	but with the word async
Sep 13 07:30:04 <MJCD>	yw
Sep 13 07:30:13 <MJCD>	(not even joking doe)
Sep 13 07:30:30 <jaawerth>	an async generator is just a generator that returns an async iterator, and an async iterator is just an iterator where iter.next() is always a promise, and instead of checking .done you just wait for the promise to resolve before invoking .next() again
Sep 13 07:31:33 <ashnur>	how is that a good thing though
Sep 13 07:31:41 <ashnur>	i would like some stuff implemented using this
Sep 13 07:31:51 <ashnur>	i mean i would like to see some stuff
Sep 13 07:32:04 <MJCD>	SOMETIMES I THINK YOU LIKE YOUR FRIENDS AND FAMILY MORE THAN ME
Sep 13 07:32:07 <MJCD>	:'(
Sep 13 07:32:11 <MJCD>	er wrong channel lol
Sep 13 07:32:43 <evulish>	sure it was
Sep 13 07:32:45 <ashnur>	jaawerth: so you use these everywhere? that's what I don't understand. I have constant struggle with async stuff, when I have to cancel, clear up, order, drop answers
Sep 13 07:32:53 <MJCD>	jaawerth, that seems like intentionally muddy wording
Sep 13 07:32:54 <MJCD>	like
Sep 13 07:33:01 <ashnur>	it just doesn't seem to me that this highly complex thing could help me in this aspect
Sep 13 07:33:05 <niggler>	MJCD: are you asking for the boot?
Sep 13 07:33:10 <jaawerth>	n> const { Readable } = require('stream'), src = Readable.from(['one', 'two', 'three']); (async () => { for await (const v of src) console.log(v); })(); 'for..await is using Readable.prototype[Symbol.asyncIterator]() under the hood' @ashnur
Sep 13 07:33:11 <jellobot>	ashnur, 'for..await is using Readable.prototype[Symbol.asyncIterator]() under the hood'one two three
Sep 13 07:33:21 <MJCD>	niggler, sure
Sep 13 07:33:24 <MJCD>	why not
Sep 13 07:34:30 <jaawerth>	thanks to async iterators//generators you can loop streams from an async function now :D
Sep 13 07:34:31 <boodllebat>	Hi, I am trying to use react's asyncstorage like this `const value = AsyncStorage.getItem('user')` it should return null as i've never set it but it returns gibberish content like `{"_40":0,"_65":0,"_55":null,"_72":null}`
Sep 13 07:35:16 <MJCD>	lol odd
Sep 13 07:35:33 <ashnur>	jaawerth: but i don't use loops anywhere unless i am writing something that has to be bit-optimized
Sep 13 07:36:17 <jaawerth>	I mean you can also just read values off of it, but compare a loop to the complexity of what you'd normally have to do to get the values out of a node stream so you can do something else with them
Sep 13 07:36:42 <ashnur>	jaawerth: and again, it's not about my preferences, i just don't get it how these loopy promise generators are going to help you when you need to cancel some of them, do some stuff following up only part of them.. you know: anything that's not a toy example?
Sep 13 07:36:45 <jaawerth>	the async generators act as a native pull-based async sequene, so you can use them as glue between other kinds of async sequence, like streams
Sep 13 07:36:54 <jaawerth>	which gives you a sort of unified theory of reactivity
Sep 13 07:37:08 <jaawerth>	ashnur: I'm trying to explain the uniformity
Sep 13 07:37:16 <MJCD>	ashnur, don't see why you couldn't cancel them.. ?
Sep 13 07:37:30 <ashnur>	jaawerth: well, i don't know what I would have to do to get values out of a node stream? i htink last time 6 years ago i did something with that and it was just a matter of splitting, chunking etc. not very complicated
Sep 13 07:37:44 <jaawerth>	a lot more than a single loop
Sep 13 07:37:45 <ashnur>	jaawerth: i am trying to understand
Sep 13 07:37:50 <jaawerth>	point being it's a protocol for interop
Sep 13 07:37:57 <ashnur>	but it's only a part
Sep 13 07:38:12 <jaawerth>	which, when used, allows for symmetrical and apis that can more easily translate from one form to the other
Sep 13 07:38:15 <ashnur>	that's my whole point from the beginning, seems to me you have a protocol for the happy path and you write only happy path code?
Sep 13 07:38:31 <ashnur>	if things break, you just restart the superprocessor and reset everything?
Sep 13 07:38:45 <jaawerth>	nah you can define your own whatever and annotate it with a Symbol.asyncIterator, so even if it's something else, people can get something out of it that works with native protocols
Sep 13 07:39:01 <jaawerth>	same benefit Symbol.iterator gives, only asynchronous
Sep 13 07:39:19 <ashnur>	yeah, i haven't yet needed Symbol.iterator either
Sep 13 07:39:34 <jaawerth>	you've never used Array.from or Promise.all? or the spread operator?
Sep 13 07:39:40 <ashnur>	in any case jaawerth, you are not answering one question :)
Sep 13 07:40:10 <jaawerth>	what question?
Sep 13 07:40:42 <jaawerth>	the cancellation thing?
Sep 13 07:40:46 <ashnur>	yes
Sep 13 07:40:52 <jaawerth>	they aren't meant to be actions, they're how you react to the results of the actions
Sep 13 07:41:09 <ashnur>	isn't a cancellation a reaction to the result of actions?
Sep 13 07:41:10 <jaawerth>	you can create a construct that can GIVE you a promise or an async generator or whatever, and that thing miht be cancellable
Sep 13 07:41:13 <jaawerth>	but a promise is for reacting
Sep 13 07:41:20 <jaawerth>	also, generators are cancellable
Sep 13 07:41:22 <jaawerth>	async ones too
Sep 13 07:41:25 <MJCD>	I did always like whoever named them promises
Sep 13 07:41:29 <jaawerth>	so yeah that one you can actually *drive* things
Sep 13 07:41:32 <jaawerth>	because it's pull-based
Sep 13 07:41:52 <ashnur>	well, anything async needs to be pull-based, otherwise you are just fighting against physics the whole time
Sep 13 07:41:53 <jaawerth>	haha yeah, you can keep a promise or you can break a promise but you don't get backsies
Sep 13 07:42:07 <jaawerth>	promises are pushed-based though
Sep 13 07:42:09 <jaawerth>	as are observables
Sep 13 07:42:16 <jaawerth>	streams are... both
Sep 13 07:42:51 <ashnur>	yeah, some stuff is both. promises is a push interface for a pulling action because js is eager and can't really understand pulling just by itself
Sep 13 07:43:05 <jaawerth>	nah
Sep 13 07:43:14 <jaawerth>	a promise is just a placeholder for a future value
Sep 13 07:43:19 <MJCD>	^
Sep 13 07:43:23 <jaawerth>	people tried using it for more than that because it was the first native construct they got
Sep 13 07:43:44 <MJCD>	first native construct for async'ing you mean?
Sep 13 07:43:57 <theskillwithin>	is it true most things are just monads behind the surface
Sep 13 07:44:07 <jaawerth>	ehhh
Sep 13 07:44:10 <jaawerth>	not sure I agree with that
Sep 13 07:44:14 <niggler>	as the great crock once said, it's all monads and gonads
Sep 13 07:44:22 <jaawerth>	what about nomads
Sep 13 07:44:30 <niggler>	they were not covered in the talk
Sep 13 07:44:31 <jaawerth>	and bro mads
Sep 13 07:44:49 <niggler>	https://www.youtube.com/watch?v=b0EF0VTs9Dc
Sep 13 07:45:04 <jaawerth>	49 minutes hahaha yeah I'll get right on this
Sep 13 07:45:09 <dodobrain>	lawl
Sep 13 07:45:12 <jaawerth>	but lol I did think you were kidding
Sep 13 07:45:16 <dodobrain>	i remember that when that happened
Sep 13 07:45:16 <niggler>	yall thought it was a joke
Sep 13 07:45:22 <ashnur>	jaawerth: i believe you anything
Sep 13 07:45:31 <ashnur>	jaawerth:but promise is a placeholder for a future value
Sep 13 07:45:32 <dodobrain>	jaawerth, yeah its not a joke..
Sep 13 07:45:42 <ashnur>	is the biggest bullshit promise marketing people are pushing
Sep 13 07:45:53 <jaawerth>	ashnur: it's... literally what it is
Sep 13 07:45:59 <ashnur>	jaawerth: it literally can't be that
Sep 13 07:46:05 <niggler>	its a thing
Sep 13 07:46:21 <jaawerth>	yeah so I don't have the energy for this, lol
Sep 13 07:46:24 <ashnur>	jaawerth: literally it's an object, right? with live references to other objects and functions. not some lyrical melodical fairy tale
Sep 13 07:46:25 <jaawerth>	night all
Sep 13 07:46:38 <niggler>	dream of monads and gonads
Sep 13 07:46:42 <ashnur>	jaawerth: you can't even get out the value, you have to wrap your handlers into promise to get at the value
Sep 13 07:46:45 <jaawerth>	it's.. a placeholder you can apss around and invoke things on to react to future values?
Sep 13 07:46:48 <jaawerth>	or await it
Sep 13 07:46:52 <ashnur>	jaawerth: so is my handler now a promise for handling the value?
Sep 13 07:46:56 <jaawerth>	in which case you're ACTUALLY using it as a placeholder
Sep 13 07:47:00 <ashnur>	gnite :)
Sep 13 07:47:14 <jaawerth>	lol yeah I need to go to bed rather than get drawn back in lol
Sep 13 07:47:17 <ljharb>	sinclair: nope, most people aren't.
Sep 13 07:47:36 <ashnur>	i don't want to argue with you because mostly we learn from each other. i just don't like this post-modernist talk to give happy fantasy land names to things to make them approachable and hide their faults
Sep 13 07:48:14 <sinclair>	ljharb, lemme check
Sep 13 07:48:17 <ashnur>	promise is not a placeholder, if it would be a placeholder i could arbitrarily change it. but it's exactly what you can't do, once you go promises, you will have them everywhere
Sep 13 07:48:21 <sinclair>	ljharb, nope
Sep 13 07:48:42 <dodobrain>	man.. sinclair and ljharb have some really long latency in their convos
Sep 13 07:48:52 <dodobrain>	i had to grep my scrollback to see what lj was referring to :)
Sep 13 07:48:58 <ashnur>	yeah
Sep 13 07:49:01 <ashnur>	me2
Sep 13 07:49:04 <jaawerth>	ashnur: counterpoint: you're wrong, and resorting to dimunitive talk like "fantasy-land" rather than supporting your argument ¯\_(ツ)_/¯
Sep 13 07:49:12 *	jaawerth runs to bed
Sep 13 07:49:23 <dodobrain>	jaawerth, you are going to lala-land!
Sep 13 07:49:29 <ashnur>	:)))
Sep 13 07:50:46 <dodobrain>	i remember some people saying they simply traded in the old callback hell for the new promise hell
Sep 13 07:50:49 <ljharb>	sinclair: nope what
Sep 13 07:50:57 <ljharb>	sinclair: you still are, that's for sure, but most people aren't.
Sep 13 07:51:04 <dodobrain>	ljharb, i imagine he is still on the banned list in that channel
Sep 13 07:51:12 <ljharb>	dodobrain: doesn't take much imagination
Sep 13 07:51:17 <dodobrain>	heh
Sep 13 07:51:48 <sinclair>	ljharb, personal attacks
Sep 13 07:52:15 <ljharb>	sinclair: think about your very delayed unsolicited and unhelpful comment that i'm replying to.
Sep 13 07:52:19 <sinclair>	i didn't mention my banned status, mine is due to refusing to apoligize
Sep 13 07:52:26 <dodobrain>	personnel attacks!
Sep 13 07:52:27 <ashnur>	this is a first for me. i don't understand what people talk here and I DON'T EVEN WANT TO KNOW :D
Sep 13 07:52:50 <ljharb>	ashnur: as for promises, of course they're a placeholder. that you can never transparently replace the placeholder with the future value doesn't make them not placeholders.
Sep 13 07:53:08 <sinclair>	dodobrain, the "personal attack" comment is in reference to ljharb perceiving literally everything as a "personal attack"
Sep 13 07:53:14 <ashnur>	ljharb: well, fine, you write your own langue, i will not corrupt mine like that
Sep 13 07:53:21 <ljharb>	ashnur: i'm using english.
Sep 13 07:53:26 <ashnur>	a placehold holds the place, then i can take it out and put the thing it was held for
Sep 13 07:53:27 <ljharb>	ashnur: what language are you speaking?
Sep 13 07:53:27 <dodobrain>	haha
Sep 13 07:53:37 <ljharb>	ashnur: no no. a placeholder just holds the place. the other part isn't part of the definition of "placeholder"
Sep 13 07:53:41 <ashnur>	if i can't take the thing of just by replacing, it's not a placeholder
Sep 13 07:53:44 <theskillwithin>	"in order to understand burritos you must first understand spanish"
Sep 13 07:53:50 <ljharb>	that's got nothing to do with being a placeholder
Sep 13 07:54:04 <ashnur>	it's more like a bookmark, or index, or whatever, a map or a pointer or key
Sep 13 07:54:07 <dodobrain>	theskillwithin, oh my.. i dont understand burritos :( i only eat them
Sep 13 07:54:07 <ljharb>	a place holder literally and etymologically means "holds the place", and nothing more.
Sep 13 07:54:14 <ashnur>	exactly
Sep 13 07:54:23 <ljharb>	ashnur: so, the ability to replace it later is not part of the definition
Sep 13 07:54:33 <ashnur>	if you say so
Sep 13 07:54:34 <ljharb>	ashnur: a bookmark that's glued into a book is still a placeholder.
Sep 13 07:54:44 <ashnur>	i have never until today met a placeholder i couldn't replace
Sep 13 07:54:48 <ashnur>	but you know best
Sep 13 07:54:49 <dodobrain>	the idea is that the placeholder's position/space gets replaced by "something"
Sep 13 07:54:57 <ljharb>	ashnur: ah, now that's a different statement, one i can't refute
Sep 13 07:55:03 <dodobrain>	the definition of the word placeholder doesnt say anything about what this replacement is!
Sep 13 07:55:21 <ashnur>	ljharb: all our language is based on our experiences. i don't know what placeholders you know of.
Sep 13 07:55:24 <ljharb>	nah "placeholder" doesn't even imply anything will be replaced
Sep 13 07:55:33 <ashnur>	of course it does
Sep 13 07:55:43 <ashnur>	otherwise it's not a holder, it's an occupier
Sep 13 07:55:55 <ljharb>	it's holding it for whatever it *replaced*
Sep 13 07:56:01 <ashnur>	what
Sep 13 07:56:01 <ljharb>	holding it forever still makes it a placeholder.
Sep 13 07:56:13 <ljharb>	what makes something a placeholder is that it displaced something else, to mark a spot
Sep 13 07:56:21 <ashnur>	so by existence everything is a placeholder because everything that exists holds some place
Sep 13 07:56:21 <sinclair>	ashnur, hes trying to pwn you on pedantic blah, nothing about this terminology is important
Sep 13 07:56:32 <ljharb>	absolutely it is.
Sep 13 07:56:47 <sinclair>	ashnur, ^ now hes going to have a go at me about it...
Sep 13 07:56:51 *	sinclair leaves
Sep 13 07:56:52 <ashnur>	sinclair: i agree :) but these etymological arguments with ljharb are where i learn modern english it seems :D
Sep 13 07:56:56 <ljharb>	but also the claim that "promises are a placeholder is marketing lies" is the same pedantic blah :-p
Sep 13 07:57:12 <dodobrain>	who is doing this marketing ?
Sep 13 07:57:16 <ljharb>	sinclair: so in fact i'm meeting ashnur where he's at, and i'll thank you to sealion yourself back out of it
Sep 13 07:57:25 <ashnur>	it was just a comment from me dodobrain, don't take it so seriously
Sep 13 07:57:33 <dodobrain>	:)
Sep 13 07:57:47 <ashnur>	dodobrain: long time ago there were some arguments online about promises, A and A+ and such
Sep 13 07:58:31 <dodobrain>	anyway, i understand what you are saying. essentially you're "beef" (if you call it that) here is that if its truly a placeholder you should be able to throw it out and use thingX instead in the place of a promise
Sep 13 07:58:38 <ashnur>	ljharb: in any case, i can't see the placeholder word helping me. One such reason for example, that you never store promises
Sep 13 07:58:41 <sinclair>	ljharb, nah, im going to sealion all over the place
Sep 13 07:58:42 <dodobrain>	bu the problem is that the promise follows a specification.
Sep 13 07:58:51 <dodobrain>	if your thingX does not follow thesame spec, your code is borken
Sep 13 07:59:38 <dodobrain>	or you could simply replace the promise with thingX, but *also* require other changes in your code to make it work as desired
Sep 13 08:00:04 <dodobrain>	the idea that you have some dro pin replacement for the promise is a little bit absurd
Sep 13 08:00:31 <sinclair>	ljharb, also, referring to someone as 'sea lioning' is both a personal attack, and sealion appropriation, and worse when used in a negative context
Sep 13 08:00:45 <sinclair>	things to think about
Sep 13 08:00:50 <dodobrain>	is a sea lion like a snoop lion ?
Sep 13 08:00:52 *	dodobrain hides
Sep 13 08:01:02 <ljharb>	sinclair: no it’s not, it’s an observation, and you’re just making bad faith arguments now,
Sep 13 08:01:10 <ljharb>	!sealion @ sinclair
Sep 13 08:01:10 <ecmabot>	sinclair: Please don't be a sea lion: http://simplikation.com/why-sealioning-is-bad/
Sep 13 08:01:41 <sinclair>	ljharb, stop trolling
Sep 13 08:01:58 <ljharb>	I’m not. I’m describing your behavior. Which is not a personal attack, because I’m not describing your character.
Sep 13 08:02:11 <sinclair>	ljharb, is it tho?
Sep 13 08:02:12 <ljharb>	(your repeated behavior defines your character, and that’s all on you)
Sep 13 08:02:28 <ljharb>	yes, it is tho, but thanks for the incredibly obnoxious patronizing question again
Sep 13 08:02:51 <sinclair>	ljharb, i don't want to engage with dialog with you at all right now, stop highlighting me
Sep 13 08:02:59 <ljharb>	the answer to “is it tho” is always “yes, stop being an asshole”, for future reference.
Sep 13 08:03:17 <dodobrain>	awww.. ashnur i think you should ask a different js (or unrelated) question
Sep 13 08:03:26 <ashnur>	dodobrain: why?
Sep 13 08:03:26 <dodobrain>	we're getting into some strange territory here
Sep 13 08:03:30 <ljharb>	i can highlight whoever i want; if you don’t want to engage, it’s called “self control”
Sep 13 08:03:32 <ashnur>	not on me
Sep 13 08:03:33 <sinclair>	ljharb, yes yes, we all you know you think "is it tho" is some hostile comment,
Sep 13 08:03:37 <dodobrain>	ok, i'll ask
Sep 13 08:03:39 <ljharb>	it is.
Sep 13 08:03:42 <dodobrain>	what is an observable?
Sep 13 08:03:46 <sinclair>	not saying "snowflake" but ...
Sep 13 08:03:49 <dodobrain>	do i need a telescope to see it?
Sep 13 08:03:58 <sinclair>	ljharb, enough now, finish your conversation with ashnur
Sep 13 08:04:04 <ljharb>	sinclair: good, because only bigots say that
Sep 13 08:04:17 <dodobrain>	stop ignoring my question oh good people of ##js!
Sep 13 08:04:21 <sinclair>	ljharb, yeah, only bigots say "is it tho"
Sep 13 08:04:32 <ashnur>	lol, don't drag me into this sinclair . we argue enough with ljharb, no need for help there :D
Sep 13 08:04:34 <ljharb>	dodobrain: it’s the plural future primitive in gtor
Sep 13 08:04:50 <sinclair>	ashnur, you're reading what hes saying, im sure its not just me cringing
Sep 13 08:04:54 <dodobrain>	woah.. whats a gtor? this questions genuine
Sep 13 08:04:55 <sinclair>	anyway, out
Sep 13 08:05:03 <ashnur>	sinclair: i am ignoring your conversation :)
Sep 13 08:05:04 <ljharb>	ashnur: no i mean “snowflake”. “is it tho” is what condescending jerks say.
Sep 13 08:05:16 <sinclair>	ashnur, for the best
Sep 13 08:05:48 <sinclair>	ljharb, is it tho?
Sep 13 08:05:53 <sinclair>	soz, i couldn't resist
Sep 13 08:06:02 <dodobrain>	gah.. stop it you two
Sep 13 08:06:06 *	sinclair really does exit this conversation
Sep 13 08:06:07 <ljharb>	i know, proving my point ¯\_(ツ)_/¯
Sep 13 08:06:49 <theskillwithin>	i have a solution.   your all wrong, except me.
Sep 13 08:06:58 <ljharb>	*you’re
Sep 13 08:07:01 <theskillwithin>	fuck
Sep 13 08:07:07 <theskillwithin>	were all wrong*
Sep 13 08:07:16 <ljharb>	we’re
Sep 13 08:07:19 <theskillwithin>	fuck
Sep 13 08:07:21 <dodobrain>	haha
Sep 13 08:07:21 <ljharb>	rofl
Sep 13 08:07:52 <dodobrain>	actually i have a possibly relevant question on promises
Sep 13 08:08:19 <dodobrain>	given that async/await are here, do you think people will eventually reduce usage of "raw" promises?
Sep 13 08:08:25 <ljharb>	i can’t await for it
Sep 13 08:08:31 <theskillwithin>	haha
Sep 13 08:08:33 <ljharb>	and reduce, yes, but you can’t avoid it entirely
Sep 13 08:08:52 <theskillwithin>	i can promise you that async await is awesome
Sep 13 08:09:12 <dodobrain>	what are the cases where promises need to be used explicitly? i wish i had enough first hand experience to know this answer myself, but unfortunately i dont
Sep 13 08:09:16 <ljharb>	and then, finally, you realize it’s way less awesome than you initially thought
Sep 13 08:09:37 <theskillwithin>	u mean .finallly?
Sep 13 08:09:41 <ljharb>	dodobrain: using `await` makes it far too easy to accidentally serialize things that should be concurrent
Sep 13 08:10:37 <dodobrain>	ljharb, yes.. for me i feel as if async/await is similar to the syntactic sugar (is that what they call it?) that is function(a,b) {} to (a,b) => {}
Sep 13 08:10:40 <theskillwithin>	u can use .then on async await which no one tells  u lol
Sep 13 08:10:58 <theskillwithin>	https://codesandbox.io/s/react-form-example-gm9o6
Sep 13 08:11:53 <ljharb>	dodobrain: except await is pure sugar; arrows actually have features/semantics
Sep 15 22:38:27 *	Disconnected ()
**** ENDING LOGGING AT Sun Sep 15 22:38:27 2019

**** BEGIN LOGGING AT Sun Sep 15 22:38:53 2019

Sep 15 22:38:53 *	Now talking on ##javascript
Sep 15 22:38:53 *	Topic for ##javascript is: JavaScript is *not* Java. | Just ask your question. | Say "!mdn abc" for docs on "abc". | Don't paste code in the channel. | Can't talk? Get registered on freenode ( https://git.io/vaTS2 )
Sep 15 22:38:53 *	Topic for ##javascript set by niggler!~niggler@unaffiliated/niggler (Tue Jan 15 07:16:23 2019)
Sep 15 22:38:53 <rjcobourn>	Hey could anybody take a look at this glitch project? I just started writing it and I can't seem to be able to import my levelManager class. The whole canvas turns white when I uncomment the import code. https://glitch.com/edit/#!/innovative-porter
Sep 15 22:41:26 <GreenJello>	rjcobourn, I'm guessing glitch doesn't support import
Sep 15 22:42:19 <GreenJello>	rjcobourn, or it could be because your <script> doesn't have type="module"
Sep 15 22:56:05 <nwoob>	does anyone know about this ESLint: Cannot find module './default-param-last'.
Sep 15 22:56:15 <nwoob>	I can't find anything by google search
Sep 15 22:56:45 <ljharb>	nwoob: we'd need more of the error
Sep 15 22:58:16 <rjcobourn>	GreenJello it seems crazy that glitch wouldn't support es6
Sep 15 22:58:38 <rjcobourn>	I can't find anything about the error online, I looked for hours and it seems like it does support it afaik
Sep 15 22:58:57 <nwoob>	ljharb: It says only that no more
Sep 15 22:59:04 <ljharb>	nwoob: on the command line?
Sep 15 22:59:08 <nwoob>	in vscode
Sep 15 23:03:24 <ljharb>	nwoob: ok, well, run it on the command line and see what happens. the CLI is the only thing that matters; if it works there but not in your editor, it's a bug with your editor.
Sep 15 23:04:02 <nwoob>	ljharb: what command to run on terminal
Sep 15 23:04:05 <qswz>	npx eslint .
Sep 15 23:24:05 <nwoob>	is there a good eslintrc file that I should follow for reactjs
Sep 15 23:24:10 <nwoob>	ljharb:
Sep 15 23:24:43 <niggler>	rjcobourn: the true JS is ES5
Sep 15 23:24:47 <qswz>	google
Sep 15 23:25:00 <niggler>	nwoob: use a starter and see what they do
Sep 15 23:25:18 <qswz>	I already pointed him to react-scripts
Sep 15 23:27:34 <ljharb>	nwoob: https://npmjs.com/eslint-config-airbnb
Sep 15 23:32:56 <rjcobourn>	imports in es5 are nasty though
Sep 15 23:33:03 <rjcobourn>	:(
Sep 15 23:35:11 <ljharb>	rjcobourn: there's no such thing
Sep 15 23:35:16 <ljharb>	rjcobourn: and CJS is fine
Sep 15 23:35:40 <ljharb>	rjcobourn: but also, don't mind niggler, he just doesn't like all the kids on his lawn, and he thinks skateboarding is a crime
Sep 15 23:36:42 <niggler>	ES6 is like the hangover part 3 or star wars 7
Sep 15 23:37:08 <ljharb>	great?
Sep 15 23:37:37 <niggler>	they shouldve stopped long before then
Sep 15 23:37:39 <rjcobourn>	How can you not like it. Templates and spread syntax feel soooo satisfying to use
Sep 15 23:37:54 <ljharb>	niggler: nah i hope they keep making star wars movies. hangover, sure, there's nothing more there.
Sep 15 23:38:08 <qswz>	ES6 is the best thing that happened to JS since 20 years
Sep 15 23:38:18 <ljharb>	by and large that's true
Sep 15 23:38:21 <niggler>	star wars 2018 was solo the star wars stor
Sep 15 23:38:31 <ljharb>	it's also an almost universally held opinion (that ES6 is great)
Sep 15 23:38:32 <rjcobourn>	So what is the best solution for me? Should I not use glitch or should I use some sort of preprocessor
Sep 15 23:38:39 <ljharb>	niggler: solo was good.
Sep 15 23:38:43 <ljharb>	rjcobourn: you can always use babel.
Sep 15 23:39:13 <qswz>	babel reversed almost match kebab
Sep 15 23:39:27 <niggler>	there is a lebab
Sep 15 23:39:45 <niggler>	https://github.com/lebab/lebab
Sep 15 23:40:36 <qswz>	yea seen that
Sep 16 00:19:18 *	Disconnected ()
**** ENDING LOGGING AT Mon Sep 16 00:19:18 2019

**** BEGIN LOGGING AT Mon Sep 16 00:19:45 2019

Sep 16 00:19:45 *	Now talking on ##javascript
Sep 16 00:19:45 *	Topic for ##javascript is: JavaScript is *not* Java. | Just ask your question. | Say "!mdn abc" for docs on "abc". | Don't paste code in the channel. | Can't talk? Get registered on freenode ( https://git.io/vaTS2 )
Sep 16 00:19:45 *	Topic for ##javascript set by niggler!~niggler@unaffiliated/niggler (Tue Jan 15 07:16:23 2019)
Sep 16 00:30:47 <realies>	universalAssets has a key property, looking to get a list of all key properties with universalAssets.reduce((acc, cur) => acc.push(cur.key), []) but it returns 1
Sep 16 00:34:17 <realies>	perhaps universalAssets.reduce((acc, cur) => { return acc.concat(cur.key); }, []);
Sep 16 00:40:25 <GreenJello>	realies, yes, .push returns the array length
Sep 16 00:41:09 <GreenJello>	realies, is .key an array?
Sep 16 00:42:30 <GreenJello>	realies, this is just universalAssets.map(cur => cur.key), or if cur.key is an array then .flatMap instead of .map
Sep 16 00:50:33 <ljharb>	!iteration methods @ realies
Sep 16 00:50:33 <ecmabot>	realies: ECMAScript's Array contains a number of built-in methods for iteration (e.g., map, reduce, every, some, filter, and forEach). They relieve the need for manual iteration, provide better abstraction than a `for` loop, and make it clear what your iteration is doing. See https://gist.github.com/ljharb/58faf1cfcb4e6808f74aae4ef7944cff
Sep 16 09:05:08 *	Disconnected ()
**** ENDING LOGGING AT Mon Sep 16 09:05:08 2019

**** BEGIN LOGGING AT Mon Sep 16 09:05:35 2019

Sep 16 09:05:35 *	Now talking on ##javascript
Sep 16 09:05:35 *	Topic for ##javascript is: JavaScript is *not* Java. | Just ask your question. | Say "!mdn abc" for docs on "abc". | Don't paste code in the channel. | Can't talk? Get registered on freenode ( https://git.io/vaTS2 )
Sep 16 09:05:35 *	Topic for ##javascript set by niggler!~niggler@unaffiliated/niggler (Tue Jan 15 07:16:23 2019)
Sep 16 09:16:21 <LordVoldePort>	This question might be a bit weird but I ask anyway, is there any tool I can use to generate UI based on my api without coding? web ui I mean. some sort of spa.
Sep 16 09:21:28 <grr12314>	Vooloo await awaits only promises
Sep 16 09:21:35 <grr12314>	settimeout doesnt return a promise
Sep 16 09:37:15 <ashnur>	LordVoldePort: not based on any api, but there are schema based form generators, and lots of CMS's can take some structured data and give you an interface to interact with it :D
Sep 16 09:37:31 <ashnur>	s/CMS's/CMSs
Sep 16 09:37:47 <ashnur>	i have no idea how English deals with pluralizing acronyms lol
Sep 16 09:37:50 <LordVoldePort>	schema based. hmm, you mean stuff like swagger?
Sep 16 09:38:28 <ashnur>	LordVoldePort: or JSON Schema or stuff from other languages where there is a more ... general backend scene :D
Sep 16 09:39:13 <LordVoldePort>	ashnur, most those tools I've seen are meant for developers. you know anything specific meant for end users?
Sep 16 09:39:41 <ashnur>	LordVoldePort: think of it not like "i have an api" because to discover the api another machine would have to brute force try the universe on it to see what it is possible
Sep 16 09:40:29 <ashnur>	LordVoldePort: what end user is who starts with the idea of "i have an api" :D
Sep 16 09:42:47 <grr12314>	there was this thing "ngAdmin" for angular-based admin ui for rest apis, same guys seem to have something "react admin" now, not looked at either in detail tho
Sep 16 09:43:10 <grr12314>	and google also turns up a similar ngx-admin thing now too
Sep 16 09:46:06 <ashnur>	if you have a proper schema, there are lot of tools. and if there is a proper api, then it's relatively easy to make the schema - but I haven't yet seen it done without additional coding work. or at least very heavy configuration using config files (not interface)
Sep 16 09:46:32 <ashnur>	on the other hand, if you have an api, you might have a database also, and the internet is full of free CMSs
Sep 16 09:47:11 <ashnur>	but none of my friends would talk ever about "my api" :D
Sep 16 09:47:39 <hmw_metalab>	Tried promise chaining. Is this "good" or can it be improved? http://84.114.244.155/stubs/.ares3/tests/nested_promise.html
Sep 16 09:47:53 <grr12314>	CMSes use their own db structure, not a good fit on top of something already done imo
Sep 16 09:48:34 <ashnur>	i mean my non-coder friends, sorry. need more caffeine. Everyone I know who could be categorized as 'end user' would either ask a friend for a cheap WP setup or buy some subscribtion online for some pre-made app or tool that does this and you can pay them to do the coding
Sep 16 09:49:13 <ashnur>	hmw_metalab: would you be so kind to use some paste service or codesandbox.io or something ..
Sep 16 09:49:42 <LordVoldePort>	One day we'll all be replaced by some software like that. no code might not be that far in future.
Sep 16 09:50:03 <ashnur>	grr12314: I agree
Sep 16 09:50:14 <hmw_metalab>	https://bpaste.net/show/eSuw
Sep 16 09:50:30 <hmw_metalab>	technical problems or do you dislike the ip?
Sep 16 09:51:36 <LordVoldePort>	grr12314, this react-admin thing looks really nice actually.
Sep 16 09:51:51 <LordVoldePort>	But is there anything more general? something not meant for admin only?
Sep 16 09:52:09 <LordVoldePort>	It might be what I'm looking for but am not sure what to search for exactly.
Sep 16 09:52:26 <ashnur>	hmw_metalab: not the IP per se. You read that blook 'the black swan'?
Sep 16 09:52:36 <hmw_metalab>	no?
Sep 16 09:52:44 <hmw_metalab>	It is some sort of a paste, btwe
Sep 16 09:53:01 <hmw_metalab>	Please elaborate
Sep 16 09:53:29 <hmw_metalab>	And... did I do it correctly? Or is this again some outdated style
Sep 16 09:54:05 <ashnur>	black swan is a book by nassim taleb
Sep 16 09:54:17 <grr12314>	hmw_metalab that code is pretty bad. using new promise constructor and another promise inside it with the resolve/reject callback calls in then/catch handlers... seems absurdly redundand
Sep 16 09:54:19 <ashnur>	very hard to remember numbers, that's my problem only
Sep 16 09:54:21 <hmw_metalab>	I know the concept of some unexpected insights
Sep 16 09:55:06 <hmw_metalab>	grr12314: Hmm... how would I chain asynchronous stuff then?
Sep 16 09:55:18 <stennowork>	with promise chains
Sep 16 09:55:22 <ashnur>	hmw_metalab: well, this is more like expected outsight
Sep 16 09:55:23 <grr12314>	thats the whole thing about promises
Sep 16 09:55:50 <hmw_metalab>	I basically want to do, what you see in function operation()
Sep 16 09:55:56 <ashnur>	grr12314: what if the code is just trying to do both part of a real world example?
Sep 16 09:56:18 <grr12314>	somepromise.then(...) makes you a new promise that waits the first one and then does something else
Sep 16 09:56:22 <ashnur>	i don't see anything wrong with it, apart from it's entirely lack of purpose
Sep 16 09:56:23 <hmw_metalab>	(I am about to refactor some bad code of mine, but want to make sure, the effort is worth it)
Sep 16 09:56:32 <ashnur>	it's not bad, it's pointless.
Sep 16 09:56:44 <ashnur>	can't be good or bad, unless someone takes it seriously
Sep 16 09:57:19 <hmw_metalab>	grr12314: Do you know of any code examples, I should look at?
Sep 16 09:57:35 <ashnur>	hmw_metalab: i think writing actual code that does something is better. I think this because I have fallen into this same exact trap with very bad results. I am quite frustrated with myself because of it http://ashnur.github.io/async-hell/#Promises-deferreds-and-vows
Sep 16 09:58:35 <hmw_metalab>	It is a "data source" object, that calls a php script to access the file system. It needs to automatically show a popup with login, etc, so the client program can access the operations transparently
Sep 16 09:59:28 <hmw_metalab>	And... this test looks way better than my previous real code, which hands over callbacks to callbacks... :)
Sep 16 10:00:02 <ashnur>	certainly, but the fact of the matter is that you can meet this code only in safe environments, never in the wild
Sep 16 10:00:22 <hmw_metalab>	oh? I have no idea, what could be dangerous here
Sep 16 10:00:31 <ashnur>	so how much did you learn about the real world? One single pattern that you can combine. If you think this will be enough, you are mistaken.
Sep 16 10:00:59 <hmw_metalab>	I am pretty green when it comes to modern JS, that's why I am working on this hobby project
Sep 16 10:01:31 <hmw_metalab>	and why I keep pestering you :) Thanks for all the input, btw
Sep 16 10:02:39 <hmw_metalab>	grr12314: I do not understand what you said with "makes you a new promise"
Sep 16 10:03:55 <ashnur>	well, it doesn't return a previous promise, does it?
Sep 16 10:04:33 <ashnur>	https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise/then
Sep 16 10:05:26 <ashnur>	maybe 33% the time according to that page
Sep 16 10:05:29 <stennowork>	it dies
Sep 16 10:05:31 <stennowork>	does
Sep 16 10:05:39 <ashnur>	thanks stennowork
Sep 16 10:05:52 <kakashiA1>	https://www.youtube.com/watch?v=9TpIYPUp9Bc  (I love it)
Sep 16 10:06:01 <hmw_metalab>	I overlooked that it returns a promise. I will have to meditate more over this. Promises are somewhat weird, if you encounter them the first time
Sep 16 10:06:01 <stennowork>	n> (async() => 3)().then().then().then().then().then(x => console.log('x is', x));
Sep 16 10:06:03 <jellobot>	(okay) x is 3 undefined
Sep 16 10:06:07 <grr12314>	hmw_metalab your check_credentials() function for example returns the same promise as request_credentials(), but tacks on logging
Sep 16 10:06:18 <grr12314>	but does with a weird new promise wrapper
Sep 16 10:06:50 <hmw_metalab>	Pfew... this is complicated.
Sep 16 10:07:09 <grr12314>	instead of just return request_credentials().then(a=>{console.log(a); return a}).catch(a=>{console.log(a); throw a})
Sep 16 10:08:14 <ashnur>	promises are a terrible interface this continous back and forth, going in time both ways
Sep 16 10:08:49 <stennowork>	wut
Sep 16 10:09:02 <stennowork>	promises are great and exactly the right tool for JS's async-ness
Sep 16 10:09:07 <hmw_metalab>	grr12314: I think, I am starting to get you. I suppose, there will be at least two new Promise in the final code?
Sep 16 10:09:18 <stennowork>	actually i haven't seen vue observer pattern yet
Sep 16 10:09:22 <stennowork>	maybe its better than promises
Sep 16 10:09:55 <grr12314>	new Promise is ok when converting callback-based api to promise, but when you already have a promise it is pointless
Sep 16 10:10:02 <grr12314>	i.e. it's ok for the setTimeout cases
Sep 16 10:10:16 <grr12314>	altho those are weird in other ways
Sep 16 10:10:25 <hmw_metalab>	they represent ajax calls
Sep 16 10:10:32 <grr12314>	cool
Sep 16 10:10:32 <stennowork>	oh vue uses promises internally too
Sep 16 10:11:02 <grr12314>	if you use fetch() api it already is a promise so you can just chain then calls there too
Sep 16 10:11:52 <hmw_metalab>	Ah yes, fetch. I will look into those, too, when I will finally have wrapped my head around improving this thing
Sep 16 10:13:15 <ashnur>	stennowork: maybe the JS mess you write it fits it, but not the stuff I write
Sep 16 10:13:39 <stennowork>	ashnur, you don't write js?
Sep 16 10:13:55 <ashnur>	i do write js, i write lots of js and most of it has to deal with async flow
Sep 16 10:13:59 <ashnur>	and i hate promises
Sep 16 10:14:31 <stennowork>	and how do you handle the async flow then
Sep 16 10:14:35 <stennowork>	events?
Sep 16 10:15:02 <ashnur>	i handle the async flow with whatever is at hand. not very easy to avoid using promises, right?
Sep 16 10:15:22 <ashnur>	events are also very popular
Sep 16 10:16:12 <stennowork>	so what kind of async flow control do you need that cannot be done ok with promises?
Sep 16 10:16:18 <ashnur>	but events are very low level, not enough control. Promises have the right level, but not the right kind or amount
Sep 16 10:16:45 <ashnur>	stennowork: so where did I write 'cannot be done'?
Sep 16 10:16:53 <stennowork>	cannot be done ok
Sep 16 10:16:59 <stennowork>	cannot be done well*
Sep 16 10:18:42 <ashnur>	almost any i think. i believe most promise based codebase is just too wrong to care. like how rarely proper cleanup and cancellation is even considered, let alone implemented.
Sep 16 10:19:35 <ashnur>	in 30 years none of this will be acceptable =)
Sep 16 10:20:31 <stennowork>	well, not being able to cancel promises properly (disregarding AbortController) could indeed be seen as a weakness of promises
Sep 16 10:22:41 <ashnur>	stennowork: a random example someone else found: https://github.com/mysticatea/abort-controller/blob/master/src/abort-signal.ts#L68
Sep 16 10:23:24 <ashnur>	this is how someone tries to implement a cancellable promise
Sep 16 10:23:40 <stennowork>	so, with events
Sep 16 10:24:09 <ashnur>	not my code, i don't think this is actually correct, there is an easy race-condition here
Sep 16 10:24:33 <stennowork>	but it seems to follow specs tbh
Sep 16 10:24:37 <ashnur>	there is another abort controller which uses Promise.race() , I think that's way better
Sep 16 10:24:41 <stennowork>	specs imply signals too
Sep 16 10:25:03 <stennowork>	https://dom.spec.whatwg.org/#dom-abortcontroller-abort
Sep 16 10:25:08 <ashnur>	yeah, but this is my whole problem, everyone is so busy in the circlejerk, doing the easy work, following the spec, they forget to actually think about what they are doing
Sep 16 10:25:33 <ashnur>	and implement something that then is used possibly by millions ignorantly
Sep 16 10:25:58 <ashnur>	"well, i don't know about race-conditions, but it followed the latest spec and had 100% coverage"
Sep 16 10:26:05 <stennowork>	i am sure that the people at whatwg thought a lot about it
Sep 16 10:26:14 <ashnur>	but this is not about the spec stennowork
Sep 16 10:26:18 <ashnur>	the implementation is buggy
Sep 16 10:27:32 <ashnur>	you can't safely cancel with an event, if the cancellable promise gets resolved before the events get handled you have undefined behavior
Sep 16 10:29:01 <Antho000>	Helloe verybody :)
Sep 16 10:30:06 <stennowork>	well to be fair abortcontroller is specifically for fetch, not generally for promise cancelling
Sep 16 10:30:13 <Antho000>	Hello everybody ;)
Sep 16 10:31:01 <grr12314>	Hell oeverybody :P
Sep 16 10:31:20 <Antho000>	What do you advise me as a light bookstore to make a page? Because I need it just on the presentation page, on the rest of the site will not need a page.
Sep 16 10:31:22 <Antho000>	:)
Sep 16 10:32:23 <grr12314>	wat
Sep 16 10:33:42 <Antho000>	What do you advise me as a light bookstore to make a page? Because I need it just on the presentation SCROLL PAGE, on the rest of the site will not need a page.
Sep 16 10:34:34 <Aliekezhi>	hi, this script is supposed to save the checkbox state using localstorage, however, it doesn't behave as expected, with no error. Any idea why ? https://jsfiddle.net/wsr4a9tb/4/
Sep 16 10:34:58 <Alexendoo>	ashnur: It's not undefined behaviour, if the Promise resolves before the operation backing it has a chance to be cancelled then that's fine. If it does get cancelled, the Promise will reject with an AbortError
Sep 16 10:35:04 <Aliekezhi>	(clicking on the button isn't supposed to check the checkbox if it's unchecked)
Sep 16 10:35:21 <Alexendoo>	Well a DOMException with the name AbortError anyway
Sep 16 10:36:30 <stennowork>	Aliekezhi,  if (document.getElementById("caseMessageSystemes").checked = true) {
Sep 16 10:36:37 <grr12314>	Aliekezhi comparison vs assignment
Sep 16 10:37:04 <Aliekezhi>	grr12314, == should be used ?
Sep 16 10:37:26 <grr12314>	but also, bool == true is redundand and silly
Sep 16 10:37:47 <grr12314>	not that i've not made the same mistake back when starting
Sep 16 10:38:01 <Aliekezhi>	grr12314, what would you use instead ?
Sep 16 10:38:06 <stennowork>	Antho000, what is 'a light bookstore'?
Sep 16 10:38:22 <grr12314>	bool == true is the same as just bool
Sep 16 10:39:01 <Aliekezhi>	grr12314, so if (bool) { is ok ? true by default ?
Sep 16 10:39:28 <grr12314>	idk what you mean "by default"
Sep 16 10:39:30 <stennowork>	n> const foo = true; if (foo) { console.log('foo is true'); } // Aliekezhi
Sep 16 10:39:31 <jellobot>	(okay) foo is true undefined
Sep 16 10:39:39 <grr12314>	but true == true is true, and false == true is false
Sep 16 10:39:47 <stennowork>	n> const foo = false; if (foo) { console.log('foo is true'); } else { console.log('foo is false'); } // Aliekezhi
Sep 16 10:39:49 <jellobot>	(okay) foo is false undefined
Sep 16 10:40:45 <stennowork>	n> [0,1,true,false,null,undefined,'','0'].filter(x => x)
Sep 16 10:40:46 <jellobot>	(okay) [ 1, true, '0' ]
Sep 16 10:42:04 <grr12314>	[0,1,true,false,,"true", null,undefined,'', '1', '0'].map(x=>[x, Boolean(x), x==true])
Sep 16 10:42:10 <grr12314>	n> [0,1,true,false,,"true", null,undefined,'', '1', '0'].map(x=>[x, Boolean(x), x==true])
Sep 16 10:42:11 <jellobot>	(okay) [ [ 0, false, false ], [ 1, true, true ], [ true, true, true ], [ false, false, false ], <1 empty item>, [ 'true', true, false ], [ null, false, false ], [ undefined, false, false ], [ '', false, false ], [ '1', true, true ], [ '0', true, false ] ]
Sep 16 10:43:09 <stennowork>	the truthyness expert :P
Sep 16 10:44:50 <stennowork>	b> [0,1,true,false,,"true", null,undefined,'', '1', '0'].map(x=>[x, Boolean(x), x||'falsy', x??'non-nullish'])
Sep 16 10:44:51 <jellobot>	(okay) [ [ 0, false, 'falsy', 0 ], [ 1, true, 1, 1 ], [ true, true, true, true ], [ false, false, 'falsy', false ], <1 empty item>, [ 'true', true, 'true', 'true' ], [ null, false, 'falsy', 'non-nullish' ], [ undefined, false, 'falsy', 'non-nullish' ], [ '', false, 'falsy', '' ], [ '1', true, '1', '1' ], [ '0', true, '0', '0' ] ]
Sep 16 10:45:07 <stennowork>	er nullish
Sep 16 10:45:13 <Antho000>	stennowork Or a normal bookstore :), but that is to say that you have an advisor? because there are several
Sep 16 10:45:14 <stennowork>	b> [0,1,true,false,,"true", null,undefined,'', '1', '0'].map(x=>[x, Boolean(x), x||'falsy', x??'nullish'])
Sep 16 10:45:15 <jellobot>	(okay) [ [ 0, false, 'falsy', 0 ], [ 1, true, 1, 1 ], [ true, true, true, true ], [ false, false, 'falsy', false ], <1 empty item>, [ 'true', true, 'true', 'true' ], [ null, false, 'falsy', 'nullish' ], [ undefined, false, 'falsy', 'nullish' ], [ '', false, 'falsy', '' ], [ '1', true, '1', '1' ], [ '0', true, '0', '0' ] ]
Sep 16 10:45:51 <ashnur>	Alexendoo: I don't think your analysis is quite exhaustive there
Sep 16 10:46:03 <stennowork>	Antho000, i still don't understand, sorry
Sep 16 10:46:15 <stennowork>	do you need an e-commerce solution?
Sep 16 10:48:51 <ashnur>	Antho000: are you using google translator?
Sep 16 10:48:54 <alystair2>	is there a way to refer to child objects in shortform within JSON?
Sep 16 10:49:30 <Alexendoo>	ashnur: Feel free to provide a counterexample
Sep 16 10:49:31 <ashnur>	alystair2: with additional tooling, like JSON-Pointers
Sep 16 10:50:33 <ashnur>	Alexendoo: https://github.com/mo/abortcontroller-polyfill/blob/master/src/abortableFetch.js#L104
Sep 16 10:51:02 <ashnur>	not sure what i should "counter".
Sep 16 10:51:17 <Alexendoo>	ashnur: You didn't notice the eventListener in that example...?
Sep 16 10:51:49 <Alexendoo>	cancellation is just a Promise that wraps the 'abort' event from the AbortSignal
Sep 16 10:53:05 <ashnur>	sorry, but I don't understand your references 'that example' 'cancellation is just a promise' ...
Sep 16 10:53:40 <ashnur>	the point is the switch from push to pull using .race()
Sep 16 10:53:44 <Alexendoo>	ashnur: You linked https://github.com/mo/abortcontroller-polyfill/blob/master/src/abortableFetch.js#L104 just now. It has a promise called `cancellation`
Sep 16 10:53:54 <grr12314>	ashnur race is no pull tho
Sep 16 10:54:18 <Alexendoo>	That promise just wraps the 'abort' event from an AbortSignal, as you can see a few lines up
Sep 16 10:54:23 <ashnur>	grr12314: i bet you misunderstand just so you can disagree, but let's have it, why is it "not pull tho"
Sep 16 10:54:26 <grr12314>	theres no guarantee they wont both be resolved in the same tick either
Sep 16 10:54:51 <ashnur>	...
Sep 16 10:54:55 <ashnur>	so?
Sep 16 10:54:57 <Alexendoo>	The AbortSignal still uses events, that's how it works
Sep 16 10:56:03 <Alexendoo>	https://github.com/mo/abortcontroller-polyfill/blob/master/src/abortcontroller.js#L67
Sep 16 10:56:31 <alystair2>	ashnur: `user.public.roles = ['foo','bar'];` turns into `{user:{public:{roles:["foo,bar"]}}}` ... which feels really ugly where it could just be something like `{user.public.roles:['foo','bar']}` ... if it were legal :P
Sep 16 10:57:28 <Alexendoo>	The other polyfill you linked doesn't use race because it only implements the contoller+signal, if you take just the controller from abortcontroller-polyfill it's the same
Sep 16 10:59:50 <alystair2>	if anyone else has suggestions I'm all ears
Sep 16 11:00:23 <grr12314>	`user.public.roles = ['foo','bar'];` is invalid if the objects dont exist already anyway
Sep 16 11:00:35 <alystair2>	within my system it
Sep 16 11:00:40 <alystair2>	it's guaranteed to exist
Sep 16 11:01:05 <grr12314>	then just use that
Sep 16 11:01:57 <ashnur>	grr12314: the original question was about using shortform for child objects, i pointed out that there is additional tooling to do just that. said tooling usually implements features on what to do when the path doesn't exist, json-ptr can force set it https://www.npmjs.com/package/json-ptr#user-content-settarget-pointer-value-force
Sep 16 11:02:48 <ashnur>	using composed keys as actual keys is too much complexity for the sake of some imagined benefit
Sep 16 11:03:05 <ashnur>	{'a.b':1} is the same as {a: {b: 1}} ?
Sep 16 11:03:14 <ashnur>	very bad idea
Sep 16 11:04:08 <alystair2>	those aren't the same... are they?
Sep 16 11:05:49 <darkseid>	they are not the same
Sep 16 11:06:15 <darkseid>	one is an object with a key 'a.b' whereas the other is an obj with a key of 'a'
Sep 16 11:08:59 <alystair2>	yeah, that's not going to fly
Sep 16 11:09:15 <grr12314>	he meant it without the ' ' probably
Sep 16 11:09:25 <alystair2>	you can't do that, it's an error.
Sep 16 11:09:38 <grr12314>	yup. and it would be bad if you could
Sep 16 11:11:07 <alystair2>	eh still better than XML, whaetever. Just a few extra bits :p
Sep 16 11:12:42 <ashnur>	i didn't mean anything else than what i wrote
Sep 16 11:12:47 <ashnur>	are you reading part of the channel?
Sep 16 11:13:03 <Antho000>	back :)
Sep 16 11:13:04 <ashnur>	09:56:31       alystair2 | ashnur: `user.public.roles = ['foo','bar'];` turns into `{user:{public:{roles:["foo,bar"]}}}` ... which feels really ugly where it could just be something like  `{user.public.roles:['foo','bar']}` ... if it were legal :P
Sep 16 11:13:21 <Antho000>	I'm trying to create a scroll page that activates with the mouse wheel, exemple=>  (https://alvarotrigo.com/fullPage/#) , but on my site I only need to do it on one page, do you have a JS library to advise me?
Sep 16 11:13:25 <ashnur>	i just pointed out that it wouldn't be any better
Sep 16 11:13:30 <ashnur>	would be much worse
Sep 16 11:14:20 <ashnur>	Antho000: are you someone who has coding experience? if not, how much time do you want to spend on it?
Sep 16 11:15:53 <Antho000>	ashnur Hello, yes but not in JS
Sep 16 11:17:02 <ashnur>	in what?
Sep 16 11:17:26 <Antho000>	Python
Sep 16 11:18:55 <ashnur>	well, could be worse. i think if you just want to get over it, then you should find a jquery lib ;)
Sep 16 11:19:45 <Antho000>	which one advise you ?
Sep 16 11:20:51 <qswz>	!python
Sep 16 11:21:16 <qswz>	"then you should find a jquery lib" oh please
Sep 16 11:21:17 <DnzAtWrk>	qswz: although it has many similiarities, python is not javascript
Sep 16 11:21:26 <qswz>	DnzAtWrk: no shit!
Sep 16 11:21:32 <qswz>	:))
Sep 16 11:21:50 <qswz>	I always thought python was just a javascript preprocessor like coffeescript
Sep 16 11:22:05 <ashnur>	lol
Sep 16 11:22:19 <ashnur>	that's not an entirely inaccurate description
Sep 16 11:22:26 <Antho000>	ashnur which one advise you as jquery lib? ashnur:)
Sep 16 11:22:33 <ashnur>	Antho000: ask qswz
Sep 16 11:22:44 <qswz>	don't use jquery
Sep 16 11:22:49 <stennowork>	lol
Sep 16 11:22:50 <qswz>	even under torture
Sep 16 11:23:03 <DnzAtWrk>	jquery is fine if all you want to do is make a website and not mess with babel or polyfills
Sep 16 11:23:07 <ashnur>	qswz: i wish i had that option lol
Sep 16 11:23:26 <qswz>	vanilla is strong nowadays
Sep 16 11:23:34 <ashnur>	when i made the PR, our python backend dev said 'It is premature to remove jquery'
Sep 16 11:23:35 <DnzAtWrk>	vanilla on modern browsers
Sep 16 11:23:47 <qswz>	you can show my any jquery code, I'll give you the equivalent shiny vanilla
Sep 16 11:23:50 <stennowork>	modern browser = any non-IE
Sep 16 11:23:53 <ashnur>	and since i have no control over some page, there still is jquery
Sep 16 11:23:53 <qswz>	vanilla = pure JS
Sep 16 11:23:56 <DnzAtWrk>	and safari
Sep 16 11:24:02 <qswz>	!polyfill.io
Sep 16 11:24:02 <ecmabot>	qswz: <script nomodule src="https://polyfill.io/v3/polyfill.js?flags=always&features=default,fetch"></script>
Sep 16 11:24:09 <qswz>	for old browsers and vanilla
Sep 16 11:24:50 <DnzAtWrk>	anyway, I don't see why jquery should be hated any more than any other js framework
Sep 16 11:25:32 <Antho000>	???
Sep 16 11:26:52 <Antho000>	So, who is the solution to make a scrolling page with the help of the mouse wheel ? ( site ? GitHub ? etc.)
Sep 16 11:31:43 <ThePendulum>	DnzAtWrk: because its scope is obsolete
Sep 16 11:33:09 <ThePendulum>	a vast bulk of what people used jQuery for can now be done with native JS or CSS, and it doesn't really provide the kind of structures modern frameworks are useful for
Sep 16 11:34:00 <Antho000>	just for information, I find this one => https://codyhouse.co/demo/page-scroll-effects/index.html
Sep 16 11:34:58 <ThePendulum>	oh please don't :/
Sep 16 11:35:17 <DnzAtWrk>	it can be done but not as smoothly
Sep 16 11:35:27 <ThePendulum>	messing with native scroll behavior is one of the worst UX pitfalls out there
Sep 16 11:35:39 <DnzAtWrk>	making json requests using jquery, or animating things, or accessing dom elements and setting css properties
Sep 16 11:35:47 <DnzAtWrk>	they all use less user code with jquery
Sep 16 11:36:25 <ThePendulum>	having buttons that scroll to sections is fine (although I don't think anyone is really asking for effects, just use good ole #anchors), but these jelly animations when scrolling, yikes
Sep 16 11:36:36 <DnzAtWrk>	in addition, there are tons of javascript libraries which depend on jquery
Sep 16 11:36:38 <DnzAtWrk>	like flot
Sep 16 11:36:43 <DnzAtWrk>	and other graphing libraries
Sep 16 11:36:48 <ThePendulum>	lol 'hijacking off'
Sep 16 11:36:55 <ThePendulum>	a jihadists wank
Sep 16 11:37:02 <Antho000>	:)
Sep 16 11:39:48 <hmw_metalab>	Should I pass the resolve and reject functions to another function in order to prevent using a new Promise() in that other function? grr12314
Sep 16 11:40:29 <DnzAtWrk>	why not just have the function return a promise
Sep 16 11:41:14 <hmw_metalab>	I was asking about how to improve my code earlier and got told, that I used several new Promise() more than needed. I am trying to get used to Promises and create a nice and clean code example, DnzAtWrk
Sep 16 11:41:37 <hmw_metalab>	That question was somewhat specific
Sep 16 11:41:45 <hmw_metalab>	to the earlier code I presented
Sep 16 11:42:08 <qswz>	don't scroll-jack
Sep 16 11:42:10 <hmw_metalab>	(don't want to show you the current code, since I am still trying to improve it, will post a link later)
Sep 16 11:42:20 <hmw_metalab>	what is scroll jacking?
Sep 16 11:43:02 <hmw_metalab>	qswz: ? ^
Sep 16 11:43:31 <qswz>	!google scroll-jacking @ hmw_metalab
Sep 16 11:43:31 <ecmabot>	hmw_metalab: Google search: "scroll-jacking" <http://www.google.com/search?q=scroll-jacking>
Sep 16 11:44:06 <qswz>	it's the act of fucking up with UX
Sep 16 11:45:19 <qswz>	it's really bad for vsually impaired people
Sep 16 11:45:34 <hmw_metalab>	ah, you weren't saying this to me.
Sep 16 11:45:49 <spinningCat>	can i use each, forEach inside async function?
Sep 16 11:46:03 <qswz>	no, previosu discussion indeed
Sep 16 11:46:14 <qswz>	spinningCat: show the context
Sep 16 11:46:35 <qswz>	usually it's a bad idea to use .forEach in async context
Sep 16 11:46:49 <qswz>	because you can't know when it's finished
Sep 16 11:46:59 <spinningCat>	hmm
Sep 16 11:47:03 <qswz>	use await Promise.all(arr.map( .. ))
Sep 16 11:47:07 <hmw_metalab>	Interesting. I am surprised that using the scroll wheel to advance a horizontal slider was considered bad. Wouldn't have guessed.
Sep 16 11:47:56 <hmw_metalab>	Heh. I recently stumbled over this. I used forEach and tried to return a value, when it was found. I got 2 results. Looked like I had a qbit in my code...
Sep 16 11:48:33 <qswz>	it's the definition of async
Sep 16 11:48:41 <hmw_metalab>	Will foreach use multiple cores?
Sep 16 11:48:51 <hmw_metalab>	or threads
Sep 16 11:49:06 <spinningCat>	i am doing this get(`https://api.something.com/${x}`)
Sep 16 11:49:11 <qswz>	n> [1].forEach(i => console.log('forEach', i)); 'sync';
Sep 16 11:49:12 <jellobot>	(okay) forEach 1 'sync'
Sep 16 11:49:17 <spinningCat>	x actually has value and i can see that on console
Sep 16 11:49:27 <qswz>	.forEach runs synchronously
Sep 16 11:49:32 <spinningCat>	but here in the axios url i cannot get value
Sep 16 11:49:35 <qswz>	except if it has promises
Sep 16 11:49:44 <qswz>	n> [1].forEach(async i => console.log('forEach', i)); 'sync';
Sep 16 11:49:45 <jellobot>	(okay) forEach 1 'sync'
Sep 16 11:49:48 <qswz>	hmm
Sep 16 11:50:08 <qswz>	n> [1].forEach(async i => {await console.log('forEach', i)}); 'sync';
Sep 16 11:50:09 <jellobot>	(okay) forEach 1 'sync'
Sep 16 11:50:12 <qswz>	dam
Sep 16 11:50:54 <qswz>	n> [1].forEach(i => {Promise.resolve().then(()=>console.log('forEach', i))}); 'sync';
Sep 16 11:50:55 <jellobot>	(okay) forEach 1 'sync'
Sep 16 11:51:02 *	qswz gives up
Sep 16 11:52:15 <spinningCat>	any idea?
Sep 16 11:53:20 <qswz>	!axios @ spinningCat
Sep 16 11:53:20 <ecmabot>	spinningCat: Promise based HTTP client for the browser and node.js that offers a level of abstraction compared to the XMLHttpRequest or node 'http', 'https' or 'http2' APIs – https://www.npmjs.com/package/axios https://danlevy.net/you-may-not-need-axios/ see also !fetch
Sep 16 11:53:34 <qswz>	the end of it
Sep 16 11:53:55 <spinningCat>	this is not my code
Sep 16 11:53:56 <Alexendoo>	spinningCat: Post the code?
Sep 16 11:53:58 <qswz>	spinningCat: x is the argument of .forEach?
Sep 16 11:54:06 <spinningCat>	let me paste it
Sep 16 11:54:19 <qswz>	11:47 <qswz> use await Promise.all(arr.map(x => ...))
Sep 16 11:54:26 <qswz>	like I said
Sep 16 11:54:43 <spinningCat>	i have to go on with axios
Sep 16 11:55:04 <qswz>	you don't
Sep 16 11:55:23 <qswz>	you're free to go with fetch
Sep 16 11:55:33 <qswz>	you're even strongly encouraged to
Sep 16 11:55:41 <spinningCat>	qswz,  this is not my code
Sep 16 11:55:49 <qswz>	it is now
Sep 16 11:55:54 <qswz>	since you're working on it
Sep 16 11:56:56 <spinningCat>	this is the code http://dpaste.com/01G7TDD
Sep 16 11:57:06 <spinningCat>	qswz,  i have to offer using it first
Sep 16 11:57:10 <spinningCat>	i guess
Sep 16 11:57:15 <qswz>	where is the forEach?
Sep 16 11:57:32 <spinningCat>	i removed it
Sep 16 11:57:37 <spinningCat>	it is not important now
Sep 16 11:57:42 <qswz>	it def is
Sep 16 11:57:56 <spinningCat>	what do you mean?
Sep 16 11:58:01 <qswz>	change const data = await request.get to return request.get
Sep 16 11:58:04 <qswz>	l.2
Sep 16 11:58:10 <qswz>	spinningCat: show the context
Sep 16 11:58:13 <qswz>	the relevant context
Sep 16 11:58:36 <spinningCat>	return instead of await
Sep 16 11:58:44 <spinningCat>	qswz,  do you want to see the object?
Sep 16 11:59:12 <slikts>	what's a giblet???
Sep 16 11:59:19 <spinningCat>	giblet?
Sep 16 11:59:46 <qswz>	https://www.urbandictionary.com/define.php?term=giblets
Sep 16 12:00:17 <qswz>	not very reliable
Sep 16 12:00:46 <spinningCat>	i can see content of variable in console
Sep 16 12:00:51 <spinningCat>	but not in axios url
Sep 16 12:00:59 <qswz>	show
Sep 16 12:01:00 <qswz>	the
Sep 16 12:01:03 <qswz>	context
Sep 16 12:01:13 <spinningCat>	this is context
Sep 16 12:01:17 <qswz>	of how asyncFunc is used
Sep 16 12:01:20 <qswz>	damnit
Sep 16 12:01:26 <qswz>	are you a developer?
Sep 16 12:01:44 <spinningCat>	yes i just called it   asyncFunc();
Sep 16 12:01:56 <qswz>	show the lines around it
Sep 16 12:01:57 <spinningCat>	like calling regular function
Sep 16 12:02:01 <qswz>	SHOW
Sep 16 12:04:33 <slikts>	man what's with these giblets
Sep 16 12:04:41 <qswz>	a giblet is to a gib what a hamlet is to a ham
Sep 16 12:04:52 <slikts>	can't dispute that
Sep 16 12:05:26 <qswz>	gibberish
Sep 16 12:06:07 <slikts>	there aren't enough special needs programming languages
Sep 16 12:06:41 <qswz>	well, I believe more in mutipurposes langiages
Sep 16 12:06:47 <qswz>	languages*
Sep 16 12:07:10 <qswz>	spinningCat: just paste that code, sorry for my brutality
Sep 16 12:07:22 <slikts>	you believe in the langauge of love
Sep 16 12:07:36 <qswz>	hah, not at that point
Sep 16 12:07:49 <spinningCat>	qswz,  not importnat i already pasted
Sep 16 12:08:01 <slikts>	!importnat
Sep 16 12:08:12 <qswz>	ok, I'll ignore it
Sep 16 12:08:22 <spinningCat>	ops
Sep 16 12:08:30 <qswz>	that's what this kind of person deserve
Sep 16 12:08:31 <spinningCat>	i already pasted it
Sep 16 12:08:54 <qswz>	you pasted a function
Sep 16 12:08:57 <qswz>	and not how it's used
Sep 16 12:09:13 <qswz>	which is what matters
Sep 16 12:09:18 <spinningCat>	asyncfunction() i called it like that
Sep 16 12:09:26 <slikts>	lifehack for making smelly water: put down something wet and forget about it
Sep 16 12:09:27 <qswz>	without await before?
Sep 16 12:09:35 <slikts>	then lift it up later and have smelly fingers
Sep 16 12:09:47 <qswz>	an asyncFuntion has to be awaited, it's obvious
Sep 16 12:10:44 <qswz>	smelly means full of life
Sep 16 12:10:47 <qswz>	it's a good sign
Sep 16 12:11:08 <slikts>	is that why you never change towels
Sep 16 12:11:10 <qswz>	except for cigarettes, that smell is death
Sep 16 12:11:21 <slikts>	sorry, I thought this was ##javascript
Sep 16 12:12:08 <qswz>	I need to improve some code
Sep 16 12:12:20 <slikts>	we all need to do our part in maintaining the level of discourse
Sep 16 12:13:04 <spinningCat>	i need to sleep
Sep 16 12:13:07 <slikts>	and also slowly lose your mind because people can't stop using pastebin
Sep 16 12:14:33 <qswz>	this hideous code I wrote http://dpaste.com/23BK1WM for https://leetcode.com/problems/maximum-subarray/
Sep 16 12:15:00 <qswz>	but it works, that's the principal
Sep 16 12:15:09 <slikts>	that code is so uggo that even colors abandoned it
Sep 16 12:15:28 <qswz>	http://dpaste.com/20NYFWF colors
Sep 16 12:15:37 <slikts>	node | curl http://dpaste.com/23BK1WM.txt
Sep 16 12:15:37 <qswz>	well not many
Sep 16 12:16:19 <qswz>	slikts: your node CLI has syntax highlighting?
Sep 16 12:16:29 <qswz>	mine doesn't
Sep 16 12:17:32 <slikts>	sorry I'm still stuck on `while (nums[i]<=0 && i<nums.length) i++;`
Sep 16 12:18:07 <qswz>	what's wrong with it
Sep 16 12:18:20 <slikts>	you tell me
Sep 16 12:18:24 <qswz>	we incr i as long as nums[i] is negative
Sep 16 12:18:30 <qswz>	nothing more
Sep 16 12:18:44 <qswz>	[-3,-5,4,7]
Sep 16 12:18:48 <qswz>	i will be 2
Sep 16 12:19:00 <slikts>	brb having mental breakdown
Sep 16 12:19:04 <qswz>	:p
Sep 16 12:19:05 <grr12314>	ugh
Sep 16 12:19:14 <grr12314>	it is O(N^2)
Sep 16 12:19:37 <qswz>	it's O(n) I believe
Sep 16 12:19:45 <grr12314>	it has nested loops
Sep 16 12:19:59 <qswz>	with different variables
Sep 16 12:20:10 <qswz>	the nested vars start where the outer ones stopped
Sep 16 12:20:30 <qswz>	in the end it's looping only once over nums
Sep 16 12:20:36 <qswz>	I know it looks complex
Sep 16 12:21:54 <qswz>	basically everytime we find a series (1+) if negative numbers, we fetched the net positive numbers (1+) and compare between 3 possible contiguous series to find the max one
Sep 16 12:22:23 <qswz>	either the left one, either the right one either the one taking left, nagative values and right
Sep 16 12:23:38 <grr12314>	i dont want to bother registering so cant test
Sep 16 12:23:48 <grr12314>	but this seems to me just as simple as nums.reduce((a,v)=>Math.max(a+v,v),0)
Sep 16 12:24:11 <qswz>	it's a bit more complex
Sep 16 12:24:32 <spinningCat>	(in promise) TypeError: m.each is not a function what the hell is that?
Sep 16 12:24:50 <qswz>	"find the contiguous subarray which has the largest sum and return its sum"
Sep 16 12:25:21 <qswz>	Please, no one should reply to spinningCat until he provides a paste with relevant context
Sep 16 12:25:25 <qswz>	don't waste your energy
Sep 16 12:25:31 <qswz>	like I did by mistake
Sep 16 12:25:39 <slikts>	joke's on you, I have no energy to waste
Sep 16 12:25:42 <qswz>	it's a trap!
Sep 16 12:26:27 <spinningCat>	dont have time for that
Sep 16 12:26:45 <qswz>	do you have time for instructing yourself?
Sep 16 12:26:56 <qswz>	never too late
Sep 16 12:27:39 <darkseid>	man LastPass sucks
Sep 16 12:28:21 <slikts>	darkseid: agreed, I forgot my password for lastpass and it's their fault
Sep 16 12:28:28 <darkseid>	lol
Sep 16 12:28:45 <spinningCat>	who cares
Sep 16 12:29:00 <slikts>	spinningCat: go to bed
Sep 16 12:29:13 <spinningCat>	i am at starrbucks
Sep 16 12:29:22 <slikts>	exactly
Sep 16 12:29:24 <spinningCat>	i guess i will sleep when i sit
Sep 16 12:31:35 <qswz>	don't eat or drink there
Sep 16 12:31:40 <qswz>	it's unhealthy
Sep 16 12:31:42 <grr12314>	.reduce(([c,m],v)=>[Math.max(c+v,v),Math.max(m,c+v,v)],[0,0])[1]
Sep 16 12:32:01 <qswz>	grr12314: it works?
Sep 16 12:32:10 <spinningCat>	axios return error but i see 200 in network tab
Sep 16 12:32:13 <spinningCat>	wtf?
Sep 16 12:32:13 <qswz>	just log in with github
Sep 16 12:32:17 <grr12314>	tested 1-2 cases in console
Sep 16 12:32:57 <qswz>	!learn spinningCat=no one should reply to spinningCat until he provides a paste with relevant context
Sep 16 12:32:57 <ecmabot>	qswz: Learned `spinningCat`.
Sep 16 12:33:32 <spinningCat>	i really shouldnt use axios
Sep 16 12:33:51 <qswz>	good! you're on the right path
Sep 16 12:34:02 <qswz>	to redemption
Sep 16 12:34:34 <qswz>	window.fetch
Sep 16 12:34:56 <spinningCat>	okay
Sep 16 12:35:00 <spinningCat>	do i need await?
Sep 16 12:35:29 <qswz>	yes, if you show the whole code we could help
Sep 16 12:35:52 <grr12314>	ok init with [-1/0,-1/0] since they apparently dont allow empty subarray
Sep 16 12:35:54 <qswz>	await is not mandatory
Sep 16 12:36:17 <qswz>	grr12314: I'm sure it doesn't pass some cases
Sep 16 12:36:47 <grr12314>	it did tho :p
Sep 16 12:37:23 <qswz>	on leetcode?
Sep 16 12:37:30 <grr12314>	yup
Sep 16 12:38:08 <ashnur>	qswz: do you use polyfill.io in production?
Sep 16 12:38:48 <qswz>	ashnur: yes
Sep 16 12:40:10 <grr12314>	now why doesnt that site have account deletion anywhere
Sep 16 12:44:28 <ashnur>	qswz: where? :)
Sep 16 12:44:32 <hmw_metalab>	Updated my promise chain example https://jsfiddle.net/agsc5rh8/1/ - There is something at line 100, I am not fully sure. Also, jsfiddle reformatted my code and removed a few comments... :(   Original should be available here, if you dare click an IP: http://84.114.244.155/stubs/.ares3/tests/nested_promise.html
Sep 16 12:45:13 <qswz>	grr12314: did you click "submit"?
Sep 16 12:45:23 <qswz>	because if you just tried on the example
Sep 16 12:45:43 <qswz>	it's not complete test at all
Sep 16 12:45:54 <grr12314>	why so sceptical
Sep 16 12:46:03 <grr12314>	it probably does the same thing yours does
Sep 16 12:46:14 <grr12314>	just in a way i can read it
Sep 16 12:47:23 <hmw_metalab>	Also, how do you handle naming for functions that return promises? I tried it with a _promise postfix on the function name, which is not totally pretty.
Sep 16 12:48:19 <grr12314>	you can use Promise.resolve to make a resolving promise
Sep 16 12:48:37 <grr12314>	instead of using the new Promise constructor and immediately calling resolve
Sep 16 12:48:43 <hmw_metalab>	ah, nice
Sep 16 12:50:02 <grr12314>	and your operation_promise still has pointless new promise with another promise inside it
Sep 16 12:51:25 <hmw_metalab>	Ah. So I would replace return new Promise()... in line 154 with just return check_credentials_promise of the next line?
Sep 16 12:52:30 <hmw_metalab>	Nah. Not that simple...
Sep 16 12:52:49 <hmw_metalab>	oh, indeed that simple :) thanks
Sep 16 12:53:47 <hmw_metalab>	This is all backwards :) The promise starts deep within the nesting...
Sep 16 12:54:05 <switzernauts>	I want to open IE and in the same time parse a bearer token in the header, is that possible?
Sep 16 12:56:35 <qswz>	grr12314: if you didn't click submit, there are 99.9% chances this code is wrong
Sep 16 12:57:21 <qswz>	I could spend 10mn to find a counter-example (because I don't wnt to lower my leetcode submissions stas)
Sep 16 12:57:39 <qswz>	or you could be kind enough to admit
Sep 16 12:59:02 <grr12314>	и прессед тхе годдамнед субмит
Sep 16 12:59:08 <grr12314>	i pressed the goddamned submit
Sep 16 12:59:14 <xyz111>	Hi All, I am using template literals to include HTML in my javascript. It's really convenient, but lacks syntax highlighting. I discovered that atom will syntax highlight a template literal if you tag it with html (i.e. html`<div></div>`), however this code does not run in the browser as it expects a function called html() - I was wondering if there's an easy 'passthrough' function I can create called html that just returns the compile
Sep 16 12:59:15 <xyz111>	:)
Sep 16 13:01:06 <qswz>	dam, it seems correct
Sep 16 13:01:16 <grr12314>	hmw_metalab i think you want something like return check_credentials().then(check_sanity).then(request_confirmation).then(execute)
Sep 16 13:02:36 <hmw_metalab>	Thanks for your patience :)
Sep 16 13:03:06 <qswz>	grr12314: ok, you're good, thx
Sep 16 13:04:23 <grr12314>	xyz111 you could do const html = String.raw
Sep 16 13:04:43 <grr12314>	String.raw differs from untagged literals in how escapes work
Sep 16 13:04:54 <grr12314>	(or dont)
Sep 16 13:06:48 <hmw_metalab>	Ah!! Another insight happened. How is this so difficult? *shakes head*
Sep 16 13:07:08 <qswz>	I got one-lined
Sep 16 13:08:47 <qswz>	xyz111: the 'compiled' template? like the template with all variables replaced?
Sep 16 13:08:57 <adrian_1908>	When a JS file imports another module, is the path relative to the JS file? I can't seem to get relative paths to work, whereas absolute ones "/path/to/file" work.
Sep 16 13:09:52 <xyz111>	qswz: yes
Sep 16 13:09:59 <hmw_metalab>	I think, I can feel new neurons growing in my brain...
Sep 16 13:10:06 <qswz>	xyz111: I do the same, I have a template function (module.exports = (someVar, someOtherVar) => `<!doctype html><html> ....`
Sep 16 13:10:29 <qswz>	xyz111: then just evaluate it with the given arguments you want
Sep 16 13:10:39 <hmw_metalab>	grr12314: also, your line of code is pretty pretty
Sep 16 13:11:43 <xyz111>	qswz: not sure I follow - where do you actually define the 'html' function? Note, that I'm doing this primarily to get syntax highlighting in atom!
Sep 16 13:12:08 <qswz>	xyz111: in a whatever file, I named it index.html.js
Sep 16 13:12:15 <qswz>	oh
Sep 16 13:12:22 <qswz>	I'm using it for a server
Sep 16 13:12:40 <qswz>	so nvm, you're usecase is different
Sep 16 13:13:38 <xyz111>	yeah, I literally just want the html function to be a passthrough that gives me the compiled string without modifying at all
Sep 16 13:13:58 <qswz>	you can't 'compile' it
Sep 16 13:14:07 <qswz>	just make a function
Sep 16 13:14:27 <qswz>	the advantage of a html`` is to safe-scape variabes for example, to avoid injections
Sep 16 13:14:35 <qswz>	safe-escape
Sep 16 13:14:57 <adrian_1908>	Problems solved, `import` doesn't use unix-like notation. For relative references, you always have to prefix your path with "./"
Sep 16 13:14:59 <xyz111>	the only solution I can see is manually going through every line and every var and putting together the compiled func myself
Sep 16 13:15:11 <qswz>	but still do: (var1, var2) => html`<div data-v1="${var1}">ok</div>`
Sep 16 13:15:57 <qswz>	xyz111: maybe, I don't see clearly what you want, uou could use an AST parser is you need to convert JS code tho
Sep 16 13:16:06 <qswz>	like acorn
Sep 16 13:16:08 <xyz111>	qswz: something like this: https://medium.com/@trukrs/tagged-template-literal-for-html-templates-4820cf5538f9 (see heading Put It Together)
Sep 16 13:17:02 <qswz>	a template tag function is still a function
Sep 16 13:17:48 <grr12314>	wow that article is so all over the place lol
Sep 16 13:18:02 <xyz112>	yeah, it's not great
Sep 16 13:18:03 <grr12314>	but it basically reimplemented a String.raw polyfill
Sep 16 13:18:09 <qswz>	n> let html=(xs, ...o) => o.reduce((oi,i)=>oi+xs[i+1], xs[0]); html`hello ${1+1}`
Sep 16 13:18:11 <jellobot>	(okay) 'hello undefined'
Sep 16 13:18:42 <qswz>	n> let html=(xs, ...o) => o.reduce((s,oi,i)=>s+oi+xs[i+1], xs[0]); html`hello ${1+1}`
Sep 16 13:18:43 <jellobot>	(okay) 'hello 2'
Sep 16 13:18:55 <xyz112>	that looks pretty good
Sep 16 13:19:37 <grr12314>	n> let html = String.raw; html`hello ${1+1}`
Sep 16 13:19:38 <jellobot>	(okay) 'hello 2'
Sep 16 13:19:40 <xyz112>	it just feels like a lot of hard work, just to get syntax highlighting in atom!
Sep 16 13:19:56 <xyz112>	grr12314: that's more like it...
Sep 16 13:20:24 <grr12314>	thats what i said 15 mins ago
Sep 16 13:20:26 <qswz>	n> let html=(xs, ...o) => o.reduce((s,oi,i)=>s+`${oi}`.replace(/<\/script>/g,'</scr+ipt>')+xs[i+1], xs[0]); html`hello ${1+1}`
Sep 16 13:20:28 <jellobot>	(okay) 'hello 2'
Sep 16 13:20:34 <qswz>	safe escape
Sep 16 13:20:40 <xyz111>	grr12314: apologies, I'm not that bright sometimes...
Sep 16 13:20:43 <xyz111>	;D
Sep 16 13:20:45 <xyz111>	:D
Sep 16 13:21:17 <grr12314>	uh
Sep 16 13:21:56 <grr12314>	nothing safe about it really
Sep 16 13:24:06 <grr12314>	it breaks the script closing tag, but it will still execute things in onmousemove, onload, onerror, or have the potential (or rather, guarantee, now with the mismatched opening/closing tags) to screw up formatting
Sep 16 13:25:04 <qswz>	yea it's not fully safe
Sep 16 13:25:18 <qswz>	like for href="javascript:.."
Sep 16 13:25:35 <qswz>	it was just an example
Sep 16 13:26:05 <qswz>	!npm html-escape
Sep 16 13:26:05 <jellobot>	qswz, html-escape@2.0.0: Escape string for use in html - https://www.npmjs.com/package/html-escape
Sep 16 13:26:14 <qswz>	dunno how good those packages are
Sep 16 13:26:32 <grr12314>	https://www.npmjs.com/package/html-template-tag
Sep 16 13:27:28 <qswz>	https://wonko.com/post/html-escaping/
Sep 16 13:27:55 <qswz>	doing it well probably requires to parse html
Sep 16 13:29:00 <qswz>	!npm html-es6cape
Sep 16 13:29:01 <jellobot>	qswz, html-es6cape@1.0.5: Escape HTML special characters (including `) - https://www.npmjs.com/package/html-es6cape
Sep 16 13:30:10 <qswz>	https://github.com/AntonioVdlC/html-es6cape/blob/master/src/index.js behh
Sep 16 13:30:45 <qswz>	so in short, use react for templating
Sep 16 13:30:48 <slikts>	leetcode doesn't support Array#flatMap
Sep 16 13:31:03 <qswz>	https://github.com/reactjs/express-react-views
Sep 16 13:31:35 <qswz>	slikts: yea sadly, I don't know how it works because it seems executed locally
Sep 16 13:33:53 <slikts>	qswz: https://gist.github.com/slikts/57b3b1cb8b469aa28fd75f3fbf9c78ea
Sep 16 13:35:45 <qswz>	slikts: you know that grr12314's one-liner works?
Sep 16 13:36:59 <slikts>	what oneliner
Sep 16 13:37:33 <grr12314>	nums.reduce(([c,m],v)=>[Math.max(c+v,v),Math.max(m,c+v,v)],[-1/0,-1/0])[1]
Sep 16 15:45:11 *	Disconnected ()
**** ENDING LOGGING AT Mon Sep 16 15:45:11 2019

**** BEGIN LOGGING AT Mon Sep 16 15:45:39 2019

Sep 16 15:45:39 *	Now talking on ##javascript
Sep 16 15:45:39 *	Topic for ##javascript is: JavaScript is *not* Java. | Just ask your question. | Say "!mdn abc" for docs on "abc". | Don't paste code in the channel. | Can't talk? Get registered on freenode ( https://git.io/vaTS2 )
Sep 16 15:45:39 *	Topic for ##javascript set by niggler!~niggler@unaffiliated/niggler (Tue Jan 15 07:16:23 2019)
Sep 16 15:48:13 <fred1807>	back to requestfullscreen()    ... If I double click, iframe player goes fullscreen, and when double click again, back to windowned.  But if I use .requestfullscreen(), the a double click in the fullscreen wont make to window again
Sep 16 15:48:32 <prometh>	when referring to html links within the same site (protocol and host), does "local" make sense?
Sep 16 15:49:04 <prometh>	or is that term reserved for the local file system?
Sep 16 15:49:23 <prometh>	like, "local to what?"
Sep 16 15:56:47 <slikts>	internal
Sep 16 16:00:44 <robin___>	Hello! How can I create and use the insertAnalytics function? https://pastebin.com/raw/NtynVUUp
Sep 16 16:00:59 <robin___>	I thought this was OK:
Sep 16 16:01:03 <robin___>	const analytics = require('./model/analytics');
Sep 16 16:01:03 <robin___>	const create = analytics({ firstname: 'firstname', lastname: 'lastname' });
Sep 16 16:01:14 <robin___>	but it returns undefined
Sep 16 16:03:42 <notchris>	function name is wrong
Sep 16 16:03:48 <notchris>	its Analytics({})
Sep 16 16:04:28 <notchris>	should be let create = Analytics({ firstname: 'firstname', lastname: 'lastname' })
Sep 16 16:05:03 <robin___>	thanks!
Sep 16 16:05:14 <notchris>	np
Sep 16 16:05:42 <robin___>	notchris: still undefined :O
Sep 16 16:06:05 <notchris>	'create' is undefined?
Sep 16 16:06:08 <robin___>	ye
Sep 16 16:06:12 <robin___>	const Analytics = require('./model/analytics');
Sep 16 16:06:12 <robin___>	let create = Analytics({ firstname: 'firstname', lastname: 'lastname' });
Sep 16 16:06:53 <notchris>	well first you can use Analytics again since you did a require
Sep 16 16:06:55 <notchris>	and its a const
Sep 16 16:07:01 <notchris>	var Analytics = (analytics) => is not valid
Sep 16 16:07:07 <notchris>	cant*
Sep 16 16:07:12 <robin___>	how can i require it then? :D
Sep 16 16:07:21 <notchris>	change the func name to test it
Sep 16 16:07:30 <notchris>	var AnalyticsTest = (analytics) =>
Sep 16 16:07:44 <notchris>	let create = AnalyticsTest(obj)
Sep 16 16:08:39 <laravel7>	what port is this listening on, how to find out? "start": "json-server server/index.js --routes server/routes.json --middlewares server/handle-delay.js server/handle-ads.js",
Sep 16 16:09:12 <robin___>	notchris: sorry. im unclear. first I need to require it right? then I need call the functions. How to do those two things?
Sep 16 16:09:19 <stennowork>	laravel7, look up netstat
Sep 16 16:09:20 <grr12314>	laravel7 watch your console, it probably tells you there
Sep 16 16:10:16 <grr12314>	also https://github.com/typicode/json-server#cli-usage
Sep 16 16:10:32 <notchris>	robin___:  you did const Analytics, so you cant use that variable name anymore, you need to change the name of the function
Sep 16 16:10:42 <notchris>	(when you required)
Sep 16 16:11:38 <laravel7>	i have to install it globally i guess 'json-server' is not recognized as an internal or external command,
Sep 16 16:11:53 <grr12314>	no, it can be local install
Sep 16 16:12:14 <sillyslux>	npx json-server?
Sep 16 16:12:15 <grr12314>	local dep bins are on the PATH during npm script execution
Sep 16 16:12:17 <notchris>	could be a issue with their npm
Sep 16 16:12:22 <notchris>	and their PATH
Sep 16 16:12:37 <grr12314>	its a npm start script right? so should just work
Sep 16 16:12:58 <grr12314>	if its in deps and you've ran npm i anyway
Sep 16 16:13:20 <laravel7>	its in the deps, its ok
Sep 16 16:15:40 <xvx>	how do I console.log the value in a text field (without pressing a submit button)
Sep 16 16:15:53 <xvx>	I tried this, but it's not working (maybe because it lacks submit button): https://paste.ubuntu.com/p/csJ4pPyGvC/
Sep 16 16:16:45 <grr12314>	something has to call your function tho
Sep 16 16:16:55 <xvx>	yes that part's fine lol
Sep 16 16:18:19 <prometh>	how do you increment a bigint ?
Sep 16 16:18:23 <grr12314>	not from what you're showing
Sep 16 16:18:41 <grr12314>	n> a=1n; ++a
Sep 16 16:18:42 <jellobot>	(okay) 2n
Sep 16 16:19:06 <xvx>	I was calling foo() in the console, expecting it to print the value, but it didn't grr12314
Sep 16 16:19:06 <prometh>	i've read that unary is unsupported
Sep 16 16:19:27 <Alexendoo>	unary + is unsupported
Sep 16 16:20:13 <grr12314>	xvx it probably did. you just had an empty value and didnt notice
Sep 16 16:20:14 <stennowork>	how would unary + relate to incrementation
Sep 16 16:20:24 <prometh>	bigint += 5
Sep 16 16:20:26 <prometh>	bigint++
Sep 16 16:20:42 <stennowork>	unary plus means 'cast to number'
Sep 16 16:20:44 <stennowork>	one plus
Sep 16 16:20:44 <grr12314>	n> a=1n; +a
Sep 16 16:20:46 <jellobot>	(fail) TypeError: Cannot convert a BigInt value to a number
Sep 16 16:20:49 <grr12314>	n> a=1n; -a
Sep 16 16:20:50 <jellobot>	(okay) -1n
Sep 16 16:21:12 <grr12314>	weird that they made unary - work but not unary +
Sep 16 16:21:14 <Alexendoo>	++ is still a unary operator, it's not difficult to see how you could misremember it as all unary operators are unsupported
Sep 16 16:21:17 <grr12314>	it should just be a no-op :p
Sep 16 16:21:33 <Alexendoo>	asm.js uses unary + to ensure values are Numbers
Sep 16 16:21:40 <prometh>	this is just another reason to disallow unary operators in a codebase
Sep 16 16:21:49 <stennowork>	wut
Sep 16 16:24:39 <prometh>	https://eslint.org/docs/rules/no-plusplus
Sep 16 16:24:58 <stennowork>	unary + is unrelated to unary ++
Sep 16 16:25:46 <NoiseEee>	urinary
Sep 16 16:25:56 <prometh>	okay, but += doesn't support bigInt
Sep 16 16:26:02 <prometh>	yet -= does
Sep 16 16:26:05 <prometh>	i'd just avoid them completely
Sep 16 16:26:18 <Alexendoo>	+= supports bigint
Sep 16 16:26:22 <prometh>	hmm
Sep 16 16:26:24 <stennowork>	wat
Sep 16 16:26:29 <stennowork>	it was just shown
Sep 16 16:26:37 <stennowork>	n> let bla = 1n; ++bla;
Sep 16 16:26:38 <jellobot>	(okay) 2n
Sep 16 16:26:41 <stennowork>	gasp
Sep 16 16:26:52 <stennowork>	n> let bla = 1n; bla += 1n; bla
Sep 16 16:26:53 <jellobot>	(okay) 2n
Sep 16 16:26:56 <prometh>	what does `+a` even do?
Sep 16 16:27:06 <stennowork>	'cast to Number'
Sep 16 16:27:11 <prometh>	oh, that's ugly
Sep 16 16:27:12 <stennowork>	n> +'123'
Sep 16 16:27:13 <jellobot>	(okay) 123
Sep 16 16:27:35 <prometh>	i think i see why people hate js
Sep 16 16:27:47 <Alexendoo>	prometh: You pasted += 5, which is adding a Number, you can't mix BigInts and Numbers implicitly. Would have to be += 5n (or convert explicitly if it's from a number)
Sep 16 16:27:54 <stennowork>	because they don't understand it?
Sep 16 16:28:02 <prometh>	stennowork: too much to memorize
Sep 16 16:28:07 <stennowork>	roflmao
Sep 16 16:28:09 <grr12314>	lol
Sep 16 16:28:12 <stennowork>	yeah programming is like that
Sep 16 16:28:28 <prometh>	Alexendoo: can this be done?:  `a=BigInt(0); a += 5` ?
Sep 16 16:28:48 <grr12314>	if you tried you'd have known already
Sep 16 16:28:55 <prometh>	tried where?
Sep 16 16:28:59 <grr12314>	also he just told you, no
Sep 16 16:29:02 <prometh>	v8 has bigint ?
Sep 16 16:29:03 <systemfault>	Anywere?
Sep 16 16:29:07 <systemfault>	TIAS?
Sep 16 16:29:20 <prometh>	?
Sep 16 16:29:27 <systemfault>	Try It And See?
Sep 16 16:29:27 <prometh>	oh, try it and see
Sep 16 16:29:38 <systemfault>	Takes half a second.
Sep 16 16:29:47 <grr12314>	yes it has BigInt... what did you think the 1n etc literals above were?
Sep 16 16:30:31 <prometh>	i dont' even know what 1n is :)
Sep 16 16:30:36 <stennowork>	O__________O
Sep 16 16:30:46 <systemfault>	The "n" suffix means that it's a BigInt
Sep 16 16:30:47 <grr12314>	well hopefully now you do
Sep 16 16:30:48 <stennowork>	i am outta here
Sep 16 16:30:56 <systemfault>	n> 1n + 2n
Sep 16 16:30:57 <jellobot>	(okay) 3n
Sep 16 16:31:06 <prometh>	didn't we have "n" before bigint?
Sep 16 16:31:11 <systemfault>	No...
Sep 16 16:31:22 <prometh>	i thought i remember seeing it
Sep 16 16:31:42 <prometh>	maybe it was "e" ?
Sep 16 16:32:00 <systemfault>	That's exponential notation, it's unrelated.
Sep 16 16:32:06 <systemfault>	n> 1e3
Sep 16 16:32:07 <jellobot>	(okay) 1000
Sep 16 16:32:10 <prometh>	ah
Sep 16 16:32:34 <prometh>	why did we need bigint if we had e ?
Sep 16 16:32:45 <prometh>	just max_safe_number and backwards compat ?
Sep 16 16:32:47 <systemfault>	Because it's unrelated....
Sep 16 16:33:21 <systemfault>	The largest integer you can represent on a 64 bit float (number in JS) is 2**53 - 1
Sep 16 16:34:08 <grr12314>	well
Sep 16 16:34:44 <grr12314>	you can represent larger ones :p  but not all of them, so thats the largest "safety guaranteed" number
Sep 16 16:34:48 <prometh>	what if htey're running 32bit ?
Sep 16 16:35:09 <graingert>	It's doubles everywhere forever prometh
Sep 16 16:35:20 <prometh>	does max_safe_number have a dfiferent value?
Sep 16 16:35:30 <grr12314>	64 bit floats are available on 32 bit cpus too
Sep 16 16:35:39 <graingert>	Different to what prometh ?
Sep 16 16:35:50 <prometh>	graingert: 32bit vs 64bit system
Sep 16 16:35:54 <yakiza_>	I have a very complex json file and i am wondering is it worth  loopong though the json objects and subobjects to create  1 javascript object that i can access easily ?
Sep 16 16:35:57 <grr12314>	and even if they aren't the js specs require it, so the engine would do it in software
Sep 16 16:36:18 <graingert>	yakiza_: what
Sep 16 16:36:18 <prometh>	neat
Sep 16 16:36:28 <graingert>	!no loops @ yakiza_
Sep 16 16:36:28 <ecmabot>	yakiza_: ECMAScript's Array contains a number of built-in methods for iteration (e.g., map, reduce, every, some, filter, and forEach). They relieve the need for manual iteration, provide better abstraction than a `for` loop, and make it clear what your iteration is doing. See https://gist.github.com/ljharb/58faf1cfcb4e6808f74aae4ef7944cff
Sep 16 16:36:39 <graingert>	yakiza_: you mean like stream processing?
Sep 16 16:37:09 <yakiza_>	graingert:  okay  let me check that out,  nooo thats why i am asking relatively new to the whole thing
Sep 16 16:37:37 <graingert>	yakiza_: what's your overall goal?
Sep 16 16:37:46 <sillyslux>	yakiza_, you can parse to js object natively
Sep 16 16:38:05 <yakiza_>	i want to display the id of each object and  based on the object the user selects display certain properties etc
Sep 16 16:38:37 <graingert>	yakiza_: like jq?
Sep 16 16:38:37 <sillyslux>	you want `JSON.parse(jsonstr)`
Sep 16 16:38:41 <yakiza_>	 but atm i have json object that has multiple sub objefcts and i thought by looping though the json object and generating a single javascript objkect with a lot of attributes would be easier
Sep 16 16:38:52 <grr12314>	yes, it might make sense to index them by id
Sep 16 16:39:01 <graingert>	yakiza_: are you looking to make a UI like jq?
Sep 16 16:39:18 <graingert>	jq is a shell app for processing and filtering json
Sep 16 16:39:19 <sillyslux>	!json object @yakiza_
Sep 16 16:39:19 <ecmabot>	yakiza_: JSON object is an often misused buzzword that does not have a well-defined meaning. See https://github.com/robotlolita/screw-the-buzzwords/wiki/JSON for alternatives to express what you mean.
Sep 16 16:39:24 <yakiza_>	i have a json tha contains books so each book object holds sub object with book attributes subobject with author details etc etc
Sep 16 16:39:49 <sillyslux>	it's either json string or js object
Sep 16 16:40:07 <yakiza_>	.json file
Sep 16 16:40:18 <stennowork>	so a json string
Sep 16 16:40:21 <yakiza_>	yes
Sep 16 16:40:46 <sillyslux>	do you use JSON.parse()?
Sep 16 16:40:52 <yakiza_>	yes
Sep 16 16:41:01 <sillyslux>	so you get a js object
Sep 16 16:41:02 <yakiza_>	json stringify
Sep 16 16:41:05 <niggler>	i love the chromium bug tracker
Sep 16 16:41:06 <niggler>	https://bugs.chromium.org/p/chromium/issues/detail?id=1004297&q=&colspec=ID%20Pri%20M%20Stars%20ReleaseBlock%20Component%20Status%20Owner%20Summary%20OS%20Modified
Sep 16 16:41:20 <yakiza_>	json.stringify  to get the value in a string
Sep 16 16:41:38 <yakiza_>	ill have a bit of a read and come back to you guys
Sep 16 16:41:43 <yakiza_>	 with better questions
Sep 16 16:42:00 <yakiza_>	 thank you for the help and the links ill read them rn get some more knowledge on this thing
Sep 16 16:43:05 <stennowork>	quite some activity in that bug list
Sep 16 16:43:14 <stennowork>	inb4 'butt list'
Sep 16 16:47:16 <niggler>	anyone using chrome 76+
Sep 16 16:47:47 <stennowork>	Version 77.0.3865.75
Sep 16 16:47:48 <niggler>	https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/addHitRegion does the codepen work
Sep 16 16:47:58 <niggler>	scroll down in the page, there's an open in codepen link
Sep 16 16:48:05 <niggler>	getting an error Uncaught TypeError: ctx.addHitRegion is not a function
Sep 16 16:48:22 <niggler>	wonder if chrome broke or removed the feature
Sep 16 16:48:22 <stennowork>	same
Sep 16 16:49:07 <pandem>	it says its behind a flag?
Sep 16 16:49:13 <stennowork>	 This feature is behind the Experimental Web Platform Features preference. To change preferences in Chrome, visit chrome://flags.
Sep 16 16:49:18 <Alexendoo>	The codepen relies on the order in which the JS is loaded
Sep 16 16:49:30 <Alexendoo>	Perhaps codepen had it in the head before or something and now it's at the end of the body
Sep 16 16:49:39 <niggler>	nvm its behind a flag, forgot what settings were enabled
Sep 16 16:50:25 <Alexendoo>	Oh, nevermind no it doesn't
Sep 16 16:50:39 <Alexendoo>	I assumed that JS was in a script but it's a textarea
Sep 16 16:51:07 <niggler>	stupid experimental features
Sep 17 10:23:00 *	Disconnected ()
**** ENDING LOGGING AT Tue Sep 17 10:23:00 2019

**** BEGIN LOGGING AT Tue Sep 17 10:23:27 2019

Sep 17 10:23:27 *	Now talking on ##javascript
Sep 17 10:23:27 *	Topic for ##javascript is: JavaScript is *not* Java. | Just ask your question. | Say "!mdn abc" for docs on "abc". | Don't paste code in the channel. | Can't talk? Get registered on freenode ( https://git.io/vaTS2 )
Sep 17 10:23:27 *	Topic for ##javascript set by niggler!~niggler@unaffiliated/niggler (Tue Jan 15 07:16:23 2019)
Sep 17 10:24:04 <tsujp>	Ah postProcess would be where I set the value from the result of my heavy `call()` right graingert ?
Sep 17 10:24:56 <graingert>	const preprocess = (assetAddress, i) => {
Sep 17 10:24:56 <graingert>	  // fill in the code here
Sep 17 10:24:56 <graingert>	};
Sep 17 10:24:56 <graingert>	const postprocess = (assetAddress, i, callresult) => {
Sep 17 10:24:56 <graingert>	  // fill in the code here
Sep 17 10:24:57 <graingert>	};
Sep 17 10:24:57 <graingert>	(async () => {
Sep 17 10:24:58 <graingert>	  console.log(
Sep 17 10:24:58 <graingert>	    await Promise.all(
Sep 17 10:24:59 <graingert>	      assetAddresses.map(async (v, i) =>
Sep 17 10:24:59 <graingert>	        postprocess(v, i, await call(...preprocess(v, i)))
Sep 17 10:25:00 <graingert>	      )
Sep 17 10:25:32 <mobidrop>	let me guess: you want us to give you the "fill in the code here" ?
Sep 17 10:25:33 <ashnur>	place oriented programming
Sep 17 10:25:39 <ljharb>	please never paste multiple lines of code into irc
Sep 17 10:25:52 <graingert>	yeah I pressed the wrong button
Sep 17 10:25:54 <mobidrop>	you should do your own homework you'll learn more that way
Sep 17 10:26:09 <graingert>	regular enter rather than shift enter
Sep 17 10:26:45 <graingert>	tsujp: did you see my paste?
Sep 17 10:27:16 <tsujp>	Uhh I don't
Sep 17 10:27:21 <tsujp>	What I am trying to understand mobidrop
Sep 17 10:27:25 <tsujp>	I did graingert
Sep 17 10:27:48 <graingert>	you should just fill in the code in preprocess and postprocess
Sep 17 10:27:48 <graingert>	preprocess should return an array
Sep 17 10:29:24 <tsujp>	I'm not sure I see the use of preprocess here, call is just taking those inputs and doing the network call itself
Sep 17 10:29:39 <graingert>	it wasn't clear from your example because call had no args
Sep 17 10:29:54 <graingert>	just show me your code with those placeholders filled in and I'll refactor it
Sep 17 10:30:45 <tsujp>	I'll work on that now
Sep 17 10:33:58 <graingert>	tsujp: great stuff how's it going?
Sep 17 10:34:13 <tsujp>	Tricky, I do need preprocess so I am working into this stuff now
Sep 17 10:34:29 <tsujp>	I am slow with these things sometimes, I start stop think start stop think etc
Sep 17 10:38:30 <sinclair>	um, im back to this issue again...i need to find a semi decent browser test runner that isn't karma to run both firefox and chrome browser environments
Sep 17 10:38:37 <sinclair>	is karma the only thing out there?
Sep 17 10:38:53 <sinclair>	that would be a shame
Sep 17 10:41:31 <graingert>	tsujp: that's ok just keep posting what you got so far
Sep 17 10:41:51 <graingert>	sinclair: karma is pretty good tbh
Sep 17 10:42:14 <sinclair>	graingert, i don't know about that
Sep 17 10:42:23 <sinclair>	i've found it tho be a PITA
Sep 17 10:42:27 <graingert>	well now you know
Sep 17 10:43:28 <sinclair>	graingert, its tempting to just use puppeteer (i assume that's what everyone just uses) and say 'multi browser headless testing is too messy and slow and crap to do properly, ignore'
Sep 17 10:46:51 <tsujp>	so far graingert https://gist.github.com/tsujp/50bd5e0bfd770acd9762329a6f64115b
Sep 17 10:47:39 <sinclair>	graingert, i think between karma and mocha, somethings not doing it for me mate
Sep 17 10:48:48 <graingert>	tsujp: why did you remove assetAdresses
Sep 17 10:48:58 <graingert>	And it looks like your comments suggest mutation
Sep 17 10:49:10 <graingert>	Are you expecting to make one call per item?
Sep 17 10:49:47 <graingert>	tsujp: you need to write the code without modifying anything I added
Sep 17 10:49:57 <graingert>	Only change the bits with the comments
Sep 17 10:52:01 <tsujp>	I'm not modifying addresses
Sep 17 10:52:11 <tsujp>	check line 6 for how I need to call getGenericRates
Sep 17 10:52:53 <tsujp>	graingert
Sep 17 10:53:22 <Nozzzle>	test
Sep 17 10:53:28 <MJCDawy>	t0ast
Sep 17 10:53:28 <thykka>	test fail.
Sep 17 10:53:35 <thykka>	try again? y/n
Sep 17 10:53:38 <MJCDawy>	noozle
Sep 17 10:55:39 <sinclair>	i have a really stupid idea, running UI logic inside a web worker
Sep 17 10:55:49 <robin___>	Hello! Why is this returning Promise<Pending>? https://pastebin.com/raw/bZExfKuG thanks
Sep 17 10:56:04 <graingert>	tsujp: rename it back to "call"
Sep 17 10:56:31 <graingert>	robin___: you need to await it where it's used
Sep 17 10:56:38 <sinclair>	graingert, can i borrow your brain for a bit?
Sep 17 10:56:58 <robin___>	graingert: I do: const newContacts = await this.appendContactTags(contacts);
Sep 17 10:57:08 <graingert>	robin___: also return { ...contact, tagIds}
Sep 17 10:57:26 <thykka>	sinclair, i heard they give a discount for a byte..
Sep 17 10:57:38 <tsujp>	I cannot graingert, so `call()` needs to run only one thing but it's receiving an array to I need to make `call()` loop the array and do the executions, then postProcess will have to accept an array now
Sep 17 10:57:47 <graingert>	tsujp: no it's not
Sep 17 10:57:49 <sinclair>	thykka, maybe i can borrow your brain then
Sep 17 10:57:51 <tsujp>	I'll try get it working and then paste because I don't understand why I cannot do that right now
Sep 17 10:57:52 <tsujp>	It is
Sep 17 10:58:01 <sinclair>	thykka, what do you think about the idea of running UI logic in a web worker?
Sep 17 10:58:04 <graingert>	tsujp: it shouldn't access the other addresses right?
Sep 17 10:58:12 <graingert>	You're processing one address at a time
Sep 17 10:58:28 <thykka>	sinclair, i don't know. why would you do so?
Sep 17 10:58:38 <sinclair>	thykka, running untrusted script
Sep 17 10:59:04 <sinclair>	thykka, what im pondering is this...
Sep 17 10:59:07 <graingert>	sinclair: use a sandboxed iframe
Sep 17 10:59:21 <graingert>	sinclair: realms are coming
Sep 17 10:59:25 <sinclair>	1) dedicate an element on a page as a 'owned' element
Sep 17 10:59:43 <sinclair>	2) start a web worker and message to and from the page
Sep 17 10:59:51 <graingert>	Also Google has a thing for running untrusted js in ads that's open source
Sep 17 11:00:08 <sinclair>	3) marshal DOM operations between worker and page, and isolate them to said element
Sep 17 11:00:24 <MJCDawy>	"wrap it in a module"
Sep 17 11:00:26 <sinclair>	graingert, well, i don't know how much of that i can borrow on
Sep 17 11:00:29 <MJCDawy>	pretty high tech ik
Sep 17 11:00:30 <MJCDawy>	:P
Sep 17 11:00:42 <sinclair>	MJCDawy, the world needs less of those
Sep 17 11:01:00 <graingert>	sinclair: sandboxed iframe is the way and the light right now
Sep 17 11:01:16 <sinclair>	graingert, um, yeah, but i don't know if i can use it
Sep 17 11:01:18 <MJCDawy>	whats a "sandboxed" iframe
Sep 17 11:01:24 <tsujp>	graingert recheck the gist, https://gist.github.com/tsujp/50bd5e0bfd770acd9762329a6f64115b
Sep 17 11:01:26 <MJCDawy>	versus a regular one lol
Sep 17 11:01:39 <sinclair>	graingert, basically, i want to write a kernel in a web page >_>
Sep 17 11:01:58 <grr12314>	the google thing is called caja i think
Sep 17 11:02:14 <MJCDawy>	I mean
Sep 17 11:02:27 <tsujp>	This is how the data is being used by virtua of how you transform a list A, B, C, D into symmetric pairs AB, AC, AD, BA, CA, DA, BC, BD, CD, CD, CD, DC
Sep 17 11:02:28 <MJCDawy>	running a second js vm isn't exactly some huge invention, by whatever means
Sep 17 11:02:28 <sinclair>	graingert, i want to effectively have a setup where workers request 'fd's via syscalls, with the syscalls going out over postMessage()
Sep 17 11:02:35 <MJCDawy>	iframe or "caca"
Sep 17 11:02:57 <graingert>	tsujp: ah in that case you need a prepreprocess(assetAdresses)
Sep 17 11:03:07 <sinclair>	graingert, and of some note, the page itself will be running webrtc
Sep 17 11:03:12 <MJCDawy>	what about preprepreprocess
Sep 17 11:03:57 <sinclair>	graingert, opening a socket (lets assume a tcp socket) will have the web worker call out to the page to get webrtc to open a RTCDataChannel
Sep 17 11:04:16 <sinclair>	and return a fd to the web worker (which can be seen as a process)
Sep 17 11:04:32 <sinclair>	so i have much of this pretty much working, its just that, UI
Sep 17 11:04:37 <sinclair>	what to do about UI
Sep 17 11:05:12 <sinclair>	graingert, im contemplating opening 1 terminal (xterm) per web worker currently
Sep 17 11:05:43 <sinclair>	so, that would faciliate stdio between the page (now assuming the role of some desktop) and the service worker
Sep 17 11:06:27 <sinclair>	graingert, so i think i could manage a terminal, but im curious about general UI / DOM stuff
Sep 17 11:07:48 <sinclair>	graingert, its very very very tempting to limit DOM interactions to a subset of the DOM, then writing a little subset UI framework for presenting things to the DOM, but it was be inferior to just using the DOM outright
Sep 17 11:12:52 <graingert>	sinclair: just use iframes
Sep 17 11:28:50 <MJCDawy>	ye
Sep 17 11:28:59 <mobidrop>	roll to use iframes
Sep 17 11:31:00 <MJCDawy>	hm
Sep 17 11:31:12 <MJCDawy>	since when did incognito have access to saved accounts
Sep 17 11:33:28 <pandem>	since always
Sep 17 11:35:11 <incognito>	free highlight
Sep 17 11:35:30 <incognito>	i don't have access, except mine
Sep 17 11:37:28 <MJCDawy>	pandem, nah not even doe
Sep 17 11:37:34 <MJCDawy>	like 6 months ago it didn't
Sep 17 11:37:40 <MJCDawy>	I don't use it much
Sep 17 11:37:45 <MJCDawy>	just to stalk my ex occasionally
Sep 17 11:37:48 <MJCDawy>	>.>
Sep 17 11:38:18 <MJCDawy>	it didn't use to have any access to the same securestore as regular instances
Sep 17 11:38:38 <MJCDawy>	annoyingly for some reason it only provided a new instance of that store, globally
Sep 17 11:38:44 <MJCDawy>	so you had your normal one then 1 other
Sep 17 11:38:45 <pandem>	incognito doesnt save any data, however it does not mean that it would not have access to accounts saved on your browser
Sep 17 11:39:01 <MJCDawy>	*shrug* it didn't as I say last stalk
Sep 17 11:39:12 <MJCDawy>	account details been saved since forever
Sep 17 11:39:27 <MJCDawy>	but always had to hand type in incognito
Sep 17 11:52:29 <tsujp>	Is it possible to do a map such that each time I map to the next item I map the rest then move on again, e.g. if given the list [ foo, bar, alice, bob ] you start on foo at level 1, and at level 2 do bar, alice bob. Then level 1 moves ahead to bar and then you do alice and bob
Sep 17 11:54:12 <graingert>	tsujp: a moving window
Sep 17 11:55:38 <graingert>	tsujp: https://www.npmjs.com/package/each-cons
Sep 17 11:55:57 <graingert>	https://ramdajs.com/docs/#aperture
Sep 17 11:56:37 <graingert>	tsujp: ^
Sep 17 11:57:17 <tsujp>	Tasty
Sep 17 11:59:18 <graingert>	Wait do you mean   fn([1, 2, 3, 4]) // [[1, 2, 3, 4], [2, 3, 4], [3, 4], [4]]
Sep 17 12:02:43 <stennowork>	const recursive_map = ([first, ...rest], cb) => rest.length ? recursive_map(rest.map(cb), cb) : rest.map(cb); recursive_map([1,1,1,1], x => x +10
Sep 17 12:02:45 <stennowork>	oops
Sep 17 12:02:52 <stennowork>	n> const recursive_map = ([first, ...rest], cb) => rest.length ? recursive_map(rest.map(cb), cb) : rest.map(cb); recursive_map([1,1,1,1], x => x + 1)
Sep 17 12:02:53 <jellobot>	(okay) []
Sep 17 12:02:56 <stennowork>	:x
Sep 17 12:03:23 <Duikb00t>	Hi
Sep 17 12:04:17 <stennowork>	n> const recursive_map = ([first, ...rest], cb) => rest.length ? recursive_map(rest.map(cb), cb) : rest; recursive_map([1,1,1,1], x => x + 1)
Sep 17 12:04:18 <jellobot>	(okay) []
Sep 17 12:04:20 <stennowork>	meh
Sep 17 12:04:25 <stennowork>	idek what i am trying to do
Sep 17 12:06:49 <stennowork>	n> const recursive_map = ([first, ...rest], cb) => [first, rest.length ? ...recursive_map(rest.map(cb), cb) : ...rest]; recursive_map([1,1,1,1], x => x + 1)
Sep 17 12:06:50 <jellobot>	(fail) SyntaxError: Unexpected token ...
Sep 17 12:06:54 <stennowork>	it just gets worse
Sep 17 12:09:14 <MJCDawy>	its funny, you have like 50 items to put on your development timeline, it seems like too much work
Sep 17 12:09:24 <MJCDawy>	but you plan it out on a calendar and it's like, cruisy as lol
Sep 17 12:10:41 <tsujp>	I just did this instead lmfao stennowork https://gist.github.com/tsujp/1b655ea0cc5da7c3c34f986aff820218
Sep 17 12:10:46 <tsujp>	graingert ^
Sep 17 12:10:48 <tsujp>	works for me
Sep 17 12:11:53 <graingert>	tsujp: never use push in map
Sep 17 12:12:08 <graingert>	Use forEach if you're going to mutate
Sep 17 12:12:11 <tsujp>	How come? How do I rewrite that better
Sep 17 12:12:25 <tsujp>	But i need to get to the -1th index
Sep 17 12:12:36 <tsujp>	I've spent like 1 hour trying to rewrite this I cannot do it
Sep 17 12:12:38 <tsujp>	Nothing works but that
Sep 17 12:15:36 <sash87>	hi , anyone worked here in javascript ?
Sep 17 12:15:45 <sash87>	sorr react ?
Sep 17 12:15:56 <graingert>	!ask @ sash87
Sep 17 12:15:56 <ecmabot>	sash87: Don't ask to ask, nor if anyone is here or alive or uses something. Just ask your question. http://www.mikeash.com/getting_answers.html http://www.catb.org/esr/faqs/smart-questions.html https://jvns.ca/blog/good-questions/
Sep 17 12:16:33 <graingert>	tsujp: can you add what you expect your test to produce in a comment
Sep 17 12:16:39 <graingert>	  console.log(test) / [...
Sep 17 12:16:59 <graingert>	also never use let when you can use const, tsujp
Sep 17 12:17:02 <graingert>	use eslint airbnb
Sep 17 12:17:05 <graingert>	!airbnb @ tsujp
Sep 17 12:17:06 <ecmabot>	tsujp: We tend to support airbnb's javascript style guide - it can be found here: https://github.com/airbnb/javascript you can enforce it in eslint with `npx install-peerdeps --dev eslint-config-airbnb-base && echo '{"extends": "airbnb-base"}' > .eslintrc` see also !eslint
Sep 17 12:17:09 <sash87>	On change of a select option I want to get some data from server and display in UI.. where to write the code in react ?
Sep 17 12:17:36 <tsujp>	updated https://gist.github.com/tsujp/1b655ea0cc5da7c3c34f986aff820218
Sep 17 12:17:39 <graingert>	sash87: depends
Sep 17 12:18:01 <graingert>	tsujp: show your code after running it through airbnb
Sep 17 12:18:07 <graingert>	!airbnb @ tsujp
Sep 17 12:18:08 <ecmabot>	tsujp: We tend to support airbnb's javascript style guide - it can be found here: https://github.com/airbnb/javascript you can enforce it in eslint with `npx install-peerdeps --dev eslint-config-airbnb-base && echo '{"extends": "airbnb-base"}' > .eslintrc` see also !eslint
Sep 17 12:19:06 <sash87>	graingert:  what does it mean by depends .. sorry I am new to react
Sep 17 12:19:25 <tsujp>	ill have to do it when im home
Sep 17 12:19:53 <sash87>	On change I want to make a http api request get the data and display on screen
Sep 17 12:21:53 <graingert>	tsujp: are you looking for all permutations of size 2?
Sep 17 12:22:01 <tsujp>	I am yes
Sep 17 12:23:30 <graingert>	are you sure
Sep 17 12:23:35 <graingert>	because it's not what you wrote
Sep 17 12:24:17 <tsujp>	I seem to suck :(
Sep 17 12:24:32 <tsujp>	might just shamelessly copy the map one from here: https://stackoverflow.com/questions/43241174/javascript-generating-all-combinations-of-elements-in-a-single-array-in-pairs/43241295
Sep 17 12:25:48 <graingert>	do you want combinations or permutations?
Sep 17 12:25:58 <graingert>	tsujp: ^
Sep 17 12:26:11 <graingert>	sash87: it depends what the rest of your app is doing
Sep 17 12:26:20 <graingert>	sash87: and are you using react-router?
Sep 17 12:26:29 <grr12314>	you mean the flatmap one?
Sep 17 12:26:50 <tsujp>	permutations graingert, BA is not the same as AB
Sep 17 12:27:39 <graingert>	tsujp: https://github.com/trekhleb/javascript-algorithms/tree/master/src/algorithms/sets/permutations
Sep 17 12:28:46 <graingert>	tsujp: is [A, A] allowed
Sep 17 12:28:55 <tsujp>	it is not
Sep 17 12:29:16 <tsujp>	and there should be no duplicates, so only [B, A] once
Sep 17 12:29:20 <graingert>	wait are you trying to iterate over all possible routes between points on a graph
Sep 17 12:29:25 <tsujp>	So all permutations minus those referencing themselves*
Sep 17 12:29:29 <graingert>	in one direction
Sep 17 12:29:39 <tsujp>	Yes but there are only two points, strictly 2
Sep 17 12:29:52 <tsujp>	So the route will only be maximally 1 edge between two nodes*
Sep 17 12:29:59 <tsujp>	i.e. [A, B, C] cannot occur
Sep 17 12:30:26 <tsujp>	Given the list [A, B, C] the output should be [AB, AC, BA, BC, BC, CB]
Sep 17 12:30:38 <tsujp>	excuse that duplicate BC there lmfao
Sep 17 12:30:41 <stennowork>	bc twice?
Sep 17 12:30:42 <stennowork>	ah
Sep 17 12:30:59 <stennowork>	so you have elements! connections
Sep 17 12:31:06 <stennowork>	oh man
Sep 17 12:31:10 <tsujp>	No I have n(n-1)
Sep 17 12:31:16 <stennowork>	now i ahve to check that recursive_map thing again
Sep 17 12:31:25 <stennowork>	n(n-1)(n-2)...
Sep 17 12:31:28 <stennowork>	so faculty
Sep 17 12:31:32 <stennowork>	or whats its called
Sep 17 12:31:33 <stennowork>	factorial
Sep 17 12:31:37 <tsujp>	No strictly n(n-1)
Sep 17 12:32:03 <stennowork>	oh because we only have 1 edge
Sep 17 12:32:23 <tsujp>	[A, B, C] => [AB, AC, BA, CA, BC, CB] which is 3 n so 3(3-1) => 3 * 2 = 6
Sep 17 12:32:28 <tsujp>	4 is 12
Sep 17 12:32:31 <tsujp>	et
Sep 17 12:32:32 <tsujp>	etc*
Sep 17 12:33:14 <stennowork>	hmm
Sep 17 12:33:36 <stennowork>	oh BA and AB are different once
Sep 17 12:33:41 <stennowork>	ok, ok
Sep 17 12:34:33 <graingert>	n> const fn = d => d.flatMap((l, i) => d.slice(i+1).map(r => [l, r])); fn([1, 2, 3, 4]);
Sep 17 12:34:34 <jellobot>	(okay) [ [ 1, 2 ], [ 1, 3 ], [ 1, 4 ], [ 2, 3 ], [ 2, 4 ], [ 3, 4 ] ]
Sep 17 12:36:38 <graingert>	tsujp: like that ^
Sep 17 12:36:49 <tsujp>	I am so silly
Sep 17 12:36:52 <tsujp>	Thank you mate :(
Sep 17 12:37:02 <stennowork>	wait
Sep 17 12:37:04 <tsujp>	I feel so dumb I couldn't figure this out, perhaps i should sleep more I dunno
Sep 17 12:37:08 <stennowork>	but that _is_ faculty
Sep 17 12:37:16 <stennowork>	and here [1,2] and [2,1] are the same?
Sep 17 12:37:33 <tsujp>	Oh wait no he's missing 1, 2 and then 2, 1
Sep 17 12:37:40 <stennowork>	yes
Sep 17 12:37:44 <graingert>	he?
Sep 17 12:37:49 <tsujp>	Whoops yeah with 4 elements [1, 2, 3, 4] it should have 12 outputs
Sep 17 12:37:51 <tsujp>	s/he
Sep 17 12:37:52 <tsujp>	they*
Sep 17 12:38:02 <niggler>	fatmap eh
Sep 17 12:38:05 <graingert>	you just said it shouldn't include those
Sep 17 12:38:23 <graingert>	const fn = d => d.flatMap((l, i) => d.map(r => [l, r])); fn([1, 2, 3, 4]);
Sep 17 12:38:29 <graingert>	n> const fn = d => d.flatMap((l, i) => d.map(r => [l, r])); fn([1, 2, 3, 4]);
Sep 17 12:38:30 <stennowork>	<tsujp> and there should be no duplicates, so only [B, A] once
Sep 17 12:38:31 <jellobot>	(okay) [ [ 1, 1 ], [ 1, 2 ], [ 1, 3 ], [ 1, 4 ], [ 2, 1 ], [ 2, 2 ], [ 2, 3 ], [ 2, 4 ], [ 3, 1 ], [ 3, 2 ], [ 3, 3 ], [ 3, 4 ], [ 4, 1 ], [ 4, 2 ], [ 4, 3 ], [ 4, 4 ] ]
Sep 17 12:39:30 <graingert>	n> const fn = d => d.flatMap((l, i) => d.map((r, j) => i == j ? [] : [l, r])); fn([1, 2, 3, 4]);
Sep 17 12:39:31 <jellobot>	(okay) [ [], [ 1, 2 ], [ 1, 3 ], [ 1, 4 ], [ 2, 1 ], [], [ 2, 3 ], [ 2, 4 ], [ 3, 1 ], [ 3, 2 ], [], [ 3, 4 ], [ 4, 1 ], [ 4, 2 ], [ 4, 3 ], [] ]
Sep 17 12:39:47 <graingert>	uhh
Sep 17 12:40:03 <graingert>	n> const fn = d => d.flatMap((l, i) => d.flatMap((r, j) => i == j ? [] : [[l, r]])); fn([1, 2, 3, 4]);
Sep 17 12:40:04 <jellobot>	(okay) [ [ 1, 2 ], [ 1, 3 ], [ 1, 4 ], [ 2, 1 ], [ 2, 3 ], [ 2, 4 ], [ 3, 1 ], [ 3, 2 ], [ 3, 4 ], [ 4, 1 ], [ 4, 2 ], [ 4, 3 ] ]
Sep 17 12:40:10 <graingert>	tsujp: ^
Sep 17 12:40:25 <stennowork>	wait should there be duplicates now or not
Sep 17 12:40:28 <stennowork>	because they said
Sep 17 12:40:29 <stennowork>	<tsujp> and there should be no duplicates, so only [B, A] once
Sep 17 12:40:36 <graingert>	up to you because there's all three options now
Sep 17 12:40:43 <stennowork>	so [B, A] and [A,B] are not duplicates
Sep 17 12:40:53 <graingert>	obviously ;)
Sep 17 12:40:59 <tsujp>	Correct [B, A] and [A, B] are not duplicates
Sep 17 12:41:02 <tsujp>	Wow that's it graingert...
Sep 17 12:41:03 <tsujp>	NICE
Sep 17 12:41:18 <tsujp>	What is this kind of thing called? A permutation right because the order _is_ important?
Sep 17 12:41:18 <graingert>	[A, A] is a duplicate of what exactly?
Sep 17 12:41:19 <stennowork>	using the kludge flatmap to avoid map.filter
Sep 17 12:41:38 <tsujp>	[A, A] is an edge to itself which isn't valid either
Sep 17 12:41:59 <graingert>	stennowork: it would be map.filter.map
Sep 17 12:42:18 <tsujp>	"Call possible binary permutations with distinct elements" <--- how to refer to this?
Sep 17 12:42:25 <tsujp>	All possible ...*
Sep 17 12:43:06 <graingert>	permutations(['1','2','3'],2)
Sep 17 12:43:52 <stennowork>	but then you have to argue if [2,1] has 'distinct elements' from [2,1]
Sep 17 12:44:19 <graingert>	tsujp: https://www.calculatorsoup.com/calculators/discretemathematics/permutations.php
Sep 17 12:44:38 <graingert>	stennowork: no you don't that's combinations
Sep 17 12:48:08 <xvx>	how can I point to an unknown part of a JSON
Sep 17 12:48:19 <xvx>	like this: `json.properties.*.items.properties` where * is unknown
Sep 17 12:49:16 <laravel7>	do you read glassdoor?
Sep 17 12:50:11 <stennowork>	xvx, you can't
Sep 17 12:50:15 <Woet>	laravel7: what is your Javascript question?
Sep 17 12:51:15 <xvx>	I'm trying to count items in ...*.items.properties but * could be anything
Sep 17 12:51:18 <xvx>	there's no way?
Sep 17 12:55:47 <deadbeat>	xvx: guess you could try Object.values(json.properties), loop over that and check for items.properties in every entry?
Sep 17 12:56:41 <stennowork>	assuming that * is just a depth of 1
Sep 17 12:57:07 <stennowork>	xvx, also you are pointing to a javascript object, right? not 'a JSON'
Sep 17 12:57:19 <xvx>	JSON
Sep 17 12:57:32 <xvx>	* is just one depth yes
Sep 17 12:57:42 <stennowork>	xvx, JSON is a string. you have to parse to javascript first
Sep 17 12:57:50 <niggler>	anyone work with google apis with js?
Sep 17 12:57:52 <stennowork>	const jsObject = JSON.parse(the_json)
Sep 17 12:57:55 <niggler>	like drive or sheets api
Sep 17 12:58:55 <stennowork>	maybe with google maps? idk
Sep 17 13:02:53 <incognito>	xvx : JSONPath(JsonStringVar,"$.*.items.properties")
Sep 17 13:03:43 <incognito>	xvx : i don't really know the structure of your json, if you could paste a sample; i could be more precise
Sep 17 13:03:56 <stennowork>	what language is that?
Sep 17 13:03:59 <stennowork>	its not javascript
Sep 17 13:07:14 <xvx>	https://paste.ubuntu.com/p/PkkVfrHSF6/ incognito
Sep 17 13:07:20 <incognito>	stennowork: yes, i am mixin; for this one, it needs the https://code.google.com/archive/p/jsonpath/
Sep 17 13:13:02 <incognito>	xvx:  btw, you should use an array for the items
Sep 17 13:13:38 <xvx>	don't think I can because of the libraryI'm inserting the json into
Sep 17 13:20:32 <laravel7>	who is calling reducer in redux?
Sep 17 13:20:52 <incognito>	xvx: it seems you need to loop (w/o third party lib)
Sep 17 13:21:11 <xvx>	looking into that atm
Sep 17 13:21:37 <xvx>	maybe not optimal performance wise but meh
Sep 17 13:24:31 <niggler>	()=>{}()
Sep 17 13:24:33 <niggler>	n> ()=>{}()
Sep 17 13:24:34 <jellobot>	(fail) SyntaxError: Unexpected token (
Sep 17 13:24:40 <niggler>	n> (()=>{})()
Sep 17 13:24:41 <jellobot>	(okay) undefined
Sep 17 13:28:31 <howdoi>	!dogballs
Sep 17 13:28:31 <ecmabot>	howdoi: (function () {}()) > (function () {})() … https://www.youtube.com/watch?v=taaEzHI9xyY#t=34m33s (from YUIConf 2011)
Sep 17 13:29:13 <grr12314>	its wrong, howdoi
Sep 17 13:29:13 <grr12314>	\
Sep 17 13:29:32 <howdoi>	grr12314: what's wrong?
Sep 17 13:29:47 <grr12314>	crockford in general, but also this particular statement
Sep 17 13:29:53 <howdoi>	lol
Sep 17 13:30:12 <howdoi>	off-topic: RMS!
Sep 17 13:31:20 <paulcarroty>	RMS quit with good
Sep 17 13:32:54 <laravel7>	do you use mapDispatchToProps or just pass action creators to connect?
Sep 17 13:33:30 <niggler>	how dare you grr12314 crockford is our lord and savior
Sep 17 13:41:06 <howdoi>	paulcarroty: but that's so strange, he is an eccentric anyway
Sep 17 13:43:41 <paulcarroty>	eccentric and covers pedophiles sometimes, yeah.
Sep 17 13:47:16 <laravel7>	there is no builtin javascript function to convert object to query params?
Sep 17 13:48:52 <graingert>	laravel7: npm has qs
Sep 17 13:49:13 <thykka>	n> Object.entries({foo: 1, bar: 'this is great'}).map(([key,val])=> `${key}=${val}`).join`&`
Sep 17 13:49:14 <jellobot>	(okay) 'foo=1&bar=this is great'
Sep 17 13:49:27 <thykka>	maybe put some encodeURIComponent in there x)
Sep 17 13:49:54 <stennowork>	in the browser you have https://developer.mozilla.org/en-US/docs/Web/API/URL
Sep 17 13:50:49 <stennowork>	and URLSearchParams
Sep 17 14:02:05 <celphi>	This is so weird.. why does the message send like this? https://jsfiddle.net/tj68w2cn/3/
Sep 17 14:02:18 <celphi>	But if I delete line 15 it doesnt send anything???
Sep 17 14:02:54 <celphi>	if i keep line 15,. then i get `blah blah`
Sep 17 14:06:44 <laravel7>	what is this underscore _page, _response naming convention and do you use it also? http://prntscr.com/p78rjq
Sep 17 14:08:20 <niggler>	private
Sep 17 14:08:33 <celphi>	yeah niggler
Sep 17 14:08:44 <celphi>	sorry about last night -- something came up
Sep 17 14:08:49 <niggler>	or in that case, probably a way to avoid masking `response`
Sep 17 14:09:26 <niggler>	nw celphi
Sep 17 14:09:47 <celphi>	How come line 15 makes it work?
Sep 17 14:10:24 <niggler>	so first, get rid of line 15
Sep 17 14:10:29 <niggler>	and see if just writing two newlines works
Sep 17 14:10:30 <laravel7>	even the keys in the object literals like _page?
Sep 17 14:11:08 <niggler>	celphi: so `      res.write('data: blah blah\n\n');  res.end()`
Sep 17 14:11:28 <niggler>	laravel7: in general, _ prefix indicates something you intend to be private
Sep 17 14:11:29 <celphi>	oh that does work
Sep 17 14:11:36 <celphi>	why 2?
Sep 17 14:11:46 <celphi>	or even one for that matter
Sep 17 14:11:49 <niggler>	in the specific case, its probably trying to avoid shadowing an existing value
Sep 17 14:11:58 <niggler>	celphi: probably somewhere in the depths of the spec
Sep 17 14:12:22 <niggler>	24 hours ago i didnt even know EventSource was a thing
Sep 17 14:12:36 <laravel7>	ok
Sep 17 14:12:43 <celphi>	oh haha. yeah im trying to learn them
Sep 17 14:13:19 <celphi>	not much documentation on it
Sep 17 14:13:35 <celphi>	at least i dont know where to look that is
Sep 17 14:14:27 <niggler>	yeah im not a huge fan of looking into those types of features unless there's a cool use case
Sep 17 14:14:58 <laravel7>	but its not even a class, just random variables in global functions, it looks like author is using it as `_disposableVarOverHere`
Sep 17 14:15:12 <haiiokarin>	hey, if someone wants to take a look at my problem - https://stackoverflow.com/questions/57973788/trying-to-export-chart-with-chartjs-and-react-but-getting-erorr here it's detailed and you can probably tell me here on channel what could be wrong :)
Sep 17 14:16:00 <haiiokarin>	oh solved
Sep 17 14:16:07 <Intelo>	Is this 29 liner code correct? needs improvements? Its working though/ it seems.. https://pastebin.ubuntu.com/p/YzKvVpPhvg/
Sep 17 14:16:23 <niggler>	29 lines is 30 too many Intelo
Sep 17 14:16:40 <celphi>	haiiokarin: try console.log(input)
Sep 17 14:16:40 <Intelo>	:)
Sep 17 14:16:43 <sillyslux>	Intelo, use more const
Sep 17 14:16:54 <sillyslux>	use more eslint
Sep 17 14:16:56 <Intelo>	sillyslux,  nice suggestion
Sep 17 14:17:01 <niggler>	or just return
Sep 17 14:17:23 <celphi>	haiiokarin: is that supposed to be a signle element?
Sep 17 14:17:27 <haiiokarin>	celphi: html2canvas expect only one element while input gives me array of html elements
Sep 17 14:17:28 <haiiokarin>	celphi: yeah
Sep 17 14:17:31 <niggler>	line 21 can just be `return tempSurveyList` and line 25 can be return []
Sep 17 14:17:31 <Intelo>	niggler, return?
Sep 17 14:17:33 <celphi>	getElements ByClassname is array
Sep 17 14:17:33 <haiiokarin>	didn't know that
Sep 17 14:17:40 <niggler>	then you avoid the finally clause entirely
Sep 17 14:17:53 <niggler>	also since its async
Sep 17 14:18:01 <Intelo>	niggler,  ya, its just style
Sep 17 14:18:05 <niggler>	you probably should throw from there and have your downstream stuff handle the error
Sep 17 14:18:31 <niggler>	unless this is supposed tobe some sort of safe function
Sep 17 14:18:32 <Intelo>	niggler,  if I get issues with database, I still want to return
Sep 17 14:18:39 <niggler>	sure
Sep 17 14:18:47 <niggler>	so yeah you can get rid of surveyListToReturn
Sep 17 14:18:54 <sillyslux>	celphi, haiiokarin getElementsByClassname returns a HTMLCollection
Sep 17 14:19:22 <Intelo>	niggler,  actually, exactly if I get error "unique key violation" then I want to return data fine but if any other database error, I want to return []. so how to do that?
Sep 17 14:19:33 <niggler>	test the error
Sep 17 14:19:34 <celphi>	right array like object sillyslux
Sep 17 14:19:38 <niggler>	error.message
Sep 17 14:19:46 <sillyslux>	yes, but live updated
Sep 17 14:19:47 <niggler>	and keep in mind, you can throw from an error handler
Sep 17 14:20:01 <niggler>	n> try { throw "wtf"; } catch(e) { throw "dafuq"; }
Sep 17 14:20:02 <jellobot>	(fail) dafuq
Sep 17 14:20:23 <sillyslux>	and doesn't provide all array methods
Sep 17 14:20:27 <Intelo>	niggler, hm..should I just test and compare string of error? "duplicate key value violates unique constraint"
Sep 17 14:20:36 <sillyslux>	a very limited subset in fact
Sep 17 14:20:44 <sillyslux>	call it iterable
Sep 17 14:20:47 <niggler>	test the message
Sep 17 14:20:51 <Intelo>	postgres tells code: '23505',
Sep 17 14:21:18 <celphi>	sillyslux: but you can just do Array.from(array_like_object)
Sep 17 14:21:22 <niggler>	n> try { throw new Error("what the heck") } catch(e) { throw new Error(e.message.match(/heck/) ? "heck
Sep 17 14:21:23 <jellobot>	(fail) SyntaxError: Invalid or unexpected token
Sep 17 14:21:23 <niggler>	n> try { throw new Error("what the heck") } catch(e) { throw new Error(e.message.match(/heck/) ? "heck
Sep 17 14:21:24 <jellobot>	(fail) SyntaxError: Invalid or unexpected token
Sep 17 14:21:30 <niggler>	n> try { throw new Error("what the heck") } catch(e) { throw new Error(e.message.match(/heck/) ? "heck" : "not heck"); }
Sep 17 14:21:31 <jellobot>	(fail) Error: heck
Sep 17 14:21:35 <niggler>	yay for keyboard failure
Sep 17 14:21:43 <celphi>	damn you type super fast
Sep 17 14:21:44 <sillyslux>	celphi, that would return an array
Sep 17 14:21:46 <niggler>	anyway Intelo like that, you can test
Sep 17 14:22:00 <niggler>	celphi: i need to get a new computer
Sep 17 14:22:09 <niggler>	using a 2018 macbook pro and the keyboard is awful
Sep 17 14:22:15 <celphi>	you typed that like crazy fast
Sep 17 14:22:15 <Intelo>	niggler,  wait, what to check? message string or anything else?
Sep 17 14:22:18 <niggler>	even with unshaky
Sep 17 14:22:25 <niggler>	test the actual message
Sep 17 14:22:42 <niggler>	throw new Error("blah") -- the error object will have a .message field
Sep 17 14:23:19 <niggler>	id also check if the wrapper exposes the code anywhere
Sep 17 14:24:18 <Intelo>	niggler,  shouldnt I check code of error only?
Sep 17 14:25:07 <niggler>	im saying look at the library
Sep 17 14:25:15 <niggler>	and see if they pass that postgres error code back to you in any way
Sep 17 14:28:21 <niggler>	this is in TS From a library:         case "e": const e = new Error(ErrorName[errcode]); (e as any).code = errcode; return e;
Sep 17 14:28:56 <niggler>	^^ i'd check if the db library passes back that postgres error code in a machine usable way
Sep 17 14:29:07 <stennowork>	(e as any), is that a normal ts pattern?
Sep 17 14:29:19 <niggler>	Error doesn't normally have a `.code` field
Sep 17 14:29:32 <niggler>	so you have to work around it, and yes that's the idiom stennowork
Sep 17 14:29:41 <stennowork>	i see, strange
Sep 17 14:29:50 <pandem>	i thought any is bad
Sep 17 14:29:50 <stennowork>	ok i see how it gets problematic once you extend instances
Sep 17 14:30:19 <niggler>	in general its bad, but the point is to isolate where you are working around the type system
Sep 17 14:30:20 <stennowork>	how about class CustomError extends Error
Sep 17 14:30:27 <stennowork>	and then with a code field
Sep 17 14:30:53 <niggler>	sure that's what you're "supposed" to do
Sep 17 14:31:06 <stennowork>	:P
Sep 17 14:31:39 <niggler>	at that point you're creating line noise for no real discernible benefit
Sep 17 14:33:44 <stennowork>	hmm
Sep 17 14:33:57 <stennowork>	hard to tell really isn't it
Sep 17 14:34:17 <niggler>	facing a bigger and more interesting type problem
Sep 17 14:34:19 <stennowork>	when you make the type system optional
Sep 17 14:34:29 <stennowork>	might be bikeshedding i guess
Sep 17 14:35:13 <niggler>	escape hatches let you mark where you are working around the typesystem
Sep 17 15:29:05 <tsujp>	Why am I getting this ESLint error? Error Parsing error: "parserOptions.project" has been set for @typescript-eslint/parser.
Sep 17 15:34:24 <OnkelTem>	Hi all
Sep 17 15:35:14 <OnkelTem>	I can deconstruct an object using this approach: const { var } = obj. But how to do the same w/o `const` keyword? E.g. let var; { var } = obj - this doesn't work
Sep 17 15:36:15 <OnkelTem>	except var = object.var  of course
Sep 17 15:36:36 <OnkelTem>	oops, var is another keyword, should be something different sorry
Sep 17 15:36:52 <OnkelTem>	s/var/foo/
Sep 17 15:39:41 <sillyslux>	obj={v:1}; let v; ({v}=obj); v
Sep 17 15:39:44 <sillyslux>	n> obj={v:1}; let v; ({v}=obj); v
Sep 17 15:39:45 <jellobot>	(okay) 1
Sep 17 15:40:34 <graingert>	!no var @ OnkelTem
Sep 17 15:40:35 <ecmabot>	OnkelTem: `var` defines a variable in the current function-level scope, and should not be used when `const` or `let` are available (see !babel, !const, and !let). Always use a keyword to declare variables, otherwise you will pollute the global scope (a keyword is required in strict mode).
Sep 17 15:40:37 <OnkelTem>	sillyslux: thanks!
Sep 17 15:40:49 <graingert>	OnkelTem: why bother mutating though
Sep 17 15:40:55 <OnkelTem>	graingert: I don't use var
Sep 17 15:41:02 <sillyslux>	it's reassignment, not mutation
Sep 17 15:41:08 <graingert>	OnkelTem: post your code where you wat to reassign
Sep 17 15:41:16 <graingert>	sillyslux: reassignment is a form of mutation
Sep 17 15:41:21 <niggler>	hmm is element.getAttribute("colspan") the same as element.colSpan ?
Sep 17 15:41:22 <sillyslux>	no?
Sep 17 15:41:25 <graingert>	yes
Sep 17 15:41:27 <sillyslux>	no
Sep 17 15:41:31 <graingert>	yes
Sep 17 15:41:32 <sillyslux>	no
Sep 17 15:41:34 <graingert>	yes
Sep 17 15:41:36 <sillyslux>	no
Sep 17 15:41:38 <graingert>	yes
Sep 17 15:41:39 <sillyslux>	no
Sep 17 15:41:41 <graingert>	yes
Sep 17 15:41:42 <sillyslux>	no
Sep 17 15:41:42 <OnkelTem>	Wow wow
Sep 17 15:41:43 <niggler>	stop niggling
Sep 17 15:42:16 <niggler>	reassignment doesn't mutate the original object but does change the system state
Sep 17 15:42:22 <OnkelTem>	graingert: something like: let cancel; while(true) { ... ({cancel} = yield ract(...)) ... }
Sep 17 15:42:24 <niggler>	move on and answer my question
Sep 17 15:43:02 <OnkelTem>	race*
Sep 17 15:43:15 <sillyslux>	niggler, property and html attribute aren't the same
Sep 17 15:43:23 <graingert>	OnkelTem: hmm that's a pain
Sep 17 15:43:37 <graingert>	OnkelTem: I'd probably go for ixjs there
Sep 17 15:44:04 <sillyslux>	e.g. changing a property won't be reflected in the dom, you'd need setAttribute for that
Sep 17 15:44:20 <OnkelTem>	graingert: sorry, what is that? Sure, not the best code
Sep 17 15:44:28 <graingert>	?
Sep 17 15:44:43 <OnkelTem>	ixjsowixosidid
Sep 17 15:44:59 <OnkelTem>	erm... I mean just ixjs yeah - what is that?
Sep 17 15:45:10 <sillyslux>	i may be wrong though, very wrong :(
Sep 17 15:45:48 <sillyslux>	i know rxjs and ix.io but not ixjs
Sep 17 15:45:50 <stennowork>	only the DOM representation of the element has properties
Sep 17 15:46:51 <stennowork>	<input type='bla'> -> el.getAttribute('type') is 'bla', and el.type is 'text'
Sep 17 15:46:55 <stennowork>	niggler, ^
Sep 17 15:47:35 <sillyslux>	el.id and attribute id seem to be synchronized
Sep 17 15:47:39 <stennowork>	so DOM element properties always have a possible valid value
Sep 17 15:47:42 <sillyslux>	but href attribute is not
Sep 17 15:47:52 <sillyslux>	according to some so answer
Sep 17 15:48:08 <sillyslux>	https://stackoverflow.com/a/10280487
Sep 17 15:48:15 <stennowork>	and DOM element attributes reflect the actual attribues provided in the markup
Sep 17 15:48:33 <stennowork>	ah yeah
Sep 17 15:48:52 <stennowork>	as they say in the SO, the boolean attributes are also interesting
Sep 17 15:49:00 <stennowork>	There is another case for the input's checked property. The DOM property returns true or false while the attribute returns the string "checked" or an empty string.
Sep 17 15:49:31 <graingert>	OnkelTem: it's a thingy for functional processing of iterables and async iterables
Sep 17 16:28:49 <\monster\>	Hey guys, is jsDoc @param  supposed to recognise import alias eg  import {Foo as Moo} from "./whatever";   then a method may have /** @param p {Moo} **/   IntelliJ ide doesn't seem to like it, not sure if its the ide or if thats not valid usage, seems logical to me
Sep 17 16:29:06 <Intelo>	niggler,  lib pass the code that i pasted
Sep 17 16:30:20 <niggler>	stennowork: someone was suggesting replacing elt.getAttribute("colspan") with elt.colSpan
Sep 17 16:30:30 <niggler>	and wanted to know if those would give the same result
Sep 17 16:30:59 <stennowork>	i'd guess only if the colspan value of the actual element is a valid value?
Sep 17 16:31:12 <stennowork>	and one might be string and the other one might be number
Sep 17 16:31:45 <niggler>	i guess it was not obvious that colspan -> colSpaj
Sep 17 16:31:51 <niggler>	colspan -> colSpan
Sep 17 16:32:44 <sillyslux>	html table elements have special properties
Sep 17 16:33:54 <stennowork>	yep
Sep 17 16:34:18 <stennowork>	td.colSpan is number, td.getAttribute('colspan') is string
Sep 17 16:34:23 <stennowork>	as expected
Sep 17 16:35:01 <stennowork>	similarly, if i have <td colspan='1001'>, then td.colSpan will be 1, and td.getAttribute('colspan') will be '1001'
Sep 17 16:35:56 <prometh>	elt is weird... elm is better
Sep 17 16:35:56 <stennowork>	so no, you cannot switch el.getAttribute('attrname') with el.attrName
Sep 17 16:36:26 <sillyslux>	do you mean td.colSpan is limited to the actual number of actually existing columns?
Sep 17 16:36:55 <prometh>	sillyslux: the property is interpolated while the attribute is not
Sep 17 16:37:00 <stennowork>	sillyslux, td.colSpan will a) have the 'parsed' value (in this case number), and b) will fall back to a valid default default value (1)
Sep 17 16:37:11 <sillyslux>	oic
Sep 17 16:37:13 <stennowork>	because colspan might be at most 1000
Sep 17 16:37:55 <stennowork>	again as i mentioned earlier, if you have <input type='lolno'>, you will get theInput.type => 'text', theInput.getAttribute('type') => 'lolno'
Sep 17 16:38:21 <niggler>	so for actual code, which is preferable
Sep 17 16:38:28 <prometh>	property, probably
Sep 17 16:38:36 <prometh>	depends on the code
Sep 17 16:38:59 <sillyslux>	always pick the one that's right for your purpose
Sep 17 16:39:11 <prometh>	even with non-interpolated properties such as data-*, `dataset` is fewer characters
Sep 17 16:39:12 <sillyslux>	i.e. i don't know :(
Sep 17 16:39:41 <stennowork>	it shoudl usually be the one that is actually used in the markup, i'd say
Sep 17 16:39:44 <stennowork>	er
Sep 17 16:39:52 <stennowork>	used in the parsed markup, the valid values
Sep 17 16:39:57 <niggler>	so https://github.com/SheetJS/js-xlsx/blob/master/bits/79_html.js#L146 is the relevant line
Sep 17 16:40:14 <niggler>	one proposal was to change that to use elt.colSpan instead of elt.getAttribute("colspan")
Sep 17 16:40:15 <prometh>	basically, use getAttribute if you are reproducing html or are mutating the dom; use properties if you need the data for some other purpose
Sep 17 16:40:25 <stennowork>	niggler, .colSpan here
Sep 17 16:40:29 <stennowork>	no need to cast to number, either
Sep 17 16:40:37 <niggler>	same with rowspan ?
Sep 17 16:40:40 <stennowork>	colSpan is already number and its a valid value (at worst the default value 1)
Sep 17 16:40:43 <stennowork>	yeah
Sep 17 16:40:53 <stennowork>	no need for casting
Sep 17 16:41:32 <stennowork>	CS = +elt.getAttribute("colspan") || 1; // can be CS = elt.colSpan
Sep 17 16:41:42 <stennowork>	same thing
Sep 17 16:41:57 <prometh>	fucking unary
Sep 17 16:42:55 <prometh>	why not just let terser/uglify do that? parseInt or Number is more explicit
Sep 17 16:44:47 <niggler>	old habits die hard
Sep 17 16:44:56 <stennowork>	whats wrong with +
Sep 17 16:45:00 <prometh>	cryptic
Sep 17 16:45:05 <stennowork>	i thought you just learned about + yesterday
Sep 17 16:45:14 <stennowork>	amusingly enough _after_ complaining about it
Sep 17 16:45:20 <niggler>	lol
Sep 17 16:45:27 <prometh>	i think it was teh day before
Sep 17 16:45:29 <prometh>	you are incorrect
Sep 17 16:45:39 <niggler>	n> var x = 1; x + + + x; x
Sep 17 16:45:40 <jellobot>	(okay) 1
Sep 17 16:45:43 <niggler>	n> var x = 1; x + ++ x; x
Sep 17 16:45:45 <jellobot>	(okay) 2
Sep 17 16:45:47 <niggler>	hmm
Sep 17 16:45:52 <niggler>	stupid whitespace
Sep 17 16:45:59 <niggler>	n> var x = 1; x ++ + x; x
Sep 17 16:46:00 <jellobot>	(okay) 2
Sep 17 16:46:04 <niggler>	n> var x = 1; x +++ x; x
Sep 17 16:46:05 <jellobot>	(okay) 2
Sep 17 16:47:27 <prometh>	n> Number('1) // i wonder what this does!
Sep 17 16:47:28 <jellobot>	(fail) SyntaxError: Invalid or unexpected token
Sep 17 16:47:34 <prometh>	well now we know
Sep 17 16:55:07 <jaawerth>	yeah with ASI that's the same as x++; +x;
Sep 17 16:56:26 <jaawerth>	oh wait, no lol
Sep 17 16:56:37 <stennowork>	no
Sep 17 16:56:38 <jaawerth>	it's x + (++x)
Sep 17 16:56:56 <pandem>	wouldn't you need line break for ASI
Sep 17 16:57:04 <jaawerth>	yeah ignore me
Sep 17 17:03:18 <robin___>	Hello! Why does this (https://pastebin.com/raw/R346AYL8) result in this: companies:  [ Promise { <pending> }, Promise { <pending> } ] thanks
Sep 17 17:04:17 <stennowork>	because an async function wraps its return value into a promise
Sep 17 17:04:31 <stennowork>	n> [(async() => 3)()]
Sep 17 17:04:33 <jellobot>	(okay) [ Promise { 3 } ]
Sep 17 17:04:39 <stennowork>	something liek that ^
Sep 17 17:05:55 <robin___>	stennowork: hmm how can I not make it a Promise? :D
Sep 17 17:06:34 <jaawerth>	an async function always returns a promise no matter what
Sep 17 17:07:11 <stennowork>	jaawerth, yes, as i just said
Sep 17 17:07:21 <jaawerth>	stennowork: I was answering the followup question
Sep 17 17:07:24 <robin___>	I removed the async:
Sep 17 17:07:26 <grr12314>	robin___ considering your code doesnt even have a return in the main function, i dont know what you're actually testing
Sep 17 17:07:30 <sillyslux>	don't use async funtions if you want something else
Sep 17 17:07:30 <robin___>	  static amountOfUsers(companyId) { return 1; }
Sep 17 17:08:43 <jaawerth>	robin___: your mapper fn is still async unless you also removed that
Sep 17 17:08:53 <grr12314>	also, use Promise.all to turn array of promises into promise for an array
Sep 17 17:09:21 <grr12314>	i think some previous code of yours showed that you knew this already... i might be confusing you with someone else
Sep 17 17:11:35 <robin___>	let me show all code. It is easier for everyone: https://pastebin.com/raw/A2qRHvbf
Sep 17 17:11:39 <robin___>	:p
Sep 17 17:11:48 <robin___>	all 'affected' code
Sep 17 17:12:00 <thefounder12>	hi guys. Trying to follow this tutorial but on Windows. https://medium.com/@SunnyB/how-to-convert-es6-into-es5-using-babel-1b533d31a169
Sep 17 17:12:12 <thefounder12>	It outputs the .js file to the "build" directory
Sep 17 17:12:24 <thefounder12>	but the code in it is still es6...it hasn't transpiled it to es5 at all
Sep 17 17:12:28 <thefounder12>	not sure why not
Sep 17 17:12:46 <robin___>	*https://pastebin.com/raw/B8BeJVPy sorry
Sep 17 17:12:49 <thefounder12>	can somebody help?
Sep 17 17:13:34 <thefounder12>	my directory looks like this https://imgur.com/a/jeWDtfy
Sep 17 17:14:10 <thefounder12>	oh I used "lib" rather than "build" as the directory for my transpiled code
Sep 17 17:14:41 <thefounder12>	using the .nodejs command prompt for windows as well
Sep 17 17:14:50 <grr12314>	robin___ again, use await Promise.all around your map
Sep 17 17:14:53 <jaawerth>	thefounder12: can you gist your babelrc?
Sep 17 17:15:08 <robin___>	grr12314 can you please show me how
Sep 17 17:15:18 <thefounder12>	gist your babelrc?
Sep 17 17:15:23 <grr12314>	await Promise.all(...map here...)
Sep 17 17:15:36 <thefounder12>	I am thinking that file is what's causing the problems, jaawerth
Sep 17 17:15:49 <jaawerth>	that's why I want to see it ;-)
Sep 17 17:15:55 <thefounder12>	it was created using "touch" using bash on linux but here I didn't know what the equivalent was
Sep 17 17:16:06 <thefounder12>	so just called it .txt? lol
Sep 17 17:16:11 <robin___>	grr12314: https://pastebin.com/raw/3WeQVM0D like this? :D
Sep 17 17:16:23 <robin___>	+ the await
Sep 17 17:16:34 <grr12314>	+ more than 1 await
Sep 17 17:16:39 <grr12314>	and async function
Sep 17 17:16:42 <grr12314>	and all that jazz
Sep 17 17:17:06 <thefounder12>	https://imgur.com/a/TNJ8ysS
Sep 17 17:17:16 <thefounder12>	jaawerth, that's what I wrote inside of it
Sep 17 17:17:39 <yuradoc>	Hello. I need to create simple app with js front. but i need it fully offline. how to make it without server
Sep 17 17:17:49 <robin___>	grr12314: closer? :D https://pastebin.com/raw/PFi0Taam
Sep 17 17:18:23 <grr12314>	yup
Sep 17 17:18:25 <yuradoc>	i know there is nw, electron, but maybe there are some very easy solution
Sep 17 17:18:29 <grr12314>	too hard to test before asking?
Sep 17 17:18:36 <robin___>	thanks buddy :D
Sep 17 17:18:45 <sillyslux>	yuradoc, there's also pwa
Sep 17 17:19:01 <ryandv>	does jest have something like a `finally` hook? something like `afterEach` but that I can be assured runs after each test
Sep 17 17:19:13 <ryandv>	https://github.com/facebook/jest/issues/1897 says that if a test times out, jest crashes & does not invoke the `afterEach` handler
Sep 17 17:19:16 <ryandv>	which leads to resource leakage
Sep 17 17:19:51 <yuradoc>	i need someth like that: i click app - it loads me some browser like window
Sep 17 17:19:52 <thefounder12>	also, Jaawerth
Sep 17 17:19:53 <thefounder12>	https://imgur.com/cABSNSH
Sep 17 17:19:53 <grr12314>	what resource leakage if the process crashed?
Sep 17 17:19:59 <ryandv>	grr12314: open transactions
Sep 17 17:20:10 <yuradoc>	with my code
Sep 17 17:20:14 <thefounder12>	This is me running it with babel also. Yet the file I open in the lib directory is still es 6 ...lol
Sep 17 17:20:17 <grr12314>	ryandv doesnt make sense
Sep 17 17:20:21 <yuradoc>	hml, css, js only
Sep 17 17:20:22 <ryandv>	grr12314: why not
Sep 17 17:20:38 <yuradoc>	without internet connection and backend server
Sep 17 17:20:42 <grr12314>	a dead process loses its tcp connections, sql transactions related to those will be rolled back
Sep 17 17:20:50 <grr12314>	or what kinda transactions are those?
Sep 17 17:21:08 <ryandv>	grr12314: when I terminate the jest process I see in my postgres logs, "unexpected EOF on open connection"
Sep 17 17:21:15 <jaawerth>	thefounder12: no .txt, it should just be .babelrc
Sep 17 17:21:20 <ryandv>	so it's true that the transaction is closed, but that's too late
Sep 17 17:21:28 <ryandv>	because now other tests are blocked by the open transaction
Sep 17 17:21:38 <jaawerth>	babel won't check for .baberc.txt, only .babelrc and .babelrc.js (if you config it with js instead of json)
Sep 17 17:21:54 <darkseid>	gajus are you still doing the talk today?
Sep 17 17:22:01 <samsch>	yuradoc, You can open html files in the browser, and they can reference local css/js files. There are some browser feature limits if you do this though.
Sep 17 17:22:38 <samsch>	yuradoc, A more full-featured approach is to start a local server process and auto-open the browser to the local port.
Sep 17 17:22:50 <thefounder12>	ahhh
Sep 17 17:23:06 <thefounder12>	jaawerth, that's the problem then! One moment
Sep 17 17:24:33 <thefounder12>	Woop Woop https://imgur.com/a/tibIFHh
Sep 17 17:24:38 <thefounder12>	worked! Thanks jaawerth
Sep 17 17:25:10 <jaawerth>	np
Sep 17 17:25:22 <ryandv>	so maybe resource leakage isn't the right term
Sep 17 17:25:31 <ryandv>	but I would like open transactions to be closed in a `finally` hook in jest
Sep 17 17:25:41 <ryandv>	`afterEach` doesn't give any guarantee that it will actually be run it seems
Sep 17 17:27:46 <grr12314>	if it actually crashes
Sep 17 17:27:56 <grr12314>	then there's nothing you can do
Sep 17 17:28:08 <ryandv>	lol
Sep 17 17:28:50 <grr12314>	tho i doubt it crashes from timeouts
Sep 17 17:29:26 <ryandv>	https://github.com/facebook/jest/issues/1897
Sep 17 17:29:29 <ryandv>	seems to be a long-standing issue
Sep 17 17:29:33 <ryandv>	I'm kind of shocked
Sep 17 17:30:30 <prometh>	"What additional accommodations do you need to feel comfortable during your interview process?" -- what are they asking me?
Sep 17 17:31:06 <stennowork>	'a few beers and a bowl of kush'
Sep 17 17:31:12 <prometh>	i was thinking beer too
Sep 17 17:31:43 <prometh>	is "beer? okay, coffee" a bad response?
Sep 17 17:31:46 <prometh>	i just dont' know anymore
Sep 17 17:31:54 <grr12314>	weird that the issue and the mentioned related issue is closed
Sep 17 17:31:55 <poboy>	beers
Sep 17 17:32:09 <jaawerth>	that's most likely intended for folks with disabilities
Sep 17 17:32:21 <poboy>	prometh: some places (hipster places, I guess) actually mention how they have free beer during the interview process
Sep 17 17:32:29 <prometh>	wow
Sep 17 17:32:34 <prometh>	that's cool
Sep 17 17:32:37 <prometh>	maybe hipsters are cool?
Sep 17 17:32:42 <poboy>	At least here in Kansas City
Sep 17 17:32:47 <poboy>	we're all alcoholics
Sep 17 17:32:54 <prometh>	hipsters usually aren't very nice, though
Sep 17 17:32:56 <stennowork>	terrible
Sep 17 17:33:06 <stennowork>	i would never drink alcohol in a fucking interview wtf
Sep 17 17:33:08 <prometh>	stennowork: you're a hipster, right?
Sep 17 17:33:16 <stennowork>	wut?
Sep 17 17:33:25 <poboy>	stennowork: no.  They say things like "we have free coffee, snacks and even beer"
Sep 17 17:33:31 <stennowork>	oh
Sep 17 17:33:37 <jaawerth>	the job I recently quit had free catered meals + beverages in the cafeteria plus a free beer fridge
Sep 17 17:33:38 <stennowork>	well we have beer here in the office too
Sep 17 17:33:41 <prometh>	what's so bad about beer in an interview... if it's offered ?
Sep 17 17:33:57 <poboy>	I worked in one place that basically encouraged you to have a few drinks but they didn't provide them
Sep 17 17:34:08 <jaawerth>	some tech companies are big in accomodations to keep people in the office as much as possible
Sep 17 17:34:24 <prometh>	get drunk and break computers
Sep 17 17:34:29 <jaawerth>	like "you don't HAVE to be here all the time but we're certainly make it easy if you so happen to opt to work tons of hours..."
Sep 17 17:34:49 <prometh>	my experience has been that _choosing_ overtime results in getting fired
Sep 17 17:34:53 <stennowork>	if i'd had the urge to drink alcohol
Sep 17 17:34:56 <prometh>	"thanks for the unpaid work, now fuck off"
Sep 17 17:35:01 <stennowork>	i'd drink it before an interview
Sep 17 17:35:21 <prometh>	i'll have a jack & coke
Sep 17 17:35:35 <jaawerth>	but yeah that question is for accommodating people with disabilities so I would not ask for beer haha
Sep 17 17:35:48 <prometh>	jaawerth: i like you better than stennowork
Sep 17 17:36:02 <stennowork>	i have no problem with that
Sep 17 17:36:05 <stennowork>	i don't like you either
Sep 17 17:36:16 <prometh>	i think i've only been nice to you
Sep 17 17:36:28 <prometh>	until maybe just now
Sep 17 17:37:08 <prometh>	jaawerth: how about asking in a joking manner, though?
Sep 17 17:38:15 <switzernauts>	How do I do single qoute escape character in javascript, is it '\ ?
Sep 17 17:38:33 <prometh>	switzernauts: the same as double quote
Sep 17 17:38:34 <grr12314>	almost
Sep 17 17:38:43 <prometh>	'\''
Sep 17 17:38:48 <jaawerth>	prometh: eh that seems like it would unnecessarily risk making the wrong impression but ymmv
Sep 17 17:38:50 <switzernauts>	thank you!
Sep 17 17:39:06 <prometh>	jaawerth: i know, but i'm already a loser
Sep 17 17:39:56 <prometh>	maybe substitute beer for whiskey, then it's more obviously sarcastic ?
Sep 17 17:40:31 <jaawerth>	lol I meant more that that joke could be received differently depending on the personal experiences of those you're interviewing, I doubt they'd think it wasn't a joke
Sep 17 17:40:55 <jaawerth>	but hey, I have gone into interviews with a "fuck it, BEHOLD MY TRUE SELF FOR GOOD OR ILL" impression and had it work out really well so I'm not saying throwing away pretense is a bad idea when you're fed up with the process
Sep 17 17:41:18 <prometh>	i've done "it all" and it's basically all failed
Sep 17 17:41:25 <prometh>	i've had most success with a normalized version of myself
Sep 17 17:41:51 <prometh>	but no recent success
Sep 17 17:42:16 <prometh>	i'm probably that guy at the bar getting rejected each night, all night
Sep 17 17:43:53 <gehn>	I would avoid alcohol in all work related matters, *especially* during an interview, even if offered
Sep 17 17:44:12 <gehn>	but I also don't drink alcohol any other time and don't like alcohol
Sep 17 17:44:15 <prometh>	gehn: are you a violent drunk? :)
Sep 17 17:44:40 <gehn>	no, because I don't drink
Sep 17 17:44:41 <prometh>	"care for a drink?" "sure" *smashes trinkets on desk*
Sep 17 17:44:54 <prometh>	gehn: cocaine?
Sep 17 17:45:05 <gehn>	I tend to avoid the whole "hey we're a cool startup, we have a foosball table and a kegerator in the office" types of places
Sep 17 17:45:29 <prometh>	gehn: why? too cliquey?
Sep 17 17:45:30 <gehn>	those kinds of places tend to be compensating for something
Sep 17 17:45:40 <gehn>	usually it's a horrible work life balance they're trying to hide
Sep 17 17:45:49 <roomba>	"we're a very progressive company. we don't mind if our employees have a beer while they code." <-- translation: "we'll do anything to keep you at your desk. we also need an excuse to fire you if we need to."
Sep 17 17:45:56 <prometh>	gehn: imbalance in, like, they don't stop working?
Sep 17 17:46:36 <prometh>	i vomited all over a restaurant door at my last company trip
Sep 17 17:46:45 <prometh>	i asked if that's why i was laid off, they said "no"
Sep 17 17:47:40 <gehn>	actually to be fair, I don't mind the taste of some craft beers, but generally I don't like the way alcohol makes me feel, it's not good for productivity, horrible for sleep regulation, huge correlation with increased cancer risk
Sep 17 17:47:46 <gehn>	and yeah, drunk people suck
Sep 17 17:48:05 <roomba>	company trips should not be a thing
Sep 17 17:48:11 <roomba>	what i do outside of work is none of their business.
Sep 17 17:48:13 <gehn>	vomiting on a restaurant door is a pretty good example of the bad things it brings out in many people
Sep 17 17:48:43 <niggler>	roomba: its also a backdoor ageism
Sep 17 17:48:57 <prometh>	niggler: i don't understand
Sep 17 17:49:00 <roomba>	niggler: and/or healthism or whateve you want to call it
Sep 17 17:49:00 <evulish>	after work on fridays, my company is like a drinking competition
Sep 17 17:49:04 <niggler>	younger people tend to be more tolerant of drinking on the job
Sep 17 17:49:10 <guideX>	gehn, drunk people are fine, amongst other drunk people though, they're kind of like pod people
Sep 17 17:49:19 <prometh>	guideX: pod people?
Sep 17 17:49:25 <guideX>	you really dont' want them around if you're not a pod person, but amongst other pod people they're just fine
Sep 17 17:49:34 <gehn>	as a group, no, drunk people are not fine, they suck
Sep 17 17:49:36 <guideX>	sorry, pop culture reference, (invasi0on of the body snatchers)
Sep 17 17:49:47 <prometh>	gehn: it's fun
Sep 17 17:49:53 <gehn>	a very small subset of regular alcohol users can keep it together and don't become belligerent assholes
Sep 17 17:49:57 <prometh>	guideX: oh *scream*
Sep 17 17:50:07 <gehn>	oh I'm sure the drunk people are having fun, but not me when I have to be around them
Sep 17 17:50:16 <prometh>	gehn: it can be offsetting
Sep 17 17:50:18 <roomba>	company sports outings - not everyone is a shining beacon of fitness. it's just another way to suck up peoples' personal time doing shit they don't want to do in order to judge them and monitor their "performance" in a manner that has nothing to do with actual productivity and everything to do with "culture fit" with the end goal of leverage in order to weed out anyone who will buck lower pay and longer
Sep 17 17:50:18 <guideX>	gehn, sounds like you hang with the wrong drunk people, I go out on saturdays to the bar and usually get snochered, and sometimes go to karaoke on wednesdays, and I can confirm drunk people can be fun
Sep 17 17:50:20 <roomba>	hours.
Sep 17 17:50:58 <prometh>	gehn: i definitely change, but unless i'm balckout drunk, i intetionally avoid crossing into asshole territory
Sep 17 17:51:03 <gehn>	guideX, sounds like you are exactly the kind of person I'm talking about: oblivious to the fact that you probably become intolerable to be around for people who are not alcoholics
Sep 17 17:51:14 <gajus>	What is the name of that website where I can offer commercial support to my open-source projects?
Sep 17 17:51:33 <Vooloo>	I have a loop for (const regions of item.orders) { } regions is an ID, how can I get that ID of itself? the actual key.
Sep 17 17:51:41 <prometh>	roomba: yeah, but people want to be friends and if ther's only one "fatty"..... i dunno
Sep 17 17:52:37 <GreenJello>	Vooloo, is item.orders an array?
Sep 17 17:52:40 <prometh>	gehn: have you thought that perhaps you are intolerable?
Sep 17 17:52:40 <roomba>	prometh: i don't want to be your friend. i want to work my 8 hours and get my f*cking paycheck.
Sep 17 17:52:57 <prometh>	roomba: yeah, same, but i have no social skills now, having done that for 20 years
Sep 17 17:53:13 <roomba>	so what? lol
Sep 17 17:53:21 <prometh>	roomba: so, now i want friends
Sep 17 17:53:21 <Vooloo>	GreenJello: object
Sep 17 17:53:25 <xvx>	how to extent (multiple layers) a JSON?
Sep 17 17:53:25 <xvx>	I tried these hoping it'd automatically extent with nx1.nx2.nx3, but it didn't work:
Sep 17 17:53:27 <xvx>	https://privatebin.net/?1930d89af9ffadfa#4sz4LFHtvDVE6UTKieiZ87tpKtxpEXJ4mSy2ZzL8bwTU
Sep 17 17:53:37 <roomba>	prometh: oh.. cool. we can be friends. you don't need to find friends at work. that's too dangerous.
Sep 17 17:53:37 <xvx>	extend*
Sep 17 17:53:41 <gehn>	prometh, you're avoiding the topic by trying to divert attention away from a very real problem: insufferable drunk people
Sep 17 17:53:50 <GreenJello>	Vooloo, then it depends on what the object is
Sep 17 17:54:01 <prometh>	gehn: we may be talkign about different people, but you sound a bit like a stiff
Sep 17 17:54:12 <Vooloo>	GreenJello: what?
Sep 17 17:54:13 <gehn>	there exist insufferable non-drunk people, but that's not what we're talking about
Sep 17 17:54:38 <prometh>	gehn: i dunno, but that sounds fair
Sep 17 17:54:40 <gehn>	yes of course you're going to rationalize your irresponsible alcohol usage by claiming other people are "stiffs"
Sep 17 17:54:44 <evulish>	i basically separated my friend group into okay drunks and insufferable drunks
Sep 17 17:54:58 <prometh>	gehn: i don' tknow if you are or not
Sep 17 17:55:21 <prometh>	gehn: but i think there's a middle area where rational people can bend in order to enter
Sep 17 17:55:34 <xvx>	no one know how to put more sublayers into JSON?
Sep 17 17:55:46 <evulish>	sublayers?
Sep 17 17:55:56 <prometh>	back to javascript
Sep 17 17:55:59 <xvx>	j.x.y  => j.x.y.a.b.c
Sep 17 17:56:01 <gehn>	I want subwoofers in my JSON
Sep 17 17:56:11 <prometh>	subbass is stupid
Sep 17 17:56:18 <prometh>	bass is sufficient
Sep 17 17:56:22 <evulish>	{a:{b:{c:{d:true}}}}
Sep 17 17:56:36 <GreenJello>	Vooloo, it depends on what item.orders is; I can't tell what the solution is from just that code
Sep 17 17:57:19 <sloth>	CUCAMONGA
Sep 17 17:57:54 <evulish>	my company used to have a liquor bar in the office
Sep 17 17:58:11 <evulish>	it stopped being replenished when we moved the office to manhattan, though
Sep 17 17:58:19 <evulish>	but i had a few evening rum and diet cokes
Sep 17 17:58:40 <stennowork>	dont make yourself too comfortable at work
Sep 17 17:58:55 <roomba>	yeah. look at this guy stenno
Sep 17 17:59:08 <prometh>	he's freed willy again
Sep 17 17:59:09 <roomba>	gets to relax all day on irc
Sep 17 17:59:51 <Vooloo>	changing "of" to "in" worked then I got the property name
Sep 17 18:00:02 <jaawerth>	lol yeah I'm 100% remote right now while I'm consulting and I'm finding it hard to put in the hours I intend to. I need to set up a home office or something
Sep 17 18:00:08 <evulish>	i don't think you want to use for... in on an object
Sep 17 18:00:28 <jaawerth>	more separation between "work area" and "living area"
Sep 17 18:00:46 <roomba>	jaawerth: doesn't work
Sep 17 18:00:47 <prometh>	jaawerth: i have a home office, but it's also where i play guitar and video games
Sep 17 18:00:50 <stennowork>	evulish, for in is exactly for an object
Sep 17 18:01:14 <roomba>	jaawerth: the separation is all in your head. not your surroundings.
Sep 17 18:01:44 <jaawerth>	for some people the environment helps inform the mental state
Sep 17 18:01:47 <prometh>	jaawerth: how do you get clients doing consulting?
Sep 17 18:01:50 <stennowork>	its important
Sep 17 18:02:16 <roomba>	jaawerth: if you put in 0 hours, you'll be fine?
Sep 17 18:02:29 <jaawerth>	prometh: I'm the wrong guy to ask, I kinda fell into it with a former employer and haven't yet had to try drumming up clients out of the aether
Sep 17 18:03:04 <jaawerth>	dunno yet if I'll keep doing it after this engagement or go back to working somewhere full time
Sep 17 18:03:42 <roomba>	you'll go back to full time
Sep 17 18:03:57 <jaawerth>	probably
Sep 17 18:04:03 <roomba>	i know it lol
Sep 17 18:04:05 <roomba>	because
Sep 17 18:04:20 <roomba>	i've been remote only / contracts only for almost a decade
Sep 17 18:04:34 <prometh>	roomba: how do you get contracts?
Sep 17 18:05:04 <roomba>	it's like a snowball you have to keep pushing down a never-ending hill.
Sep 17 18:05:14 <roomba>	but there's seasons... and sometimes the snowball starts melting as you're pushing it.
Sep 17 18:05:18 <NoiseEee>	you have to push snowballs *down* hills?
Sep 17 18:05:25 <roomba>	yeah
Sep 17 18:05:28 <prometh>	i hate finding work
Sep 17 18:05:39 <prometh>	jaawerth compard it to drumming
Sep 17 18:05:41 <prometh>	i'm a guitarist, ffs
Sep 17 18:05:44 <roomba>	if you don't keep up with the snowball, it will end up going down the hill faster than you... and you lose it.
Sep 17 18:06:03 <prometh>	roomba: so you have to keep moving on?
Sep 17 18:06:17 <roomba>	you _always_ have to be moving on
Sep 17 18:06:20 <charolastra>	the clients are the snow ball?
Sep 17 18:06:30 <roomba>	your clients... your income... are your snowball
Sep 17 18:06:38 <stennowork>	ta duck
Sep 17 18:06:42 <jaawerth>	yeah, I'm just not sure I'll want to deal with always figuring out where the next gig is coming from. on the other hand, the hourly rate is higher and I do like not having my time always monopolized
Sep 17 18:06:54 <jaawerth>	so I might keep going with it I can get into a groove. we'll see
Sep 17 18:07:03 <prometh>	i can't even get contract work
Sep 17 18:07:05 <roomba>	if you want to try it
Sep 17 18:07:07 <roomba>	you need to start looking now
Sep 17 18:07:07 <NoiseEee>	jaawerth: how have you been with setting aside tax $$
Sep 17 18:07:08 <prometh>	i just don't get some things
Sep 17 18:07:22 <roomba>	don't wait until the contract with your ex-employer is up
Sep 17 18:07:41 <charolastra>	the actual question is: how did you form the first snow ball?
Sep 17 18:07:47 <jaawerth>	NoiseEee: didn't have to this time - they technically took me on as a temporary part time employee at an hourly rate so no 1099 necessary
Sep 17 18:07:48 <prometh>	charolastra++
Sep 17 18:07:57 <roomba>	i started running donw the hill lol
Sep 17 18:08:07 <roomba>	i got one client after a million rejections and failures
Sep 17 18:08:08 <prometh>	roomba: i think i'm rolling
Sep 17 18:08:15 <roomba>	and i did the best i could
Sep 17 18:08:15 <NoiseEee>	i think i'm the snow
Sep 17 18:08:16 <prometh>	roomba: falling
Sep 17 18:08:32 <jaawerth>	this gig isn't really representative - I have a good relationship with the company since I used to work for them full time so we made a nice deal
Sep 17 18:08:43 <roomba>	that client recommended me to another client, and it got people talking
Sep 17 18:08:57 <roomba>	eventually, i had 2 or 3 people who really liked my work, and it just continued from there
Sep 17 18:09:04 <roomba>	have had terrible clients too
Sep 17 18:09:07 <roomba>	and people that absolutely hate me
Sep 17 18:09:10 <prometh>	roomba: that was me 15 years ago... Flash days... i can't seem to reproduce that with javasript
Sep 17 18:09:34 <roomba>	prometh: then take the easy route. undercut the shit out of people
Sep 17 18:09:38 <roomba>	take the hit
Sep 17 18:09:42 <charolastra>	yeah, we're talking about JS, right? could you give some examples on what gigs ppl want?
Sep 17 18:09:45 <roomba>	to yourself and everyone overall
Sep 17 18:09:51 <prometh>	roomba: everyone? how?
Sep 17 18:09:57 <roomba>	by undercutting them
Sep 17 18:10:14 <prometh>	roomba: how do you undercut them if you're already undercut yourself (low pay) ?
Sep 17 18:10:22 <jaawerth>	and technically I'm a systems engineer for them. some js work i node/react, but mostly I'm fixing broken deployments and helping their currently-thin-on-the-ground tech people solve problems
Sep 17 18:10:40 <prometh>	jaawerth: thin on the ground?
Sep 17 18:10:46 <roomba>	if you have the technical ability but can't find clients, undercut to get yourself in the door, then blow the client away, use that to get your next client, and start building the snowball.
Sep 17 18:10:52 <jaawerth>	yeah after I left their tech staff got kinda... light
Sep 17 18:10:55 <roomba>	it doesn't take long before you can start changing what you'r eworth
Sep 17 18:11:03 <prometh>	jaawerth: ah
Sep 17 18:11:08 <jaawerth>	like other people left after me and they were not good about backfilling and now they're in kind of a fix
Sep 17 18:11:15 <charolastra>	i wouldn't even know where to begin. can't just ask random people on the streets
Sep 17 18:11:24 <roomba>	charolastra: you can. lo
Sep 17 18:11:33 <roomba>	the streets are the open market
Sep 17 18:11:49 <jaawerth>	right when I left my last job at another company, they dismissed their sysadmin. they're trying to take the time to hire a *good* one so this started because they needed a safety net, but once we got down to it there's a pretty large list of things to do
Sep 17 18:11:51 <roomba>	"hi. i'm charolastra. this is what i do. i'm selling this."
Sep 17 18:11:53 <charolastra>	they would look strangly at me and maby even call the cops. this is a damn backwards country
Sep 17 18:12:09 <roomba>	i don't mean literally go out on the street rofl
Sep 17 18:12:10 <jaawerth>	lots of inra to automate, projects to make more maintainable, etc. and since I already know their environment for the most part...
Sep 17 18:12:27 <jaawerth>	infra*
Sep 17 18:12:37 <roomba>	jaawerth: lol no
Sep 17 18:12:53 <jaawerth>	lol no what?
Sep 17 18:13:00 <roomba>	jaawerth: they lied to you
Sep 17 18:13:18 <jaawerth>	Oh. We'll see. I suspect they'll end up coming to me with lots of OMG DROP EVERYTHING FOR THIS
Sep 17 18:13:25 <prometh>	roomba: so, like, facebook ads?
Sep 17 18:13:42 <roomba>	jaawerth: why would they "take their time to hire a *good* sysadmin" when you're already doing it... probably for less than the sysadmin they fired was doing it for.
Sep 17 18:13:43 <jaawerth>	but there's nothing to stop me putting my foot down if need be
Sep 17 18:13:52 <jaawerth>	roomba: oh no I'm way more expensive
Sep 17 18:14:01 <roomba>	probably not.
Sep 17 18:14:12 <jaawerth>	I know how much they're trying to hire the new one for
Sep 17 18:14:47 <roomba>	it's not just salary though
Sep 17 18:14:53 <roomba>	you're remote... so you're probably 1099?
Sep 17 18:14:56 <jaawerth>	nope
Sep 17 18:15:14 <roomba>	did they give you benefits or anything?
Sep 17 18:15:15 <jaawerth>	I was gonna charge $150/hr if I were a 1099
Sep 17 18:15:42 <roomba>	prometh: rofl hell no.
Sep 17 18:15:52 <jaawerth>	in exchange for not having to deal with the taxes I lowered that some. I'm technically a part time employee
Sep 17 18:15:56 <jaawerth>	temporary*
Sep 17 18:16:15 <roomba>	it costs a lot to hire someone new
Sep 17 18:16:25 <darkseid>	alright, this is kind of a weird one but... i'm working on a MS Word (online) plugin. I think it's changing the cursor positions at certain intervals but I'm not sure how to check. Is there an easy way to grab the current position of the cursor?
Sep 17 18:16:43 <roomba>	so even if they pay you a higher salary than the old sysadmin, it doesn't make sense to them unless there's an overall savings.
Sep 17 18:16:43 <jaawerth>	my initial plan was to go a couple months jobless to live my life a bit and decompress so instead I signed on to work ~20-30 hours a week, flexible
Sep 17 18:17:03 <jaawerth>	well they know I'm not gonna stay on past 2-3 months at most
Sep 17 18:17:09 <jaawerth>	I made that pretty clear
Sep 17 18:17:17 <roomba>	sure no problem
Sep 17 18:17:28 <roomba>	in 2-3 months they can just increase your pay lol
Sep 17 18:18:27 <prometh>	jaawerth: you must have a downtown mansion at that pay
Sep 17 18:18:29 <roomba>	you might be able to squeeze more months out of them this way... but eventually they'll hit whatever number that incentivizes them to go out and get the sysadmin they said they're looking for.
Sep 17 18:18:52 <jaawerth>	maybe! but eventually I'm gonna get bored
Sep 17 18:19:13 <roomba>	the'll send you a succubus then!
Sep 17 18:19:14 <prometh>	i have a townhouse 15min drive from downtown
Sep 17 18:19:17 <prometh>	:(
Sep 17 18:20:14 <prometh>	well anyway, that sounds awesome, jaawerth... i'm not that smart
Sep 17 18:20:21 <roomba>	ofc you are
Sep 17 18:20:23 <jaawerth>	the timing was just right
Sep 17 18:20:30 <prometh>	roomba: no, really, i'm not... math makes my head cloudy
Sep 17 18:20:45 <jaawerth>	right when I quit my other job and was planning on taking a couple months off before I found a new one they found themselves in need of help
Sep 17 18:20:49 <roomba>	you don't need math to make a ton of money. just luck and a few good decisions in a row.
Sep 17 18:21:04 <prometh>	roomba: well, i can't get as good as some of the people in here
Sep 17 18:21:20 <prometh>	i think i've peaked
Sep 17 18:21:24 <roomba>	lol nope
Sep 17 18:21:51 <jaawerth>	you'll get there. I won't say I don't know my shit but I've also had a recent run of blind luck with things
Sep 17 18:22:03 <roomba>	yeah look at jaawerth
Sep 17 18:22:22 <prometh>	my head can't connect many dots at one time... i lose track of things and i require more time
Sep 17 18:22:29 <roomba>	not even a sysadmin, it sounds like. but it didn't matter. "they found themselves in need of help" and jaawerth saw that as an opportunity.
Sep 17 18:22:40 <prometh>	i am depressed, but i'm speaking realisitcally right now
Sep 17 18:22:54 <roomba>	that's what it really boils down to
Sep 17 18:23:04 <prometh>	sure, i've been there before
Sep 17 18:23:09 <prometh>	"in need"
Sep 17 18:23:15 <prometh>	or, "in demand"
Sep 17 18:23:22 <jaawerth>	yeah I mean I do have large swaths of the sysadmin skillset but I've never wanted that as a job. but I can switch-hit as one when necessary
Sep 17 18:23:41 <roomba>	if you want to find clients/contracts/any sort of economic relationship (a job), you have to train yourself to recognize Other Peoples' Problems(tm)
Sep 17 18:23:56 <prometh>	roomba: yeah, that's actually exactly what i'm trying to learn righ tnow
Sep 17 18:24:07 <stennowork>	sysadmin is what you usually learn along the way as a dev
Sep 17 18:24:10 <prometh>	roomba: any books on the subject?
Sep 17 18:24:13 <stennowork>	software dev
Sep 17 18:24:18 <roomba>	prometh: lol no idea. i learned by doing.
Sep 17 18:24:37 <prometh>	roomba: i've peaked, so i don't learn by doing anymore :(
Sep 17 18:24:50 <jaawerth>	yeah a big part of it is selling yourself and knowing how to turn client need into technical specs. and that isn't always easy especially if you're not feeling it
Sep 17 18:25:12 <jaawerth>	I will admit I've benefited as much from my ability to talk a good game as I have from tech skills
Sep 17 18:25:31 <jaawerth>	also: luck
Sep 17 18:25:35 <prometh>	jaawerth: i lost my social skills... i'm like an unworthy thor
Sep 17 18:25:50 <stennowork>	thats apparent
Sep 17 18:26:07 <prometh>	stennowork: thanks.. you're always there to put me down while i'm at my lowest point ever
Sep 17 18:26:07 <ljharb>	in a tech job, social skills are more important than tech skills anyways.
Sep 17 18:26:15 <jaawerth>	unworthy thor got better :P
Sep 17 18:26:18 <stennowork>	thats what you get for self-deprecation
Sep 17 18:26:25 <ljharb>	anyone can write code; being a good coworker is rarer.
Sep 17 18:26:28 <prometh>	stennowork: i wasn't joking ,though
Sep 17 18:26:39 <stennowork>	yes
Sep 17 18:26:59 <prometh>	stennowork: you don't have empathy
Sep 17 18:27:11 <stennowork>	i do have empathy
Sep 17 18:27:19 <jaawerth>	op hat on: y'all don't have to like each other but let's try to keep it out of the channel please
Sep 17 18:27:21 <prometh>	believe what you want, then
Sep 17 18:28:19 <stennowork>	the statements that you have made in the past forfeited my empathy dispenser towards you
Sep 17 18:28:36 <prometh>	that's what she said
Sep 17 18:28:38 <gehn>	empathy is bad
Sep 17 18:29:21 <gehn>	empathy warps the minds of humans into making decisions that, if rationally analyzed, would be made/decided much differently and would result in much greater and better outcomes
Sep 17 18:29:47 <gehn>	perfect example: show a person a picture of thousands of starving children in africa, and they on average give zero dollars as charity donations
Sep 17 18:29:53 <prometh>	gehn: empathy is emotional intelligence
Sep 17 18:29:59 <gehn>	no it is not
Sep 17 18:30:06 <gehn>	show them a picture of a *single* starving child, and they on average give much more money much more readily
Sep 17 18:30:09 <stennowork>	altruism is an elusion created by egoism
Sep 17 18:30:13 <niggler>	in all jobs, social skills are paramount
Sep 17 18:30:16 <stennowork>	illusion*
Sep 17 18:30:29 <gehn>	it's clearly and blatantly obvious that helping a thousand starving children is of much more practical use and benefit
Sep 17 18:30:41 <prometh>	gehn: you're using science to prove that humans are assholes, and that's true
Sep 17 18:30:51 <gehn>	but empathy does not cause humans to act rationally in the interest of the better and greater outcomes
Sep 17 18:30:58 <gehn>	prometh, I'm not and you're entirely missing the point
Sep 17 18:31:09 <jaawerth>	gehn: it sounds like you're talking about sympathy, not empathy
Sep 17 18:31:15 <gehn>	jaawerth, nope, I'm not
Sep 17 18:31:20 <jaawerth>	empathy is closer to theory of mind
Sep 17 18:31:47 <gehn>	read Paul Bloom
Sep 17 18:31:52 <gehn>	it's in the title of his book
Sep 17 18:31:59 <Vooloo>	I have an array with 18000 numbers, is there a quick way to check for duplicates?
Sep 17 18:32:16 <stennowork>	what exactly do you mean with 'check for duplicates'
Sep 17 18:32:18 <prometh>	gehn: okay, we're all robots.. let's do math and sacrifice all happiness
Sep 17 18:32:29 <stennowork>	do you want yes/no if the array has a duplicate?
Sep 17 18:32:36 <stennowork>	do you want to filter out all duplicates?
Sep 17 18:32:38 <gehn>	prometh, you're so off base with that
Sep 17 18:32:38 <jaawerth>	anyway, this is rather off topic and also let's stop attacking each other lest I have to start kicking people kthx
Sep 17 18:32:40 <prometh>	gehn: oh, and, of course, worship self, selfishly
Sep 17 18:32:46 <gehn>	prometh, hey, you do you
Sep 17 18:33:28 <prometh>	Vooloo: Set
Sep 17 18:34:01 <prometh>	Vooloo: that will remove dupes... checking for dupes, you might be best sorting first, then iterating
Sep 17 18:35:41 <prometh>	stennowork: alright.... sorry for being a bad person previously.. i don't remember what it was, but i want to be on good terms wiht you
Sep 17 18:36:23 <jaawerth>	Vooloo: echoing stennowork's question, do you want to 1) know if there are duplicates, 2) get an array without duplicates, or 3) get a list of items that appear in duplicate?
Sep 17 18:36:55 <jaawerth>	(which you can also use to achieve #1, of course)
Sep 17 18:38:23 <Vooloo>	a list of all dups would be nice
Sep 17 18:38:34 <sourcream>	How to prevent ddos with cloudflare? Looks like lot of junk http traffic came through to the origin
Sep 17 18:38:47 <sourcream>	https*
Sep 17 18:38:50 <roomba>	prometh: lol i am about to lose a contract i've had for like a year
Sep 17 18:38:54 <roomba>	prometh: well a little over a year
Sep 17 18:39:30 <jaawerth>	Vooloo: ok, so I would create a Set of values you've already seen. then use it with .filter, where for each item you return false for seen.has(value), otherwise seen.add(value) and return true (or just return seen.add(value) since that will return the Set, whih is truthy)
Sep 17 18:39:46 <prometh>	roomba: that doesn't sound so bad, given the snowball (?)
Sep 17 18:40:01 <roomba>	prometh: the person at the company who oversees me (and others) is about to get shitcanned. taking down all the folks he contracts work out to.
Sep 17 18:40:17 <roomba>	well... it's bad. but there will still be a snowball... rofl
Sep 17 18:40:55 <roomba>	also, who knows what could happen
Sep 17 18:40:58 <prometh>	does he deserve teh shitcanning?
Sep 17 18:41:21 <prometh>	if so, that sounds like an enjoyable experience
Sep 17 18:41:38 <roomba>	i have no idea what circumstances led up to it. he just said that they're bringing in outside people to evaluate performance and stuff... i.e. they're going to fire his whole dept.
Sep 17 18:42:00 <prometh>	that's your heads up to jump ship
Sep 17 18:42:16 <roomba>	nah. i'll just hang around and see what happens.
Sep 17 18:42:22 <prometh>	why?
Sep 17 18:42:28 <jaawerth>	n> const dupes = (values) => { const seen = new Set(); return values.filter(v => seen.has(v) ? false : seen.add(v)); }; dupes([1, 2, 3, 4, 3, 1]) @Vooloo
Sep 17 18:42:29 <jellobot>	Vooloo, [ 1, 2, 3, 4 ]
Sep 17 18:42:41 <roomba>	because i'm the only person who does a certain thing for that company
Sep 17 18:42:43 <jaawerth>	whoops
Sep 17 18:42:48 <jaawerth>	Vooloo: screwed that up lol
Sep 17 18:42:57 <ljharb>	jaawerth: WeakSet
Sep 17 18:43:04 <jaawerth>	nah
Sep 17 18:43:15 <roomba>	and if they shitcan the person who pays me, they lose that certain thing. and it might be cheaper for them to just continue to work with me directly instead of try to find someone new to do it.
Sep 17 18:43:18 <prometh>	jaawerth: might wanna benchmark that against sorting+reducing
Sep 17 18:43:32 <jaawerth>	Vooloo: rather if seen.has(value) you return true, otherwise seen.add(value) and return false
Sep 17 18:43:52 <prometh>	roomba: i've been that person many times, and i still get shitcanned
Sep 17 18:44:00 <roomba>	prometh: or they could just be like "screw it. we don't care of our infrastructure goes to shit. we'll eventually find someone to fix it. we don't need any of these people"
Sep 17 18:44:24 <ljharb>	jaawerth: oh i guess because it's not objects
Sep 17 18:44:30 <prometh>	roomba: my only advice from my shitty life is that you're always expendable
Sep 17 18:44:33 <roomba>	i'm not gonna just close the door because i think the hitmen are on the way
Sep 17 18:45:15 <jaawerth>	n> const dupes = (values) => { const seen = new Set(); return values.filter(v => { if (seen.has(v)) return true; seen.add(v); return false; }); }; dupes([1, 2, 3, 4, 1, 3]); @Vooloo
Sep 17 18:45:17 <jellobot>	Vooloo, [ 1, 3 ]
Sep 17 18:45:44 <Vooloo>	when using set.add it will not add if it already exists?
Sep 17 18:45:55 <prometh>	Vooloo: Set is always unique values
Sep 17 18:45:55 <ljharb>	Vooloo: how would it
Sep 17 18:46:17 <Vooloo>	I donno, JS does a lot of unexplainable things
Sep 17 18:46:25 <stennowork>	that is the case for primitives, but for objects, make sure you hold the object reference
Sep 17 18:46:27 <prometh>	Vooloo: not really
Sep 17 18:46:35 <roomba>	prometh: lol my advice. i think you're the doomer.
Sep 17 18:46:44 <prometh>	roomba: what is that?
Sep 17 18:47:19 <roomba>	prometh: it's a meme that represents a blackpilled person
Sep 17 18:47:24 <prometh>	roomba: what is that?
Sep 17 18:47:25 <prometh>	heh
Sep 17 18:47:46 <prometh>	i'm the "we're all doomed" guy ?
Sep 17 18:47:58 <ljharb>	Vooloo: name one?
Sep 17 18:48:01 <roomba>	prometh: there's the red pill and the blue pill - which are both made by the same pharma company. then there's the blackpill which is like this nihilistic world view where it doesn't matter what one does, everything will suck forever and ever.
Sep 17 18:48:07 <roomba>	prometh: nothing could be further from the truth, though.
Sep 17 18:48:14 <z1haze>	looking for some sort of facebook api that would allow me to pull in marketplace items to display on an external site. anyone toyed with this before?
Sep 17 18:48:24 <prometh>	roomba: oh... well, realy i'm the yellow pill
Sep 17 18:48:31 <prometh>	roomba: but my life does suck
Sep 17 18:49:13 <roomba>	become a bloomer
Sep 17 18:49:19 <prometh>	 my flower already died
Sep 17 18:50:04 <roomba>	that's because you're currently a doomer and incapable of seeing that before your flower died, a bunch of wasps and bees grabbed a bunch of pollin and seeds and stuff
Sep 17 18:50:11 <jaawerth>	prometh: I'm pretty confident that using a Set with filter will beat sorting + checking unless you need to optimize for space complexity over time complexity
Sep 17 18:50:29 <roomba>	and a terrible wind storm ripped the flower out of the ground and sent it flying thruogh the air, and a bunch of seeds fell everywhere
Sep 17 18:50:51 <prometh>	roomba: so i've planted seeds of evil everywhere?
Sep 17 18:50:56 <roomba>	yes
Sep 17 18:51:16 <prometh>	and now i am life
Sep 17 18:51:24 <prometh>	one with the universe
Sep 17 18:51:26 <roomba>	and they will bloom into beautiful poisonous flowers that will murder your enemies
Sep 17 18:51:52 <prometh>	i resonate at all frequencies
Sep 17 18:51:53 <roomba>	you're just too damn negative is all
Sep 17 18:52:07 <prometh>	i'm also very positive, though
Sep 17 18:52:15 <roomba>	me too. i can also be very negative.
Sep 17 18:52:48 <roomba>	so maybe you're just putting the batteries in backwards?
Sep 17 18:52:52 <Vooloo>	ljharb: fun stuff like if (var === undefined || var === null || var === '') for example
Sep 17 18:53:03 <prometh>	roomba: i'm off, i know that
Sep 17 18:53:12 <roomba>	i'm not on any social media except irc
Sep 17 18:53:16 <ljharb>	Vooloo: and how is that unexplainable?
Sep 17 18:53:26 <jaawerth>	Vooloo: those are all known behaviors though. the known behavior of a Set is to only contain one version of each value as defined by ===
Sep 17 18:53:42 <roomba>	prometh: i think google and facebook are terrorist organizations
Sep 17 18:53:45 <ljharb>	not by ===, but by SameValueZero
Sep 17 18:53:51 <ljharb>	roomba: rofl
Sep 17 18:53:56 <jaawerth>	Vooloo: but the example I just gave only bothers to add it once anyway
Sep 17 18:54:01 <ljharb>	roomba: you may not understand the meaning of the word "terror"
Sep 17 18:54:04 <roomba>	prometh: i also think that the majority of society is unsavable at this point. they are part of a hive mind.
Sep 17 18:54:25 <prometh>	roomba: yep, but i don't care about them because each person must save themselves from hell
Sep 17 18:54:38 <roomba>	prometh: and i _also_ think that despite all of this, it's still possible to be a good person and do something good in this world.
Sep 17 18:54:49 <prometh>	roomba: i give life and recieve death.... but i just wnat money at this point
Sep 17 18:55:21 <prometh>	if i can make money again, i'll continue with open source
Sep 17 18:55:29 <roomba>	nah forget about that. it's dead.
Sep 17 18:55:32 <roomba>	FOSS is dead.
Sep 17 18:55:34 <roomba>	let the hive mind take it
Sep 17 18:55:50 <prometh>	roomba: i guess you don't use babel?
Sep 17 18:56:05 <roomba>	i use what gets the job done.
Sep 17 18:56:12 <gehn>	I'm pretty sure FOSS is the opposite of dead
Sep 17 18:56:25 <systemfault>	Tell that to RMS today :p
Sep 17 18:56:41 <jaawerth>	I think you mean GNU/RMS
Sep 17 18:56:48 <jaawerth>	heyoooo
Sep 17 18:56:49 <prometh>	i'm feeling a shift in the dev world, away from OSS.... they want to write math and C++ because it makes them feel smart
Sep 17 18:57:02 <gehn>	guhnoo
Sep 17 18:57:06 <jaawerth>	what does writing math and C++ have to do with FOSS
Sep 17 18:57:12 <roomba>	lololololol
Sep 17 18:57:14 <roomba>	GNU/RMS
Sep 17 18:57:18 <jaawerth>	or what does it have to do with NOT being FOSS rather
Sep 17 18:57:35 <prometh>	jaawerth: they don't care about OSS... they just want to be pretentious (sstill smarter than me) and make money... "fuck the world"
Sep 17 18:57:52 <gehn>	gcc and clang are FOSS aren't they?
Sep 17 18:58:00 <ljharb>	roomba: lol what are you talking about
Sep 17 18:58:05 <systemfault>	Not clang, AFAIK
Sep 17 18:58:07 <gehn>	also who is "they"?
Sep 17 18:58:10 <roomba>	ljharb: Actually it's GNU/roomba.
Sep 17 18:58:13 <gehn>	aside from a weasel word
Sep 17 18:58:21 <prometh>	gehn: devs in general
Sep 17 18:58:32 <jaawerth>	every dev wants to be paid for their work. they just want to also give stuff away for free. it isn't mutually exclusive or we wouldn't have a ton of the open source software we have
Sep 17 18:58:38 <gehn>	that's a pretty bold generalization
Sep 17 18:58:56 <prometh>	jaawerth: but i feel a shift away from giving anything away
Sep 17 18:59:04 <gehn>	not all devs share the same motives or views
Sep 17 18:59:06 <ljharb>	prometh: that doesn't mean there is one
Sep 17 18:59:12 <prometh>	ljharb: correct
Sep 17 18:59:13 <ningu>	prometh: any citation for your feelings?
Sep 17 18:59:14 <jaawerth>	yeah I'm generalizing. I supopse I shouldn't say "every"
Sep 17 18:59:35 <prometh>	ningu: no, but my emotions/instincts are rarely wrong... i don't expect anyone to believe me
Sep 17 18:59:54 <roomba>	Let's invite all of those devs into a "marketplace of ideas"... brought to you by Microsoft GitHub! where they can be fairly compensated for their contributions to FOSS. subscriptions start at only $4.99/mo!
Sep 17 18:59:59 <gehn>	I'm certain that your emotions and instincts are very often wrong
Sep 17 19:00:14 <prometh>	gehn: i'm not going to argue
Sep 17 19:00:19 <gehn>	because that's how it is for basically all humans
Sep 17 19:00:27 <prometh>	gehn: maybe i'm super special
Sep 17 19:00:34 <gehn>	emotions and instincts are not a good substantive basis for any kind of rational decision making or outward appraisal of anything
Sep 17 19:00:34 <roomba>	you are not special
Sep 17 19:00:39 <prometh>	roomba: fuck you :P
Sep 17 19:00:54 <roomba>	prometh: you are not a unique snowflake
Sep 17 19:01:07 <prometh>	roomba: snowflakes are beautiful!!!
Sep 17 19:01:08 <prometh>	:)
Sep 17 19:01:11 <NoiseEee>	tf im noyt
Sep 17 19:01:12 <gehn>	no, you ARE a unique snowflake... JUST like EVERYONE else
Sep 17 19:01:16 <NoiseEee>	^
Sep 17 19:01:46 <prometh>	i melted :S
Sep 17 19:01:47 <roomba>	prometh: you are NPC #758593135, a not-not-unique not-not-special snowflake-not-snowflake
Sep 17 19:02:06 <gehn>	in other words, a noflake
Sep 17 19:02:06 <prometh>	roomba: there's a cockroach in the system (brazil)
Sep 17 19:02:56 <NoiseEee>	a plant-based meat snowflake
Sep 17 19:03:04 <prometh>	tofu
Sep 17 19:03:04 <NoiseEee>	gotta get trendy
Sep 17 19:03:28 *	roomba registers noflake.io, creates a landing page telling everyone that noflake is a disruptor in the disruptor industry, posts it to hackernews, buys a lambo and a beach house with the VC money that pours in.
Sep 17 19:03:41 <roomba>	prometh: see how that works?
Sep 17 19:03:44 <roomba>	the world runs on complete bullshit.
Sep 17 19:03:55 <roomba>	sling some bullshit, and you shall be paid.
Sep 17 19:03:57 <roomba>	it's that simple
Sep 17 19:04:02 <prometh>	roomba: no... i don't see why people invest in bullshit
Sep 17 19:04:06 <gehn>	NOledge!
Sep 17 19:04:10 <gehn>	lambo
Sep 17 19:04:16 <gehn>	need I say more?
Sep 17 19:04:25 <roomba>	^
Sep 17 19:04:28 <ljharb>	prometh: it's an excellent fertilizer
Sep 17 19:04:38 <prometh>	ljharb: interesting
Sep 17 19:04:44 <roomba>	ljharb is right
Sep 17 19:04:54 <roomba>	bullshit makes the crops grow that feeds the people!
Sep 17 19:04:57 <prometh>	so i should be selling sod
Sep 17 19:05:03 <roomba>	yes!
Sep 17 19:05:08 <praet>	q: whats the best way to merge in a parsed json for each item in an array of items
Sep 17 19:05:28 <gehn>	praet, specification incomplete
Sep 17 19:05:58 <gehn>	merge in to what? the left lane? an exit ramp?
Sep 17 19:06:08 <praet>	something like [{a:1, b:'jsonString'}, {a:2, b:'moreJson'}]
Sep 17 19:06:16 <ljharb>	praet: why would you ever have nested json
Sep 17 19:06:19 <praet>	convert the json to an object
Sep 17 19:06:23 <jaawerth>	I thought you said parsed?
Sep 17 19:06:25 <prometh>	gehn: i used to say "where we're going, we don't need roads", but now we're just doomed
Sep 17 19:06:26 <gehn>	praet, resulting in what?
Sep 17 19:06:33 <praet>	right sorry
Sep 17 19:06:36 <jaawerth>	and are you joining on a shared id or something? or is it the same object you want to merge into every element?
Sep 17 19:07:00 <praet>	resulting in [{a:1, b:{hi:1}... }]
Sep 17 19:07:16 <gehn>	praet, by what logic?
Sep 17 19:07:25 <gehn>	I don't see "hi" anywhere in the original
Sep 17 19:07:47 <jaawerth>	it might help if you gave us a short example of input and desired output
Sep 17 19:07:59 <praet>	i guess im deciding what more legible, a for each loop or a map with a json parse
Sep 17 19:08:01 <gehn>	praet, you need to be extraordinarily specific
Sep 17 19:08:08 <gehn>	everyone does, when asking any question really
Sep 17 19:08:18 <gehn>	a large number of people make this mistake
Sep 17 19:08:37 <jaawerth>	without knowing specifics, you probably want .map
Sep 17 19:09:51 <ljharb>	praet: never a loop
Sep 17 19:12:48 <prussian>	praet: just use lodash
Sep 17 19:13:11 <prussian>	if your merge is shallow, you could probably get away with a simple reduce on your array of objects
Sep 17 19:14:29 <roomba>	prometh: rofl they are about to show their hand i think
Sep 17 19:14:47 <prometh>	?
Sep 17 19:15:06 <roomba>	prometh: from what i was just told it sounds like a case of snitching to move up... one person is trying to set up my guy to get fired so he can take over
Sep 17 19:15:34 <prometh>	roomba: yeah, i hate bitch politics
Sep 17 19:15:36 <roomba>	prometh: but i never worked well with the guy who is snitching.
Sep 17 19:15:43 <ljharb>	O.o
Sep 17 19:16:02 <prometh>	ljharb: that wasn't a sexist remark
Sep 17 19:16:15 <roomba>	prometh: so i just told them that if my guy gets fired, i'm considering the contract void.
Sep 17 19:16:21 <ljharb>	prometh: if you have to say that, then yeah it is
Sep 17 19:16:27 <prussian>	savage
Sep 17 19:16:29 <prometh>	ljharb: could just be interpretation
Sep 17 19:16:34 <ljharb>	prometh: that's what makes it one
Sep 17 19:16:39 <ljharb>	prometh: your intention is irrelevant
Sep 17 19:16:44 <praet>	ok heres what i came up with https://jsfiddle.net/qn83oy04/
Sep 17 19:16:45 <prometh>	ljharb: thanks for including me
Sep 17 19:16:49 <ljharb>	np
Sep 17 19:17:02 <praet>	a different approach (i x/y'd myself)
Sep 17 19:17:44 <praet>	the want var is wrong also
Sep 17 19:18:41 <praet>	its like a zip in lodash maybe?
Sep 17 19:18:55 <prometh>	roomba: that kinda shit just depresses me
Sep 17 19:19:07 <prometh>	roomba: that's partly why i did remote for 20 years
Sep 17 19:19:16 <prometh>	humans are depressing
Sep 17 19:20:03 <roomba>	no they're not. they're just creatures of habit.
Sep 17 19:20:06 <NoiseEee>	thats why i deal almost exclusively with cats
Sep 17 19:20:18 <prometh>	NoiseEee: i don't understand
Sep 17 19:20:30 <prussian>	uh ok
Sep 17 19:20:33 <gehn>	prometh, have you considered that maybe it's just you that's depressing?
Sep 17 19:20:35 <gehn>	or maybe you're just depressed?
Sep 17 19:20:40 <prometh>	gehn: i am depressed
Sep 17 19:20:44 <prussian>	sad
Sep 17 19:20:46 <gehn>	ok well then that would explain it
Sep 17 19:20:50 <jaawerth>	praet: if you're just merging by array index then info.map((record, i) => ({ ...record, ...results[i] })) will do it
Sep 17 19:20:57 <roomba>	prometh: who told you that?
Sep 17 19:21:00 <prometh>	roomba: myself
Sep 17 19:21:23 <roomba>	i know what will cheer you up
Sep 17 19:21:29 <prometh>	money?
Sep 17 19:21:42 <prometh>	bury me with my money
Sep 17 19:21:42 <jaawerth>	praet: though you'll probably want to account for length mismatches
Sep 17 19:21:49 <roomba>	no not money
Sep 17 19:21:56 <roomba>	but i know how you can get money and also cheer yourself up at the sam etime
Sep 17 19:22:00 <praet>	there shouldnt be a length mismatch. good idea to use the index like that
Sep 17 19:22:23 <gehn>	there shouldn't be many things in the world, but here we are
Sep 17 19:23:35 <prometh>	roomba: are you going to follow up? :P
Sep 17 19:23:40 <jaawerth>	praet: oh I didn't see you wanted it on a "results" prop though
Sep 17 19:23:47 <roomba>	prometh: no.
Sep 17 19:23:50 <jaawerth>	easy to adapt the above to work like that though
Sep 17 19:24:07 <roomba>	prometh: you're gonna have to get out there and find out what i was going to not follow up on :)
Sep 17 19:24:24 <prometh>	roomba: yes, because i haven't been trying
Sep 17 19:24:37 <praet>	jaawerth: yup looking good
Sep 17 19:26:08 <roomba>	prometh: me neither.
Sep 17 19:26:26 <roomba>	prometh: mostly because i don't have to... yet. but i'm thinking about becoming a corporate drone for a while.
Sep 17 19:26:47 <gehn>	corporate drones are paid well
Sep 17 19:26:49 <prometh>	i was being sarcastic
Sep 17 19:26:53 <prometh>	but what is a corporate drone?
Sep 17 19:27:07 <gehn>	and despite popular misconception, corporate drones probably tend to have far better work-life balance than startup employees
Sep 17 19:27:17 <roomba>	gehn: yes i totally agree
Sep 17 19:27:36 <roomba>	but as a contractor, i love working with startups
Sep 17 19:27:44 <roomba>	s/contractor/freelancer
Sep 17 19:27:48 <roomba>	because i get to be remote
Sep 17 19:27:59 <roomba>	i get to work on something small and usually meaningful
Sep 17 19:28:05 <roomba>	and then gtfo before they run out of VC
Sep 17 19:28:08 <gehn>	sure then you're much less beholden to their whims and random bad decisions
Sep 17 19:28:11 <poboy>	remote FTW!
Sep 17 19:28:13 <gehn>	yup
Sep 17 19:28:20 <roomba>	plus
Sep 17 19:28:32 <roomba>	startups let me have a little more say in what kind of tech stack they use
Sep 17 19:28:57 <roomba>	it's like all the benefits of working with a startup without too much of the bad things
Sep 17 19:29:13 <roomba>	i don't think i'd ever work at a startup as an employee
Sep 17 19:29:40 <roomba>	<-- not compatible
Sep 17 19:29:59 <gehn>	roomba, you just haven't installe the right driver
Sep 17 19:30:44 *	roomba searches Win10DrvrInstall.freedlls.ru for foozball.exe
Sep 17 19:31:08 <gehn>	seems legit
Sep 17 19:31:41 <roomba>	if they say the words "work life balance" in any of their job postings or during the interview, it's a red flag?
Sep 17 19:32:12 <gehn>	only if their conception of "work life balance" equates to having a foosball table in the office
Sep 17 19:32:25 <prometh>	and a beer fridge
Sep 17 19:32:37 <roomba>	i've never tried to become a corporate drone so i don't know if good places even exist at this point lol
Sep 17 19:32:46 <gehn>	roomba, they don't
Sep 17 19:32:58 <prometh>	roomba: i'v enever been a corporate drone either.. i did try at amazon, though... failed
Sep 17 19:32:59 <gehn>	it's only a choice between more and less evil
Sep 17 19:33:08 <systemfault>	Weird how you people don't quite get that "something in between" exists.
Sep 17 19:33:20 <vidy>	as long as you accept the inherent evilness of a megacorp it's ok
Sep 17 19:33:34 <prometh>	the world is doomed anyway
Sep 17 19:33:38 <prometh>	i don't really care about evil anymore
Sep 17 19:33:41 <gehn>	evil megacorps often treat (some of) their employees very well
Sep 17 19:33:45 <prometh>	just give me money and let me live my life
Sep 17 19:33:57 <systemfault>	Find yourself a position in some medium-sized company... you'll still be able to change things and you know you they won't go bankrupt in 2 days.
Sep 17 19:34:08 <prometh>	systemfault: that's what i did my entire life
Sep 17 19:34:10 <roomba>	nobody is going to just give you money unless you convince them you have something they want to buy, prometh
Sep 17 19:34:25 <systemfault>	It
Sep 17 19:34:27 <prometh>	roomba: yeah... i do what i'm told and reduce technical debt
Sep 17 19:34:30 <systemfault>	's called welfare.
Sep 17 19:34:48 <roomba>	welfare isn't "giving people money"
Sep 17 19:34:49 <prometh>	systemfault: ? i can't get employment insrance
Sep 17 19:35:07 <gehn>	UBI will be (if it happens)
Sep 17 19:35:15 <roomba>	UBI will not be "giving people money" either.
Sep 17 19:35:25 <prometh>	ubisoft? :P
Sep 17 19:35:39 <roomba>	prometh: hell yeah let's get jobs at ubisoft.
Sep 17 19:35:50 <gehn>	I'm pretty sure that's the definition of what UBI is
Sep 17 19:35:54 <gehn>	it's in the last letter of the acronym
Sep 17 19:36:16 <systemfault>	Universal Basic Income-Soft?
Sep 17 19:36:22 <prometh>	it's "universal" not "unconditional"
Sep 17 19:36:27 <roomba>	^
Sep 17 19:36:52 <gehn>	how does that relate to the I for "income"
Sep 17 19:37:07 <vidy>	are there conditions for being in the universe? what are they
Sep 17 19:37:07 <prometh>	it's giving money to those that quality fo rit
Sep 17 19:37:18 <gehn>	and?
Sep 17 19:37:25 <prometh>	"i'm lazy" probably isn't good enough
Sep 17 19:37:30 <roomba>	gehn: because it's not giving money. it's still an exchange.
Sep 17 19:37:30 <systemfault>	vidy: It's like taxes, you don't opt-in and can't opt-out
Sep 17 19:37:39 <gehn>	still not sure how that relates
Sep 17 19:37:48 <stenno>	relates to javascript?
Sep 17 19:37:49 <gehn>	an exchange for what?
Sep 17 19:38:11 <roomba>	gehn: in exchange for your obedience and servitude to Lord Bezos for generations to come.
Sep 17 19:38:22 <gehn>	I don't think there are restrictions on what people can do with it, that's the point
Sep 17 19:38:36 <prometh>	lord bezos should write a modern rap album: "i got mo money than all you bitches"
Sep 17 19:38:36 <gehn>	use it to buy food, use it to go to college - it's up to you
Sep 17 19:38:58 <roomba>	you won't be using UBI to go to college.
Sep 17 19:39:12 <prometh>	college is not "basic"
Sep 17 19:39:13 <gehn>	right because I don't need to
Sep 17 19:39:23 <roomba>	^
Sep 17 19:39:27 <gehn>	but it *is* the definition of giving money
Sep 17 19:39:29 <roomba>	and that's the whole idea behind it
Sep 17 19:39:34 <roomba>	it's not giving money
Sep 17 19:39:35 <gehn>	and that's the point
Sep 17 19:39:40 <gehn>	then what is it giving?
Sep 17 19:39:52 <roomba>	debt, poverty, and enslavement
Sep 17 19:39:59 <prometh>	it's giving money so that you can get a job and contribute back via taxes
Sep 17 19:40:06 <prometh>	it's an investment
Sep 17 19:40:27 <gehn>	oh, I see, you're going down the whole conspiracy rabbit hole, nevermind
Sep 17 19:40:56 <prometh>	i don't qualify for employment insurance because i worked for international companies not registered in my country
Sep 17 19:41:07 <prometh>	but i would qualify for ubi, if we had it
Sep 17 19:41:29 <prometh>	(canada, if curious)
Sep 17 19:41:33 <roomba>	gehn: no. it's simple economics. nobody is going to give away something for free. truly free. there are _always_ strings attached.
Sep 17 19:41:50 <gehn>	see ya later conspiracy gator
Sep 17 19:42:01 <systemfault>	It's not conspiracy... FFS.
Sep 17 19:42:12 <prometh>	i don't understand how it coul dbe a conspiracy
Sep 17 19:42:19 <systemfault>	Nothing can ever be for free.
Sep 17 19:42:20 <gehn>	well it hasn't been implemented, at least not in the US
Sep 17 19:42:20 <gehn>	so we don't really no
Sep 17 19:42:23 <gehn>	you're just conjecturing
Sep 17 19:42:38 <gehn>	systemfault, sure it can
Sep 17 19:42:40 <prometh>	systemfault: oss?
Sep 17 19:42:52 <prometh>	mit license
Sep 17 19:42:55 <systemfault>	The more you're reliant on something, the more that something owns you.
Sep 17 19:42:57 <gehn>	usually not much of meaningful value, but sure, free things exist all over the place
Sep 17 19:43:42 <roomba>	gehn: like the free breath mints at the doctor's office? they're full of sugar to give you diabetes so you'll become a repeat customer.
Sep 17 19:43:43 <gehn>	*cough* *cough* TYPESCRIPT *cough* *cough* LSP *cough* *cough*
Sep 17 19:44:06 <gehn>	roomba, yeah you're totally off the deep end with this conspiracy thing
Sep 17 19:44:11 <gehn>	plz spare us
Sep 17 19:44:30 <systemfault>	roomba: Always consider stupidity first...
Sep 17 19:44:48 <roomba>	nothing i've said is conspiratorial at all. plus it takes at least 3 people for there to be a conspiracy i think.
Sep 17 19:44:54 <gehn>	^
Sep 17 19:45:04 <gehn>	and now you're gaslighting
Sep 17 19:45:55 <roomba>	your programming has defaulted you into this state. systemfault is correct though. 99% of the time it's laziness/stupidity.
Sep 17 19:46:14 <stenno>	jfc people
Sep 17 19:46:18 <gehn>	you don't see how what you just said is...
Sep 17 19:46:23 <gehn>	ugh, nevermind, like I said, plz stahp
Sep 17 19:46:25 <systemfault>	What's that term again... Hanlon's Razor?
Sep 17 19:46:29 <systemfault>	Anyway...
Sep 17 19:46:34 <roomba>	back on topic rofl
Sep 17 19:46:35 <gehn>	Occam's
Sep 17 19:46:39 <roomba>	let's cut this shit out
Sep 17 19:47:19 <systemfault>	gehn: Occam's is that the simplest reason is probably the good one
Sep 17 19:47:25 <gehn>	wake up sheeple!
Sep 17 19:47:48 <roomba>	don't be "woke". woke is bad mmmkay.
Sep 17 19:47:50 <systemfault>	Hanlon's is more like don't attribute to bad intent things that can be explain by stupidity
Sep 17 19:48:06 <gehn>	what do you want people to be then?
Sep 17 19:48:20 <systemfault>	Programming?
Sep 17 19:48:21 <roomba>	gehn: me? i don't want people to be anything other than themselves.
Sep 17 19:48:22 <gehn>	systemfault, ah ok
Sep 17 19:48:29 <systemfault>	Let's all program!
Sep 17 19:48:40 <gehn>	roomba, your statements would not lead the average person to conclude this
Sep 17 19:49:20 <roomba>	gehn: you have no idea how much i fully understand this :)
Sep 17 19:49:54 <gehn>	so maybe if you're aware that you say misleading things, you should stop saying misleading things?
Sep 17 19:49:59 <stenno>	no one cares
Sep 17 19:50:02 <roomba>	^
Sep 17 19:50:02 <gehn>	I dunno, unless you want to be misleading, which I guess is fine
Sep 17 19:50:29 <gehn>	stenno, I care about you, bro
Sep 17 19:50:39 <gehn>	don't throw my love away!
Sep 17 19:50:58 *	gehn cries
Sep 17 19:51:31 <roomba>	don't throw me away either. you need me stenno! who's gonna zip around the house any time you track in dirt from outside?!
Sep 17 19:51:40 <prometh>	"woke" is for poetic wannabes
Sep 17 19:51:51 <jaawerth>	yeah ok this political tangent has gotten too toxic
Sep 17 19:52:48 <systemfault>	Time for some Britney Spears
Sep 17 19:53:03 <prometh>	phonography
Sep 17 19:53:24 <prometh>	pretty sure she meant phonetics
Sep 17 19:53:28 <prometh>	or ponograph
Sep 17 19:53:31 <prometh>	y
Sep 17 19:53:39 <roomba>	phornography.
Sep 17 19:53:43 <prometh>	yeah that too
Sep 17 19:53:59 <prometh>	she didn't write it naywya
Sep 17 19:54:23 <roomba>	prometh: btw good luck.
Sep 17 19:54:33 <prometh>	roomba: was that sarcastic?
Sep 17 19:54:50 <prometh>	i know i'm doomed, so...
Sep 17 19:55:03 <roomba>	no i mean it.
Sep 17 19:55:06 <prometh>	:) thanks
Sep 17 19:58:07 <roomba>	prometh: wherever you go - just don't lose track of who you truly are. even if that means suppressing it temporarily. don't let them turn you into jello.
Sep 17 19:58:23 <gehn>	but jello is yummy
Sep 17 19:58:37 <prometh>	what is jello?
Sep 17 19:58:38 <gehn>	mmmmm, horse hooves, yum
Sep 17 19:58:39 <roomba>	it is. but i know you don't wanna get eaten!
Sep 17 19:58:46 <gehn>	prometh, horse hooves + sugar mostly
Sep 17 19:59:03 <prometh>	i haven't tried horse meat yet
Sep 17 19:59:06 <gehn>	roomba, if the person eating me is good looking enough, sure
Sep 17 19:59:31 <bradleymeck>	is jello still gelatin and not agar or something?
Sep 17 19:59:57 <gehn>	ahem, I think you mean agar agar
Sep 17 20:00:36 <roomba>	i thuoght agar and agar-agar are interchangable
Sep 17 20:01:07 <gehn>	swagar.json
Sep 17 20:06:10 <brool>	i wish i could become a corporate drone being paid well so i could stop being a corporate drone being paid peanuts
Sep 17 20:07:15 <systemfault>	Jello is still gelatin
Sep 17 20:07:33 <systemfault>	(Really important for ##JavaScript to know that)
Sep 17 20:07:41 <brool>	jello = boiled pigs feet
Sep 17 20:07:42 <systemfault>	Also, not Kosher or Halal
Sep 17 20:08:07 <systemfault>	brool: It's possible to get beef gelatin, it's just that it's often pork
Sep 17 20:09:19 <brool>	i've never been a fan of jell-o, but if it's unkashrut and haram then i'm going to develop a taste for it just to flex on them
Sep 17 20:09:54 <brool>	ooh, jell-o shots
Sep 17 20:10:01 <systemfault>	Bacon Jello with a glass of vodka
Sep 17 20:10:29 <systemfault>	With dairy in it.
Sep 17 20:11:59 <brool>	i-i'm lactose intolerant ;~;
Sep 17 20:12:16 <jaawerth>	lol you realize people who eat kosher/halal don't care if people who don't share their beliefs don't right. so if you wanna do that out of spite have at it, enjoy your bacon dairy jello
Sep 17 20:12:33 <jaawerth>	*don't, right?
Sep 17 20:13:26 <systemfault>	Can't even make stupid jokes anymore :(
Sep 17 20:13:35 <jaawerth>	not without me ruining them :D
Sep 17 20:15:16 <brool>	i make stupid jokes just to flex on people who don't take them well :^)
Sep 17 20:15:27 <gehn>	weird flex, but ok
Sep 17 20:16:02 <roomba>	not weird at all. it's the best flex ever these days.
Sep 17 20:16:17 *	roomba likes vacuuming on the edges
Sep 17 20:16:26 <gehn>	I prefer flax
Sep 17 20:16:31 <gehn>	lots of omega-3's
Sep 17 20:16:37 <brool>	oh gods, flax
Sep 17 20:16:43 <brool>	bringing back the runescape memories
Sep 17 20:16:55 <brool>	how many hours wasted spinning bowstrings for 150k gp
Sep 17 20:17:21 <gehn>	runescrap, is this some kind of peasant joke I'm too cool to understand?
Sep 17 20:24:07 <jaawerth>	runescrape would be a good name for a library
Sep 17 20:25:37 <weijunli>	Im getting a bit confused with the parent/child iframe communication, anyone mind to do a simple jsfiddle to show me just the parent sending ´hello´ to the child frame?
Sep 17 20:25:56 <lf94>	gehn: runescape was a popular game.
Sep 17 20:27:06 <weijunli>	The child needs the eventlistener while the parent needs to postMessage, thath it?
Sep 17 20:27:31 <weijunli>	but how do i tie both, considering I want to communicate from two different servers
Sep 17 20:27:40 <weijunli>	sites*
Sep 17 20:28:04 <silverdust>	Wuill this function wait for the promise elem.getText() to resolve before sending a value to the map function? https://gist.github.com/josephrexme/22c14c55d2c0a648aae0e22aa191f2fa
Sep 17 20:28:57 <silverdust>	Or would it just set everything as false if some of those take time?
Sep 17 20:32:03 <deltab>	silverdust: it'll always return false
Sep 17 20:32:41 <silverdust>	deltab: what will be the best way to wait for it to be done without using async/await syntax
Sep 17 20:33:40 <silverdust>	I am giving a PR review and I don't want it to seem like I'm forcing my own idea of async/await . Also don't want the PR creator to feel confused if they aren't already used to async/await syntax
Sep 17 20:33:56 <silverdust>	So I want to suggest an alternative
Sep 17 20:34:00 <deltab>	you'll need to return a promise or an array of promises
Sep 17 20:34:20 <gambl0re>	how do you update an array value using useState?
Sep 17 20:34:43 <systemfault>	By replacing the array
Sep 17 20:35:05 <systemfault>	That means, no mutations... use filter/map/reduce/array spread
Sep 17 20:35:36 <silverdust>	deltab: Here's what it originally looked like by the PR creator https://gist.github.com/josephrexme/40658db32bbfc113fbd5bd5bb708e9fb
Sep 17 20:36:03 <silverdust>	But I want to say that's not good because returning a Promise to the filter will always evaluate as truthy
Sep 17 20:36:22 <silverdust>	Which is why I came up with what I shared before
Sep 17 20:36:32 <gambl0re>	is the #react channel still active? theres hasnt been any chat in there for a while
Sep 17 20:38:03 <gehn>	gambl0re, yes
Sep 17 20:38:57 <deltab>	silverdust: you need to use map but with the original inner function: that gives you an array of promises, which you can pass to Promise.all
Sep 17 20:39:26 <depesz>	Hi. I have canvas element, and a span, and I want to position the span next to lower left corner of the canvas. how can I do it? (there will be more spans, for: top and botton on the left side, and left and right on top size)
Sep 17 20:39:46 <jaawerth>	silverdust: just use Promise.all(listItems.map(elem => elem.getText())).then(itemsTxt => itemsTxt.filter(...))
Sep 17 20:40:13 <jaawerth>	e.g. map the items into an array of promises, use Promise.all on it to get a promise of an array which you filter in a .then
Sep 17 20:40:31 <jaawerth>	or even wrap the logic into a reusable pFilter function
Sep 17 20:48:40 <silverdust>	jaawerth: so is Promise.all().then() going to hold the event loop and process everything in it before going to the next line? Since the goal is to return the filtered value in the outer scope?
Sep 17 20:49:01 <jaawerth>	silverdust: no, but neither is await
Sep 17 21:05:14 <sillyslux>	silverdust, can you show function elem.getText?
Sep 17 21:05:15 <jaawerth>	silverdust: await simply "pauses" the async function it's in until the promise yo uawait on is resolved, at which point the event loop "resumes" said function. ti's just sugar that lets you code more imperatively inside the async function, but from the outer event loop's perspective it's no different from using .then
Sep 17 21:06:22 <sillyslux>	why would elem.getText be async?
Sep 17 21:07:27 <sillyslux>	oic
Sep 17 21:07:31 <jaawerth>	I think there are headless browsers that work that way
Sep 17 21:08:01 <silverdust>	sillyslux: here https://www.protractortest.org/#/api?view=webdriver.WebElement.prototype.getText
Sep 17 21:08:12 <sillyslux>	ya, just reading it ^^
Sep 17 21:16:31 <niggler>	prometh: https://twitter.com/MrWilliamo/status/1173564725399085058
Sep 17 21:17:42 <prometh>	i dont' get it
Sep 17 21:19:00 <niggler>	thats your problem, you're too old and simultaneously dont have enough experience
Sep 17 21:19:53 <jaawerth>	I once caught a recruiter putting "minimum 5 years experience with angularjs" on a posting in 2014. angular had only been stable for like 5-6 years
Sep 17 21:20:09 <jaawerth>	I made them fix it but not after it had already been posted
Sep 17 21:20:22 <jaawerth>	not until after*
Sep 17 21:22:20 <roomba>	prometh: do you have 10 years experience in Reactjs?
Sep 17 21:25:05 <niggler>	20 years in reactjs
Sep 17 21:25:12 <niggler>	40 years in JS
Sep 17 21:26:02 <sillyslux>	not older than 35
Sep 17 21:26:35 <systemfault>	I totally remember using JS in 1982
Sep 17 21:26:40 <systemfault>	I SWEAR!!!
Sep 17 21:26:51 <siix>	except back then it was called DOS
Sep 17 21:28:28 <lf94>	ol
Sep 17 21:29:23 <malevolence>	No idea what conversation I just walked in to lol
Sep 17 21:30:30 <Intelo>	Which library is good to generate uuids like "58b96707eeddfd10062f5936" or whatnot. Somehow I need to generate them in javascript and not in database (long story of legacy)
Sep 17 21:31:25 <sillyslux>	!npm uuid
Sep 17 21:31:26 <jellobot>	sillyslux, uuid@3.3.3: RFC4122 (v1, v4, and v5) UUIDs - https://www.npmjs.com/package/uuid
Sep 17 21:31:45 <malevolence>	uuid and import uuid/v4
Sep 17 21:33:17 <Alexendoo>	That isn't a UUID though, so probably not those
Sep 17 21:33:37 <Intelo>	Alexendoo, what?
Sep 17 21:33:38 <malevolence>	huh?
Sep 17 21:33:55 <Alexendoo>	"58b96707eeddfd10062f5936" isn't a UUID
Sep 17 21:34:01 <sillyslux>	whats wrong with it?
Sep 17 21:34:20 <Alexendoo>	If you ignore the lack of hyphens, it's not the same size
Sep 17 21:34:31 <sillyslux>	"58b9 6707 eedd fd10 062f 5936"
Sep 17 21:35:01 <GreenJello>	also, if I'm reading that right, it has an invalid version
Sep 17 21:35:07 <sillyslux>	indeed
Sep 17 21:35:43 <malevolence>	it is a valid uuid. there are 3 formats for them, one as a string as shown, second with dashes, and third with dashes and squiglies
Sep 17 21:36:37 <sillyslux>	still too short
Sep 17 21:37:16 <Intelo>	GreenJello,  invalid version?
Sep 17 21:37:52 <sillyslux>	it's version f
Sep 17 21:38:49 <GreenJello>	there are only versions 0-4, so 15 is very wrong if that were a UUID
Sep 17 21:39:04 <Intelo>	GreenJello,  its a uuid by mongodb algo  I gues
Sep 17 21:39:13 <GreenJello>	Intelo, mongo doesn't use UUIDs
Sep 17 21:39:22 <Intelo>	GreenJello, then what does it use?
Sep 17 21:39:24 <malevolence>	oh i see with it expanded. format is 8-4-4-4-12
Sep 17 21:39:26 <GreenJello>	it uses something they invented called an "ObjectID"
Sep 17 21:39:38 <Intelo>	if I insert uuidv4 in mongo, will it accept?
Sep 17 21:39:58 <Intelo>	GreenJello, ya. Its the objectId that should be uuid I guess
Sep 17 21:40:01 <sillyslux>	uuid might be too long but dunno
Sep 17 21:40:35 <sillyslux>	there's probably a package for these mongo ids too though
Sep 17 21:41:52 <sillyslux>	var objectId = new ObjectID();
Sep 17 21:41:58 <GreenJello>	Intelo, const {ObjectID} = require('mongodb'); new ObjectID().toHexString()
Sep 17 21:42:01 <sillyslux>	https://mongodb.github.io/node-mongodb-native/api-bson-generated/objectid.html
Sep 17 21:42:20 <malevolence>	yes, the _id can be anything guaranteed to be unique. ObjectID simply creates something unique for you (as does firebase). You can use a different value though. However both firebase and mongo ObjectID's are also created by date which gives sorting by insert time. A UUID will not do that.
Sep 17 21:45:10 <malevolence>	or if you want to create an Object id :) ->
Sep 17 21:46:26 <malevolence>	const ObjectId = (m = Math, d = Date, h = 16, s = s => m.floor(s).toString(h)) =>
Sep 17 21:46:27 <malevolence>	    s(d.now() / 1000) + ' '.repeat(h).replace(/./g, () => s(m.random() * h))
Sep 17 21:46:43 <Nyle>	Well.
Sep 17 21:46:51 <Nyle>	I ended up joining ##jabascript.
Sep 17 21:47:14 <malevolence>	or
Sep 17 21:47:26 <malevolence>	import { ObjectID } from 'bson';
Sep 17 21:47:27 <malevolence>	const id  = new ObjectID();
Sep 17 21:47:27 <malevolence>	console.log(id.toHexString());
Sep 17 21:47:28 <Nyle>	So what's the best way to show a person a jabascript alert box error box thingymabogger
Sep 17 21:47:37 <Nyle>	alert()?
Sep 17 21:47:43 <Nyle>	or something better?
Sep 17 21:47:51 <malevolence>	both will create valid ObjectId's that mongo will pass as valid
Sep 17 22:43:51 *	Disconnected ()
**** ENDING LOGGING AT Tue Sep 17 22:43:51 2019

**** BEGIN LOGGING AT Tue Sep 17 22:44:16 2019

Sep 17 22:44:16 *	Now talking on ##javascript
Sep 17 22:44:16 *	Topic for ##javascript is: JavaScript is *not* Java. | Just ask your question. | Say "!mdn abc" for docs on "abc". | Don't paste code in the channel. | Can't talk? Get registered on freenode ( https://git.io/vaTS2 )
Sep 17 22:44:16 *	Topic for ##javascript set by niggler!~niggler@unaffiliated/niggler (Tue Jan 15 07:16:23 2019)
Sep 17 22:50:38 <sidetracking>	it's tha speaker knockerz
Sep 17 22:52:44 <primitivMedia>	https://jsfiddle.net/nLv915js/
Sep 17 22:52:47 <primitivMedia>	here you go
Sep 17 22:55:11 <prometh>	how soon do you think frontend development will almost completely fade away due to machine learning automation?
Sep 17 22:56:32 <devsnek>	couple thousand years
Sep 17 22:57:08 <prometh>	or at least when it stops being so popular... like how it was 10-15 years ago
Sep 17 22:57:21 <prometh>	or even 5 years ago
Sep 17 22:57:47 <bradleymeck>	prometh: only when we reclaim flash/dreamweaver workflows
**** ENDING LOGGING AT Tue Sep 17 22:58:03 2019

**** BEGIN LOGGING AT Tue Sep 17 22:58:03 2019

Sep 17 22:59:56 <jaawerth>	primitivMedia: I don't use \b much but I believe the problem is that # is a non-word character, so putting \b#\w+ won't match #foo since the non-word character before # is not a word boundary, since # is also not a word character
Sep 17 23:00:34 <primitivMedia>	that sounds about right
Sep 17 23:00:39 <primitivMedia>	any work around?
Sep 17 23:00:57 <jaawerth>	primitivMedia: are there any characters after the # you want to allow other than [a-zA-Z]? should ##foo match the entire thing? what about punctuation?
Sep 17 23:01:09 <primitivMedia>	nope these are going to be instagram hashtags
Sep 17 23:01:13 <primitivMedia>	so just letters
Sep 17 23:01:13 <bradleymeck>	lookbehind~ bring that catastrophic backtracking~
Sep 17 23:01:47 <primitivMedia>	lewtters and numbers, cant start with a number after the # \
Sep 17 23:01:51 <primitivMedia>	#*
Sep 17 23:03:52 <jaawerth>	primitivMedia: /\W*(#\w+)\W*/g should do it. or even just /(#\w+)/g
Sep 17 23:04:07 <jaawerth>	oh, can't start with number
Sep 17 23:04:11 <primitivMedia>	if iwanted to allow underscores but not at the beginning?
Sep 17 23:04:29 <jaawerth>	then /(#[a-zA-Z]\w*)/g
Sep 17 23:04:56 <bambanx>	anyone use rollup?
Sep 17 23:05:20 <GreenJello>	n> /\w/.test('1')
Sep 17 23:05:21 <jellobot>	(okay) true
Sep 17 23:05:39 <prometh>	\w includes underscore, i think
Sep 17 23:05:43 <primitivMedia>	works great ! /(#[a-zA-Z]\w*)/g
Sep 17 23:05:44 <jaawerth>	it does
Sep 17 23:05:55 <primitivMedia>	does it include other special characters or just _?
