T 1567713786 18<gehn18>	backwards compat should mean the new can run the old
T 1567713797 18<Alexendoo18>	Without () it's a block
T 1567713806 18<gehn18>	if the old breaks within the new, then it's not backwards compatible
T 1567713817 18<gehn18>	n> var x = { class: null };
T 1567713818 18<jellobot18>	(okay) undefined
T 1567713827 18<gehn18>	hmm, ok well nevermind entirely then I guess
T 1567713828 18<novum18>	but the old doesn't break in the new because you'd never write {class:null} in the old? right?
T 1567713831 18<bprompt18>	just to help with the backscroll----> "novum" is trying to change 2000 lines of ES5 code to ES6 <--- for those who missed it
T 1567713840 18<jaawerth18>	novum: you should be able to just grab the .js file and include it iirc
T 1567713852 18<jaawerth18>	it's smart enough to know whether it's being requried from a module or included as a script
T 1567713859 18<novum18>	ok so is it ok to clone then mv the *.js to includes?
T 1567713874 18<jaawerth18>	should be
T 1567713876 18<novum18>	that's (very unfortunately) what has happened to a lot of thhings
T 1567713880 18<novum18>	not how I would do it
T 1567713887 18<novum18>	okie dokie x.x
T 1567713896 18<jaawerth18>	but shims/polyfills should be incldued before everythign else
T 1567713900 18<Alexendoo18>	IIRC class was always reserved anyway
T 1567713901 18<novum18>	yes.
T 1567713905 18<jaawerth18>	so I would change whatever your config is for includes to ensure that's the case
T 1567713915 18<novum18>	will do. I can make that happen.
T 1567713920 18<novum18>	but only for this iframe
T 1567713926 18<johnjake18>	Hi guys,
T 1567713929 18<novum18>	I have been instructed not to mess with the template index.html
T 1567713934 18<jaawerth18>	yeah, class has been a reserved word for a longtime. so the main difference is that { class: null } would be an error in ES5 but not in es6
T 1567713938 18<novum18>	only the index.html for this iframe
T 1567713968 18<johnjake18>	I'm trying to work on detecting RCEs in node and I need people to playaround and give some feedbacks
T 1567713972 18<gehn18>	well, as mentioned, no one would probably ever write it like that
T 1567713975 18<johnjake18>	http://157.245.141.32:2253/thisIstest?input=output=1
T 1567713982 18<gehn18>	so... extremely unlikely edge case
T 1567714008 18<Alexendoo18>	jaawerth: Pretty sure that would be fine in ES5 too, since reserved words are for identifiers not properties
T 1567714022 18<gehn18>	careful, he gon hack u
T 1567714072 18<prometh18>	i spoke to a recruiter today and he referred to react and vue as "languages"
T 1567714079 18<ljharb18>	jaawerth: um
T 1567714090 18<prometh18>	isn't it, like, their job to know what they're selling?
T 1567714104 18<prometh18>	or are salesman just dumb?
T 1567714111 18<lloydxmas18>	their job is to convert
T 1567714120 18<johnjake18>	prometh like everything, there are good salesmen and bad salesmen
T 1567714128 18<ljharb18>	jaawerth: so like ES6 tagged template literals' template objects (passed to the function) used to be kept per-realm, and in like ES2018 they were changed to be per-call-site
T 1567714141 18<johnjake18>	prometh Maybe that was his/her first day, you'll never know
T 1567714164 18<jaawerth18>	ah yeah I got the reserved word property rule wrong I think
T 1567714177 18<gehn18>	prometh, welcome to dealing with recruiters
T 1567714179 18<jaawerth18>	ljharb: ooh good one
T 1567714180 18<arve18>	meh. I love my coworkers, up to and including our CEO
T 1567714190 18<arve18>	I just wish they understood QA and QC
T 1567714192 18<prometh18>	gehn: yeah, it's mostly a waste of time
T 1567714203 18<ljharb18>	jaawerth: but also each spec has an Annex E that details them
T 1567714208 18<gehn18>	prometh, https://twitter.com/horse_recruiter
T 1567714209 18<prometh18>	i really hope that recruiters are not well paid, considering how dumb they are
T 1567714209 18<jaawerth18>	ljharb: yeah I imagine most of them are ES2015 <---> ES2016+ rather than before ES2015/after ES2015
T 1567714214 18<ljharb18>	jaawerth: https://tc39.es/ecma262/#sec-additions-and-changes-that-introduce-incompatibilities-with-prior-editions
T 1567714217 18<jaawerth18>	ah nice
T 1567714223 18<jaawerth18>	didn't realize that was in there butu it makes sense
T 1567714235 18<ljharb18>	altho it looks like Annex E hasn't been updated since ES2015
T 1567714242 18<novum18>	web dev is so messy
T 1567714262 18<jaawerth18>	truth
T 1567714268 18<gehn18>	prometh, recruiters can be pretty well paid, you might be surprised
T 1567714271 18<jaawerth18>	I mean, so is dev anyway. obligatory:
T 1567714273 18<jaawerth18>	!programming sucks
T 1567714274 18<ecmabot18>	jaawerth: https://www.stilldrinking.org/programming-sucks
T 1567714276 18<ljharb18>	novum: that's why it's much harder and takes much more skill than other kinds of dev
T 1567714279 18<prometh18>	maybe i should become a recruiter
T 1567714286 18<prometh18>	those who can't do, sell
T 1567714287 18<jaawerth18>	I guess ecmabot is tired
T 1567714303 18<jaawerth18>	https://www.stilldrinking.org/programming-sucks
T 1567714306 18<gehn18>	prometh, but that only incentivizes them to go for quantity of hires, it does not encourage them to actually know what they're talking about
T 1567714321 18<prometh18>	gehn: ah, a shitty life
T 1567714323 18<gehn18>	programming = <3, programming = life
T 1567714327 18<ljharb18>	jaawerth: it responded to you immediately
T 1567714330 18<ljharb18>	jaawerth: do you have it on ignore?
T 1567714335 18<ljharb18>	>> 'test' @ jaawerth
T 1567714335 18<ecmabot18>	jaawerth: (string) 'test'
T 1567714351 18<jaawerth18>	I don't
T 1567714354 18<jaawerth18>	my connection must have hiccuped
T 1567714357 18<ljharb18>	ah k
T 1567714357 18<jaawerth18>	sorry for the spam
T 1567714369 18<gehn18>	there's no real reason for them to know any of the tech they hire for - they get given a list of traits desired in a candidate, they read your resume for said buzzwords and acronyms
T 1567714398 18<gehn18>	it's not the recruiter's job to do a technical assessment, the other engineers at the company do that during your tech interview
T 1567714403 18<prometh18>	gehn: ah, so the only reason they aren't replaced by a bot is because of the phone call
T 1567714425 18<prometh18>	(sad)
T 1567714426 18<gehn18>	I wouldn't doubt AI can do most of a recruiter's job
T 1567714439 18<gehn18>	how much and whether it will happen (or probably more like how soon) is... I'm not sure really
T 1567714442 18<prometh18>	not even ai, just a basic script
T 1567714449 18<prometh18>	ai for the phone call
T 1567714483 18<ljharb18>	prometh: recruiters do a ton of work that can't be automated.
T 1567714491 18<ljharb18>	prometh: and technical skill has no bearing on that work.
T 1567714510 18<ljharb18>	that you've had negative experiences with some doesn't invalidate the profession
T 1567714522 18<prometh18>	i hope so for their sake
T 1567714524 18<gehn18>	I don't think I've ever had a positive one
T 1567714532 18<ljharb18>	anecdata notwithstanding
T 1567714538 18<gehn18>	and I've had *very many* recruiter interactions
T 1567714562 18<niggler18>	id take that as a true indication of supply/demand in the market gehn
T 1567714568 18<novum18>	https://github.com/es-shims/es5-shim#example-of-applying-es-compatability-shims-in-a-browser-project  <- do you NEED to require the json3.min.js  ?
T 1567714586 18<niggler18>	novum: stop niggling
T 1567714604 18<jaawerth18>	I've spoken to a few decent recruiters
T 1567714607 18<niggler18>	you could craft your own special shim or just use something that works
T 1567714613 18<arve18>	again, how do you convince management that you need to hire QA?
T 1567714616 18<gehn18>	actually some of the dedicated ones at larger companies are better
T 1567714620 18<jaawerth18>	it's harder when it's a tech division of a non-tech company though
T 1567714632 18<niggler18>	that's management's job arve
T 1567714632 18<prometh18>	gehn: you don't write e2e tests and don't have the time
T 1567714637 18<niggler18>	"PM" or whatever they call it
T 1567714648 18<gehn18>	prometh, I what?
T 1567714650 18<jaawerth18>	I used to work for such a company and I had to throw my weight around to stop our recruiters from relisting all of our dev openings as "java"
T 1567714661 18<cthulchu_18>	my dear folks, ^= is not the xor?
T 1567714664 18<jaawerth18>	(none of them involved any java)
T 1567714667 18<arve18>	niggler: that's the issue. all of the management, and the project owners are non-tech
T 1567714676 18<ljharb18>	cthulchu_: it's 32 bit bitwise xor
T 1567714687 18<ljharb18>	niggler: no, that section should be updated
T 1567714695 18<niggler18>	the person above you, or the one running the project, is the one that should care arve
T 1567714700 18<ljharb18>	arve: then they shouldn't be making any tech decisions :-)
T 1567714710 18<arve18>	granted, some of them have some tech profiency, but none of them understand the tens of thousands LOC that has been written
T 1567714714 18<jaawerth18>	cthulchu_: xor is just ^
T 1567714723 18<arve18>	and I care about the project
T 1567714727 18<prometh18>	gehn: you don't know what e2e tests are?
T 1567714743 18<gehn18>	prometh, you what?
T 1567714743 18<arve18>	if I were running it as CEO, I'd gone external to find $1m of financing
T 1567714744 18<prometh18>	gehn: oops... wrong person
T 1567714756 18<prometh18>	arve: you don't write e2e tests and don't have the time
T 1567714759 18<arve18>	just to get to "beyond pilot"
T 1567714760 18<niggler18>	this is a circular problem ljharb
T 1567714767 18<niggler18>	JSON 3 is **deprecated** and **no longer maintained**. Please don't use it in new projects, and migrate existing projects to use the native `JSON.parse` and `JSON.stringify` instead.
T 1567714787 18<arve18>	prometh: i write them
T 1567714794 18<niggler18>	if JSON isn't available in your platform in the first place, there's no migration
T 1567714800 18<ljharb18>	niggler: json2 is the real one
T 1567714804 18<prometh18>	arve: then argue that it takes too much time and you can't reach enough coverage
T 1567714805 18<ljharb18>	niggler: i'm not sure why json3 is in there
T 1567714806 18<arve18>	shit still breaks, and slows down pace because I can't cover everything alone
T 1567714814 18<prometh18>	arve: there you go
T 1567714817 18<niggler18>	The JSON 3 parser uses recursive descent instead of eval and regular expressions, which makes it slower on older platforms compared to JSON 2.
T 1567714828 18<arve18>	prometh: hence, i'd like another full-time dev
T 1567714829 18<cthulchu_18>	ljharb, thanks :)
T 1567714829 18<niggler18>	^^ assumably not using eval
T 1567714835 18<prometh18>	arve: your job is unit/integration tests.. qa's job is e2e
T 1567714849 18<ljharb18>	niggler: right, so that section should be updated to use json2, not json3, and update the versions of everything as well
T 1567714853 18<niggler18>	arve: it might be easier to take that angle
T 1567714856 18<prometh18>	arve: you want to improve quality and_reliability_, but don't have teh time
T 1567714866 18<niggler18>	hold on, are you recommending the eval-approach?
T 1567714868 18<jaawerth18>	I wish json5 would just become the regular json
T 1567714875 18<prometh18>	jaawerth: it's slower
T 1567714878 18<jaawerth18>	fair
T 1567714879 18<arve18>	I want to improve _pace_
T 1567714881 18<niggler18>	the reason json3 exists, afaict, is that json2 uses eval
T 1567714887 18<prometh18>	jaawerth: json5 isn't for data transfer, but for configs
T 1567714902 18<gehn18>	I prefer maroon5, it's much more sexy
T 1567714909 18<arve18>	Ideally, I'd want someone who could both touch code and tests
T 1567714919 18<jaawerth18>	prometh: also fair
T 1567714924 18<prometh18>	arve: i need a job....
T 1567714928 18<arve18>	but that's primarily concerned with the e2e testing
T 1567714949 18<prometh18>	arve: i've never done e2e as a job, and i'd be interested in it if the money is htere... i'm a frontend dev, otherwise
T 1567714952 18<arve18>	prometh: we have a review coming up tomorrow, and I'll be bringing my points up
T 1567714966 18<ljharb18>	niggler: yes but who cares
T 1567714975 18<ljharb18>	niggler: any browser that needs json2 won't have csp
T 1567714990 18<ljharb18>	niggler: if there's a safety issue tho, then json3 is fine i guess
T 1567715008 18<arve18>	prometh: iif we end up creating a position, I'll post a link to it
T 1567715009 18<niggler18>	the church of crockford is disgusted by your heretical pro-eval views
T 1567715032 18<ljharb18>	niggler: that church is all apostates now
T 1567715033 18<prometh18>	arve: keep my nickname noted... i've been unemployed for 5 months
T 1567715064 18<arve18>	eval is nice, but a fucking minefield
T 1567715075 18<arve18>	much like raw SQL
T 1567715080 18<ljharb18>	it's not nice
T 1567715087 18<ljharb18>	but this is for a JSON.parse shim
T 1567750304 20*	Disconnected (20)
T 1567750330 19*	Now talking on 22##javascript
T 1567750330 22*	Topic for 22##javascript is: JavaScript is *not* Java. | Just ask your question. | Say "!mdn abc" for docs on "abc". | Don't paste code in the channel. | Can't talk? Get registered on freenode ( https://git.io/vaTS2 )
T 1567750330 22*	Topic for 22##javascript set by 26niggler!~niggler@unaffiliated/niggler (24Tue Jan 15 07:16:23 2019)
T 1567750343 18<MJCD18>	schilling, I mean
T 1567750351 18<MJCD18>	that error is generally due to network conditions
T 1567750365 18<MJCD18>	you might consider handling the error by trying again
T 1567750372 18<MJCD18>	also
T 1567750388 18<MJCD18>	you might need to set the referrer url to the original url
T 1567750397 18<MJCD18>	and other potential hackery
T 1567750409 18<MJCD18>	sounds like you're trying to do hot linking
T 1567750420 18<MJCD18>	of things that have hot link protection ie not meant to be hotlinked
T 1567750455 18<schilling18>	Not hotlinking at all. It's the URL from the site directly.
T 1567750459 18<MJCD18>	if you control site.com's httpd you can probably disable that
T 1567750484 18<schilling18>	I don't control it. I've been downloading via a python script previously.
T 1567750485 18<MJCD18>	basically that error more indicates that your request was lost, networking wise
T 1567750503 18<MJCD18>	you don't control it, but you're not hotlinking
T 1567750509 18<MJCD18>	does not compute
T 1567750530 18<MJCD18>	!mcve @ schilling
T 1567750530 18<ecmabot18>	schilling: How to create a minimal, complete, and verifiable example https://stackoverflow.com/help/mcve see also !fiddle
T 1567750533 18<MJCD18>	would be good
T 1567750536 18<MJCD18>	or similar
T 1567750552 18<schilling18>	It's the URL the site provides for the CSV download...
T 1567750598 18<MJCD18>	can you log the complete error
T 1567750608 18<MJCD18>	and the status code
T 1567750633 18<MJCD18>	does the server require any auth?
T 1567750656 18<MJCD18>	or a cookie/session id/similar ?
T 1567750662 18<MJCD18>	api id
T 1567750664 18<MJCD18>	somesuch lol
T 1567750689 18<MJCD18>	ljharb, I just want to say
T 1567750695 18<MJCD18>	I accept your cookies
T 1567750698 18<schilling18>	status code and body are undefined. Error object is "read ECONNRESET at TLSWrap.onStreamRead"
T 1567750707 18<MJCD18>	just so we're EU-legal
T 1567750719 18<MJCD18>	important notice on npmjs.com
T 1567750721 18<ljharb18>	MJCD: i do make good cookies
T 1567750730 18<MJCD18>	DMCA cookies?
T 1567750742 18<MJCD18>	dark magicks cookie association
T 1567750776 18<MJCD18>	schilling, ok so as I say, that sounds like thing can't read site.com for whatever reason
T 1567750792 18<MJCD18>	you can make it retry
T 1567750798 18<schilling18>	Strange. Python script pulls it just fine...
T 1567750807 18<MJCD18>	but there may be a reason it's not reachable
T 1567750810 18<schilling18>	Browsers as well.
T 1567750822 18<MJCD18>	firewall perhaps?
T 1567750823 18<schilling18>	That's why I'm going bonkers over here...
T 1567750833 18<MJCD18>	NAT port forwarded?
T 1567750843 18<schilling18>	And the script seems to work with regular GET requests.
T 1567750865 18<MJCD18>	I mean they'll all be HTTP
T 1567750872 18<MJCD18>	but sure
T 1567750879 18<schilling18>	As well as pulling from /file.csv urls. I'm suspecting response header is getting the mime type jacked. Just don't know how to prove it...
T 1567750893 18<MJCD18>	once again environmental factors at all like firewall, routing, etc
T 1567750903 18<schilling18>	None.
T 1567750914 18<MJCD18>	impossible
T 1567750943 18<MJCD18>	unless it's all ASM and even then... it's all ASM that's a factor lool
T 1567750947 18<schilling18>	Maybe routing? Like I said, I can't prove anything because all I can get is a ECONNRESET error.
T 1567750974 18<schilling18>	I never get a statusCode or status object out of it. Just...weird.
T 1567750976 18<MJCD18>	try using curl
T 1567750986 18<MJCD18>	from the same host you're trying right now
T 1567751003 18<MJCD18>	format the request much the same way
T 1567751014 18<MJCD18>	dump the output
T 1567751016 18<MJCD18>	raw
T 1567751029 18<MJCD18>	wget would be fine too
T 1567751102 18<schilling18>	curl gives me the expected response.
T 1567751142 18<schilling18>	Let me get a pastebin up for you...
T 1567751175 18<schilling18>	I used the most basic example from the request documentation. Just swaped out the URL.
T 1567751375 18<schilling18>	https://pastebin.com/Nv9HX8yu
T 1567751424 18<schilling18>	I took it back to the most basic example as it was yielding the same exact response as the more elaborate scripts.
T 1567751426 18<dars18>	Hi
T 1567751579 18<dars18>	If I am trying to write 100k rows to a excel sheet which I have fetched from DB and my system freezes when I run that node process. How to acheive optimisation in this task?
T 1567751588 18<dars18>	db is postgres
T 1567751650 18<deniska18>	dars: isn't 100k rows kinda a lot for excel?
T 1567751708 18<deniska18>	yeah, excel is 1,048,576 rows max
T 1567751737 18<evulish18>	!range2
T 1567751738 18<ecmabot18>	evulish: (a, b, s=1)=>Array.from({length: (b-a)/s+1}, (_,i)=>a+i*s)
T 1567751834 18<deniska18>	(which on the second glance is higher than 100k)
T 1567751843 18<deniska18>	dars: how do you write to excel file?
T 1567751860 18<cryocaustik18>	hi all - is it possible to have babel auto refresh the browser when you make changes to the code?
T 1567751894 18<schilling18>	dars: Which part is it freezing on? Pulling the 100k rows from postgres or writing to the file?
T 1567752114 18<MJCD18>	!snip range
T 1567752117 18<MJCD18>	boo
T 1567752137 18<schilling18>	MJCD, any ideas?
T 1567752146 18<dars18>	deniska using node module
T 1567752153 18<dars18>	excel4node
T 1567752170 18<MJCD18>	loool
T 1567752171 18<dars18>	schilling writing to the file
T 1567752173 18<MJCD18>	here we go niggler
T 1567752180 18<MJCD18>	excel4node
T 1567752181 18<MJCD18>	kgo
T 1567752198 18<dars18>	tried xlsx too
T 1567752253 18<dars18>	should I move from nodejs to python or is their any way in nodejs to perform this?
T 1567752280 18<schilling18>	dars, first thing I would try is breaking it apart into batches.
T 1567752314 18<dars18>	schilling How would you achieve that?
T 1567752329 18<schilling18>	10 groups of 10k, and maybe take a look at something that will give you some introspection into memory use.
T 1567752368 18<MJCD18>	xdebug
T 1567752369 18<MJCD18>	ftw
T 1567752384 18<schilling18>	I would paginate it off a batch of ids, for starters.
T 1567752387 18<MJCD18>	node.js has its own profiler
T 1567752390 18<MJCD18>	--inspect
T 1567752414 18<MJCD18>	you can also connect it live to chrome[ium] dev tools
T 1567752424 18<MJCD18>	it's in the node documentation under debugging
T 1567752442 18<schilling18>	There's a good starting point too.
T 1567752446 18<MJCD18>	!g site:nodejs.org debugging
T 1567752460 18<MJCD18>	fine, ignore me jellobot
T 1567752474 18<MJCD18>	I will remember ths when you're on your death bed
T 1567752554 18<dars18>	schilling 10k from the database or 10k after recieving it from db. where will you partition?
T 1567752669 18<schilling18>	Either one. For starters, grab a smaller dataset. Just get the top 10 rows. If that writes, go to 5k, 10k, 50k.
T 1567752694 18<schilling18>	I'm suspecting a memory issue here firstly.
T 1567752723 18<dars18>	yeah it is a memory issue
T 1567752729 18<dars18>	imo
T 1567752959 18<schilling18>	Well, confirm it if you can. Add "LIMIT n" clause to your query and see if you can write to a file.
T 1567752980 18<dars18>	Yes I can do that
T 1567753018 18<schilling18>	Once you know that it isn't the node module that's jacking you up, you can start dealing with the memory/batching issue.
T 1567753029 18<schilling18>	Which is usually a good idea anyway...
T 1567753055 18<deniska18>	(don't use limit + offset for pagination though, https://use-the-index-luke.com/sql/partial-results/fetch-next-page )
T 1567753056 18<dars18>	But still what is the best way to perform such kind of tasks? Suppose I want to scale and I need to fetch 1m rows then what is the best way to perform it?
T 1567753117 18<schilling18>	Depends on your system architecture.
T 1567753144 18<schilling18>	Smaller system, smaller batches.
T 1567753257 18<dars18>	Ok
T 1567758054 18<dostoyevsky18>	http://html2canvas.hertzen.com/dist/html2canvas.js <- html2canvas is a HTML parser -> canvas written in JavaScript?
T 1567758552 18<dostoyevsky18>	Seems like all it does is to parse the HMTL and then map each element to a canvas call..
T 1567758563 18<dostoyevsky18>	Still a lot of effort
T 1567759529 18<MJCD18>	hey niggler
T 1567759542 18<MJCD18>	did you help the excel2js or w/e earlier
T 1567759543 18<MJCD18>	lol
T 1567759565 18<MJCD18>	dostoyevsky, that's how you do it
T 1567761443 18<julius18>	hi
T 1567761502 18<julius18>	shouldnt this .change() react to the input?   https://bpaste.net/show/SLNY
T 1567761512 18<julius18>	nothing is printed to the console
T 1567761687 18<aLeSD18>	hi all
T 1567761749 18<aLeSD18>	what if console.log(account.sing) gives me [Function: sign] ... then I do account.sing("ciao") and I got TypeError: account.sing is not a function  ???
T 1567766104 18<anddam18>	howdy
T 1567766138 18<ashnur18>	!load
T 1567766138 18<ecmabot18>	ashnur: The event that fires once the page is completely loaded, to include all linked assets. <https://developer.mozilla.org/en-US/docs/Web/Events/load>
T 1567766144 18<anddam18>	why don't I get any clipboard output from this simple browser extension? https://gist.github.com/anddam/af8b003cb22edc3bd19ff40c4dbc8247
T 1567766146 18<ashnur18>	!onload
T 1567766146 18<ecmabot18>	ashnur: Information about the order and meaning of particular load lifecycle events - see; https://javascript.info/onload-ondomcontentloaded
T 1567766172 18<anddam18>	I tried both synchronous and asynchronous access, in the first case I get an Promise that will never resolve, in the latter I get nothing at all
T 1567766484 18<ashnur18>	anddam: i don't know anything about this but reading the docs it seems to me that the case "doesn't resolve" shouldn't happen?
T 1567766749 18<anddam18>	ashnur: technically it stays in pending state
T 1567766839 18<anddam18>	I followed https://developers.google.com/web/updates/2018/03/clipboardapi I expected the page action to just work
T 1567767218 18<incognito18>	anddam: check your manifest.json, you are missing some parameters according to the last link you sent
T 1567767570 18<delboy1978uk18>	hi everyone o/
T 1567767672 18<delboy1978uk18>	im upgrading a site from PHP5 to PHP7 but it looks like the code i have been given is missing some JS, function not found! I can see a working version of the site on another URL, but how do I use the debugger in Firefox to stop when the onclick is triggered?
T 1567767690 18<delboy1978uk18>	so i can figure out what JS file it actually is
T 1567767797 18<stennowork18>	sup delboy1978uk
T 1567767826 18<delboy1978uk18>	yo stennowork o/
T 1567767829 18<delboy1978uk18>	:-D
T 1567767864 18<delboy1978uk18>	trying to figure out the JS debugger in FF. something ive never got my head round, it alsways seemed to pause when i moved my mouse lol
T 1567767882 18<stennowork18>	in chrome, you can attach breaking points to event listeners
T 1567768000 18<delboy1978uk18>	i have an onclick on a button. how can i get it to pause on that?
T 1567768099 18<stennowork18>	in chrome, i can right-click the button -> inspect element -> and then on the right i have an 'event listeners' tab
T 1567768121 18<stennowork18>	and there i can jump to the place in the code where it is bound and set a breakpoint
T 1567768238 18<stennowork18>	try in this simple example: https://jsfiddle.net/3pxe4at8/ right-click on button -> inspect element -> on the right, tab 'event listeners' -> click -> button will have a link to the code where the handler is added
T 1567768275 18<stennowork18>	and then i can add a break point by clicking the line number in the code window
T 1567768282 18<stennowork18>	in my case, thats line 33
T 1567768354 18<stennowork18>	(thats for chrome, not ff)
T 1567768358 18<stennowork18>	(dunno if ff can do that)
T 1567768363 18<delboy1978uk18>	stennowork thanks will give that a shot after my fag break and i come back with a coffee top up
T 1567768373 18<stennowork18>	good luck!
T 1567768374 18<delboy1978uk18>	i use ff developer edition, it totally rocks
T 1567768376 18<Kirjava18>	stennowork: you can do that in FF too
T 1567768398 18<stennowork18>	kk
T 1567768399 18<Kirjava18>	in fact I prefer FF's version because it can show event callback code inline in the DOM
T 1567768531 18<delboy1978uk18>	stennowork try this https://www.mozilla.org/en-GB/firefox/developer/
T 1567768620 18<stennowork18>	nifty
T 1567768653 18<DuckHuntDog18>	Hi. How would you handle the events for a range input? Some browsers fire the "input" event, some browsers fire the "change" event so I'll need to handle both. But the issue is that when you move a range slider with the mouse - Chrome will fire both events at the same time - and I wanna prevent the same event handler code to execute twice
T 1567768693 18<stennowork18>	should switch to ff again at some point
T 1567768698 18<DuckHuntDog18>	Is there any established solution for mitigating that?
T 1567768756 18<DuckHuntDog18>	I'm thinking maybe I could set a bool during "onmousedown" and use that to detect whether it seems like the user has moved the range input with the mouse, and in that case I will not execute the input "change" event
T 1567768767 18<DuckHuntDog18>	But not quite sure how I'd implement that in a reliable way
T 1567768900 18<MJCD18>	DuckHuntDog, all browsers should handle the click event for it
T 1567768905 18<MJCD18>	thus that's the best way to go
T 1567768906 18<MJCD18>	however
T 1567768916 18<MJCD18>	there's endless range implementations for forms
T 1567768921 18<MJCD18>	especially using a form lib
T 1567768925 18<MJCD18>	which you should be
T 1567769027 18<stennowork18>	why implement range when you have <input type=range>
T 1567769039 18<MJCD18>	because those are rather simplistic
T 1567769044 18<MJCD18>	good for what they are
T 1567769066 18<MJCD18>	but for many many tasks you need something custom
T 1567769087 18<MJCD18>	the same as why not just use <div> when in reality you need to customize it to display/act how you want
T 1567769113 18<MJCD18>	in this case the changes are often so vast that it's less work to just make your OWN range element
T 1567769134 18<MJCD18>	you can always use type="range" and THEN apply your UX to that
T 1567769145 18<stennowork18>	sure
T 1567769148 18<MJCD18>	best of both worlds
T 1567769157 18<stennowork18>	as html isn't concerned with ux anyway
T 1567769330 18<MJCD18>	right
T 1567769338 18<MJCD18>	that's half the reason for this issue persisting
T 1567769654 18<linuxconformer18>	what's the best way of storing state using javascript, specifically about if a user has done an action?
T 1567769689 18<stennowork18>	store for how long?
T 1567769702 18<stennowork18>	page reload? session? persistent between sessions?
T 1567769727 18<linuxconformer18>	stennowork: as long as possible
T 1567769739 18<stennowork18>	sessionstorage then?
T 1567769743 18<linuxconformer18>	great thank you
T 1567769777 18<stennowork18>	localstorage is persistent between sessions so that is even a bit longer
T 1567769787 18<MJCD18>	localstorage is silly
T 1567769791 18<MJCD18>	just go straight to indexeddb
T 1567769792 18<stennowork18>	so use localstorage instead of sessionstorage i guess
T 1567769794 18<MJCD18>	even for cookies
T 1567769797 18<MJCD18>	"cookies"
T 1567769820 18<MJCD18>	localstorage has too many limitations
T 1567769828 18<MJCD18>	and isn't even much faster/lighter than indexeddb
T 1567769830 18<MJCD18>	even for a single record
T 1567771517 18<ktwo18>	hey , is there an ES solution to this problem: Basically i want to append to some functional components a string (e.g. path = "mypath1" ) and use it directly  by calling something like   MyFunctionalClass.path
T 1567771575 18<stennowork18>	whats a functional class
T 1567771579 18<stennowork18>	is that like a pure class?
T 1567771606 18<ktwo18>	oh i dont know if its a standard thing but like this:          export default MyClass;   function MyClass() { .... }
T 1567771613 18<ktwo18>	it's done like this with React functional components
T 1567771691 18<stennowork18>	and you want to call an instance method by name?
T 1567771717 18<ktwo18>	yeah well i just need a string constant  for example         MyClass.path        should give ->  "/mypath"
T 1567771746 18<stennowork18>	myInstance['path']
T 1567771772 18<stennowork18>	n> const obj = {a:1,b:2,c:3}; const attr = 'b'; obj[attr]
T 1567771773 18<jellobot18>	(okay) 2
T 1567771911 18<ktwo18>	when i import the class with    import  MyClass  from './filename'  it seems i don't have an instance yet.. maybe i need to create a fake one.. let's try
T 1567771953 18<MikeD_18>	i don't think you're using 'class' right
T 1567772012 18<ktwo18>	Ok probably i should say function
T 1567772014 18<ktwo18>	since it is one
T 1567772070 18<ktwo18>	Maybe i can explain the problem in a better way: let's say i do have the [f] object available in the console, and if i print it i can actually see the constant i need , but i need a way to access it programmatically
T 1567772074 18<ktwo18>	without parsing that string manually
T 1567772096 18<MikeD_18>	stennowork: just showed that
T 1567772140 18<ktwo18>	tried:  "undefined"
T 1567772204 18<ktwo18>	is there an image upload service i can use here to show you the issue?
T 1567772209 18<ktwo18>	i mean which one is allowed
T 1567772235 18<avu18>	why would you need an image upload service to show us code? :)
T 1567772255 18<avu18>	use bpaste.net or something
T 1567772282 18<ktwo18>	https://pastebin.com/raw/v8biVBHA  this is the console.log out put for what ive tried
T 1567772303 18<ktwo18>	i'm trying to get a const value inside that function
T 1567772361 18<anddam18>	incognito: I added "clipboardRead", "clipboardWrite" to permissions, not sure if that's what you were referring to
T 1567772466 18<anddam18>	delboy1978uk: "fag break"?
T 1567772521 18<delboy1978uk18>	anddam yes fag break. smoking a fag. i realise americans find this humorous :-P
T 1567772555 18<anddam18>	that sounded a bit smokeophobic, yes
T 1567772576 18<stennowork18>	you don't know the expression 'smoking a fag'?
T 1567772589 18<ktwo18>	probably i could use toString() to parse it manually, but that sounds really ugly can't quite believe there is a nicer way ^^
T 1567772913 18<MJCD18>	ktwo, sounds like reflection style nonsense
T 1567772918 18<MJCD18>	which has no place in javascript
T 1567772928 18<MJCD18>	if you really really need
T 1567772937 18<ktwo18>	Yes, but i'd like to do this to avoid a LOT of boilerplate
T 1567772949 18<MJCD18>	thing.prototype.isThing => { return true; }
T 1567772963 18<MJCD18>	if (thing.isThing())
T 1567772971 18<MJCD18>	even as a bool
T 1567772982 18<MJCD18>	where Thing is the classname
T 1567772998 18<MJCD18>	ie the same as array.isArray()
T 1567773024 18<bberry18>	is it a bad idea to store timeout ids in a database?
T 1567773029 18<MJCD18>	there is no reflection in js nor anything similar and attempting to do so using the prototype chain in any way is pure hackery
T 1567773038 18<MJCD18>	bberry, er, not inherently
T 1567773046 18<bberry18>	feel like thats kinda bad just because if/when the app restarts, all that data is kinda useless
T 1567773046 18<MJCD18>	but you know that already
T 1567773062 18<MJCD18>	err no, you use a db specifically so that data is persistant
T 1567773067 18<MJCD18>	regardless of app state
T 1567773078 18<MJCD18>	you restart the app, all the sessions/whatever are still there
T 1567773085 18<bberry18>	yeah but the timeout ids are specific to app state, arent they?
T 1567773093 18<bberry18>	sorry, i mean with respect to setTimeout()
T 1567773103 18<MJCD18>	you wouldn't store the return setTimeout value
T 1567773112 18<MJCD18>	you'd give it a uid
T 1567773124 18<MJCD18>	as part of the datastructure
T 1567773141 18<anddam18>	stennowork: I don't, but I am not an English speaker
T 1567773274 18<bberry18>	hm. so essentialyl im creating a discord bot that applies a "muted" role for a duration.  I store a lot of the data like reason for mute, person muted, person that did the muting, etc in the db.  I was planning on using setTimeout to clear the role when the time is up..but if the moderator wants to cancel it early, im not sure how i would get the timeout id unless it was either in app state or in the db
T 1567773410 18<bberry18>	basically, i need something that will give me an event at a specific time in the future, but is also cancelable.  setTimeout works well, but i gotta have that timeout id accessible.  not sure the "proper" way to store that
T 1567773428 18<ktwo18>	pagesArray[0].toString().match("const path = \"(.*)\"; //#path")[1]     -> i made it like this, kinda ugly but it gets the job done until i find a nicer way
T 1567773533 18<anddam18>	has anyone any insight on why popup.js isn't logging the clipboard value? https://gist.github.com/anddam/af8b003cb22edc3bd19ff40c4dbc8247 gist has updated permissions
T 1567773611 18<bberry18>	MJCD with a uid, how would i cancel the setTimeout? Would i just have a map of the uid <-> timeout ids somewhere?
T 1567773652 18<Precurz18>	Hi, i have been a python developer for few years now, and i wish to get some js skills. Has anyone good resources to check and furthermore get a proper development environement ?
T 1567773654 18<MJCD18>	bberry, timers reset themselves when the page is reloaded, obviously invalidating all existing tracked uid's
T 1567773658 18<MJCD18>	requiring them to be reset
T 1567773670 18<bberry18>	er, this is server side haha
T 1567773676 18<MJCD18>	(obviously, as you are aware)
T 1567773688 18<MJCD18>	makes no difference
T 1567773701 18<MJCD18>	if the process ends; it's timers all get GC'd
T 1567773705 18<bberry18>	yeah for sure
T 1567773709 18<MJCD18>	making those ID's irrelevant
T 1567773715 18<MJCD18>	uid or setTimeout id
T 1567773722 18<bberry18>	i still need to keep the timeout ids *somewhere*
T 1567773727 18<bberry18>	because i need to be able to cancel them
T 1567773742 18<MJCD18>	... the whole point is a db is fine however you need to reset it on hard page reload
T 1567773756 18<MJCD18>	you can use rivets.js to do <=> sync of state
T 1567773776 18<bberry18>	hmm
T 1567773799 18<MJCD18>	ideally i'd store in local indexeddb
T 1567773807 18<MJCD18>	syndicated to the server via rivets automagically
T 1567773832 18<MJCD18>	an onunload page event to clear the server values, send back a response that resets indexeddb
T 1567773838 18<MJCD18>	or the timers table, rather
T 1567773863 18<MJCD18>	not much point in syndicating and handling on the backend to be realistic
T 1567773870 18<bberry18>	haha there is no 'page' in this case
T 1567773895 18<bberry18>	its essentially an IRC bot
T 1567773929 18<MJCD18>	use promises. write to the db the code to reinstantiate the promise(s) set to the same timeframe constraints as a timer
T 1567773932 18<MJCD18>	also
T 1567773933 18<MJCD18>	irc bots
T 1567773949 18<MJCD18>	any bot not written in the below are redundant before they're even started
T 1567773951 18<MJCD18>	!node-red
T 1567773951 18<ecmabot18>	MJCD: node-red (http://nodered.org/) is a visual programming system primarily intended for the 'internet of things'..
T 1567773969 18<MJCD18>	alternatively; https://l.facebook.com/l.php?u=https%3A%2F%2Fwww.pipes.digital%2F%3Ffbclid%3DIwAR3Pq5Nq25dN7j8JxRn9KOpD3HcCXjJElz3Lodc7a0WgU0rIfLPZ3xtvFeg&h=AT1bHlBL8nxURnIg1mW1b8laCkGFWCzYaqP7byM8W0YGGiQ8j_5HxgI5W-97gPNMTes6EGGxzWRrh2xFhPtpgVDf110NahhEni9FkZ3S0BybbHEijD43lGiB9ujWzl1xpzz58w
T 1567773971 18<MJCD18>	errr
T 1567773983 18<MJCD18>	https://www.pipes.digital
T 1567773990 18<MJCD18>	recreation of yahoo pipes
T 1567773991 18<MJCD18>	:D
T 1567773998 18<MJCD18>	both work the same way
T 1567774006 18<MJCD18>	using an xml app "flow"
T 1567774010 18<MJCD18>	and visual editor
T 1567774016 18<MJCD18>	that applies changes in realtime
T 1567774031 18<MJCD18>	with zero bot downtime
T 1567774046 18<MJCD18>	if you google `npm node-red-contrib-`
T 1567774062 18<MJCD18>	you will see there's ready to go drag and drop modules for baaaasically everything you could want
T 1567774081 18<MJCD18>	even for 1 to many or many to 1
T 1567774083 18<bberry18>	heh cute
T 1567774098 18<MJCD18>	not an apt adverb
T 1567774105 18<MJCD18>	very very powerful.
T 1567774116 18<MJCD18>	I mean the xml code flows aren't ideal
T 1567774127 18<MJCD18>	but work fine and are a behind the scenes concern
T 1567774139 18<MJCD18>	it performs very well and scales to thousands of simultaneous users
T 1567774147 18<MJCD18>	also offers its own complete hosting solution
T 1567774156 18<MJCD18>	including as I say hot reload
T 1567774176 18<bberry18>	god i swear ive used something that was node-red before
T 1567774179 18<bberry18>	but i cant remember now :(
T 1567774194 18<MJCD18>	input and output nodes for all major systems/networks with public api's
T 1567774199 18<MJCD18>	just connect the in and out
T 1567774201 18<MJCD18>	and set the config
T 1567774204 18<bberry18>	oh, i remember, it was when i wrote my twitch.tv bot
T 1567774208 18<MJCD18>	sure
T 1567774216 18<MJCD18>	any bot, really
T 1567774220 18<bberry18>	yeye
T 1567774227 18<MJCD18>	many of the modules use websockets even
T 1567774233 18<MJCD18>	webrtc
T 1567774237 18<MJCD18>	all the good stuff
T 1567774245 18<MJCD18>	I know you will reject both out of hand
T 1567774249 18<MJCD18>	because you're you
T 1567774267 18<MJCD18>	regardless there's still endless irc bot codebases
T 1567774276 18<bberry18>	sadly they dont have much for discord afaict
T 1567774279 18<MJCD18>	as its one of the kind of 'trials' programmers tend to go through
T 1567774283 18<MJCD18>	sure they do
T 1567774286 18<bberry18>	at least, thats already done
T 1567774291 18<MJCD18>	!g node-red-contrib-discord
T 1567774299 18<bberry18>	yeah its there, but its super bare bones
T 1567774308 18<MJCD18>	https://flows.nodered.org/node/node-red-contrib-discord
T 1567774311 18<MJCD18>	bam
T 1567774320 18<MJCD18>	discord is an ideal target
T 1567774326 18<MJCD18>	as it as I said has public api's
T 1567774351 18<bberry18>	yeah, its just that that package implements such a tiny amount of discords api :(
T 1567774382 18<qswz18>	https://codesandbox.io/s/form-native-validation-txw2d
T 1567774389 18<qswz18>	Simple form validation
T 1567774390 18<bberry18>	im kinda surprised that someone hasnt done this more fully, discord is such a huge platform
T 1567774398 18<qswz18>	my boss wants to use Formik
T 1567774401 18<qswz18>	no thanks
T 1567774418 18<MJCD18>	bberry, you keep saying that
T 1567774420 18<qswz18>	react-forms, etc... all that is over-engineering
T 1567774427 18<MJCD18>	without specifying what you can't achieve
T 1567774429 18<MJCD18>	that you want to
T 1567774438 18<bberry18>	apply a role to a user
T 1567774480 18<bberry18>	all that that node-red-contrib-discord can do it literally just receive/send messages afaict
T 1567774494 18<MJCD18>	node-red-contrib-acl
T 1567774505 18<MJCD18>	noting that acl handles access control, not roles
T 1567774512 18<MJCD18>	roles are an arbitrary set of access
T 1567774521 18<MJCD18>	easily implemented as a construct
T 1567774536 18<bberry18>	er... roles using discord.js api
T 1567774541 18<MJCD18>	ie you just give users an acl identifier uid
T 1567774552 18<MJCD18>	and that acl is then a set appliable to any user
T 1567774556 18<MJCD18>	once again
T 1567774604 18<MJCD18>	[node-red-contrib-discord].discordClient should make available their user id
T 1567774615 18<MJCD18>	discord also has its own roles
T 1567774621 18<MJCD18>	so that data should be in there
T 1567774626 18<MJCD18>	and assignable via discord client
T 1567774659 18<MJCD18>	All nodes share Discord.js clients based on the discord-token that they were configured with. That means that, when you add many discordMessage nodes configured with the exact same token, only a single connection with Discord will be made.
T 1567774676 18<MJCD18>	so there you go its like discordClient.discordMessage.token
T 1567774679 18<MJCD18>	or somesuch
T 1567774692 18<MJCD18>	as I say not that you will use the thing
T 1567774711 18<MJCD18>	because really you just want me to tell you you are justified to write your own bot
T 1567774722 18<MJCD18>	which you are not
T 1567774730 18<MJCD18>	but can do at your complete discretion
T 1567774863 18<bberry18>	yeah, i mean, i genuinely would consider it if i felt like it was used by major discord bots but it clearly states that it's not built for that.
T 1567774883 18<qswz18>	what's diff between discord and slack?
T 1567774905 18<bberry18>	by its own description, its just used for simple request-reply bots
T 1567774911 18<stennowork18>	i heard slack takes a lot of resources
T 1567774949 18<qswz18>	hope not, I'm running their app all day
T 1567774978 18<bberry18>	qswz: very little tbh in functionality... discord offers a lot for free that slack doesnt.  but the slack paid is a bit more capable than discord.
T 1567775036 18<bberry18>	slack has the whole conversation in a conversation thingy, i forget what thats called... apparently some ppl think its cancer
T 1567775050 18<MJCD18>	slack and discord both have very similar integration api's
T 1567775061 18<MJCD18>	thus why it's so easy to integrate one into the other
T 1567775069 18<qswz18>	it's perfect to lose and forget it quickly
T 1567775078 18<qswz18>	slack is also a pain to search
T 1567775088 18<MJCD18>	slack is just a pain generally
T 1567775094 18<MJCD18>	trello+discord
T 1567775095 18<MJCD18>	ftw
T 1567775104 18<MJCD18>	maybe a bot on discord
T 1567775104 18<bberry18>	my company has been using discord just for us engi's for a while, works well for us
T 1567775123 18<MJCD18>	nobody complained about discord making that comment rather moot
T 1567775150 18<MJCD18>	it's funny that I knew from the moment you spoke you didn't actually want any advice
T 1567775151 18<bberry18>	just sharing lol
T 1567775151 18<stennowork18>	we are using trello here too and its fine
T 1567775155 18<MJCD18>	you wanted validation of your choices
T 1567775160 18<MJCD18>	which is fine
T 1567775160 18<bberry18>	*sigh* i did MJCD
T 1567775168 18<MJCD18>	but no real need to phrase it as a problem
T 1567775178 18<MJCD18>	making us invest time/effort into helping provide solutions
T 1567775193 18<MJCD18>	if you want opinions then say that
T 1567775206 18<MJCD18>	if not; say that
T 1567775208 18<bberry18>	and really, i didnt necessarily want to know how to write a discord bot, i just wanted to know how/if i should store setTimeout ids in a db or app state
T 1567775221 18<MJCD18>	and I answered that
T 1567775228 18<MJCD18>	but you didn't like it or something haha
T 1567775240 18*	bberry sighs
T 1567775252 18<MJCD18>	just fwiw you can set timers in workers and have them persist intra-page reload
T 1567775268 18<MJCD18>	though the easiest solution is to just load everything via xhr/fetch
T 1567775279 18<MJCD18>	no hard reloads === no timer id loss
T 1567775298 18<MJCD18>	except on page close
T 1567775308 18<MJCD18>	which can be handled using a handler on that
T 1567775314 18<bberry18>	there are no pages. theres no page-reloading or closing
T 1567775335 18<qswz18>	what does codesandbox.io uses for format on save?
T 1567775348 18<MJCD18>	window.addEventListener('unload', (e)=>{ fetch('url.com?unloadTimers'); })
T 1567775355 18<MJCD18>	style thing
T 1567775359 18<qswz18>	I know they use monaco editor, but it's doing a little more
T 1567775369 18<MJCD18>	and then just apply xhr/fetch to all links
T 1567775377 18<MJCD18>	done and done
T 1567775380 18<MJCD18>	use extra time for beer
T 1567775392 18<cpplearner18>	Guys, I want to extract every url in HTML with `page.match(/href="([^"]+)"/g)`. But, each entry also entails `href=` in it. Is therey any neat solution to it?
T 1567775393 18<qswz18>	ah damn, looking at the configurations opts, it seems prettier
T 1567775396 18<MJCD18>	qswz, codesandbox.io integrates vscode directly
T 1567775406 18<qswz18>	disappointed
T 1567775407 18<MJCD18>	jokes on you for having me on ignore
T 1567775410 18<MJCD18>	no answer for you
T 1567775427 18<MJCD18>	and that brings me great joy
T 1567775432 18<MJCD18>	you absolute idiot :)
T 1567775438 18<qswz18>	!regex html
T 1567775438 18<ecmabot18>	qswz: http://stackoverflow.com/questions/1732348/regex-match-open-tags-except-xhtml-self-contained-tags/1732454#1732454
T 1567775452 18<MJCD18>	!tutorial @ qswz
T 1567775452 18<ecmabot18>	qswz: It is HIGHLY recommended that you establish a firm grasp of the core syntax within both JavaScript, HTML, and basic CSS. Before asking any syntax error related questions you can use `!eslint` to detect any contextual errors. A critically acclaimed tutorial is available @ http://eloquentjavascript.net/
T 1567775469 18<MJCD18>	haahaa they can't see who triggered it
T 1567775477 18<MJCD18>	!eloquent @ qswz
T 1567775477 18<ecmabot18>	qswz: Eloquent JavaScript is a comprehensive introductory Web-based book with examples and a built-in interpreter. http://eloquentjavascript.net/
T 1567775481 18<MJCD18>	!books @ qswz
T 1567775482 18<ecmabot18>	qswz: !eloquent (http://eloquentjavascript.net), !ydkjs (https://github.com/getify/You-Dont-Know-JS), JavaScript: The Definitive Guide by David Flanagan, High Performance JavaScript by Nicholas C. Zakas, Effective JavaScript by David Herman, Functional JavaScript by Michael Fogus, Programming JavaScript Applications by Eric Elliott.
T 1567775487 18<MJCD18>	!ask @ qswz
T 1567775488 18<ecmabot18>	qswz: Don't ask to ask, nor if anyone is here or alive or uses something. Just ask your question. http://www.mikeash.com/getting_answers.html http://www.catb.org/esr/faqs/smart-questions.html https://jvns.ca/blog/good-questions/
T 1567775489 18<qswz18>	what idiot is sending me those facts?
T 1567775497 18<MJCD18>	your "mom"
T 1567775518 18<MJCD18>	!snip deepClone @ qswz
T 1567775518 18<ecmabot18>	|>function deepClone(o,i){i=Array.isArray(o)?[]:{};return Object.keys(o).reduce(function(a,k,x){return x=o[k],a[k]=typeof x==\"object\"?deepClone(x):x,a},i)}; @qswz
T 1567775530 18<qswz18>	someone forgot his drugs
T 1567775568 18<MJCD18>	>> deepClone({ 'you are an idiot': true });
T 1567775568 18<ecmabot18>	MJCD: SyntaxError: illegal character
T 1567775580 18<MJCD18>	u wot
T 1567775597 18<MJCD18>	what's illegal there
T 1567775640 18<cpplearner18>	Perl's `g` flag doesn't collect non-parenthesized parts, but it seems Javascript does... =/
T 1567775659 18<qswz18>	nope, it doesn't
T 1567775671 18<qswz18>	except if using .exec or .matchAll
T 1567775709 18<MJCD18>	cpplearner, check this out
T 1567775712 18<MJCD18>	!regex101
T 1567775712 18<ecmabot18>	MJCD: https://regex101.com is a tool for playing with regular expressions of various engines against a given set of data to see the results live
T 1567775725 18<MJCD18>	nb: see the language options on the left hand side
T 1567775740 18<MJCD18>	and also the contribution/sharing tabs
T 1567775753 18<MJCD18>	with regex's vetted by the community for most anything/everything
T 1567775755 18<MJCD18>	same with regexr
T 1567775774 18<MJCD18>	and testable in different languages with a single click
T 1567775786 18<MJCD18>	to compare differences
T 1567775807 18<MJCD18>	also hover nearly any symbol to get a description of that in the current language/context
T 1567775833 18<zzarr18>	hello!
T 1567775855 18<zzarr18>	I'm trying to understand how modules work
T 1567775967 18<qswz18>	why can't I use setCustomValidity in the form submit event handler?
T 1567775969 18<qswz18>	too late?
T 1567775977 18<qswz18>	just before e.preventDefault()
T 1567776011 18<zzarr18>	in the tutorial for Chart.js they have a tag <script src="<path/to/>Chart.min.js"></script> then they create a chart like this var myChart = new Chart(context, config);
T 1567776106 18<zzarr18>	but, when I download the Chart.bundle.js file (not the "min" version) I don't understand how to get the Chart constructor from it
T 1567776176 18<qswz18>	try window.Chart
T 1567776176 18<zzarr18>	I'm trying to include the Chart js graph engine in a Qt-project using QJSEngine
T 1567776195 18<zzarr18>	okey, there's where it's at :)
T 1567776204 18<zzarr18>	will try, thanks
T 1567776333 18<zzarr18>	nice, thanks :D
T 1567776412 18<qswz18>	Does react-hook works with DOM element ref?
T 1567776441 18<MJCD18>	qswz, react web hooks work with web events
T 1567776447 18<MJCD18>	not sure what you mean beyond that
T 1567776449 18<qswz18>	hmm useREf
T 1567776451 18<stennowork18>	eww refs
T 1567776457 18<MJCD18>	:/
T 1567776463 18<MJCD18>	eww 60% of js
T 1567776468 18<MJCD18>	:/
T 1567776469 18<qswz18>	it's for gtml5 validation
T 1567776470 18<qswz18>	legit
T 1567776489 18<MJCD18>	legit using a premade thing
T 1567776494 18<MJCD18>	impressive
T 1567776960 18<graingert18>	!no var @ zzarr
T 1567776961 18<ecmabot18>	zzarr: `var` defines a variable in the current function-level scope, and should not be used when `const` or `let` are available (see !babel, !const, and !let). Always use a keyword to declare variables, otherwise you will pollute the global scope (a keyword is required in strict mode).
T 1567776993 18<graingert18>	zzarr: I'd go for https://vx-demo.now.sh/ for all your charting needs
T 1567777019 18<graingert18>	zzarr: avoid loading 3rd party deps with <script> use webpack or parcel and import it from npm packages
T 1567777025 18<zzarr18>	thanks graingert, but I have sloved the problem now
T 1567777033 18<stennowork18>	!no god no masters
T 1567777037 18<stennowork18>	:/
T 1567777040 18<graingert18>	yeah but you should use webpack anyway zzarr
T 1567777050 18<graingert18>	and eslint airbnb
T 1567777054 18<graingert18>	!airbnb @ zzarr
T 1567777054 18<ecmabot18>	zzarr: We tend to support airbnb's javascript style guide - it can be found here: https://github.com/airbnb/javascript you can enforce it in eslint with `npx install-peerdeps --dev eslint-config-airbnb-base && echo '{"extends": "airbnb-base"}' > .eslintrc` see also !eslint
T 1567777060 18<zzarr18>	okey
T 1567777070 18<graingert18>	no god no masters no var stennowork
T 1567777077 18<stennowork18>	word
T 1567777091 18<stennowork18>	no for loops
T 1567780936 20*	Disconnected (20)
T 1567780960 19*	Now talking on 22##javascript
T 1567780960 22*	Topic for 22##javascript is: JavaScript is *not* Java. | Just ask your question. | Say "!mdn abc" for docs on "abc". | Don't paste code in the channel. | Can't talk? Get registered on freenode ( https://git.io/vaTS2 )
T 1567780960 22*	Topic for 22##javascript set by 26niggler!~niggler@unaffiliated/niggler (24Tue Jan 15 07:16:23 2019)
T 1567781152 18<horribleprogram18>	So implicit conversion gotta be the most complicated in JS
T 1567781187 18<horribleprogram18>	so obivously "" + x does either "" + x.toString() or "" + String(x), but like other things
T 1567781199 18<horribleprogram18>	Is there some sort of implicit conversion table
T 1567781230 18<qswz18>	the spec
T 1567781262 18<horribleprogram18>	ECMAScript Language Specification?
T 1567781272 18<qswz18>	n> [2+'3', '2'+3]
T 1567781273 18<jellobot18>	(okay) [ '23', '23' ]
T 1567781289 18<qswz18>	yes
T 1567781304 18<horribleprogram18>	yeah that's the easiest implicit conversion, because a string as an operand turns the other thing to a string
T 1567781330 18<horribleprogram18>	but I'm trying to find the newest Language spec on ecma-international.org
T 1567781399 18<qswz18>	search for addition operator
T 1567781418 18<horribleprogram18>	:S
T 1567781422 18<horribleprogram18>	I'll try :)
T 1567781495 18<qswz18>	section 12.8.3
T 1567781534 18<horribleprogram18>	perfect, ty
T 1567781645 18<stennowork18>	horribleprogram, also consider that '+' has at least 3 meanings in javascript: firstly, unary '+' converts the operand to string, then binary '+' adds Numbers, but also binary '+' concatenates strings
T 1567781689 18<qswz18>	the last 2 are the same imo
T 1567781690 18<systemfault18>	converts the operand to "number", no?
T 1567781691 18<horribleprogram18>	unary + converts to number
T 1567781699 18<stennowork18>	er yes
T 1567781701 18<stennowork18>	of course
T 1567781702 18<horribleprogram18>	n> var a = "3"; +a
T 1567781703 18<jellobot18>	(okay) 3
T 1567781712 18<stennowork18>	unary +
T 1567781715 18<qswz18>	n> +'0x10'
T 1567781716 18<jellobot18>	(okay) 16
T 1567781727 18<stennowork18>	qswz, how are the last two the same?
T 1567781730 18<qswz18>	n> +'0b10'
T 1567781732 18<jellobot18>	(okay) 2
T 1567781741 18<qswz18>	stennowork: https://www.ecma-international.org/ecma-262/#sec-addition-operator-plus
T 1567781757 18<qswz18>	it handles both numbers and strings
T 1567781775 18<stennowork18>	hmm i have to admit i wasn't aware of that
T 1567781784 18<stennowork18>	i thought they had two seperate definitions for numbers and strings
T 1567781790 18<horribleprogram18>	they do
T 1567781795 18<horribleprogram18>	addition operator, concatenation operator
T 1567781805 18<horribleprogram18>	called operator overloading
T 1567781808 18<qswz18>	sort of
T 1567781813 18<stennowork18>	no - its both specced in the 'addition operator'
T 1567781826 18<qswz18>	check the 7.c tho
T 1567781837 18<qswz18>	Return the string-concatenation of lstr and rstr.
T 1567781852 18<qswz18>	which is something wuite complex
T 1567781860 18<qswz18>	if you click on that term
T 1567781945 18<horribleprogram18>	When you say 7.c
T 1567781964 18<horribleprogram18>	what exactly are you referring to
T 1567847128 20*	Disconnected (20)
T 1567847151 19*	Now talking on 22##javascript
T 1567847151 22*	Topic for 22##javascript is: JavaScript is *not* Java. | Just ask your question. | Say "!mdn abc" for docs on "abc". | Don't paste code in the channel. | Can't talk? Get registered on freenode ( https://git.io/vaTS2 )
T 1567847151 22*	Topic for 22##javascript set by 26niggler!~niggler@unaffiliated/niggler (24Tue Jan 15 07:16:23 2019)
T 1567847342 18<niggler18>	you can manually change the settings
T 1567847350 18<niggler18>	im actually going over those now lol
T 1567847368 18<niggler18>	trying to derisk the single points of failure :/
T 1567847416 18<MJCD18>	i'm having to clean it all up
T 1567847425 18<MJCD18>	it replicated over all cpanel bullshit etc
T 1567847437 18<MJCD18>	and then apparently I do have to update all the ip records manually
T 1567847438 18<niggler18>	ah
T 1567847439 18<MJCD18>	wop wop
T 1567847441 18<niggler18>	:/
T 1567847472 18<niggler18>	ugh want to restart this server
T 1567847473 18<niggler18>	 09:10:58 up 543 days, 18:02,  3 users,  load average: 0.00, 0.00, 0.00
T 1567847477 18<MJCD18>	apparently cloudflare allows upto 3500 records
T 1567847482 18<MJCD18>	of 1000 characters or less
T 1567847488 18<niggler18>	but like most of the business runs off of that, so i have no clue what type of damage that'll cause
T 1567847492 18<MJCD18>	and is the fastest dns in the world
T 1567847495 18<MJCD18>	apparently
T 1567847498 18<MJCD18>	so
T 1567847503 18<MJCD18>	why am I not storing data in there
T 1567847505 18<MJCD18>	lol
T 1567847506 18<niggler18>	its probably the fastest because of the character cap
T 1567847510 18<MJCD18>	small snippets
T 1567847522 18<MJCD18>	35000 is a lot of characters
T 1567847524 18<MJCD18>	lol
T 1567847541 18<MJCD18>	that could be a small page
T 1567847544 18<MJCD18>	imagine that
T 1567847546 18<MJCD18>	no httpd
T 1567847554 18<MJCD18>	just a text dns record
T 1567847643 18<MJCD18>	ahhh there we go, cleaned up to 3 records; A, CNAME, MX
T 1567847647 18<niggler18>	hmm how do you derisk a phone number / service provider
T 1567847654 18<MJCD18>	derisk ?
T 1567847661 18<niggler18>	like if something happens
T 1567847681 18<MJCD18>	phonelines etc are pooled using telephony hardware and treated as redundant
T 1567847691 18<MJCD18>	I used to work in telephony
T 1567847701 18<MJCD18>	it was awful
T 1567847707 18<niggler18>	so registering another line with another provider probably doesn't give hot swappability
T 1567847712 18<niggler18>	well, you could just give people both numbers
T 1567847719 18<MJCD18>	you ideally want them all with the same provider
T 1567847720 18<niggler18>	but it wouldn't solve the problem of people tryign to call the main line
T 1567847732 18<MJCD18>	the provider implements the redundancy past the point of your premise
T 1567847736 18<niggler18>	physical address is not much of a concern
T 1567847738 18<MJCD18>	you just pool both lines
T 1567847744 18<MJCD18>	in our case probably using SIP
T 1567847750 18<MJCD18>	asterisk and the likes
T 1567847765 18<niggler18>	you use stripe or some other service to accept CC payments?
T 1567847777 18<MJCD18>	paypal
T 1567847790 18<niggler18>	how easy/hard is it to get started
T 1567847790 18<MJCD18>	fees are high because their insurance is robust
T 1567847806 18<MJCD18>	easy to get started, hard to get all setup as a business account
T 1567847811 18<MJCD18>	lots of regulatory requirements
T 1567847813 18<niggler18>	sure, its supposed to be a backu
T 1567847819 18<MJCD18>	to what
T 1567847829 18<niggler18>	to something happening with stripe
T 1567847839 18<MJCD18>	if anything paypal is the primary, taking credit card directly is the redundancy
T 1567847854 18<niggler18>	heh
T 1567847855 18<MJCD18>	stripe are fine
T 1567847860 18<MJCD18>	largely interchangable for paypal
T 1567847868 18<MJCD18>	one or the other
T 1567847907 18<niggler18>	mail probably should use gapps
T 1567847966 18<MJCD18>	remember if you don't want to pay
T 1567847987 18<MJCD18>	people can set up a custom domain/address to send as in gmail
T 1567848000 18<niggler18>	nah id rather just pay
T 1567848011 18<MJCD18>	it's a bit more convienient than having to have a separate tab is the main thing
T 1567848013 18<niggler18>	zoho has a proper free tier
T 1567848016 18<MJCD18>	you just have 1 gmail
T 1567848023 18<MJCD18>	multiple accounts routing in and out
T 1567848026 18<niggler18>	which is what im currently using, but it sucks
T 1567848038 18<MJCD18>	ehh just run a mailserver
T 1567848043 18<MJCD18>	postfix+any webmail
T 1567848045 18<niggler18>	that has its own risks
T 1567848056 18<MJCD18>	everything has its own risks
T 1567848062 18<MJCD18>	that doesn't mean you shouldn't do it
T 1567848064 18<MJCD18>	in the end of the day
T 1567848068 18<MJCD18>	there will be a server somewhere
T 1567848075 18<MJCD18>	that server, whether you run it or someone else
T 1567848079 18<niggler18>	understood
T 1567848082 18<MJCD18>	is exposed to risk unless it's entirely private
T 1567848095 18<MJCD18>	thus it is not a very good basis on which to pay for a service
T 1567848102 18<MJCD18>	unless naturally they give you a SLA
T 1567848126 18<niggler18>	so the hope is paying gapps would give an SLA
T 1567848141 18<MJCD18>	well I mean
T 1567848147 18<MJCD18>	I don't think they do tbh
T 1567848153 18<MJCD18>	without gapps enterprise
T 1567848161 18<MJCD18>	an entirely different service
T 1567848167 18<MJCD18>	with private instances of gapps services
T 1567848191 18<MJCD18>	gapps itself's uptime record is a good indication that you don't really need to worry
T 1567848202 18<MJCD18>	however I too have had a mailserver up for like 8 years
T 1567848210 18<MJCD18>	I took it down once for an update so my record is like 98%
T 1567848211 18<MJCD18>	lol
T 1567848266 18<MJCD18>	as the disclaimer on all investment product ads
T 1567848283 18<MJCD18>	"Past results are not indicative of future results"
T 1567848310 18<MJCD18>	not that I think people are routinely causing widespread chaos for gapps
T 1567848315 18<MJCD18>	isolated chaos, sometimes
T 1567848331 18<MJCD18>	which brings down odd groupings of sites and stuff which is always fun to observe
T 1567848350 18<MJCD18>	like when 3 major sites go down at once
T 1567848362 18<MJCD18>	but the rest of their millions of services remain unaffected
T 1567848390 18<MJCD18>	hardware firewalls and virtualization and instancing are all beautiful things
T 1567848430 18<niggler18>	yeah im trying to get there too
T 1567848435 18<niggler18>	as opposed to this jerryrigged setup
T 1567848457 18<niggler18>	so the npm redundancy plan is an rsync of config and modules to another server lol
T 1567848839 18<MJCD18>	haha yeah that's alright as long as the SOE (software operating environment including OS) matches
T 1567848852 18<MJCD18>	puppet is very very powerful
T 1567848869 18<MJCD18>	I mean I don't use it because it's very complicated for simple tasks imo
T 1567848870 18<niggler18>	so verdaccio managed not to move fast and break things across two major versions
T 1567848874 18<MJCD18>	but powerful none the less
T 1567848884 18<niggler18>	the same configs and everything just work when migrating from v2 to v4
T 1567848893 18<MJCD18>	cloudflare hasn't ttl'd my dns records yet :(
T 1567848899 18<MJCD18>	its been like 10 mins
T 1567848900 18<niggler18>	doesnt it usually take a few hours?
T 1567848902 18<MJCD18>	im using google dns
T 1567848909 18<MJCD18>	nah default ttl is 5 mins
T 1567848912 18<MJCD18>	according to docs
T 1567848930 18<MJCD18>	and should be replicating to google dns pretty asap
T 1567848937 18<MJCD18>	because that's what goog dns likes
T 1567848953 18<MJCD18>	I wonder why goog dont offer a cloudflare style service
T 1567848955 18<MJCD18>	for free
T 1567848993 18<niggler18>	is there a business therE?
T 1567849023 18<MJCD18>	well evidently given nearly everyone uses cloudflare
T 1567849025 18<MJCD18>	no reason not to
T 1567849034 18<MJCD18>	beats using shit and varying registrar management tools
T 1567849046 18<MJCD18>	and provides inherent benefits to boot
T 1567849113 18<MJCD18>	I wonder if there's a force update button
T 1567849132 18<MJCD18>	they give me this setup advice too
T 1567849133 18<MJCD18>	"Make sure all A, AAAA, and CNAME records pointing to proxied records are also proxied to avoid exposing your origin IP."
T 1567849141 18<niggler18>	its probably cheaper for google toh ave someone else worry about it
T 1567849145 18<MJCD18>	like um, i'm reverse proxying the thing on the thing
T 1567849148 18<niggler18>	also less risk of anti-trust
T 1567849155 18<MJCD18>	why do I need a second primary instance
T 1567849160 18<MJCD18>	like its MEANT to be public
T 1567849163 18<MJCD18>	it's a WEBSITE
T 1567849164 18<MJCD18>	xD
T 1567849174 18<niggler18>	"to avoid exposing your origin IP"
T 1567849208 18<MJCD18>	yeah so i'm supposed to do node=>reverse proxy to httpd=>proxied to httpd on different ip
T 1567849217 18<MJCD18>	involving 2 instances
T 1567849227 18<MJCD18>	seems way overkill
T 1567849233 18<MJCD18>	like it's already reverse proxied
T 1567849238 18<MJCD18>	and under cloudflare
T 1567849264 18<MJCD18>	a complete extra httpd server with its own ip seems silly
T 1567849336 18<MJCD18>	HTTP Strict Transport Security (HSTS) can substantially improve the security of your website
T 1567849342 18<MJCD18>	huh, I wasn't aware of that tech
T 1567849443 18<MJCD18>	sweet, enabled so many different thingies just in 1 tab
T 1567849451 18<MJCD18>	so much encryption
T 1567849454 18<MJCD18>	so little time
T 1567849481 18<MJCD18>	rate limiting is paid
T 1567849484 18<MJCD18>	that seems odd
T 1567849504 18<MJCD18>	like "sorry you have to pay to not let cloudflare have to handle unlimited requests"
T 1567849516 18<MJCD18>	"even if you firewall it off on your server"
T 1567849524 18<MJCD18>	like, k
T 1567849524 18<niggler18>	they have to monetize somehow, its 2019
T 1567849538 18<MJCD18>	I mean there's good paid services
T 1567849540 18<MJCD18>	in ehre
T 1567849541 18<MJCD18>	here
T 1567849555 18<MJCD18>	that's just on that would be mutually beneficial
T 1567849562 18<MJCD18>	if anything pay to disable it
T 1567849572 18<MJCD18>	allowing very fast request speeds
T 1567849589 18<MJCD18>	but, not my monkey
T 1567849602 18<MJCD18>	I hate not being an idiot
T 1567849614 18<MJCD18>	like that sounds stupid
T 1567849624 18<MJCD18>	but I wish I were just like.. average
T 1567849634 18<MJCD18>	ignorant to half the things going on around me
T 1567849667 18<MJCD18>	the fuck is this "Access" shit
T 1567849676 18<MJCD18>	paid connectivity to... social media?
T 1567849678 18<MJCD18>	for my dns?
T 1567849683 18<MJCD18>	why would I possibly want that
T 1567849717 18<MJCD18>	"Access protects internal resources by authenticating against identity providers you already use. With Access, you can control which users and groups can reach sensitive materials without a VPN or making code changes to your site."
T 1567849723 18<MJCD18>	so it's some oauth2 thing
T 1567849727 18<MJCD18>	but how, why
T 1567849730 18<MJCD18>	to what benefit :|
T 1567849764 18<MJCD18>	Image Resizing seems like an application level concern
T 1567849777 18<MJCD18>	not something i'd want my DNS provider to handle even if I did want it
T 1567849784 18<MJCD18>	as that means sending the whole image to cloudflare
T 1567849791 18<MJCD18>	every time potentially
T 1567849843 18<MJCD18>	auto-minify could be cool but once again not something I a) want to be "automagically" applied to all requests, b) once again not on the dns provider -_-
T 1567849861 18<MJCD18>	that's a freebie though so can't complain
T 1567849872 18<MJCD18>	Brotli
T 1567849872 18<MJCD18>	Speed up page load times for your visitor’s HTTPS traffic by applying Brotli compression.
T 1567849877 18<MJCD18>	da fucc is that
T 1567849903 18<MJCD18>	https://blog.cloudflare.com/results-experimenting-brotli/
T 1567849992 18<MJCD18>	"The current state of Brotli gives us some mixed impressions. There is no yes/no answer to the question "Is Brotli better than gzip?". It definitely looks like a big win for static content compression, but on the web where the content is dynamic we also need to consider on-the-fly compression."
T 1567849997 18<MJCD18>	!brotli
T 1567850015 18<MJCD18>	!learn brotli=The current state of Brotli gives us some mixed impressions. There is no yes/no answer to the question "Is Brotli better than gzip?". It definitely looks like a big win for static content compression, but on the web where the content is dynamic we also need to consider on-the-fly compression. More @ https://blog.cloudflare.com/results-experimenting-brotli/
T 1567850015 18<ecmabot18>	MJCD: Learned `brotli`.
T 1567850026 18<MJCD18>	!learn alias brotli compression=brotli
T 1567850026 18<ecmabot18>	MJCD: Learned `brotli compression` => `brotli`.
T 1567850032 18<MJCD18>	!cloudflare
T 1567850100 18<MJCD18>	!learn cloudflare=Cloudflare is a web infrastructure and website security company, providing content delivery network services, DDoS mitigation, Internet security, and distributed domain name server services. More @ https://support.cloudflare.com
T 1567850100 18<ecmabot18>	MJCD: Learned `cloudflare`.
T 1567850119 18<MJCD18>	!ttl
T 1567850158 18<MJCD18>	!learn ttl=Time To Live, a mechanism for setting an expiration time on content - especially where caching is involved
T 1567850158 18<ecmabot18>	MJCD: Learned `ttl`.
T 1567850165 18<MJCD18>	!soe
T 1567850182 18<MJCD18>	!learn soe=Software operating environment - inclusive of operating system
T 1567850182 18<ecmabot18>	MJCD: Learned `soe`.
T 1567850217 18<MJCD18>	it's funny that nobody in #web-social is in any other channel
T 1567850226 18<MJCD18>	except #web
T 1567850231 18<MJCD18>	and even then often not
T 1567850241 18<MJCD18>	total rejects refuge lol
T 1567850285 18<MJCD18>	"Enhanced HTTP/2 Prioritization"
T 1567850289 18<MJCD18>	Now there's a product
T 1567850292 18<MJCD18>	"TCP Turbo"
T 1567850311 18<MJCD18>	why are they hiding their good things like 3 tabs deep
T 1567850316 18<MJCD18>	and pushing shit
T 1567850324 18<niggler18>	pretty sure they arent free
T 1567850324 18<MJCD18>	that really isn't at all related to dns
T 1567850331 18<MJCD18>	right, they are paid
T 1567850338 18<MJCD18>	and services that youd be rightful to pay for
T 1567850344 18<MJCD18>	to a dns provider
T 1567850360 18<MJCD18>	Mirage
T 1567850360 18<MJCD18>	Improve load time for pages that include images on mobile devices with slow network connections.
T 1567850370 18<MJCD18>	no details of how it actually does that
T 1567850375 18<MJCD18>	id assume as bundling it
T 1567850388 18<MJCD18>	even the images, into a single file
T 1567850398 18<MJCD18>	"Rocket Loader™
T 1567850398 18<MJCD18>	Improve the paint time for pages that include Javascript."
T 1567850412 18<MJCD18>	all of this is all hidden away at the very bottom of page 3 of a tab
T 1567850417 18<MJCD18>	lol
T 1567850420 18<MJCD18>	silly gooses
T 1567850429 18<MJCD18>	Railgun™
T 1567850429 18<MJCD18>	Accelerate delivery of dynamic content.
T 1567850447 18<MJCD18>	AMP Real URL
T 1567850447 18<MJCD18>	Display your site’s actual URL on your AMP pages, instead of the traditional Google AMP cache URL.
T 1567850452 18<MJCD18>	the fuck is AMP
T 1567850468 18<MJCD18>	https://amp.dev/
T 1567850472 18<MJCD18>	random
T 1567850520 18<MJCD18>	apparently a google framework
T 1567850525 18<MJCD18>	from what their text said
T 1567850556 18<MJCD18>	https://amp.dev/support/faq/platform-and-vendor-partners/
T 1567850563 18<MJCD18>	they carefully avoid saying google anywhere tho
T 1567850566 18<MJCD18>	curious
T 1567850619 18<MJCD18>	ohhh
T 1567850628 18<MJCD18>	it's accellerated mobile pages - a technology
T 1567850659 18<MJCD18>	!learn AMP=Accelerated Mobile Pages (“AMP”) Project is an open source initiative that came out of discussions between publishers and technology companies about the need to improve the entire mobile content ecosystem for everyone. More @ https://amp.dev/
T 1567850659 18<ecmabot18>	MJCD: Learned `AMP`.
T 1567850682 18<MJCD18>	goodness i'm learning about a lot of thingies
T 1567850708 18<MJCD18>	seems pretty um, convoluted
T 1567850715 18<MJCD18>	once again not something I want automagic'd
T 1567850731 18<MJCD18>	there's an alternative option to just redirect mobile visitors to a subdomain
T 1567850738 18<MJCD18>	which i'd give a bundle built a certain way
T 1567850745 18<MJCD18>	same/same, no automagic
T 1567850812 18<MJCD18>	Workers
T 1567850813 18<MJCD18>	Run JavaScript Service Workers in hundreds of Cloudflare data centers around the world. Modify a site’s HTTP requests and responses, make parallel requests, or generate responses from the edge.
T 1567850813 18<MJCD18>	Trigger Workers on your website by specifying which routes they execute on.
T 1567850819 18<MJCD18>	that's interesting
T 1567850860 18<MJCD18>	and they have a live editor showing the effect it has on your site haha
T 1567850867 18<MJCD18>	and is free seemingly
T 1567850900 18<MJCD18>	lets see how it likes `while (true) { 1+1 }`
T 1567850984 18<MJCD18>	in the editor it just runs in the browser :(
T 1567850996 18<MJCD18>	but in theory that will now run every time someone fetches my page
T 1567851002 18<MJCD18>	in their cloud workers
T 1567851002 18<MJCD18>	lel
T 1567851024 18<MJCD18>	seems to timeout after maybe 2 seconds
T 1567851029 18<MJCD18>	so not that risky for them I guess
T 1567851086 18<BeerLover18>	Given 2 integers A and B, find X such that A xor X is smallest and number of set bits in X == number of set bits in B
T 1567851089 18<MJCD18>	!http2
T 1567851089 18<ecmabot18>	MJCD: a newer version of HTTP. See https://medium.com/webpack/webpack-http-2-7083ec3f3ce6 to optimise with webpack
T 1567851095 18<BeerLover18>	Any ideas on how to go about it?
T 1567851095 18<MJCD18>	!http/2
T 1567851104 18<MJCD18>	!learn alias http/2=http2
T 1567851104 18<ecmabot18>	MJCD: Learned `http/2` => `http2`.
T 1567851123 18<MJCD18>	BeerLover, no homework :P
T 1567851137 18<MJCD18>	!http2
T 1567851138 18<ecmabot18>	MJCD: a newer version of HTTP. See https://medium.com/webpack/webpack-http-2-7083ec3f3ce6 to optimise with webpack
T 1567851139 18<MJCD18>	err
T 1567851142 18<MJCD18>	!http3
T 1567851165 18<MJCD18>	!learn http3=HTTP/3 accelerates HTTP requests by using QUIC, which provides encryption and performance improvements compared to TCP and TLS.
T 1567851165 18<ecmabot18>	MJCD: Learned `http3`.
T 1567851171 18<MJCD18>	!learn alias http/3=http3
T 1567851171 18<ecmabot18>	MJCD: Learned `http/3` => `http3`.
T 1567851221 18<niggler18>	n> var http = 2; http/3
T 1567851222 18<jellobot18>	(okay) 0.6666666666666666
T 1567851230 18<niggler18>	mark of the fractional devil
T 1567851298 18<MJCD18>	hahah
T 1567851340 18<MJCD18>	hm using cloudflare free inherently limits all uploads to 100mb somehow
T 1567851340 18<MJCD18>	:/
T 1567851346 18<MJCD18>	that's a bit arbitrary
T 1567851420 18<MJCD18>	"Stream is a video platform for developers. Upload a video and Cloudflare will encode, process and deliver it on all browsers and devices.
T 1567851421 18<MJCD18>	Every 1,000 minutes viewed costs $1 per month. Each 1,000 minutes of video stored costs $5 per month."
T 1567851425 18<MJCD18>	that's pretty good
T 1567851453 18<MJCD18>	!learn WAF=Web Application Firewall
T 1567851453 18<ecmabot18>	MJCD: Learned `WAF`.
T 1567851574 18<MJCD18>	hooray it finally ttl'd
T 1567851585 18<MJCD18>	new provider on the online :D
T 1567851633 18<MJCD18>	now wtf is my username :D
T 1567851676 18<niggler18>	lol
T 1567851690 18<niggler18>	new business: business in a box
T 1567851729 18<niggler18>	so many random moving parts, kinda wish there was a single solution that covered everything
T 1567851909 18<MJCD18>	niggler, that's essentially what my company does
T 1567851912 18<MJCD18>	:)
T 1567851914 18<MJCD18>	we have um
T 1567852000 18<MJCD18>	18 startups we term as "seeds"
T 1567852023 18<MJCD18>	and our actual business is to get those to the point where the owners can just come in and use all the tooling setup for them
T 1567852056 18<MJCD18>	via 14 departments
T 1567852078 18<MJCD18>	http://prntscr.com/p3069t
T 1567852081 18<niggler18>	not us based tho :/
T 1567852101 18<MJCD18>	global but with a marketing image of being an extremely regionalized brand
T 1567852116 18<MJCD18>	so all those seeds are local to Perth
T 1567852135 18<MJCD18>	if we were to operate in the US we would make an entire US branch
T 1567852149 18<MJCD18>	with the same services
T 1567852158 18<MJCD18>	from regional providers
T 1567852178 18<MJCD18>	that's what a lot of those departments are until we make them permanent/staff them
T 1567852202 18<MJCD18>	until then most of them are just organizing a consultant/professional in that field for them to work with
T 1567852217 18<MJCD18>	at the best rates we can negotiate
T 1567852224 18<MJCD18>	case by case
T 1567852231 18<MJCD18>	we charge a small fee for that
T 1567852245 18<MJCD18>	and pass the bill on to the seed owner
T 1567852274 18<MJCD18>	they can use as many or as few services as they desire, adding and removing them on the fly
T 1567852300 18<MJCD18>	we also own a varying percentage of all our initial seeds
T 1567852312 18<MJCD18>	which gives us a vested interest in making sure they succeed
T 1567852330 18<MJCD18>	not just throwing the setup at them and saying they're on their own
T 1567852333 18<MJCD18>	put a ticket in for help
T 1567852333 18<MJCD18>	lol
T 1567852359 18<MJCD18>	they would just speak to their account manager for any issues who would organize direct contact from the correct person
T 1567852363 18<MJCD18>	or department
T 1567852499 18<laravel718>	whats wrong with this query? http://prntscr.com/p307lj
T 1567852638 18<MJCD18>	well I mean
T 1567852652 18<MJCD18>	you have gql not in a string, not in the template literal
T 1567852659 18<MJCD18>	just randomly written there haha
T 1567852906 18<MJCD18>	urgh wtf
T 1567852914 18<MJCD18>	this youtube video downloaded as a "dash" video file
T 1567852917 18<MJCD18>	the fuck is that even
T 1567855229 18<niggler18>	sometimes love youtube comments
T 1567856952 18<MJCD18>	the way mysql manages its users... using mysql
T 1567856956 18<MJCD18>	is pretty stupid to me
T 1567856963 18<MJCD18>	update user set authentication_string=PASSWORD("mynewpassword") where User='root';
T 1567856966 18<MJCD18>	to set a password
T 1567856969 18<MJCD18>	like are you for real
T 1567857112 18<theskillwithin18>	well as the person who wrote mysql i take offense to that
T 1567857701 18<biberao18>	heheh
T 1567857744 18<theskillwithin18>	finally i get a laf
T 1567857805 18<biberao18>	better late than never
T 1567861055 18<mjcd18>	damn i've gotten a lot done today
T 1567861086 18<MJCD18>	new hosting provider set up, cloudflare updated, nginx+php7.2+mysql installed and configured together
T 1567861094 18<MJCD18>	all our documents copied to the server
T 1567861124 18<MJCD18>	ZNC setup
T 1567861173 18<MJCD18>	just doing LE/certbot now
T 1567861198 18<MJCD18>	amazing how fast things can be done without cpanel+whm in the way
T 1567861984 18<MJCD_18>	one thing I havent figured out yet is how to mount a god damn sftp/scp as a drive in windows
T 1567861992 18<MJCD_18>	it's really, really, really annoying me
T 1567862009 18<MJCD_18>	winscp is fine but I don't want a separate tool
T 1567862017 18<MJCD_18>	I just want a drive
T 1567862021 18<MJCD_18>	ooh I should try FUSE
T 1567862629 18<celphi18>	just use filezilla mjcd
T 1567862686 18<MJCD18>	not what I want, that makes filezilla core to my workflow
T 1567862694 18<MJCD18>	vs just explorer and vscode
T 1567862700 18<MJCD18>	do not want
T 1567862713 18<MJCD18>	it should be transparent to users working locally, vs on the server
T 1567862722 18<MJCD18>	just different locations on their pc
T 1567862785 18<celphi18>	i hate windows
T 1567862798 18<celphi18>	it was great in 90s
T 1567862820 18<celphi18>	cant stand it now-- i use either mac or linux
T 1567863014 18<stenno18>	windows 10 is actually pretty nice
T 1567863093 18<Aquazi18>	hey
T 1567863095 18<Aquazi18>	got a question
T 1567863101 18<Aquazi18>	I am testing a webserver with jest
T 1567863113 18<Aquazi18>	by making calls to it and testing the responses
T 1567863125 18<Aquazi18>	the problem is that I am using request library for making the requests
T 1567863138 18<Aquazi18>	but it is hard for me to test paths that return error codes
T 1567863150 18<Aquazi18>	because request throws an error when it receives a 404, e.g.
T 1567863178 18<Aquazi18>	so how do I test a path or method for returning a 404 or a 405
T 1567863186 18<Aquazi18>	if the api itself throws for these codes
T 1567863273 18<Aquazi18>	I really don't like using the .throw matcher
T 1567863657 18<MJCD18>	Aquazi, I mean, you put in some code handling anything that isn't a success code via the provided `error`
T 1567863669 18<MJCD18>	not rocket surgery
T 1567869072 20*	Disconnected (20)
T 1567869094 19*	Now talking on 22##javascript
T 1567869094 22*	Topic for 22##javascript is: JavaScript is *not* Java. | Just ask your question. | Say "!mdn abc" for docs on "abc". | Don't paste code in the channel. | Can't talk? Get registered on freenode ( https://git.io/vaTS2 )
T 1567869094 22*	Topic for 22##javascript set by 26niggler!~niggler@unaffiliated/niggler (24Tue Jan 15 07:16:23 2019)
T 1567869147 18<celphi18>	im reading you use `curl -u {client_id}:{client_secret} -d grant_type=client_credentials https://us.battle.net/oauth/token` to get token
T 1567869163 18<celphi18>	then pass the token in using `curl -H "Authorization: Bearer {access_token}" https://us.api.blizzard.com/data/wow/token/?namespace=dynamic-us`
T 1567869176 18<Mement18>	Yes, and that cURL command works when I execute it at my local environment
T 1567869190 18<celphi18>	did you get the token?
T 1567869200 18<celphi18>	and run another curl with that token?
T 1567869227 18<Mement18>	Yes, I did. However, I can't see how to translate both cURL commands to a JavaScript `fetch(..)` function. :)
T 1567869262 18<Mement18>	The first returns a successful response, but the response is undefined.
T 1567869271 18<celphi18>	let me see your code
T 1567869281 18<Mement18>	Sure, hang on. Thanks for your time so far
T 1567869282 18<celphi18>	how are you doing curl with JS
T 1567869410 18<Mement18>	celphi: https://gist.github.com/TisLars/edaa1cb8691486ed4b8eec6942b5fbb6
T 1567869782 18<celphi18>	Mement: So you're not getting token?
T 1567869799 18<celphi18>	did you try it via cli yet?
T 1567869908 18<Mement18>	I do not get a token, no. This is a small portion of the response https://gist.github.com/TisLars/b5dd5a04c15ee5d603a2265c29eb18a6 . I think we're safe to say that the provided Authorization header is not being received correctly.
T 1567869942 18<Mement18>	celphi: And yes, I did try by CLI, I do receive a token that way.
T 1567870206 18<celphi18>	try doing it without new Header
T 1567870329 18<Mement18>	celphi: Not sure I understand, here's my code https://gist.github.com/TisLars/0114a734ab69fe63bb31a28671bf14d1
T 1567870346 18<celphi18>	mement try this: `headers: new Headers({
T 1567870346 18<celphi18>	    "Authorization": `Basic ${base64.encode(`${login}:${password}`)}`
T 1567870346 18<celphi18>	  }),`
T 1567870517 18<celphi18>	mement: https://jsfiddle.net/wrof59mq/
T 1567870547 18<Mement18>	celphi: Something is happening. Instead of 'status: "Unauthorized"', I now get 'status: "Bad Request"'
T 1567870809 18<celphi18>	have you tried https://www.npmjs.com/package/passport-bnet
T 1567870890 18<celphi18>	check your headers and ensure you're actually passing your MY_CLIENT and MY_SECRET
T 1567870909 18<Mement18>	Hehe, it's something I am trying to create myself as a side-project to study JavaScript. Not going to use dependecies
T 1567870919 18<celphi18>	k
T 1567870940 18<celphi18>	did you check headers to ensure it is actually passing it?
T 1567870948 18<Mement18>	I'll keep trying and searching though. Thanks for looking into my code
T 1567870984 18<Mement18>	By checking headers you mean console.log the `headers`? Or is there a more sophisticated approach?
T 1567870984 18<celphi18>	https://observablehq.com/@mbostock/fetch-with-basic-auth
T 1567870992 18<celphi18>	developer tools
T 1567871008 18<celphi18>	you're using browser ?
T 1567871015 18<celphi18>	or node
T 1567871105 18<celphi18>	there's this example too
T 1567871108 18<laravel718>	any idea? there is user in redux but not in the props https://user-images.githubusercontent.com/9990165/64477012-9d8bdf80-d196-11e9-9e2e-dc114feccb21.png
T 1567871108 18<celphi18>	https://usercontent.irccloud-cdn.com/file/EoHxip0m/image.png
T 1568013689 20*	Disconnected (20)
T 1568013711 19*	Now talking on 22##javascript
T 1568013711 22*	Topic for 22##javascript is: JavaScript is *not* Java. | Just ask your question. | Say "!mdn abc" for docs on "abc". | Don't paste code in the channel. | Can't talk? Get registered on freenode ( https://git.io/vaTS2 )
T 1568013711 22*	Topic for 22##javascript set by 26niggler!~niggler@unaffiliated/niggler (24Tue Jan 15 07:16:23 2019)
T 1568017300 18<shangul18>	Any library to read DICT files like WordNet's?
T 1568017847 18<MJCD18>	they're just text files
T 1568017849 18<MJCD18>	no?
T 1568017853 18<MJCD18>	idk about wordnet
T 1568017858 18<MJCD18>	but the standard ones are
T 1568017863 18<MJCD18>	just a big ol list heh
T 1568017877 18<MJCD18>	so you just split on \n
T 1568017883 18<MJCD18>	voila, wordlist :D
T 1568017907 18<MJCD18>	remembering that at like 2MB each or something you ideally should cache this info
T 1568017917 18<MJCD18>	if its to be reused frequently
T 1568018669 18<sweb18>	is VAPID required the GCM/FCM or etc 3rdparty server? How can i implement my own infraustructre web push notification service without dependency to google or etc services ?
T 1568018880 18<MJCD18>	given vapid is just a product to do that
T 1568018887 18<MJCD18>	"make your own product to do that" ?
T 1568018896 18<MJCD18>	there's a bunch of notification protocols if that helps
T 1568018908 18<MJCD18>	growl is popular
T 1568018914 18<MJCD18>	and web/js accessible
T 1568018921 18<MJCD18>	as well as having mobile clients, etc
T 1568020613 18<dostoyevsky18>	One can actually do array unpacking in parameter declarations like this: `forEach([l, c]) => { })'
T 1568022302 18<M3TAGH0ST18>	Good morning, how can i get the first item from a NodeList ?
T 1568022349 18<stennowork18>	theList[0]
T 1568022629 18<M3TAGH0ST18>	stennowork i see. thanks :D  trying to figure it out differences between NodeList, HTMLCollection and using an array. :D
T 1568022674 18<stennowork18>	in case of doubt, just express your nodelist as array: const listArray = Array.from(theList);
T 1568022758 18<stennowork18>	this is especially a good idea when you handle live collections, which are a PITA
T 1568022890 18<M3TAGH0ST18>	stennowork i see. and if i convert it to an array ( which this is my first thought ) will still be live ?
T 1568022913 18<stennowork18>	nope, thankfully not
T 1568023416 18<M3TAGH0ST18>	stennowork i see so it requires a little bit of extra code to work from an array :)
T 1568023439 18<stennowork18>	you generally want to avoid live collections at all cost
T 1568023560 18<stennowork18>	so it is seen as a _feature_ that Arrays are not live as opposed to NodeLists and Collection
T 1568023581 18<M3TAGH0ST18>	I see.
T 1568023608 18<stennowork18>	and you should strive to adjust your code in a way so it doesn't depend on live collections/nodelists
T 1568023613 18<M3TAGH0ST18>	If you have time can you explain to me the reason ? All my life i worked only with jquery and i want to learn more about vanilla js. :D
T 1568023658 18<stennowork18>	well - it is an array-like structure, which tends to change the the number of its elements every now and then and you don't really have any control about that
T 1568023694 18<stennowork18>	and its hard to write robust software if you have to take into account that 'array' sizes might change every now and then
T 1568023741 18<stennowork18>	if you think about it, just getting the length right every time is a hassle
T 1568023772 18<stennowork18>	because you cannot just save the length of a HTMLCollection to a variable once, you have to check the current length on the actual collection/nodelist
T 1568023955 18<M3TAGH0ST18>	i see. :-)
T 1568023957 18<M3TAGH0ST18>	thanks for the help :D
T 1568024109 18<stennowork18>	compared to an array-ized nodelist, which you can just refetch when you _need_ it
T 1568024110 18<MJCD18>	so
T 1568024120 18<MJCD18>	y'all might have an idea nobody else has thought of, being devs
T 1568024142 18<MJCD18>	I just want to make the /var/www/html/ to be available from peoples homedir
T 1568024151 18<MJCD18>	along with a single other shared folder
T 1568024164 18<MJCD18>	symlinks don't work for reasons
T 1568024167 18<MJCD18>	probably a bug
T 1568024177 18<MJCD18>	as there's an issue report for it under sshfs
T 1568024413 18<M3TAGH0ST18>	mjcd: MJCD you could groupadd the folder and users. :-)
T 1568024494 18<niggler18>	are the parent directories readable by the other users?
T 1568024521 18<niggler18>	it could be something stupid like not giving executable access to the users
T 1568024552 18<MJCD18>	M3TAGH0ST, so
T 1568024556 18<MJCD18>	they CAN access the folders
T 1568024560 18<MJCD18>	directly via ssh
T 1568024571 18<MJCD18>	simply `cd /var/www/html/`
T 1568024580 18<MJCD18>	that's why it SHOULD be super simple
T 1568024588 18<niggler18>	but you can't create a symlink?
T 1568024591 18<MJCD18>	for sshfs I need a visual link to that folder
T 1568024598 18<niggler18>	did you create a relative or absolute link
T 1568024600 18<MJCD18>	symlinks fail under sshfs
T 1568024611 18<MJCD18>	symlinks use neither
T 1568024621 18<MJCD18>	they use the file inode id's
T 1568024634 18<MJCD18>	hardlinks the same thing
T 1568024641 18<MJCD18>	I can hardlink 1 file
T 1568024643 18<MJCD18>	and that works
T 1568024648 18<MJCD18>	but you cant hardlink folders
T 1568024806 18<niggler18>	sshfs -o follow_symlinks
T 1568024986 18<MJCD18>	niggler, i'm just using ssh there is no dedicated sshfs
T 1568024995 18<niggler18>	for sshfs
T 1568024996 18<MJCD18>	I could install it I suppose
T 1568024998 18<niggler18>	sshfs is a thing
T 1568025005 18<niggler18>	aka
T 1568025005 18<niggler18>	https://github.com/libfuse/sshfs
T 1568025009 18<MJCD18>	that's what we're using as I just said
T 1568025012 18<MJCD18>	lol
T 1568025019 18<MJCD18>	err
T 1568025021 18<niggler18>	"niggler, i'm just using ssh there is no dedicated sshfs"
T 1568025037 18<niggler18>	niggler: "niggler, i'm just using ssh there is no dedicated sshfs"
T 1568025038 18<MJCD18>	yeah alright fuck it i'll try installing a dedicated server for it
T 1568025060 18<MJCD18>	I mean it's just ssh presenting a ftp like interface which is a client side concern
T 1568025088 18<MJCD18>	it just logs in like normal, runs commands to navigate around
T 1568025102 18<MJCD18>	does an ls and formats the results lol
T 1568025109 18<MJCD18>	not sure what sshfs as an actual thing would do
T 1568025112 18<MJCD18>	or where it would sit
T 1568025119 18<MJCD18>	we're using fuse already
T 1568025122 18<MJCD18>	via winfsp
T 1568025131 18<MJCD18>	and win-sshfs
T 1568025144 18<MJCD18>	I wonder if life would be easier to use sftp
T 1568025145 18<niggler18>	so you can pass an option follow_symlinks
T 1568025149 18<niggler18>	yes
T 1568025153 18<niggler18>	life would be immensely easir
T 1568025158 18<MJCD18>	to what, `ssh` is part of the kernel
T 1568025201 18<MJCD18>	im just checking if I can add that option to /etc/ssh/ssh_config
T 1568025227 18<niggler18>	"windows" "/etc/ssh/ssh_config"
T 1568025234 18<niggler18>	sshfs is a discrete thing
T 1568025294 18<niggler18>	https://github.com/billziss-gh/sshfs-win/issues/9
T 1568025301 18<niggler18>	^^ mjcd see if thats useful
T 1568025306 18<darkseid18>	trying to navigate to gitbooks and i get NET::ERR_CERT_DATE_INVALID
T 1568025308 18<darkseid18>	ffs
T 1568025321 18<niggler18>	oh fml
T 1568025324 18<darkseid18>	Expires on: 9 Sep 2019
T 1568025327 18<niggler18>	yeah same thing comes up with the docs
T 1568025332 18<niggler18>	they aren't fixing it
T 1568025342 18<MJCD18>	niggler, https://github.com/billziss-gh/sshfs-win/issues/65#issuecomment-529388608
T 1568025342 18<darkseid18>	niggler are you talking to me
T 1568025360 18<MJCD18>	and so
T 1568025361 18<niggler18>	darkseid: yeah they are trying to kill off the old platform
T 1568025371 18<MJCD18>	the final solution we've come up with so far
T 1568025374 18<MJCD18>	is bindmount
T 1568025374 18<darkseid18>	oh, damn that's annoying
T 1568025384 18<MJCD18>	using mount to mount the sshfs share under... itself
T 1568025388 18<MJCD18>	which seems just awful to me
T 1568025391 18<niggler18>	they closed off the issue tracker unfortunately
T 1568025401 18<niggler18>	but they're done with the open source stuff and legacy host
T 1568025431 18<niggler18>	good thing tho, now time to find a docs provider
T 1568025545 18<darkseid18>	why have they killed off gitbooks
T 1568025639 18<niggler18>	you want an honest answer darkseid?
T 1568025648 18<darkseid18>	obviously lol
T 1568025694 18<niggler18>	https://www.fly.vc/portfolio.html
T 1568025705 18<niggler18>	they took $$, gotta find a way to monetize
T 1568025759 18<darkseid18>	ffs
T 1568025777 18<niggler18>	this reckoning was obvious
T 1568025787 18<niggler18>	like 5 years ago when a bunch of open source projects raised money
T 1568025820 18<niggler18>	npm, meteor, gatsby, a number of open source projects were funded by VC money
T 1568025824 18<niggler18>	and that money is never cheap
T 1568025836 18<niggler18>	at the time people correctly pointed out that there'll be a day when VC pressures you to monetize
T 1568025842 18<niggler18>	and you won't have the power to say no
T 1568025893 18<niggler18>	its a faustian bargain of sorts
T 1568025894 18<stennowork18>	lol axiom
T 1568025919 18<stennowork18>	dunno the other ones
T 1568025935 18<darkseid18>	niggler but they aren't monetizing
T 1568025942 18<darkseid18>	they're just killing it
T 1568025959 18<niggler18>	https://www.gitbook.com/pricing
T 1568025970 18<niggler18>	they have a legacy platform
T 1568025977 18<niggler18>	aka what the service used to be
T 1568025980 18<niggler18>	and their new service
T 1568026023 18<niggler18>	surprised they aren't using LE or something
T 1568026172 18<darkseid18>	huh, i can't access https://www.gitbook.com/pricing
T 1568026198 18<darkseid18>	 not sure why
T 1568026206 18<niggler18>	its $0 free, $7/user starter, $15/user business, and "let's talk" for enterprise
T 1568026233 18<niggler18>	starter requires 5 users (so $35/mo) and business requires 20 users (so $300/mo)
T 1568026273 18<darkseid18>	$0 free tho...
T 1568026375 18<niggler18>	npm still offers a free tier
T 1568026400 18<darkseid18>	right
T 1568026726 18<niggler18>	for them its a marketing expense
T 1568027858 18<MJCD18>	so
T 1568027872 18<MJCD18>	to resolve the earlier issue re; providing 2 shared folder links under user(s) /home/'s
T 1568027889 18<MJCD18>	ditching sshfs
T 1568027899 18<MJCD18>	going with a full daemon via sftp instead
T 1568027942 18<MJCD18>	doesn't even require me to do 1505 things per user+workstation either
T 1568027945 18<MJCD18>	w0w
T 1568027989 18<Maxdamantus18>	22:23:41 < MJCD> they use the file inode id's
T 1568027998 18<Maxdamantus18>	symlinks don't use inode numbers.
T 1568028006 18<MJCD18>	ok
T 1568028007 18<Maxdamantus18>	They are just relative or absolute paths.
T 1568028022 18<Maxdamantus18>	also, can't you just use a bind mount?
T 1568028025 18<MJCD18>	well it was using an absolute path for both
T 1568028036 18<MJCD18>	and yes if I want to bindmount for every user, as per my previous comments
T 1568028038 18<MJCD18>	le sigh
T 1568028157 18<Maxdamantus18>	Ah, you're expecting the link to be shared through sshfs.
T 1568028175 18<Maxdamantus18>	Well, that should work with a bindmount.
T 1568028318 18<Maxdamantus18>	22:32:24 < MJCD> I wonder if life would be easier to use sftp
T 1568028325 18<Maxdamantus18>	sshfs does use sftp afaik
T 1568028354 18<Maxdamantus18>	afaik it's just an sftp client that exposes the target through a FUSE filesystem.
T 1568028394 18<Maxdamantus18>	If you're able to use sshfs, you're already using sftp.
T 1568028578 18<niggler18>	assuming it means using a tool that natively supports sftp rather than going through a sshfs wrapper
T 1568028615 18<Maxdamantus18>	What's the actual issue you're trying to solve? If you just want to allow users to access /var/www/html/ over win-sshfs or whatever, that should pretty much just work by default.
T 1568028634 18<Maxdamantus18>	sshfs your-server:/var/www/html/ ~/html
T 1568028685 18<Maxdamantus18>	sshfs-win will surely allow a remote directory to be specified too, rather than requiring people to mount their home directory (the default cwd, usually).
T 1568029475 18<niggler18>	any good js queue libraries
T 1568029486 18<darkseid18>	whats the diff between these 2 functions: https://pastebin.com/VbtDXD02
T 1568029502 18<darkseid18>	i suppose I'd need to `throw` for the failure case
T 1568029509 18<darkseid18>	but are they fundamentally the same or different
T 1568029513 18<niggler18>	yeah you need to throw
T 1568029529 18<niggler18>	but they are basically the same behavior
T 1568029539 18<niggler18>	one is an async function, the other is a function that returns a promise
T 1568029567 18<darkseid18>	yep
T 1568029578 18<darkseid18>	but they are functionally equivalent
T 1568029588 18<niggler18>	well, modulo the concern about throwing in the async case
T 1568029591 18<darkseid18>	like if you refactored the first to the second (as long as you throw) it would be identical
T 1568029594 18<darkseid18>	?
T 1568029600 18<stennowork18>	as async functions wrap their return value in promises, yes
T 1568029601 18<darkseid18>	modulo the concern?
T 1568029608 18<niggler18>	reject(...) is throw in async land
T 1568029609 18<darkseid18>	ok that's what i thought
T 1568029635 18<darkseid18>	oh, so it would just be `throw('failure')`
T 1568029749 18<darkseid18>	ffs, i meant `reject('failure')`
T 1568029757 18<grr1231418>	no brackets
T 1568029757 18<grr1231418>	its not a function
T 1568029784 18<darkseid18>	oh
T 1568029842 18<stennowork18>	what?
T 1568029845 18<stennowork18>	what is it then?
T 1568029869 18<stennowork18>	oh you mean the throw, not the reject
T 1568029870 18<darkseid18>	niggler can you gist what you mean
T 1568029892 18<darkseid18>	yeah the `throw` was me just typing the wrong thing lol
T 1568029958 18<grr1231418>	throw is the correct one tho :p
T 1568029962 18<grr1231418>	for the second version
T 1568029972 18<grr1231418>	just without ()
T 1568030216 18<niggler18>	yeah grr12314 said what i was trying to say
T 1568030217 18<niggler18>	anyway
T 1568030235 18<niggler18>	so disappointed that there aren't many popular queue libraries
T 1568030238 18<niggler18>	i guess people just use arrays
T 1568030314 18<ashnur18>	queue library?
T 1568030322 18<grr1231418>	im sure there are
T 1568030325 18<grr1231418>	for fancier cases
T 1568030327 18<niggler18>	we were talking about ring buffers a few days ago
T 1568030330 18<grr1231418>	like weighted queues
T 1568030333 18<ashnur18>	show me one so i know what you mean
T 1568030411 18<grr1231418>	for the basic case, have you seriously had a case where push/shift performance was not enough?
T 1568030420 18<niggler18>	so you can implement a queue with push and shift ashnur
T 1568030427 18<niggler18>	but shift has to ripple
T 1568030445 18<niggler18>	grr12314: work queue
T 1568030463 18<niggler18>	peak capacity 1.2M elements
T 1568030465 18<darkseid18>	grr12314 so these 2 are exactly equivalent then: https://pastebin.com/AbW2KcDq
T 1568030470 18<ashnur18>	i could if i read up on it
T 1568030501 18<niggler18>	ashnur: google Queue ADT
T 1568030503 18<niggler18>	or read https://en.wikipedia.org/wiki/Queue_(abstract_data_type)
T 1568030540 18<niggler18>	i have no good sense for what the maximum is going to be, so a fixed-size ring buffer isn't appropriate
T 1568030551 18<grr1231418>	shift has to ripple but how that's implemented in practice by the engine can vary, maybe they already optimize it?
T 1568030562 18<ashnur18>	oh, so queue library would be a lib that provides such an abstraction
T 1568030564 18<grr1231418>	so, have you actually had a case where it made a difference?
T 1568030568 18<stennowork18>	isn't queue just LIFO stack?
T 1568030568 18<ashnur18>	i think there are lots of such libs
T 1568030591 18<ashnur18>	people don't really use queues, too unenlightened for them
T 1568030614 18<niggler18>	profile suggesting its a significant part of runtime
T 1568030622 18<niggler18>	so i have to assume performance is important
T 1568030632 18<ashnur18>	profile?
T 1568030656 18<niggler18>	in node running with --profile and --prof-process
T 1568030674 18<ashnur18>	stennowork: queue is fifo
T 1568030687 18<niggler18>	err --prof / --prof-process
T 1568030702 18<stennowork18>	ah right
T 1568030703 18<niggler18>	stack is lifo queue
T 1568030706 18<stennowork18>	LIFO would be stack
T 1568030707 18<stennowork18>	yeah
T 1568030709 18<grr1231418>	anyway, wanting a library for that is a bit padleftish
T 1568030720 18<niggler18>	javascript is gigo
T 1568030737 18<grr1231418>	its just a[(i+start)%max]
T 1568030741 18<stennowork18>	get first element can be done with rest, thats nice
T 1568030764 18<ashnur18>	grr12314: not really, if it is bundled with a set of other algorithms and it's efficient...
T 1568030768 18<ashnur18>	i mean datascript ...
T 1568030771 18<stennowork18>	ok but it would have to be shifted/unshifted whcih is nasty
T 1568030774 18<niggler18>	arrays get awkward after 100Kish elements
T 1568030788 18<ashnur18>	use <datalist>
T 1568030794 18<stennowork18>	in C i can use actual CPU routines for stuff like that and its fast as fuck
T 1568030862 18<ashnur18>	stennowork: and if you are really clever you can get an asic and it's even faster, but why would you want to superoptimize for this so much when there are so many importanter aspects around
T 1568031101 18<orhan_18>	hi
T 1568031149 18<grr1231418>	ouran high
T 1568031189 18<orhan_18>	<a href...> doesn't waiting for finish function of "onclick=..."
T 1568031213 18<ashnur18>	orhan_: do you often have the power to stop time? :)
T 1568031245 18<sloth18>	https://i.pinimg.com/originals/9e/c6/2f/9ec62fac7f308e1bf5f59f8a57752fde.jpg
T 1568031248 18<orhan_18>	just going to that link before finish of function
T 1568031262 18<ashnur18>	clicks are events, it happens once, and then life goes on. things don't stop until you decide how to deal with them
T 1568031287 18<ashnur18>	!events @ orhan_
T 1568031288 18<cgi18>	I have a web app which spans 5 machines. I want to build a test system for it. Do I have to rename the domain name and start from there? or what is the recommended way to do this?
T 1568031288 18<ecmabot18>	orhan_: https://developer.mozilla.org/en-US/docs/Web/Events | QuirksMode Events guide: http://www.quirksmode.org/js/introevents.html
T 1568031369 18<orhan_18>	i am trying to make ownself that
T 1568031428 18<orhan_18>	how can i stop browser to go new page before function's finish
T 1568031456 18<orhan_18>	ecmabot, i see that page contains a lot of events
T 1568031495 18<MikeD_18>	if you find code like this, do you say something to the author about it?  https://jsfiddle.net/03uwb4m1/
T 1568031522 18<Alexendoo18>	niggler: There sort of is a popular library with a queue in it, since immutable.js' List can be treated as a deque (it has efficient shift/unshift as well as pop/push). For a plain mutable array backed queue there's probably a bunch on npm though
T 1568031563 18<grr1231418>	actually
T 1568031571 18<grr1231418>	it waits for the whole function
T 1568031579 18<grr1231418>	but not for async things started by it
T 1568031588 18<niggler18>	there's zero need for an array-backed queue since array literally provides the tools for it
T 1568031604 18<niggler18>	push/shift or unshift/pop depending on your personality
T 1568031640 18<grr1231418>	or (i+start)%max
T 1568031656 18<niggler18>	that assumes you know what max is
T 1568031659 18<grr1231418>	actually you dont need accessing by index do you
T 1568031663 18<grr1231418>	just start%max
T 1568031663 18<niggler18>	no
T 1568031687 18<grr1231418>	you have to know max yup. to avoid reallocs
T 1568031704 18<niggler18>	otherwise the ring solution would work
T 1568031706 18<orhan_18>	grr12314, so why my cookie wasn't set, in new page it was getting cookie but wasn't set nicely in that function
T 1568031729 18<grr1231418>	orhan_ show code
T 1568031769 18<orhan_18>	and also doesn't waiting css's transition effect
T 1568031797 18<orhan_18>	grr12314, i cannot, because there are linked files
T 1568031830 18<Alexendoo18>	niggler: As you mentioned earlier, if you just use use an array shift/unshift it can be slow. You can build a typical deque on top of it where that isn't the case
T 1568031839 18<grr1231418>	ok, then the answer is 42
T 1568031866 18<orhan_18>	grr12314, cookie function is here https://www.w3schools.com/js/js_cookies.asp
T 1568031887 18<grr1231418>	stop trolling
T 1568032234 18<Alexendoo18>	niggler: here's one that does just that https://www.npmjs.com/package/denque
T 1568032238 18<orhan_18>	a href's onclick="menuSelect(this)" menuselect setting cookie
T 1568032329 18<niggler18>	ok this was what i was thinking
T 1568032355 18<orhan_18>	after that, other page getting cookie with old value, also css transition effect for menu closing doesn't work
T 1568032388 18<orhan_18>	menu that side navigation menu
T 1568032448 18<orhan_18>	<a href running without waiting transition effect
T 1568032482 18<orhan_18>	end of words
T 1568032567 18<orhan_18>	grr12314, not tidy but http://ota.epizy.com/ota/project/personal/index.php
T 1568032582 18<orhan_18>	click on side menu
T 1568032603 18<orhan_18>	link 'Ana sayfa' and 'Bilgisayar'
T 1568032658 18<orhan_18>	it aren't working correctly
T 1568032728 18<orhan_18>	it isn't working correctly
T 1568033224 18<nwoob18>	I can't set src in image tag like this <img src={`image.STEPPER_${this.state.completedSteps.length}`} />
T 1568033236 18<nwoob18>	is there a way to acheive what I'm trying to do
T 1568033385 18<Alexendoo18>	nwoob: Why can't you?
T 1568033409 18<nwoob18>	Alexendoo: is that correct?
T 1568033490 18<nwoob18>	because I'm not able to see my image
T 1568033566 18<pyzozord18>	hi can anyone help me with moment.js? Im trying to figure out timezone name froma date
T 1568033570 18<Alexendoo18>	nwoob: You can inspect the DOM, check if the src you ended up with is what you're expecting
T 1568033589 18<pyzozord18>	i want the same result that comes from moment.tz.guess() but i want it based on a ISO date string that i have
T 1568033599 18<pyzozord18>	so i want it to parse string and give me full timezone name
T 1568033964 18<Buoy17218>	I'm getting this in chrome devtools console: [DOM] Password field is not contained in a form
T 1568033971 18<Xatenev18>	in js is there any shorthand for https://bpaste.net/show/PYTZ
T 1568033982 18<Buoy17218>	is it ok not to use a form
T 1568033982 18<laravel718>	what do you think about this? https://www.youtube.com/user/99baddawg/playlists
T 1568033992 18<Xatenev18>	in the best case id just like to do something.down('someElement')?.focus();
T 1568033994 18<Xatenev18>	or something like that :D
T 1568034002 18<niggler18>	probably a warning Buoy172
T 1568034042 18<Buoy17218>	it's a warning but wtf? I'm like: I know it's not in a form, I don't want it in a form
T 1568034056 18<niggler18>	yeah but it doesnt know that
T 1568034060 18<Buoy17218>	is it possible to remove this warning (without using a form)
T 1568034125 18<laravel718>	do you use prisma for graphql?
T 1568034161 18<stennowork18>	you can associate an input element with a form even though the element is not part of the form
T 1568034172 18<nwoob18>	I can't set src in image tag like this <img src={`image.STEPPER_${this.state.completedSteps.length}`} />
T 1568034173 18<niggler18>	Buoy172: why not use a form?
T 1568034176 18<nwoob18>	is there a way to acheive what I'm trying to do
T 1568034181 18<nwoob18>	can someone please help mewith it
T 1568034239 18<Alexendoo18>	pyzozord: That isn't possible, there isn't a 1:1 mapping from offsets to names
T 1568034270 18<stennowork18>	doesn't a full ISO date have TZ info anyway
T 1568034270 18<Buoy17218>	niggler: the backend doesn't require submitting a form
T 1568034279 18<niggler18>	then suppress submit
T 1568034348 18<niggler18>	old school onsubmit="return false"
T 1568034738 18<linuxconformer18>	why does -webkit-fill-available auto-adjust an iframe's height depending on the contents of the iframe, but -moz-available does not?
T 1568035176 18<Paradisee18>	hello
T 1568035178 18<Alexendoo18>	linuxconformer: It doesn't as far as I can see. If it did that would be a large bug
T 1568035215 18<Paradisee18>	http://dpaste.com/0JM65Y1
T 1568035227 18<linuxconformer18>	Alexendoo: it does, my iframe adjust height based on content in chrome, but not in FF
T 1568035231 18<Paradisee18>	i've installed handlebars multiple times but it does not work
T 1568035541 18<Alexendoo18>	linuxconformer: If you managed to find a scenario where that is the case then follow https://dev.chromium.org/Home/chromium-security/reporting-security-bugs
T 1568035561 18<linuxconformer18>	Alexendoo: should it not happen?
T 1568035572 18<linuxconformer18>	what's wrong about it?
T 1568035605 18<linuxconformer18>	and what would the proper way of resizing this iframe based on the height of its content be?
T 1568035646 18<Alexendoo18>	linuxconformer: If you can manage to get an iframe to size itself depending on the contents of the iframe, that's a leak of information about the contents itself. That shouldn't happen
T 1568035760 18<Alexendoo18>	The only way to do that is via JS. If it's a same origin iframe you can check the height of the frame's document and set the frame height accordingly. If it's a cross origin iframe the only way would be if chose to expose that information somehow. E.g. by postMessage
T 1568035839 18<Alexendoo18>	That or it could be known ahead of time, and set statically
T 1568036178 18<curious_user18>	hey i would like to do a simple filter on a json object like this one:
T 1568036186 18<curious_user18>	      obj = [{"data":true,"other_data":false},{"data":false,"other_data":false}];
T 1568036186 18<curious_user18>	      obj1 = obj.filter(key == true);
T 1568036192 18<curious_user18>	could you help me get it working ?
T 1568036283 18<stenno_18>	i think windows smart defender or w/e its called blocked putty from getting executed and also removed ti from the task bar
T 1568036285 18<stenno_18>	smart my ass
T 1568036692 18<prussian18>	stenno_: maybe it's malware
T 1568036703 18<prussian18>	also windows 10 ships with openssh out of the box.
T 1568036716 18<prussian18>	why anyone would use putty over it is beyond me
T 1568036754 18<Buoy17218>	niggler: sorry I was afk. Did you mean I should use <form onsubmit="return false"> ... my stuff ... </form> ?
T 1568036777 18<niggler18>	yeah
T 1568036794 18<niggler18>	eww windows 10
T 1568036800 18<Buoy17218>	My question actually is: how to avoid the warning without using <form> at all. Is it possible?
T 1568036943 18<niggler18>	it might be possible to bypass with role="form" in a parent element
T 1568036961 18<niggler18>	but that screws with ARIA Buoy172
T 1568037227 18<notchris18>	o/
T 1568037254 18<Roughy18>	shit, notchrist.
T 1568037262 18<Roughy18>	err, -t
T 1568038657 18<nwoob18>	How can I improve this https://pastebin.com/raw/RpxYVBpu
T 1568038696 18<nwoob18>	Could it be improved by using Dictionary
T 1568038774 18<johnjake18>	Hi guys! I've created a free NodeJS hosting and looking for feedbacks!
T 1568038793 18<johnjake18>	https://dashboard.reseka.com/register
T 1568038798 18<johnjake18>	No email verification required
T 1568038991 18<niggler18>	lol {"file":"/test4/myfile.php","url":"/test4/myfile.php?myFile=system(%22ls%22);","method":"GET","get":"{\"myFile\":\"system(\\\"ls\\\");\"}","post":"[]","custom":"2"}
T 1568039014 18<stennowork18>	nice try
T 1568039047 18<stennowork18>	it just dawned on me that you can probably do system calls in php
T 1568039055 18<niggler18>	ofc just like nodejs
T 1568039084 18<stennowork18>	no i mean with that exact syntax that i know from C
T 1568039091 18<stennowork18>	system('sleep 12');
T 1568039092 18<stennowork18>	oslt
T 1568039111 18<johnjake18>	niggler you need to go to the node tab
T 1568039144 18<niggler18>	don't see a tab
T 1568039160 18<niggler18>	actually upon expanding, there's a left column and a link to https://dashboard.reseka.com/index.html which says "Not Found"
T 1568039162 18<johnjake18>	niggler Oh, are you using the demo creds? they do not have the demo
T 1568039172 18<niggler18>	make a new demo
T 1568039176 18<nwoob18>	could somone review my code too https://pastebin.com/raw/RpxYVBpu
T 1568039185 18<nwoob18>	how can I improve it
T 1568039189 18<nwoob18>	without using if statement
T 1568039216 18<johnjake18>	niggler I meant the nodeJS hosting
T 1568039230 18<johnjake18>	You can register with like gfdgd@fgdgfd.com and a random password (no email verification)
T 1568039235 18<bradleymeck18>	nwoob: why no if?
T 1568039236 18<johnjake18>	I did not want to make a shared nodeJS hosting account
T 1568039291 18<nwoob18>	bradleymeck: because I know how to do it by if
T 1568039352 18<niggler18>	const img = {4:image.STEPPER_4, 3:image.STEPPER_3}[(this.state.completedSteps||[]).length] || image["STEPPER_" + (this.state.completedSteps||[]).length >= 2 ? 5 : 2)]
T 1568039365 18<niggler18>	(please ftlog don't do this)
T 1568039395 18<nwoob18>	niggler: Could it be done better by dictionary?
T 1568039406 18<niggler18>	you'd need to handle a default case
T 1568039416 18<niggler18>	that's a common pattern tho
T 1568039428 18<nwoob18>	niggler: What do you suggest is the better way
T 1568039504 18<niggler18>	just use the if statement and make it a let
T 1568039508 18<niggler18>	or make a shadow variable
T 1568039514 18<niggler18>	let _img = ...; const img = _img;
T 1568039554 18<niggler18>	otherwise you end up with monstrosities like https://github.com/SheetJS/js-xlsx/blob/master/xlsx.flow.js#L16814 which i 100% discourage
T 1568039576 18<nwoob18>	I don't know what is shadowed variabler
T 1568039604 18<niggler18>	just make another variable
T 1568039622 18<niggler18>	instead of `const foo = complicated_expression`
T 1568039625 18<niggler18>	you can do something like
T 1568039645 18<prometh18>	line 16,815; ugh
T 1568039655 18<niggler18>	`let _foo = something; if(simple_condition) _foo = something_else; const foo = _foo;`
T 1568039668 18<nwoob18>	ok
T 1568039669 18<niggler18>	then you preserve the fundamental nature of the const while not mucking up your code
T 1568039715 18<niggler18>	there are many LUTs prometh
T 1568039746 18<prometh18>	lut?
T 1568039747 18<niggler18>	https://github.com/SheetJS/js-xlsx/blob/master/xlsx.flow.js#L12405-L12658 >250 lines corresponding to the number of arguments for various hardcoded XLS functions
T 1568039753 18<niggler18>	LUT = lookup table
T 1568039797 18<prometh18>	that'll be fun to maintain
T 1568039829 18<prometh18>	but we live in a world where trump became president, so stupid insanity makes sense
T 1568039837 18<niggler18>	i think the biggest one is https://github.com/SheetJS/js-xlsx/blob/master/xlsx.flow.js#L11522-L12404
T 1568039840 18<emx18>	Could someone please explain why "0 | Math.pow( 2, 31 )" is not 2147483648?
T 1568039849 18<niggler18>	eer 11522-11919
T 1568039872 18<niggler18>	emx: the range of a 32 bit signed integer is -2**31 to 2**31 - 1
T 1568039928 18<niggler18>	same convention for 8 and 16 bit integers like those you get from Int8Array / Int16Array
T 1568039974 18<emx18>	niggler, Why 32 and not 64?
T 1568039995 18<niggler18>	because that's what `|` does
T 1568040013 18<emx18>	bummer
T 1568040018 18<emx18>	niggler, alright, thanks
T 1568040153 18<niggler18>	cant even find that part in the spec
T 1568040189 18<niggler18>	emx: https://www.ecma-international.org/ecma-262/5.1/index.html#sec-11.10
T 1568040197 18<niggler18>	so scroll down to semantics
T 1568040212 18<niggler18>	let lnum be ToInt32(lval).  Let rnum be ToInt32(rval).
T 1568040833 18<shangul18>	MJCD, JSON files are just text files. right?
T 1568040850 18<stennowork18>	yes
T 1568041154 18<niggler18>	depends on what you mean by "text"
T 1568041172 18<niggler18>	they can contain non-ascii characters
T 1568041841 18<ljharb18>	shangul: json is a string, so yes
T 1568041901 18<shangul18>	ljharb, Did you see MJCD's answer to my question?
T 1568041921 18<ljharb18>	no
T 1568041974 18<therik18>	Hello, I have a react/webpack/babel/encore app with php/symfony backend, that was running on babel 6, now updated to babel 7. I was using babel-plugin-import-globals to import loglevel everywhere, without explicitly stating "import * as log from loglevel" in every file. Is there some babel7 way of importing a lib automatically?
T 1568042160 18<stennowork18>	sounds more like a job for webpack than for babel tbh
T 1568042379 18<Kirjava18>	does `continue` just continue from the inner loop (as long as you're not specifying labels)
T 1568042398 18<stennowork18>	yes?
T 1568042404 18<stennowork18>	what else would you expect?
T 1568042417 18<stennowork18>	in php you can give continue depth lol
T 1568042430 18<Kirjava18>	yeah
T 1568042434 18<stennowork18>	so its possible to `continue` a parent loop
T 1568042440 18<stennowork18>	this is thankfully not possible in js
T 1568042444 18<Kirjava18>	in one of our PHP codebases they had a break 9;
T 1568042455 18<Kirjava18>	stennowork: actually it is possible with labels
T 1568042455 18<Alexendoo18>	stennowork: It is with labels, but nobody uses labels so it's fine
T 1568042475 18<Kirjava18>	someone write a blogpost about why labels are so good
T 1568042486 18<stennowork18>	yes, with labels, but even labels are more semantic than just a number
T 1568042512 18<stennowork18>	i only realized a few weeks ago that you can continue; and break; any iterable
T 1568042541 18<stennowork18>	especially exciting with async generators :D
T 1568042571 18<Kirjava18>	ooh
T 1568042586 18<Kirjava18>	rust has labels for breaking loops too
T 1568042589 18<Kirjava18>	which I always found weird
T 1568042600 18<Kirjava18>	because it usually tends to omit things like that
T 1568042601 18<stennowork18>	it seems like a recipe for spaghetti
T 1568042610 18<stennowork18>	i mean its not much better than goto/label
T 1568042724 18<Kirjava18>	yeah
T 1568042838 18<Xatenev18>	anyone has any clue how i can generate a vue project with webpack + vue loader via vue cli? :\
T 1568042852 18<Xatenev18>	I knew it was there in vue CLI v2 but it disappeared in V3
T 1568042976 18<therik18>	stennowork: ok, that worked, but it's not working for jest, because jest only reads the .babelrc, not webpack
T 1568044714 18<mchelen18>	i'm looking at some code like `const { foo } = bar;` can anyone give me a tip what is going on here?
T 1568044735 18<ljharb18>	mchelen: sugar for `const foo = bar.foo`
T 1568044746 18<ljharb18>	mchelen: it's called destructuring, added in ES2015.
T 1568044790 18<mchelen18>	ljharb: ah ok thanks, i don't think i had seen it used that way before
T 1568045841 18<horribleprogram18>	Where do I go for more specific web hosting questions
T 1568045856 18<horribleprogram18>	Bought a domain from Hostgater and they're hosting my shit
T 1568045956 18<horribleprogram18>	Like wtf is Wordpress
T 1568045970 18<horribleprogram18>	I thought you just upload index.html, a bunch of .js files, bunch of .css files
T 1568046159 18<mchelen18>	anyone have thoughts on best practice for managing a bunch of related static functions? should i put them all in a class or not? this is in typescript
T 1568046164 18<shangul18>	repost: Any library to read DICT files like WordNet's? Yes they are text files but formatted in a certain way.
T 1568046201 18<stennowork18>	shangul, dictftm ?
T 1568046207 18<stennowork18>	dictfmt *
T 1568046217 18<stennowork18>	https://github.com/substack/parse-dictd
T 1568046239 18<stennowork18>	hm the name substack is so familiar somehow
T 1568046245 18<shangul18>	How do you find all these? When I search I get results about dictionaries in JS...
T 1568046277 18<stennowork18>	shangul, i looked up what a DICT file is, then saw the standard linux program for it, and then googled 'node dictfmt'
T 1568046335 18<shangul18>	stennowork, Got it. Thank you.
T 1568046597 18<prometh18>	mchelen: don't use classes unless you need them... it can be nice to group related functions by type/feature into a single module, similar to lodash:  `import {functionA, functionB} from 'module'`
T 1568046643 18<mchelen18>	prometh: ok yeah that makes sense, what's the difference between a module and just using named exports?
T 1568046651 18<prometh18>	mchelen: no difference
T 1568046676 18<mchelen18>	prometh: ok cool
T 1568049215 18<shadykhan__18>	Hey Guys im running eslint and everytime i run eslint it tells me "jQuery" is undefined but i have it defined in my globals and in my env. Does anyone know what else i could be missing?
T 1568049397 18<Aquazi18>	how is eslint supposed to know that jQuery is an environment varaible?
T 1568049442 18<gehn18>	shadykhan__, defining globals works for me, you did something wrong somewhere
T 1568049612 18<sillyslux18>	you run it from your console?
T 1568049628 18<shadykhan__18>	@sillyslux, running it thru grunt
T 1568049683 18<sillyslux18>	you have an eslintrc?
T 1568049718 18<prometh18>	shadykhan__: get rid of grunt.. just saying
T 1568049742 18<sillyslux18>	have you tried all of these? https://eslint.org/docs/user-guide/configuring#specifying-globals
T 1568049756 18<sillyslux18>	even though, any should work...
T 1568049794 18<C7818>	What happens when you initialize a new WebSocket in the front end with the same url as a WebSocket that was already initialized.  Is new the new initialized WebSocket object ignored or duplicated?
T 1568049829 18<sillyslux18>	C78, you should get a new websocket
T 1568049845 18<sillyslux18>	try it and see in your devtools network pane
T 1568049846 18<shadykhan__18>	@prometh, trying to. Grunt was already built out with this project which blows
T 1568049896 18<prometh18>	shadykhan__: maybe start out by abstracting the grunt tasks to npm scripts, then use eslint's cli directly instead of through grunt
T 1568049897 18<sillyslux18>	does it tell you which file? try /* global jQuery */ in line one
T 1568049918 18<shadykhan__18>	sillyslux, i tried that but then it tells me its already declared
T 1568049923 18<C7818>	ok i thought so.  thanks sillyslux.  is there a way to findout if there's a websocket already opened so not to create a new one with the same url as one that was previously initialize?
T 1568049942 18<sillyslux18>	C78, from code? no
T 1568049960 18<sillyslux18>	you should know what your code does
T 1568049975 18<sillyslux18>	but you can always check your network pane during dev
T 1568050002 18<sillyslux18>	shadykhan__, that's weird
T 1568050025 18<sillyslux18>	already declared... like what? as a global?
T 1568050090 18<shadykhan__18>	sillyslux, "'jquery' is already defined as a built-in global variable" then i get my other jQuery is not defined errors as well
T 1568050130 18<sillyslux18>	oh weird
T 1568050136 18<sillyslux18>	have you tried npx eslint?
T 1568050141 18<sillyslux18>	from your console
T 1568050156 18<sillyslux18>	maybe it's a goofy grunt config
T 1568050197 18<shadykhan__18>	@sillyslux, same issue
T 1568050208 18<niggler18>	silly slux with the cockamamie configs
T 1568050224 18<sillyslux18>	wasn't me
T 1568050235 18<sillyslux18>	I'M INNOCENT
T 1568050601 18<stenno18>	nice, learned a new word
T 1568050647 18<sillyslux_18>	what word what word? lost innernet connection
T 1568050790 18<prometh18>	sillyslux_: "guilty"
T 1568050802 18<sillyslux_18>	nooooo
T 1568050816 18<sillyslux_18>	quilty?
T 1568050828 18<prometh18>	quality?
T 1568050854 18<sillyslux_18>	i don't have these words in my vocabulary
T 1568050868 18<stenno18>	cockamanie
T 1568050886 18<sillyslux_18>	oh that
T 1568050887 18<stenno18>	cockamamie
T 1568050889 18<switzernauts18>	Hi
T 1568050896 18<sillyslux_18>	cockanemie
T 1568050919 18<prometh18>	words are stupid.. sentences are hwere it's at
T 1568050937 18<sillyslux_18>	WORD!
T 1568050972 18<roomba18>	sentences are so last month. paragraphs are where it's at.
T 1568050987 18<sillyslux_18>	word man word
T 1568051006 18<roomba18>	everybody wants to word up but nobody wants to word down. what gives?
T 1568051006 18<prometh18>	very few of us actually write paragraphs, though
T 1568051017 18<stenno18>	paragraphs are lame. a 1200-verse poem in iambic hexameter however..
T 1568051049 18<switzernauts18>	Would someone please help me understand what type of syntax error I make here?
T 1568051050 18<switzernauts18>	https://paste.ofcode.org/gWJDTnjiePzp6hK6GDaGAN
T 1568051076 18<niggler18>	add a semicolon after the test in line 1
T 1568051083 18<prometh18>	roomba: word down? so, like, morse code
T 1568051090 18<niggler18>	and a plus after the test in line 2
T 1568051097 18<niggler18>	and a close parens before the semicolon
T 1568051107 18<sillyslux_18>	you have an escaped close parens
T 1568051108 18<niggler18>	switzernauts: more syntax errors than lines of code
T 1568051116 18<rustyshackleford18>	working with spreadsheets. Is there a nice way to generate a list of keys for a row or column
T 1568051136 18<niggler18>	you can use header:1 to get an array of arrays
T 1568051137 18<rustyshackleford18>	['A1', ..., 'A99']
T 1568051138 18<sillyslux_18>	and the plus
T 1568051190 18<sillyslux_18>	header what?
T 1568051201 18<niggler18>	rustyshackleford: https://docs.sheetjs.com/#json search for "header is expected to be one of:"
T 1568051256 18<Donitzo18>	v & 0b10 > 0
T 1568051257 18<switzernauts18>	niggler yes, it's just an example out put but it's specifically "cmd /c start iexplore.exe" + " " + "\"www.example.com\auth=" +test "\" I cannot get to work. I tried with a plus after test, still same error
T 1568051260 18<Donitzo18>	damnit! I keep forgetting
T 1568051267 18<niggler18>	var name = test;
T 1568051282 18<niggler18>		getRuntime().exec("cmd /c start iexplore.exe" + " " + "\"www.example.com\auth=" +test + "\");
T 1568051288 18<prometh18>	n> Array.from({length:99}, (_ i) => `A${i + 1}`); @ rustyshackleford
T 1568051290 18<jellobot18>	rustyshackleford, SyntaxError: Unexpected identifier
T 1568051292 18<niggler18>	that resolves the syntax problems
T 1568051295 18<rustyshackleford18>	niggler: so right now I'm just working with a javascript object. WTF, i can't read a local file in the create react app environment?
T 1568051303 18<sillyslux_18>	and an extra " as in "\""
T 1568051303 18<prometh18>	n> Array.from({length:99}, (_, i) => `A${i + 1}`); @ rustyshackleford
T 1568051304 18<jellobot18>	rustyshackleford, [ 'A1', 'A2', 'A3', 'A4', 'A5', 'A6', 'A7', 'A8', 'A9', 'A10', 'A11', 'A12', 'A13', 'A14', 'A15', 'A16', 'A17', 'A18', 'A19', 'A20', ... 79 more items ]
T 1568051307 18<niggler18>	rustyshackleford: so there's a helper function
T 1568051324 18<sillyslux_18>	getRuntime().exec("cmd /c start iexplore.exe" + " " + "\"www.example.com\auth=" +test + "\"");
T 1568051325 18<rustyshackleford18>	the create-react-app environment doesn't have the fs module
T 1568051326 18<niggler18>	encode_col takes a 0-indexed number and generates the column letters
T 1568051345 18<niggler18>	to read from a react app you need to do one of three things
T 1568051354 18<niggler18>	1) read from the local computer using FileReader
T 1568051361 18<niggler18>	2) read from the server using an XHR or fetch
T 1568051373 18<niggler18>	3) read compile time using your bundler to generate a base64 blob
T 1568051409 18<niggler18>	technically there's (4) use VBScript but that only works in IE
T 1568051428 18<rustyshackleford18>	just prototyping so i'm looking for the easiest way now. I was just going to ship the xlsx sheet in the src/ directory
T 1568051456 18<niggler18>	you can stick it in a /public directory and fetch it
T 1568051462 18<luist18>	hey, does my prototype make sense? it’s a event tracker: https://paste.ofcode.org/LenZpZ5ed2teWeGA8h9c46
T 1568051470 18<niggler18>	OR configure file-loader to support xlsx files
T 1568051493 18<switzernauts18>	niggler thank you very much, that worked. Much appreciated
T 1568051627 18<stenno18>	if only there was a spreadsheet expert here
T 1568051670 18<sillyslux_18>	luist you lose your constructor function
T 1568051681 18<sillyslux_18>	loose
T 1568051691 18<luist18>	hows that
T 1568051703 18<sillyslux_18>	by reassigning an object to .prototype
T 1568051737 18<sillyslux_18>	either use Object.assign or write it all out for each method
T 1568051853 18<sillyslux_18>	also you have this.data = {}; and this.data.push
T 1568051901 18<luist18>	sillyslux_: like this?     EventTracker.prototype = Object.assign({
T 1568051908 18<sillyslux_18>	no
T 1568051919 18<sillyslux_18>	Object.assign(EventTracker, {...
T 1568051970 18<sillyslux_18>	use .push to append to arrays []
T 1568052176 18<luist18>	hm okay
T 1568052223 18<luist18>	sillyslux_: how can i send an event now?
T 1568052287 18<sillyslux_18>	https://developer.mozilla.org/en-US/docs/Web/Guide/Events/Creating_and_triggering_events
T 1568052297 18<rustyshackleford18>	niggler: public directory worked like a charm
T 1568052299 18<rustyshackleford18>	for the time being
T 1568052300 18<devsnek18>	luist: your prototype was just fine in the code you posted
T 1568052304 18<rustyshackleford18>	thanks bro
T 1568052327 18<devsnek18>	i dunno what sillyslux is on
T 1568052334 18<sillyslux_18>	hmm
T 1568052374 18<sillyslux_18>	function test(){} -> test.prototype -> {constructor: ƒ}
T 1568052404 18<sillyslux_18>	test.prototype = {a: 1} -> test.prototype {a: 1}
T 1568052412 18<sillyslux_18>	no more constructor: ƒ
T 1568052468 18<luist18>	uh??
T 1568052480 18<sillyslux_18>	therefore Object.assign
T 1568052494 18<sillyslux_18>	or test.prototype.a = 1
T 1568052507 18<sillyslux_18>	or Util.somethingIforgot
T 1568052522 18<sillyslux_18>	isn't it?
T 1568052567 18<devsnek18>	luist: add `constructor: EventTracker`
T 1568052570 18<devsnek18>	to your prototype
T 1568052570 18<sillyslux_18>	util.inherits(...);
T 1568052586 18<sillyslux_18>	oic
T 1568052838 18<luist18>	iim getting confused
T 1568052851 18<luist18>	constructor where
T 1568052870 18<luist18>	object assign or not?
T 1568052881 18<sillyslux_18>	you can do what devsnek said
T 1568052887 18<sillyslux_18>	or any of what i said
T 1568052891 18<sillyslux_18>	does all the same
T 1568052908 18<sillyslux_18>	but you need it to instantialize with the keyword new
T 1568052911 18<sillyslux_18>	(i think)
T 1568052959 18<stenno18>	learned another new word 'instantialize' :D
T 1568053029 18<sillyslux_18>	instantiate?
T 1568053035 18<stenno18>	yeah :)
T 1568053048 18<sillyslux_18>	:P
T 1568053098 18<luist18>	event = new EventTracker('Signed Up Confirmation', {});
T 1568053099 18<luist18>	event.send();
T 1568053099 18<sillyslux_18>	Instantiation refers to the process of creating an instance of a class definition, this term is only applicable to classes. Instantialization differs in that it refers to the process of creating a strongly typed instance of a template definition.
T 1568053103 18<sillyslux_18>	hah there's both
T 1568053103 18<luist18>	like this?
T 1568053114 18<stenno18>	oh!
T 1568053123 18<stenno18>	then i learned a new word unironically
T 1568053132 18<sillyslux_18>	yeah me too...
T 1568053136 18<stenno18>	:D
T 1568053141 18<prometh18>	i learned a new word: "words"
T 1568053152 18<sillyslux_18>	WORD! man word
T 1568053169 18<stenno18>	No manual entry for word
T 1568053173 18<prometh18>	another word: action
T 1568053193 18<prometh18>	another word: write
T 1568053208 18<prometh18>	another word: bullshit :)
T 1568053210 18<luist18>	can we go back to javascript? haha
T 1568053221 18<sillyslux_18>	luist, too bad that i don't know analytics
T 1568053236 18<luist18>	i just want to call the function passing the event name :)
T 1568053260 18<prometh18>	luist: you can just `new Something.methid()`
T 1568053263 18<prometh18>	s/methid/method/
T 1568053274 18<luist18>	ok
T 1568053277 18<prometh18>	oops... `new Something().method()`
T 1568053352 18<luist18>	im getting Uncaught ReferenceError: EventTracker is not defined
T 1568053370 18<prometh18>	i can't help you there :P
T 1568053380 18<prometh18>	either no global or no import
T 1568053386 18<sillyslux_18>	try it in your console
T 1568053386 18<sillyslux_18>	after all of your page has loaded
T 1568053409 18<sillyslux_18>	window.EventTracker = EventTracker;
T 1568053569 18<luist18>	got this: Uncaught TypeError: this.setServiceDefaults is not a function
T 1568053707 18<luist18>	weird
T 1568053802 18<sillyslux_18>	how did you instantiate?
T 1568053813 18<sillyslux_18>	and use
T 1568056251 18<xvx18>	Using function myFun(...rest), how can I insert objects?
T 1568056270 18<GreenJello18>	xvx, not sure what you mean
T 1568056280 18<xvx18>	currently I'm losing the object name (e.g. name:"john" becomes 0: "John")
T 1568056281 18<xvx18>	https://paste.ee/p/n9oLe
T 1568056306 18<devsnek18>	`myFun(name="Bob", age=24);` isn't valid js
T 1568056316 18<GreenJello18>	xvx, that's not the syntax for for defining an object
T 1568056327 18<GreenJello18>	xvx, you're assigning global variables to those values
T 1568056337 18<GreenJello18>	myFun({ name: 'Bob', age: 24 })
T 1568056360 18<xvx18>	I've been doing your code snippet
T 1568056421 18<xvx18>	but in this situation, I need to use ...rest for unknown function parameters greenJello
T 1568056441 18<GreenJello18>	xvx, it's really not clear what you're trying to do here
T 1568056525 18<xvx18>	the code snippet you put returns:    0: Object { name: "Bob", age: 24 }
T 1568056566 18<xvx18>	but I need those two objects separetely
T 1568056572 18<GreenJello18>	xvx, so pass two objects?
T 1568056709 18<xvx18>	Like this?   `myFun({name:"Bob"}, {age:24});`
T 1568056715 18<GreenJello18>	yep
T 1568056738 18<xvx18>	that encases first object with 0, second one with 1
T 1568056749 18<devsnek18>	!xy
T 1568056750 18<ecmabot18>	devsnek: The XY problem: You want to do X, but don't know how. You think you can solve it using Y, but don't know how to do that either. You ask about Y, which is a strange thing to want to do. Just ask about X. See also: http://xyproblem.info/
T 1568056764 18<xvx18>	but I want name and age to be the object names, not a value
T 1568056776 18<GreenJello18>	xvx, "object name" isn't a thing
T 1568056788 18<xvx18>	object key or whatever term lol
T 1568056803 18<bprompt18>	!yz
T 1568056816 18<GreenJello18>	xvx, that's what my example did
T 1568056822 18<GreenJello18>	xvx, but then you're pushing it onto an array
T 1568056834 18<GreenJello18>	arrays have integer keys
T 1568056854 18<GreenJello18>	xvx, step back and explain what you're actually trying to do
T 1568056893 18<bprompt18>	xvx:   what others are saying is just you need to disclose "the full monty", so we know what's cooking
T 1568057027 18<xvx18>	looking into it atm
T 1568057125 18<xvx18>	I want to append all those object parameters to this (already set) JSON:     props = {...props,"required": required,}
T 1568057160 18<xvx18>	using `...rest` (because they're unknown)
T 1568057329 18<sillyslux__18>	n> opts={abc: 1}; function myFun(...rest){Object.assign(opts, ...rest)}; myFun({name:"Bob"}, {age:24}); opts
T 1568057331 18<jellobot18>	(okay) { abc: 1, name: 'Bob', age: 24 }
T 1568057529 18<xvx18>	that looks good sillyslux_
T 1568057543 18<xvx18>	is there a way to get it so just this syntax is needed: myFun(name:"Bob", age:24);
T 1568057659 18<jayjo18>	I'm trying to merge an array with data with an undefined placeholder array so I can always have an array of minimum length. return Object.assign([], new Array(6), myData) is what I've tried - do I need to have something other than 'undefined' in my placeholder array to get this to work?
T 1568057671 18<xvx18>	without the {} around each parameter
T 1568057675 18<sillyslux__18>	no
T 1568057678 18<jaawerth18>	xvx: no because that's not a valid object or even valid js syntax
T 1568057683 18<sillyslux__18>	that's a syntax error
T 1568057762 18<jaawerth18>	you can do myFun({name: 'Bob', age: 24}) and have it still work with sillyslux__'s example just as well as myFun({name: 'Bob'}, {age: 24}) though
T 1568057776 18<jayjo18>	n> Object.assign([], new Array(6), ['test'])
T 1568057778 18<jellobot18>	(okay) [ 'test' ]
T 1568057796 18<devsnek18>	is the rest args here just for kwargs
T 1568057816 18<jayjo18>	I would like that to return ['test', undefined, undefined, undefined, undefined, undefined]
T 1568057827 18<devsnek18>	jayjo: never use the Array constructor
T 1568057870 18<xvx18>	Is it not possible at all to use the name of the kwarg in addition to the kwarg's value?
T 1568057871 18<devsnek18>	jayjo: `Array.from({ length: 6 })`
T 1568057878 18<devsnek18>	js doesn't have kwargs
T 1568057884 18<devsnek18>	at all
T 1568057891 18<sillyslux__18>	lol wat?
T 1568057900 18<xvx18>	yea it does lol
T 1568057905 18<xvx18>	I'm using them right now
T 1568057909 18<devsnek18>	that's news to me
T 1568057912 18<jaawerth18>	no it doesn't - yo ucan pass an object and use destructuring
T 1568057915 18<sillyslux__18>	"*args and **kwargs magic variables." lol
T 1568057916 18<xvx18>	function myFun(...kwargs)
T 1568057921 18<jaawerth18>	which is effectively kwargs but isn't kwargs
T 1568057922 18<devsnek18>	those aren't kwargs
T 1568057923 18<devsnek18>	that's rest args
T 1568057930 18<xvx18>	ah yes
T 1568057932 18<devsnek18>	it handles an unknown number of arguments
T 1568057934 18<devsnek18>	not kwargs
T 1568057943 18<xvx18>	that is unknown number
T 1568057950 18<devsnek18>	kwargs is named arguments
T 1568057959 18<devsnek18>	...args is like *args
T 1568057961 18<jayjo18>	devsnek: even using that to create the placeholder array doesn't merge them correctly
T 1568057961 18<devsnek18>	in python
T 1568057968 18<xvx18>	my questions here have been about named args lol
T 1568057982 18<devsnek18>	n> Object.assign([], Array.from({ length: 6 }), ['test'])
T 1568057984 18<jellobot18>	(okay) [ 'test', undefined, undefined, undefined, undefined, undefined ]
T 1568058004 18<devsnek18>	xvx: in js we call functions with object literals
T 1568058014 18<devsnek18>	`myFunction({ a: 5, b: 10 })`
T 1568058019 18<devsnek18>	instead of `myFunction(a=5, b=10)`
T 1568058037 18<xvx18>	yea I'm used to python
T 1568058065 18<jaawerth18>	n> const foo = ({ a, b, c }) => `a is ${a}, b is ${b}, c is ${c}`; foo({a: 1, b: 2, c: 3}) @xvx
T 1568058066 18<jellobot18>	xvx, 'a is 1, b is 2, c is 3'
T 1568058090 18<devsnek18>	object destructuring ^
T 1568058111 18<jaawerth18>	yeah that's just passing an object and then destructuring, which is the route to kwargs in js
T 1568058163 18<jaawerth18>	and with default values:
T 1568058167 18<jaawerth18>	n> const foo = ({a = 1, b = 2, c = 3} = {}) => `a is ${a}, b is ${b}, c is ${c}`; foo({b: 9000});
T 1568058168 18<jellobot18>	(okay) 'a is 1, b is 9000, c is 3'
T 1568058241 18<jaawerth18>	you don't necessarily need the = {} there, it depends on whether you want a default object when foo() is invoked with no args, or an error (sometimes the error is good for catching bugs if the function should ALWAYS get some kind of object passed to it)
T 1568058257 18<Alexendoo18>	Huh neat, caniuse shows data from MDN now too
T 1568058656 18<laravel718>	is the prisma way to go graphql backend in 2019?
T 1568058688 18<jayjo18>	if Array.from({ length: 6 }) is how to create an array of undefined, what's the best way to create an array of length n with an object like {msg: 'test'}
T 1568058728 18<devsnek18>	Array.from takes an optional callback
T 1568058733 18<devsnek18>	!mdn Array.from
T 1568058735 18<jellobot18>	devsnek, Array.from(), JavaScript - The Array.from() method creates a new, shallow-copied Array instance from an array-like or iterable object. https://mdn.io/array-from
T 1568058749 18<deltab18>	jayjo: the same object or multiple?
T 1568058855 18<jayjo18>	I would like to construct an array of n=6 objects with a payload along the lines of {"loaded": false}. So from the example before, Object.assign([], Array.from({ length: 6 }), ['test']), 'test' is the data payload object, and I want the undefined objects from the first list to be {loaded: false}
T 1568058935 18<GreenJello18>	Object.assign(Array.from({ length: 6 }, () => ({ loaded: false })), ['test'])
T 1568058999 18<GreenJello18>	jayjo, though it will set the value to `undefined` if there is a key for it in the array
T 1568059009 18<GreenJello18>	e.g. [] is different from [undefined]
T 1568059083 18<GreenJello18>	Array.from({ length: 6 }, () => ({ loaded: false })).map((x, i) => arr[i] == null ? x : arr[i]) would solve for ignoring null/undefined values
T 1568059209 18<prometh18>	laravel7: prisma 1.0 was weird
T 1568059248 18<prometh18>	laravel7: this is probably the next big thing: https://github.com/graphile/postgraphile
T 1568059290 18<prometh18>	or perhaps https://github.com/ehmicky/autoserver
T 1568059307 18<prometh18>	those both may be for 2020, though
T 1568059393 18<prometh18>	jayjo: why are you using Object.assign() ?
T 1568059455 18<laravel718>	are there any human friendly tutorials how to use it beside the docs?
T 1568059472 18<bberry18>	anyone happen to know if there is there a way to get a md5 (or comparable) hash of an object in an S3 bucket?  i have huge files there and i dont want to have to download them before i hash them
T 1568059475 18<prometh18>	laravel7: "it" being prisma?
T 1568059497 18<laravel718>	this postgres solution
T 1568059506 18<prometh18>	laravel7: i haven't tried them yet
T 1568059508 18<bogdaniel18>	hey guys. been playing a little with classes in js. Any advice on how to do this better ? https://jsfiddle.net/bogdaniel/dnamxjre/
T 1568059517 18<GreenJello18>	bberry, I believe you'd have to add tags to it yourself
T 1568059536 18<bberry18>	ah hmm... and just get the tags
T 1568059540 18<bberry18>	that might work actually
T 1568059551 18<prometh18>	bogdaniel: you don't need constructor() if all you do is call super()
T 1568059560 18<prometh18>	bogdaniel: don't use for()
T 1568059594 18<laravel718>	sequelize or mongoose with apollo server are outdated tech today?
T 1568059609 18<bogdaniel18>	prometh, i see :-)
T 1568059612 18<prometh18>	bogdaniel: no need for __proto__ if you use babel
T 1568059631 18<prometh18>	bogdaniel: and, yo ushouldn't need it anyway... dunno about browser limitations
T 1568059683 18<GreenJello18>	bogdaniel, Object.assign(ArrayExtension.prototype); does nothing
T 1568059712 18<prometh18>	bogdaniel: you could add a `static from(obj){}` for ArrayExtention.from() for converting existing objects
T 1568059757 18<laravel718>	there are not much examples or tuts on how to properly structure react-native app with useReducer, useContext, custom hooks and apollo client, you have to reinvent it on your own
T 1568059779 18<GreenJello18>	bogdaniel, you can just remove the Object.assign, so .__proto__ = ArrayExtension.prototype; or Object.setPrototypeOf(seats, ArrayExtension.prototype)
T 1568059785 18<prometh18>	laravel7: mongoose was never a good idea
T 1568059860 18<GreenJello18>	prometh, from already works
T 1568059904 18<GreenJello18>	static methods are inherited, and .from isn't hard-coded to use Array
T 1568059907 18<bogdaniel18>	GreenJello, yeah was trying to figure it out how assign the new prototype to the object. i was counting that someone from here already did something like this before me. :D
T 1568059948 18<deltab18>	n> Object.setPrototypeOf
T 1568059950 18<jellobot18>	(okay) [Function: setPrototypeOf]
T 1568059973 18<GreenJello18>	bogdaniel, const myArray = ArrayExtension.from(seats); or ArrayExtension.from(document.querySelectorAll(".carousel-seat"))
T 1568060000 18<GreenJello18>	bogdaniel, you generally don't modify the prototype of existing objects
T 1568060034 18<deltab18>	that, I thinkn> const o = {x: 1}; Object.setPrototypeOf(o, {f() { console.log(this); }}); o.f()
T 1568060039 18<deltab18>	n> const o = {x: 1}; Object.setPrototypeOf(o, {f() { console.log(this); }}); o.f()
T 1568060041 18<jellobot18>	(okay) { x: 1 } undefined
T 1568060056 18<devsnek18>	bogdaniel: `const seats = new ArrayExtension(...document.querySelectorAll(".carousel-seat"))`
T 1568060065 18<bogdaniel18>	GreenJello, didn't know i shouldn't modify the prototype.
T 1568060112 18<deltab18>	not just mutating the existing prototype, but also not replacing it?
T 1568060121 18<GreenJello18>	bogdaniel, if you just created the thing and then immediately change the prototype, it's not really bad, just weird
T 1568060139 18<GreenJello18>	bogdaniel, it does mean that your constructor won't run for it, which could cause issues
T 1568060156 18<GreenJello18>	not in this case since your constructor doesn't do anything
T 1568060178 18<devsnek18>	i think i solved this
T 1568060185 18<deltab18>	you can set the constructor when creating an object using Object.create
T 1568060192 18<deltab18>	er, set the prototype
T 1568060202 18<GreenJello18>	devsnek, lol, just use .from
T 1568060214 18<prometh18>	we could write binary
T 1568060261 18<devsnek18>	oh yeah Array.from checks the receiver
T 1568060267 18<devsnek18>	`const seats = ArrayExtension.from`
T 1568060461 18<evulish18>	are stage 3 proposals _definitely_ making it into the spec?
T 1568060465 18<ljharb18>	evulish: no
T 1568060468 18<ljharb18>	evulish: but, probably
T 1568060510 18<evulish18>	where do proposals usually get stopped? stage 0/1?
T 1568060527 18<devsnek18>	0 or 1 or 2
T 1568060535 18<evulish18>	is it common in 2?
T 1568060548 18<devsnek18>	a lot of stuff stalls at 2 cuz that's where all the exact semantics show up
T 1568060572 18<devsnek18>	asking for stage 3 is basically saying your proposal in its current form is what should be in the language
T 1568060574 18<evulish18>	ah a "this is harder than we thought" rather than "no we don't want this"
T 1568060583 18<ljharb18>	evulish: there's no "one place" they get stopped
T 1568060585 18<devsnek18>	well
T 1568060593 18<devsnek18>	sometimes its "no we don't want this"
T 1568060593 18<codster18>	Hello. Promise question. In a Promise.all([...]), how do I convert a function into an anon function? I tried this: https://repl.it/repls/GargantuanLivelySection but it seems to gobble up the exception when I convert "test3()" to "async () => await xxx()".
T 1568060650 18<ljharb18>	evulish: 0 is kind of like "i have a crazy idea", 1 is that the committee wants to talk about it more, 2 is "a solution to this problem is something we want in the language, and this solution seems like the one we're going with", 3 is "this exact solution is what we think belongs in the language, so unless there's unexpected user or implementation feedback, it's going in", and 4 is "it's shipped to > 50% of the web, and it's in"
T 1568060707 18<devsnek18>	codster: you forgot to call the function
T 1568060714 18<jaawerth18>	it's worth looking at the actual criteria, since each proposal has a set of benchmarks to reach before it can progress https://tc39.es/process-document/
T 1568060738 18<evulish18>	i'd be interested in seeing a breakdown of how many proposals don't make it past x stage
T 1568060771 18<devsnek18>	i'm not looking forward to writing tests for my proposal
T 1568060774 18<devsnek18>	i'm terrible at tests
T 1568060778 18<jaawerth18>	sometimes proposals take a long time to die
T 1568060791 18<jaawerth18>	like they just sit around in stage X for a while
T 1568060806 18<devsnek18>	the champion might move jobs
T 1568060811 18<ljharb18>	and sometimes they sit around for awhile and then make it in
T 1568060812 18<bradleymeck18>	like mine! too many things to do ;p
T 1568060812 18<jaawerth18>	like I don't even know what's going on with decorators rn
T 1568060813 18<devsnek18>	or get busy with something else at their job
T 1568060821 18<ljharb18>	jaawerth: that's a bit of a strange situation
T 1568060826 18<bradleymeck18>	jaawerth: they got *changed* a lot
T 1568060831 18<codster18>	@devsnek hmm, i want the "doSomethingNotWhatIWant().then()" to call the anon function, what syntax would I need to do to use? "() => new Promise(...)"?
T 1568060838 18<devsnek18>	decorators are strange because the proposal made it to stage 2 and then they made it really bad
T 1568060841 18<ljharb18>	jaawerth: mainly that all the stage 2 constraints were met, but then browsers were convinced it would be super slow to implement them
T 1568060858 18<devsnek18>	it added a lot of machinery
T 1568060860 18<laravel718>	is this worth of time? https://www.youtube.com/user/99baddawg/playlists
T 1568060860 18<ljharb18>	jaawerth: so the brand new form of it is a kind of moonshot to invent an entirely new proposal that solves the problems, meets the constraints, and isn't slow
T 1568060876 18<ljharb18>	jaawerth: the brand new form being "static decorators" as opposed to "stage 2 dynamic decorators" as opposed to "stage 1 decorators"
T 1568060886 18<jaawerth18>	ahh makes sense. kinda
T 1568060906 18<devsnek18>	i hope they don't get past in their current form
T 1568060912 18<devsnek18>	even worse than private fields
T 1568060934 18<devsnek18>	so much ugly stuff happening to js lately :(
T 1568060973 18<bogdaniel18>	GreenJello, prometh thanks for the advices helped me a lot to improve it. :-)
T 1568060979 18<prometh18>	+1
T 1568060990 18<bradleymeck18>	classes are still rocking the boat for sure
T 1568061006 18<devsnek18>	so many people are trying to make them like classical classes
T 1568061007 18<prometh18>	you don't need classes most of the time
T 1568061011 18<devsnek18>	but they aren't
T 1568061016 18<devsnek18>	and it just makes the language suck
T 1568061030 18<devsnek18>	we could've had a generalized private symbol type
T 1568061037 18<devsnek18>	but instead we have some ugly thing on classes
T 1568061042 18<bradleymeck18>	i enjoy classes for a lot of uses
T 1568061043 18<prometh18>	devsnek: no, we couldn't have `private`
T 1568061053 18<devsnek18>	prometh: i'm talking about private symbols
T 1568061057 18<devsnek18>	symbols that can't be enumerated
T 1568061060 18<bradleymeck18>	prometh: not the keyword, the semantics
T 1568061066 18<laravel718>	its funny how on github most stars have outdated projects because you need time to collect stars
T 1568061067 18<prometh18>	bradleymeck: we have private semantics
T 1568061071 18<devsnek18>	i don't have anything against classes
T 1568061078 18<devsnek18>	i have many things against class fields
T 1568061083 18<prometh18>	use classes when you need them... that's it
T 1568061086 18<prometh18>	use the right tool for the job
T 1568061089 18<devsnek18>	no one disagrees with you
T 1568061104 18<bradleymeck18>	prometh: https://docs.google.com/presentation/d/1HWM_pREmpz7QN9VrNeFt5T-x6CfKBL06pXhiQcxgfgU/edit is what we are talking about
T 1568061110 18<Dirak18>	what kind of metrics do browser implements point to when it comes to performance? Do they create fixtures and measure time to run a process?
T 1568061115 18<prometh18>	class fields are great for hiding code from consumers
T 1568061120 18<devsnek18>	i'm so mad this got turned down
T 1568061125 18<ljharb18>	prometh: private fields, you mean
T 1568061128 18<bradleymeck18>	prometh: would go up the proto chain and not do brand checks
T 1568061128 18<devsnek18>	v8's been using private symbols for years
T 1568061130 18<prometh18>	ljharb: yeah
T 1568061132 18<devsnek18>	because they work really well
T 1568061135 18<deltab18>	codster: (async ...)()
T 1568061146 18<ljharb18>	the proto chain part was a big part of the problem
T 1568061170 18<ljharb18>	devsnek: private fields are awesome.
T 1568061181 18<jaawerth18>	I haven't checked on the first-class protocols proposal in a while because I'm scared
T 1568061183 18<jaawerth18>	I really want them
T 1568061186 18<prometh18>	bradleymeck: yes, i've used those... they're nice
T 1568061188 18<devsnek18>	ljharb: not in their current iteration
T 1568061188 18<codster18>	@deltab ahh thank you, i'll try it
T 1568061190 18<bradleymeck18>	everything is fine / nothing is perfect
T 1568061190 18<ljharb18>	there's no reason they couldn't be backed by private symbols if that ever happened
T 1568061194 18<ljharb18>	devsnek: yes, as is they're ideal
T 1568061206 18<devsnek18>	this slide in particular https://docs.google.com/presentation/d/1HWM_pREmpz7QN9VrNeFt5T-x6CfKBL06pXhiQcxgfgU/edit#slide=id.g487eecbd48_0_159
T 1568061208 18<ljharb18>	jaawerth: no progress, so nothing new
T 1568061212 18<jaawerth18>	ah ok
T 1568061224 18<prometh18>	ljharb: why is there no progress on getting URL and Decimal into spec?
T 1568061231 18<devsnek18>	ljharb: we could've gotten something more generalized
T 1568061243 18<ljharb18>	devsnek: "proving the shape" isn't interesting, thats protocols
T 1568061248 18<devsnek18>	its probably the single most unjavascript thing added
T 1568061249 18<jaawerth18>	Decimal is hard
T 1568061252 18<devsnek18>	lolwhat
T 1568061258 18<devsnek18>	the entire branding argument is proving something is x
T 1568061262 18<devsnek18>	which i think is stupid
T 1568061266 18<ljharb18>	devsnek: *is*. not "has the shape of"
T 1568061272 18<devsnek18>	i agree with that
T 1568061278 18<devsnek18>	which is why i think private fields are stupid
T 1568061279 18<ljharb18>	devsnek: brand checks are part of the language, have always been, and are great.
T 1568061289 18<jaawerth18>	also Decimal is one of those things engines might not want to build in, I would imagine
T 1568061293 18<sgt_chuckles18>	I have a page that loads via click from an webgl page where the link is embedded within the xml file. But when the link opens in the browser, the ampersand is encoded as '&amp;'. How do I fix this in js?
T 1568061295 18<devsnek18>	`O.[[X]]` doesn't do a brand check
T 1568061295 18<ljharb18>	private symbols would be the same
T 1568061307 18<devsnek18>	the spec has always manually checked for O to have [[X]]
T 1568061307 18<prometh18>	jaawerth: why wouldn't we want it built in? using strings is dumb
T 1568061317 18<ljharb18>	devsnek: sure. but if it's doing the lookup without the check, it's a spec bug
T 1568061322 18<devsnek18>	not a runtime error
T 1568061324 18<ljharb18>	devsnek: iow, the brand check is required, it's just not implicit
T 1568061327 18<devsnek18>	in theory it should crash the engine
T 1568061329 18<bradleymeck18>	prometh: no real reason to add URL (which does change over time [very slowly]). Per Decimal, just bandwidth of champions and BigInt still settling
T 1568061331 18<ljharb18>	devsnek: sure
T 1568061333 18<devsnek18>	there is no js behaviour to describe it
T 1568061335 18<deltab18>	codster: https://repl.it/repls/LinearMammothMathematics
T 1568061335 18<jaawerth18>	prometh: they might not want to implement it. it takes a lot of optimization to have performant precision decimals rather than floating point math
T 1568061340 18<devsnek18>	so trying to extend it to js is stupid
T 1568061344 18<ljharb18>	devsnek: right but the concept of checking a brand is inherent in the language
T 1568061357 18<ljharb18>	devsnek: all the builtins have brand checks.
T 1568061357 18<devsnek18>	the spec does `if O doesn't have x, throw a typeerror`
T 1568061363 18<devsnek18>	so userland should also do that
T 1568061365 18<jaawerth18>	(granted there are already implementations for all the engine host platforms for decimals)
T 1568061365 18<ljharb18>	>> String.prototype.toString.call(3) @ devsnek
T 1568061365 18<ecmabot18>	devsnek: TypeError: String.prototype.toString called on incompatible number
T 1568061372 18<prometh18>	bradleymeck: the reason to add it would be fewer implementations.. nodejs has its own, for example
T 1568061374 18<ljharb18>	devsnek: ah, i see what you're saying
T 1568061383 18<ljharb18>	devsnek: good suggestion, i'll fix the spec :-p
T 1568061387 18<devsnek18>	ljharb: that's why the "spec has brand checks" argument annoys me
T 1568061392 18<ljharb18>	the *language* has them
T 1568061398 18<ljharb18>	what the spec has is irrelevant, sorry if i misspoke
T 1568061399 18<jaawerth18>	prometh: but unlike octal or binary or hex, it's a much bigger change because you have to back it with something that doesn't store it in base 2
T 1568061400 18<bradleymeck18>	prometh: JS spec doesn't mean fewer impls? I'm not sure I follow
T 1568061407 18<devsnek18>	we can't even do "X has private field" in the language
T 1568061411 18<devsnek18>	it's such a horrible design
T 1568061416 18<bradleymeck18>	Also Node's URL parser has a few edge case diffs from Chromium for example
T 1568061417 18<jaawerth18>	since for all those other ones, it's still stored as a float under the hood
T 1568061428 18<devsnek18>	if i was a delegate i would've 100% blocked it
T 1568061430 18<Dirak18>	what's a "brand" in this context?
T 1568061431 18<prometh18>	bradleymeck: if js spec had URL, v8 would have it; meaning it'd be shared for chromium/etc and node.js
T 1568061452 18<ljharb18>	devsnek: i totally agree it's missing that
T 1568061461 18<bradleymeck18>	prometh: I doubt V8 could pull in Chromium's since Chromium's uses Blink to a large degree
T 1568061462 18<prometh18>	bradleymeck: ndoe.js has moved forward faster
T 1568061466 18<devsnek18>	Dirak: some made up concept about instances and constructors
T 1568061467 18<ljharb18>	devsnek: i'm going to make a proposal to add it, fwiw.
T 1568061473 18<devsnek18>	ljharb: cool
T 1568061482 18<devsnek18>	but that doesn't fix private fields yet
T 1568061482 18<bradleymeck18>	in fact parsing URLs is a big bottleneck I've been seeing lately
T 1568061485 18<devsnek18>	since they aren't values
T 1568061493 18<devsnek18>	we can't use them on random objects as we please
T 1568061510 18<devsnek18>	why is my code being held to someone else's api design
T 1568061519 18<ljharb18>	devsnek: it's not
T 1568061521 18<ljharb18>	it's just this one feature
T 1568061530 18<ljharb18>	you can't use `await` in normal functions either
T 1568061537 18<devsnek18>	no this is like
T 1568061542 18<devsnek18>	i have to try/catch obj.#x
T 1568061546 18<devsnek18>	if i don't want it to throw
T 1568061551 18<devsnek18>	it's the reverse of what it should be
T 1568061557 18<ljharb18>	devsnek: yes, i dislike that, but that's an easier fix than the reverse.
T 1568061563 18<ljharb18>	because the brand check is a safety feature.
T 1568061563 18<devsnek18>	not really...
T 1568061569 18<prometh18>	ljharb: what will it look like?: `obj has '#key'` ?
T 1568061571 18<devsnek18>	maybe for you
T 1568061584 18<devsnek18>	it might break my application's safety
T 1568061590 18*	bradleymeck mumbles something about CORS
T 1568061605 18<devsnek18>	ljharb: plus its not enforced as the first operation of a method call
T 1568061608 18<devsnek18>	so your safety is very unsafe
T 1568061611 18<ljharb18>	prometh: probably just use `in`.
T 1568061617 18<devsnek18>	better do `this.#x;` in the first line
T 1568061626 18<ljharb18>	devsnek: that’s not a requirement of every method tho
T 1568061627 18<prometh18>	ljharb: right, `in`, but '#key' ?
T 1568061635 18<ljharb18>	throwing the first time you find a problem is common.
T 1568061639 18<devsnek18>	ljharb: neither is throwing if something is missing a field lmao
T 1568061643 18<ljharb18>	prometh: `#x in obj`
T 1568061649 18<deltab18>	b> const o = {#x: 1}; '#x' in o
T 1568061649 18<devsnek18>	why would you draw arbitrary lines in the sand
T 1568061649 18<jellobot18>	An async internal error occured: unknown: Unexpected character '#' (1:12)  > 1 |  const o = {#x: 1}; '#x' in o     |             ^
T 1568061654 18<devsnek18>	it just makes life harder for other people
T 1568061666 18<ljharb18>	devsnek: because fields are like internal slots, that’s how they should behave
T 1568061682 18<deltab18>	oh right
T 1568061683 18<ljharb18>	i agree that the lack of a non-throwing check method sucks
T 1568061689 18<devsnek18>	ljharb: except they aren't like slots
T 1568061692 18<ljharb18>	but that’s not what I’d call a blocker
T 1568061694 18<devsnek18>	slots can be used outside of class declarations
T 1568061696 18<ljharb18>	sure they’re like slots
T 1568061701 18<ljharb18>	slots can’t be used in the language
T 1568061702 18<devsnek18>	slots don't have "scope"
T 1568061707 18<jaawerth18>	seems like it should be possible to make it so you can create them using an object literal and access them via methods the same way
T 1568061713 18<ljharb18>	and the only way you can access slots in js itself is via super
T 1568061723 18<ljharb18>	*install
T 1568061731 18<ljharb18>	jaawerth: that’s a followon someone will make
T 1568061733 18<prometh18>	slots? we'r enot talking about custom elements, are we?
T 1568061734 18<devsnek18>	ljharb: i can declare a helper abstract op in the spec that uses a slot
T 1568061741 18<devsnek18>	because slots don't have declarations
T 1568061748 18<devsnek18>	they're just names
T 1568061756 18<devsnek18>	literally smbols
T 1568061757 18<jaawerth18>	ljharb: why not just make it part of the same proposal? seems like finalizing the proposal and then adding that as another one would create more friction
T 1568061758 18<devsnek18>	symbols*
T 1568061773 18<prussian18>	clearly the answer is to just say no to privates
T 1568061784 18<prometh18>	prussian: eww
T 1568061790 18<devsnek18>	in node you can use https://www.npmjs.com/package/@snek/private
T 1568061813 18<jaawerth18>	is that just a wrapper for the weakmap trick?
T 1568061816 18<devsnek18>	no
T 1568061823 18<jaawerth18>	interesting *looks*
T 1568061825 18<devsnek18>	it's actual private symbols
T 1568061835 18<devsnek18>	"in node" is the key phrase there
T 1568061843 18<jaawerth18>	oh, interesting. using native addons?
T 1568061846 18<devsnek18>	yeah
T 1568061850 18<devsnek18>	v8 has had private symbols for years
T 1568061854 18<devsnek18>	because they're actually useful
T 1568061860 18<devsnek18>	this just exposes them
T 1568061865 18<jaawerth18>	yeah makes sense
T 1568061877 18<prussian18>	this might as well be the weakmap trick though.
T 1568061899 18<devsnek18>	prussian: lets you use `[]`
T 1568061902 18<devsnek18>	and doesn't add gc pressure
T 1568061917 18<devsnek18>	because v8 also implemented weakmaps backward
T 1568061922 18<prometh18>	i had initially thought that private fields would be property names (from Object.setProperty)
T 1568061930 18<prometh18>	it seemed like a logical extension of existing js
T 1568061932 18<ljharb18>	jaawerth: because the more that’s added the more likely it is to get nothing at all
T 1568061938 18<prussian18>	I mean at this point, if I had privates, I'd just throw around closures at everything
T 1568061943 18<prussian18>	but cool
T 1568061944 18<ljharb18>	prometh: what is “setProperty”
T 1568061952 18<prussian18>	devsnek: sad
T 1568061957 18<devsnek18>	and because private fields exist
T 1568061961 18<prometh18>	ljharb: defineProperty
T 1568061963 18<devsnek18>	we'll never get private symbols
T 1568061970 18<ljharb18>	prometh: that’s public tho
T 1568061972 18<devsnek18>	i hate this more than i hate ==
T 1568061975 18<ljharb18>	devsnek: that’s not true
T 1568061989 18<ljharb18>	devsnek: private symbols could be added as the backing for private fields, easily.
T 1568061995 18<prometh18>	ljharb: yeah.. the only "private" there is non-enumerable, which is what i thought "#" would be
T 1568062003 18<prussian18>	private as in, they can't be enumerated? at all?
T 1568062003 18<devsnek18>	ok in theory they could
T 1568062006 18<devsnek18>	prussian: yes
T 1568062014 18<prussian18>	damn
T 1568062019 18<devsnek18>	ljharb: in v8 they're already implemented that way
T 1568062034 18<devsnek18>	proposal to add them in that context would be interesting
T 1568062039 18<prometh18>	full private seemed a bit excessive
T 1568062046 18<prussian18>	I mean, are we so fearful that we need such a nuclear hammer to prevent leaking private fields? lol
T 1568062050 18<ljharb18>	prometh: no, it’s absolutely critical
T 1568062052 18<ljharb18>	prussian: yes
T 1568062053 18<prometh18>	ljharb: why?
T 1568062058 18<devsnek18>	private state is good
T 1568062061 18<ljharb18>	prussian: it’s called “any amount of experience”
T 1568062073 18<ljharb18>	prometh: because people break things all the time lacking it
T 1568062079 18<ljharb18>	npm broke node itself once because of it
T 1568062084 18<prometh18>	if they don't know it's there, they are far less likely to use it and break something
T 1568062092 18<prussian18>	and they'll continue to do so either with patch and eval() or some other shit
T 1568062093 18<jaawerth18>	devsnek: what do you mean by the weakmaps being backwards? I haven't looked at the v8 implementation
T 1568062108 18<prussian18>	it's just more ways to try and make introspection harder for no good reason
T 1568062118 18<devsnek18>	jaawerth: implementations of weakmap can either be `object[weakmap] = value` or `weakmap[object] = value`
T 1568062158 18<jaawerth18>	ohh damn
T 1568062161 18<ljharb18>	prometh: not less likely, zero likely. And non enumerable isn’t hidden
T 1568062161 18<praet18>	when you mention "brand" are you skeaping about a specific org's implementation
T 1568062162 18<jaawerth18>	that's unfortunate
T 1568062163 18<prussian18>	this sounds more like an argument for realms than anything else if we're concerned about "breaking"
T 1568062168 18<devsnek18>	jaawerth: the second one requires a bunch of weak references
T 1568062168 18<praet18>	*speaking
T 1568062173 18<devsnek18>	which increase the pressure of the garbage collector
T 1568062179 18<devsnek18>	so its generally better to do the first one
T 1568062182 18<ljharb18>	prometh: symbols are as public as non enumerables
T 1568062188 18<ljharb18>	praet: no, it’s a PLT term
T 1568062200 18<devsnek18>	Object.getOwnPropertySymbols doesn't care about enumerability
T 1568062206 18<ljharb18>	prussian: realms doesn’t save you. Closures do but they’re un ergonomic, often.
T 1568062220 18<ljharb18>	neither does Object.getOwnPropertyNames
T 1568062243 18<jaawerth18>	I am curious about the limitations there. Like, in lua, weak tables are iterable and you can define them such that the key OR value can be weak
T 1568062256 18<praet18>	ljharb: what is PLT?
T 1568062258 18<jaawerth18>	granted that's probably a lot easier in such a simple language
T 1568062269 18<ljharb18>	praet: programming language theory. Google these terms, it’s faster.
T 1568062271 18<devsnek18>	jaawerth: technically weakmaps and such could be enumerable
T 1568062282 18<devsnek18>	in fact in node we use internal weak collection enumeration apis to provide `console.log()`
T 1568062286 18<ljharb18>	that would lose a security property tho
T 1568062294 18<devsnek18>	but yeah
T 1568062299 18<jaawerth18>	true
T 1568062300 18<ljharb18>	also gc
T 1568062306 18<jaawerth18>	it doesn't prevent gc
T 1568062310 18<praet18>	ljharb: got it, thanks. fwiw my google fu turned up nothing
T 1568062319 18<jaawerth18>	or.. it doesn't HAVE to prevent gc
T 1568062322 18<devsnek18>	the primary for no enumeration  though
T 1568062334 18<devsnek18>	is allowing implementations to do the super efficient `object[weakmap] = value`
T 1568062355 18<jaawerth18>	right, *that* makes more sense
T 1568062355 18<devsnek18>	primary reason*
T 1568062369 18<devsnek18>	that's also why symbols aren't valid weakmap keys
T 1568062370 18<jaawerth18>	since that way you can just have the gc of the object itself cascade to the weakmap's contents
T 1568062378 18<devsnek18>	even though they're unforgable
T 1568062382 18<jaawerth18>	which explains the weakrefs you were talking about
T 1568062394 18<ljharb18>	devsnek: except for global symbols
T 1568062402 18<devsnek18>	ljharb: i knew you were gonna say tha tlmao
T 1568062550 18<ljharb18>	:-p
T 1568062574 18<prussian18>	I remain unconvinced, but whatever. more #x's and #foo's and #bar's I guess
T 1568062582 18<prussian18>	I don't think I'll ever use them though
T 1568062588 18<ljharb18>	prussian: of what
T 1568062595 18<ljharb18>	prussian: i assume you recognize the value of closures
T 1568062621 18<prussian18>	what I used closures for, I generally get from es6 classes now
T 1568062622 18<devsnek18>	ljharb: you know what feels the most stupid though
T 1568062633 18<ljharb18>	prussian: there’s no private state there tho
T 1568062652 18<ljharb18>	prussian: so private fields is closures for class instances, ergonomically and performantly.
T 1568062658 18<prussian18>	but yes. I value having magical scopes with cute little variables doing their cute thing.
T 1568062658 18<ljharb18>	devsnek: ?
T 1568062662 18<devsnek18>	ljharb: https://github.com/devsnek/node/blob/cbcdd96c9a393b15c577a8bc75c6e97d44b51c70/lib/internal/vm/source_text_module.js#L190-L194
T 1568062671 18<devsnek18>	this is peak anger for me
T 1568062677 18<prussian18>	and all the beautiful dynamic scoping rules of js
T 1568062687 18<ljharb18>	devsnek: when you can use in, you’ll be fine :-p
T 1568062703 18<ljharb18>	prussian: closures aren’t dynamic scoping, they’re lexical scoping. So is private fields.
T 1568062714 18<devsnek18>	private symbols would be good
T 1568063036 18<devsnek18>	ljharb: https://gc.gy/35768035.png
T 1568063080 18<ljharb18>	devsnek so how can i make a proxy that *blocks* that tunneling?
T 1568063086 18<devsnek18>	🤷🏻
T 1568063095 18<devsnek18>	i suppose proxies could also throw
T 1568063099 18<devsnek18>	i think they throw in v8
T 1568063122 18<hello_kitty18>	when using the performance profiler in chrome, anyone know why the lengths of the function calls are visualized along the timeline as if the functions were all called *right* before a frame ended? Is that just a visual style or does chrome somehow know that my logic is going to take ~1.2 ms and it should run it right before drawing
T 1568063123 18<devsnek18>	i just did https://gc.gy/35768117.png
T 1568063162 18<devsnek18>	hello_kitty: how is your logic scheduled
T 1568063170 18<hello_kitty18>	rAF
T 1568063191 18<devsnek18>	chrome runs those right before the next frame is supposed to be drawn
T 1568063209 18<ljharb18>	devsnek: forcing tunnel, or no tunnel, always, is the problem
T 1568063222 18<ljharb18>	devsnek: it has to be configurable at proxy creation time
T 1568063251 18<ljharb18>	devsnek: ideally also letting me provide private symbols to only allow - or, to only block
T 1568063255 18<devsnek18>	ljharb: what do private fields currently do
T 1568063261 18<devsnek18>	throw for proxies?
T 1568063262 18<hello_kitty18>	how does it know how to run it before the next frame without accidentally running into logic that makes it late?
T 1568063266 18<ljharb18>	Or i suppose just to intercept
T 1568063274 18<ljharb18>	devsnek: yes, they throw, like slots
T 1568063278 18<devsnek18>	hello_kitty: it runs the next frame right after your function ends
T 1568063292 18<devsnek18>	hello_kitty: if your function ran longer, the next frame would render later
T 1568063301 18<devsnek18>	ljharb: so they would have to throw if proposed
T 1568063334 18<devsnek18>	unless we say that `obj.#x` itself is the throwing logic
T 1568063337 18<ljharb18>	devsnek: by default sure
T 1568063343 18<hello_kitty18>	so if i have a 16 ms tick rate, and my logic and rendering together take 1 ms... does it render it and then wait 15 ms...?
T 1568063351 18<praet18>	when dispatching an event is it more useful to have it at the end or the start of the function
T 1568063361 18<hello_kitty18>	because on the timeline it looks like it magically waited 15  ms and then ran my 1 ms of logic just in time
T 1568063367 18<praet18>	like "onStartProcessing"
T 1568063371 18<hello_kitty18>	but maybe that's just... aesthetic..
T 1568063377 18<devsnek18>	hmm
T 1568063381 18<devsnek18>	that could be the aesthetic
T 1568063387 18<devsnek18>	can you show a picture
T 1568063417 18<hello_kitty18>	what's a good site for sharing a pic?
T 1568063422 18<devsnek18>	ljharb: the question is if the syntax `a.#b` throws, or if the proxies throw
T 1568063428 18<devsnek18>	hello_kitty: imgur
T 1568063459 18<laravel718>	enough material for 5 phd's, this mentality is gone wrong https://github.com/jondot/awesome-react-native
T 1568063512 18<ljharb18>	devsnek: the syntax can’t throw, it’s a runtime check
T 1568063521 18<devsnek18>	ljharb: i mean
T 1568063524 18<Alexendoo18>	What's wrong with collating material about a subject laravel7?
T 1568063527 18<devsnek18>	the runtime semantics of that syntax
T 1568063528 18<ljharb18>	devsnek: so part of the runtime throw behavior could be “check the proxy”
T 1568063552 18<hello_kitty18>	https://imgur.com/a/pxJM83S so the dotted line is the frames, and the grey/yellow stuff are my functions, they're just so small that it isn't writing text. They are 'right justified' meaning they hug the right and I'm wondering if that is a reflection of the actual time at which they were executed, or if the whole frame is just one unit and they
T 1568063552 18<hello_kitty18>	actually ran at the beginning (which would make sense)
T 1568063576 18<laravel718>	its to much for a human, they should curate it, it isnt such a broad topic
T 1568063624 18<devsnek18>	ljharb: if we added a `Proxy.isProxy` to the language, we could let the receiver decide
T 1568063646 18<devsnek18>	but that has other problems
T 1568063680 18<Alexendoo18>	laravel7: It's not like you're required to read the entire page, each of the subcategories look fairly manageable
T 1568063697 18<devsnek18>	hello_kitty: i think that line is a frame draw
T 1568063705 18<ljharb18>	devsnek: many other problems
T 1568063717 18<laravel718>	its just to much https://github.com/hsavit1/Awesome-React-Native-Education
T 1568063719 18<devsnek18>	hello_kitty: i think the start of that grey line is when the browser starts wanting to draw a frame
T 1568063741 18<laravel718>	you cant even scroll it, not read it
T 1568063742 18<devsnek18>	ljharb: but i don't think proxies should decide the private policy for what they wrap
T 1568063763 18<devsnek18>	hello_kitty: start of grey timeline bar i mean
T 1568063836 18<sillyslux_18>	this looks nice https://habd.as/awesome-react-components/#react-native
T 1568063846 18<hello_kitty18>	i'm just mystified by how it would know when to do that, while still having enough time to finish the logic before render time --  like i get that if the logic takes 50 ms then yea the frames end up late, but when the logic takes 2 ms it seems to do it right before rendering instead of at the start of a frame
T 1568063876 18<hello_kitty18>	or this visualizer is just being fancy for some other reasons
T 1568063902 18<laravel718>	not to mention how much of this is outdated, looks like react-native had its peak at 2017
T 1568063954 18<hello_kitty18>	here's a frame where it claims to have done something at a point in time that isn't right before the render tick: https://imgur.com/a/xcx809k
T 1568063963 18<hello_kitty18>	presumably some settimeout ended or something
T 1568063989 18<Alexendoo18>	6ms is one short frame
T 1568064017 18<Alexendoo18>	Probably a pretty nice monitor you've got there
T 1568064071 18<ljharb18>	devsnek: the person doing the wrapping should be able to tho
T 1568064088 18<devsnek18>	ljharb: the person doing the wrapping doesn't know that private symbols exist
T 1568064092 18<devsnek18>	they're encapsulated in theory
T 1568064099 18<devsnek18>	so they can't make decisions about them
T 1568064106 18<ljharb18>	devsnek: oh sure, i mean if they have the symbols
T 1568064119 18<devsnek18>	ljharb: proxy doesn't know if you have the symbols though :P
T 1568064122 18<hello_kitty18>	144 hz :D.   Looking at these profiles more I can't help but feel like this timeline is real somehow
T 1568064125 18<ljharb18>	devsnek: iow i should be able to say “this symbol here, let it through” or “this symbol here, throw”
T 1568064134 18<devsnek18>	ljharb: now that's a good idea
T 1568064134 18<ljharb18>	devsnek: yes but i can give the symbols to new Proxy
T 1568064141 18<devsnek18>	third argument to new Proxy
T 1568064149 18<devsnek18>	symbols: [x, y, z]
T 1568064160 18<devsnek18>	we solved it
T 1568064180 18<ljharb18>	devsnek: so i could do `new Proxy(target, handlers, { allow: [x,y,z] })` or also `{ disallow: [x,y,z] }` for the inverse behavior.	 1st
T 1568064182 18<hello_kitty18>	and that it really does know to schedule logic at different points in the frame... though i'm not sure how it would know how long that logic would take (unless it spent the first few frames of execution building an assumption about the average length of executing about whatever is being passed to rAF)
T 1568064185 18<jaawerth18>	either that or you'll need a trap for private lookups
T 1568064191 18<devsnek18>	ljharb: ya
T 1568064193 18<hello_kitty18>	english is hard.
T 1568064196 18<ljharb18>	devsnek: and disallow:[] would invert the default
T 1568064199 18<devsnek18>	jaawerth: can't do that
T 1568064213 18<ljharb18>	jaawerth: devsnek well, alternatively, you could say “trap these private symbols” and provide a trap for it.
T 1568064220 18<ljharb18>	then you decide yourself.
T 1568064227 18<ljharb18>	that’s probably clearest
T 1568064227 18<devsnek18>	well
T 1568064234 18<jaawerth18>	yeah that's what I mean
T 1568064237 18<ljharb18>	but then there’s no way to invert
T 1568064238 18<devsnek18>	there are lots of things you can do with private symbols
T 1568064250 18<devsnek18>	i don't want to have to provide `has` and `hasPrivate`
T 1568064258 18<jaawerth18>	that would be annoying, yes
T 1568064267 18<devsnek18>	private symbols are just values
T 1568064270 18<devsnek18>	the existing traps can be used
T 1568064292 18<devsnek18>	i feel like we have a proposal here
T 1568064297 18<jaawerth18>	yeah my bad, I wasn't sure initially if you were talking about private fields or symbols for this
T 1568064321 18<jaawerth18>	but I do think private symbols would be a nicer way to have private fields
T 1568064332 18<devsnek18>	right?
T 1568064340 18<jaawerth18>	in addition to the gc pressure stuff, it would also make it a lot easier to have them on arbitrary objects
T 1568064346 18<devsnek18>	right?
T 1568064347 18<jaawerth18>	it's just a symbol you can't reflect
T 1568064352 18<devsnek18>	right?
T 1568064359 18<jaawerth18>	haha yeah I'm just agreeing with you
T 1568064375 18<devsnek18>	i'm gonna write all this up
T 1568064806 18<wrkrcoop18>	anyone know a good currency formatter library?
T 1568065203 18<prometh18>	wrkrcoop: Intl.NumberFormat
T 1568065924 18<luist18>	how do i check if the object exists? if (window.SomeObject.user != "undefined") {
T 1568065925 18<luist18>	            this.userId = window.SomeObject.user.id;
T 1568066351 18<prometh18>	luist: !== undefined
T 1568066361 18<nateriver18>	 how can i do this with css?  https://images.complex.com/complex/images/c_crop,h_862,w_1533,x_200,y_136/c_scale,q_auto,w_1920/fl_lossy,pg_1/pbakudcgxlfmmduw46iw/sole-supremacy-homepage
T 1568066370 18<nateriver18>	so that the image source is perfectly over the desktop mockup thing
T 1568066406 18<prometh18>	nateriver: absolutely positioned div?
T 1568066407 18<devsnek18>	ljharb: https://feature-private-symbols--devsnek-ecma262.netlify.com/
T 1568066828 18<ljharb18>	specifying it was never the problem
T 1568066930 18<devsnek18>	ljharb: i know i was just bored
T 1568066954 18<devsnek18>	but on the bright side this can theoretically be championed to stage 4 now
T 1568067102 18<ljharb18>	rofl, how so
T 1568067114 18<ljharb18>	v8 isn’t enough impls
T 1568067126 18<devsnek18>	ljharb: i mean using that spec text
T 1568067135 18<devsnek18>	would still need an additional impl
T 1568067138 18<devsnek18>	and some changes to v8
T 1568067139 18<ljharb18>	 oh sure
T 1568067143 18<ljharb18>	also consensus
T 1568067149 18<devsnek18>	pff consensus
T 1568067160 18<devsnek18>	just sneak it in during lunch
T 1568067170 18<jaawerth18>	itym snek it in
T 1568067868 18<celphi18>	i just got a pay raise- :D my hard work is paying off
T 1568067942 18<GreenJello18>	nice :-)
T 1568068056 18<prometh18>	celphi: congrats
T 1568068069 18<prometh18>	celphi: i'm jealous
T 1568068083 18<celphi18>	Thanks :)
T 1568068441 18<prometh18>	celphi: do they need a frontend dev? :)
T 1568068464 18<celphi18>	Are you in the USA?\
T 1568068467 18<prometh18>	canada
T 1568068485 18<prometh18>	my career has been 99% remote
T 1568068489 18<hmw_metalab18>	Assigning HTML to DIV.innerHTML creates an additional, empty <p> element: https://paste.asmcbain.net/a791d0f2 - Any explanations and perhaps nice solutions?
T 1568068498 18<celphi18>	Oh right i remember. Yeah i think they only hiring locally.
T 1568068514 18<prometh18>	celphi: maybe htey'll make an exception for me cuz i'm awesome?
T 1568068521 18<celphi18>	:D
T 1568068622 18<celphi18>	has anyone here used SSE? If so,. is the npm package "sse" the one to use?
T 1568068715 18<hmw_metalab18>	^ happens in Chromium and Firefox, so it doesn't look like a bug, but I can't find anything related on the web either. This can't be intended behaviour, though. Weird.
T 1568068752 18<GreenJello18>	celphi, you probably want something that integrates with express
T 1568068775 18<GreenJello18>	or whatever you use for defining routes
T 1568068791 18<celphi18>	actually i need to add to an existing node web server
T 1568068800 18<celphi18>	and it doesnt use express
T 1568068912 18<GreenJello18>	celphi, it's not documented, but it looks like this could work there
T 1568068926 18<GreenJello18>	celphi, new SSE(server, { path: '/some/route' })
T 1568068945 18<celphi18>	can it be a different origin?
T 1568068948 18<celphi18>	GreenJello:
T 1568068974 18<devsnek18>	celphi: https://www.npmjs.com/package/@snek/sse
T 1568068992 18<devsnek18>	mine is massively simpler and faster
T 1568069038 18<celphi18>	does yours only work with http2?
T 1568069039 18<systemfault18>	Eventually, when all the older IE and pre-chromium Edges are going to be dead... SSEs are going to be usable
T 1568069041 18<celphi18>	devsnek:
T 1568069047 18<devsnek18>	celphi: it works with both
T 1568069103 18<celphi18>	whers your documentation?! :P
T 1568069126 18<devsnek18>	the readme
T 1568069147 18<devsnek18>	i mean the entire lib is 40 lines
T 1568069153 18<devsnek18>	SSE is really simple
T 1568069411 18<celphi18>	what does the client code look like devsnek
T 1568069433 18<devsnek18>	celphi: https://developer.mozilla.org/en-US/docs/Web/API/Server-sent_events/Using_server-sent_events
T 1568069442 18<celphi18>	so the same ok
T 1568069457 18<devsnek18>	sse has a specification
T 1568069518 18<celphi18>	so let me see if i understand it correctly.. the server just emits an event and with your browser you listen for events emitted by server?
T 1568069548 18<devsnek18>	mem
T 1568069551 18<devsnek18>	mhm*
T 1568070018 18<celphi18>	if my server is on a differ domain-- do i add https:// to front of url?
T 1568070021 18<celphi18>	devsnek:
T 1568070035 18<devsnek18>	its like any other url
T 1568070210 18<celphi18>	can you send me that link again for linter for vim
T 1568070231 18<celphi18>	the one where you highlighted that section-- i saved on my laptop but not work computer
T 1568070234 18<celphi18>	devsnek:
T 1568070257 18<devsnek18>	all my dotfiles are here https://github.com/devsnek/dotfiles
T 1568070333 18<celphi18>	i dont see the one you linked in it
T 1568070351 18<celphi18>	i need the lines for adding to vimrc for eslint
T 1568070359 18<celphi18>	devsnek:
T 1568070381 18<devsnek18>	https://github.com/devsnek/dotfiles/blob/c75d4719e1da2eac1a24cabfd3108a33b4f28979/dotfiles/base.vim#L115-L118
T 1568070437 18<celphi18>	ty
T 1568070726 18<luist18>	hey, how can i extend my prototype and change / add one function?
T 1568070729 18<luist18>	https://paste.ofcode.org/fAUbSMKDNMNvZ2vXFQUGTv
T 1568070839 18<nateriver18>	prometh but i absolutely position which div
T 1568070840 18<nateriver18>	and does the screenshot gotta be the same size
T 1568071266 18<devsnek18>	luist: use classes
T 1568071309 18<sinclair18>	vscode, Microsoft going from strength to strength
T 1568071315 18<luist18>	devsnek: how about this approach? https://paste.ofcode.org/32ksGbpHNEGzSb9Z62Mgkah
T 1568071393 18<devsnek18>	luist: kinda nasty, and you'd still need a Super.call in the base class
T 1568071446 18<sinclair18>	gotta wonder, is vscode an IDE yet
T 1568071473 18<luist18>	is that bad?
T 1568071497 18<sinclair18>	the original focus for vscode was to be more text editor than full blown IDE, but as time as gone by, the features and overall functionality is starting to feel pretty IDE-ish
T 1568071559 18<sinclair18>	well, perhaps vscode pushes back on the underlying language tooling to provide the 'bits' that are language specific, things like TypeScript and RLS and other language specifically tooling, but the overall experience is pretty close to that of an IDE
T 1568072074 18<cjohnson18>	I would say anything more involved than "edit text files with syntax highlighting" is an IDE
T 1568072082 18<cjohnson18>	Any programming-specific tooling at all
T 1568072093 18<cjohnson18>	The line is rather fuzzy and not all that useful
T 1568072351 18<sinclair18>	cjohnson, javascript function of the day https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/clz32
T 1568072404 18<ljharb18>	why
T 1568072410 18<cjohnson18>	I'm sure I'll be using it every day from now on
T 1568072426 18<sinclair18>	ljharb, why what?
T 1568072430 18<ljharb18>	why is that notable
T 1568072433 18<devsnek18>	why does clz stop at 32
T 1568072437 18<devsnek18>	:P
T 1568072439 18<ljharb18>	because all bitwise ops are 32
T 1568072447 18<devsnek18>	twas a joke ljharb
T 1568072451 18<sinclair18>	devsnek, The Math.clz32() function returns the number of leading zero bits in the 32-bit binary representation of a number.
T 1568072455 18<devsnek18>	i know
T 1568072457 18<ljharb18>	devsnek: must have been truncated before i got it
T 1568072466 18<devsnek18>	oof
T 1568072468 18<sinclair18>	in a '32-bit binary representation of a number'
T 1568072469 18<ljharb18>	lol
T 1568072477 18<devsnek18>	sinclair: it should just return all the leading zeros
T 1568072538 18<sinclair18>	hmm, i should write a 'javascript function of the day' but that randomly picks something out of MDN to service as a talking point
T 1568072574 18<sinclair18>	*but/bot
T 1568072603 18<phobosoph18>	hi
T 1568072639 18<sinclair18>	would be interesting to write a bot like that, that picks a function, then broadcasts (function of the day) then logs the discussions around it for additional context for developers trying to understand it
T 1568072646 18<sinclair18>	useful stuff
T 1568072699 18<phobosoph18>	hi
T 1568072706 18<phobosoph18>	https://github.com/nodejs/node/issues/21482
T 1568072716 18<phobosoph18>	so the example there works, I can indeed await the connect thing
T 1568072727 18<phobosoph18>	but - I don't have any references to call close() on it for proper shut down
T 1568072902 18<sinclair18>	phobosoph, you mean using promisify to start a web server?
T 1568072918 18<phobosoph18>	sinclair: yes!
T 1568072919 18<phobosoph18>	express
T 1568072928 18<phobosoph18>	I use it for listening to a simple HTTP API method
T 1568072929 18<sinclair18>	phobosoph, you probably can't
T 1568072932 18<phobosoph18>	:(
T 1568072945 18<sinclair18>	const server = http.createServer();
T 1568072959 18<sinclair18>	for (const {req, res} of server.incoming()) { ... }
T 1568072967 18<sinclair18>	server.dispose()
T 1568072976 18<sinclair18>	that seems a more reasonably interface to me
T 1568072980 18<sinclair18>	well...
T 1568072985 18<sinclair18>	for await(const {req, res} of server.incoming()) { ... }
T 1568073069 18<phobosoph18>	sinclair: this would be computionally ok?
T 1568073236 18<ljharb18>	phobosoph: #node.js btw
T 1568073364 18<phobosoph18>	ah ok
T 1568073388 18<sinclair18>	can anyone vouch for Campbells chicken noodle soup?
T 1568073416 18<sinclair18>	anyone from the US
T 1568073437 18<sinclair18>	im looking at the can, and somewhat apprehensive about giving it a try
T 1568073555 18*	sinclair is not from the US
T 1568073658 18<celphi18>	Hi Sinclair
T 1568073673 18<celphi18>	That soup was awesome as a kid. I havent had it in years though.
T 1568073718 18<celphi18>	But chicken and star soup (Campbells) was the one i ate almost everyday lol.
T 1568073745 18<sinclair18>	got a bit of a cold atm, missus went out looking for chicken soups (used to be the thing to have in New Zealand when you had a cold/flu), and she brought back imported Campbells chicken noodle soup
T 1568073758 18<sinclair18>	im starting at the can, not sure what to make of it
T 1568073765 18<celphi18>	soup + water are awesome for colds
T 1568073777 18<sinclair18>	Andy Warhol has some thoughts on it
T 1568073782 18<celphi18>	try it- you'll either love it or hate it
T 1568073793 18<sinclair18>	first time ive ever seen a can IRL
T 1568073798 18<celphi18>	lol
T 1568073808 18<sinclair18>	alright, here i go >_>
T 1568073809 18<celphi18>	every grocery store here has it
T 1568073832 18<celphi18>	they're good with crackers too
T 1568073851 18<celphi18>	it's salty btw
T 1568073857 18<celphi18>	so hopefuly you like salt
T 1568073954 18<celphi18>	hmm i wonder what im missing for my eslint to work in vim
T 1568073963 18<celphi18>	not registering
T 1568073984 18<celphi18>	oh nvm i remvmer that last issue
T 1568073988 18<celphi18>	version was wrong
T 1568074803 18<sinclair18>	celphi, alright, had my first US canned soup, 7.5/10
T 1568074815 18<celphi18>	lol nice
T 1568074817 18<sinclair18>	celphi, the questionable chicken bits in there were......questionable
T 1568074826 18<sinclair18>	i assume it was a chicken once
T 1568074827 18<celphi18>	lol indeed they are lol
T 1568074839 18<celphi18>	*indeed they are questionable that is
T 1568074878 18<celphi18>	I wouldnt think too much or expect too much.. the canned soup cost less than a dollar in a lot of grocery stories
T 1568074890 18<celphi18>	depending on the size you get
T 1568074918 18<celphi18>	to import it- it's probably a lot more
T 1568074948 18<celphi18>	but canned food is awesome because it takes forever to expire
T 1568074989 18<celphi18>	last 1-4yrs
T 1568074995 18<sinclair18>	celphi, this is the NZ equiv of cambpells https://www.watties.co.nz/Our-Products/Soup/Hearty/Beef-Hotpot
T 1568075006 18<sinclair18>	celphi, this stuff is amazing with some toast
T 1568075033 18<sinclair18>	can even put that stuff in a pie, bit of pastry, great stuff
T 1568075034 18<celphi18>	neat. yeah there's hundreds to choose from
T 1568075078 18<sinclair18>	celphi, ah, this is the stuff https://www.watties.co.nz/Our-Products/Soup/Hearty/Peppered-Steak
T 1568075097 18<celphi18>	you're making me hungry!
T 1568075133 18<sinclair18>	celphi, being in South Korea, i sorta miss NZ food bro, all the imported stuff is either from the states (to which i have little experience), or from Australia (a second rate New Zealand quality food)
T 1568075152 18<celphi18>	which part
T 1568075163 18<nibzAU18>	Hello all
T 1568075163 18<celphi18>	Seoul?
T 1568075167 18<sinclair18>	i can deal with Aussie imported stuff tho, its somewhat close to the NZ stuff
T 1568075168 18<celphi18>	hi nibzAU
T 1568075178 18<sinclair18>	celphi, nope, Busan
T 1568075200 18<celphi18>	Ok. Cool. I was stationed there for 1yr when i was active duty army.
T 1568075210 18<celphi18>	but further north
T 1568075218 18<sinclair18>	in Busan?
T 1568075227 18<sinclair18>	did you land at Gimhae international?
T 1568075228 18<celphi18>	Nah. Camp Casey.
T 1568075237 18<sinclair18>	yeah, not sure where that is
T 1568075259 18<celphi18>	40 miles north of Seoul
T 1568075272 18<sinclair18>	oh, far far up north near the parallel
T 1568075273 18<celphi18>	20mins from DMZ
T 1568075278 18<sinclair18>	mmm
T 1568075292 18<celphi18>	yeah we were stationed there to protect SK from NK
T 1568075302 18<celphi18>	the base is still there
T 1568075317 18<brandonkal18>	simple question but I just want to make sure. Is this valid in a constructor: `cache[this.id] = this`
T 1568075347 18<sinclair18>	brandonkal, that is not a valid constructor
T 1568075365 18<nibzAU18>	return (age > 18) || confirm("Did your parents allow?");  if age is 15, false isnt returned... Does or return a true first... if available???
T 1568075370 18<celphi18>	he asked if is valid "in" though right?
T 1568075399 18<celphi18>	nibzau if a || b (if a is true) then use a,. otherwise use b
T 1568075419 18<nibzAU18>	Right so whatever is true is returned
T 1568075428 18<celphi18>	no neccessairly
T 1568075436 18<brandonkal18>	Yeah. I imagine it wouldn't work so well as inheritance can be involved. That is too bad.
T 1568075443 18<celphi18>	false || false returns false
T 1568075444 18<nibzAU18>	Ohhh right
T 1568075446 18<MightBeParanoid18>	confirm("text") will return a truthy value (as long as the function doesnt explicitly return a falsy value) so the conditional is always true nibzAU
T 1568075453 18<sinclair18>	brandonkal, you should never assign 'this' to anything
T 1568075473 18<sinclair18>	brandonkal, never assign 'this' to anything, ever
T 1568075484 18<sinclair18>	brandonkal, instead, do this...
T 1568075492 18<celphi18>	n>false || false
T 1568075494 18<jellobot18>	(okay) false
T 1568075500 18<celphi18>	null || false
T 1568075503 18<celphi18>	n>null || false
T 1568075504 18<sinclair18>	const cache = ...; const x = new X(); cache[x.id] = x;
T 1568075505 18<jellobot18>	(okay) false
T 1568075516 18<celphi18>	n>'' || false
T 1568075516 18<nibzAU18>	Yup got it now
T 1568075517 18<jellobot18>	(okay) false
T 1568075519 18<sinclair18>	brandonkal, never assign 'this' to something interior
T 1568075520 18<celphi18>	ok cool
T 1568075523 18<nibzAU18>	Thanks
T 1568075554 18<sinclair18>	brandonkal, always exterior and obvious, if you set 'this' to cache inside the constructor, then you've coupled your class to the cache (meaning it can never run without the cache), and that is bad
T 1568075602 18<brandonkal18>	Makes sense. I prefer to avoid classes for the most part in favor of small functions. So I am a bit raw here.
T 1568076182 18<nibzAU18>	So i know htnl and css..from what i understad i want To learn js and react.. And angular for single pages and bootstrap for multi pages and the node.js for backend and them im set to be a web dev :)
T 1568076225 18<sinclair18>	brandonkal, nothing wrong with classes
T 1568076239 18<brandonkal18>	one at a time nibzAU
T 1568076268 18<nibzAU18>	Yeah im learning js
T 1568076271 18<brandonkal18>	sinclair, never said there was anything wrong with classes. I just prefer smaller functions.
T 1568076275 18<sinclair18>	brandonkal, you should use classes, but assigning 'this' to external things inside the class is a encapsulation break
T 1568076341 18<sinclair18>	brandonkal, mmmm, i never know what to make of statements like 'i just prefer smaller functions', it leaves a lot of open questions
T 1568076494 18<brandonkal18>	Well as an example if you are familiar, I prefer Go's approach to OOP. There is no class keyword.
T 1568076558 18<sinclair18>	brandonkal, stahp, please
T 1568076614 18<sinclair18>	brandonkal, i prefer Rust traits to Haskell type classes because Rust uses a 'trait' keyword
T 1568076617 18<sinclair18>	<_<
T 1568077525 18<brandonkal18>	It's not about a different keyword. It's about being able to attach a method to an object when you need it. But you said you had questions sinclair. ttyl
T 1568077819 18<sms18>	Has anybody used antdesign before?
T 1568077835 18<sms18>	Trying to figure out why defaultChecked={true} isn't setting my Checkbox to true by default
T 1568078239 18<evulish18>	would all failed proposals for js be in the git history for that proposals page?
T 1568078360 18<GreenJello18>	evulish, proposals that gained a champion, and only as far back as that page goes
T 1568078433 18<GreenJello18>	evulish, or just look here https://github.com/tc39/proposals/blob/master/inactive-proposals.md
T 1568078684 18<evulish18>	lol @ the world's second most popular react ui
T 1568078908 18<sinclair18>	n> 16 >> 1
T 1568078909 18<jellobot18>	(okay) 8
T 1568078917 18<sinclair18>	n> 8 >> 1
T 1568078919 18<jellobot18>	(okay) 4
T 1568078924 18<sinclair18>	n> 4 >> 1
T 1568078926 18<jellobot18>	(okay) 2
T 1568078930 18<sinclair18>	n> 2 >> 1
T 1568078931 18<jellobot18>	(okay) 1
T 1568078935 18<sinclair18>	n> 1 >> 1
T 1568078936 18<jellobot18>	(okay) 0
T 1568078939 18<sinclair18>	n> 0 >> 1
T 1568078940 18<jellobot18>	(okay) 0
T 1568078946 18<sinclair18>	thank you
T 1568079005 18<incognito18>	n > eval(console.log("it works")) >> 1
T 1568079009 18<incognito18>	:)
T 1568080590 18<personx18>	how can I open a connection to an irc server from within a page?
T 1568080601 18<sinclair18>	personx, you can't
T 1568080677 18<sinclair18>	personx, is this answer satisfactory?
T 1568080688 18<personx18>	hmm. so opening a socket to any random port to a random server not possible? is websocket just better ajax?
T 1568080715 18<prometh18>	you'll need a proxy, such as a websocket, yeah
T 1568080756 18<sinclair18>	personx, browsers do not support raw TCP sockets, and IRC talks TCP
T 1568080798 18<personx18>	yeah, that part is what I'm trying to get clear on.
T 1568080818 18<personx18>	I mean I do already I know what you said above. but here's my situation
T 1568080818 18<sinclair18>	personx, there isn't anything else to know, browsers don't do raw TCP
T 1568080838 18<sinclair18>	no TCP, there-fore, no connection to IRC server
T 1568080861 18<personx18>	here's some sample code I'm running on heroku [ https://shoutpx.herokuapp.com/ ] using nodejs. how is this creating new individual connections everytime someone opens the page?
T 1568080912 18<sinclair18>	server -> web host -> browser
T 1568080932 18<niggler18>	they're increasing the goal size in ECMASports 2022 sinclair, RealWebSockets are coming
T 1568080947 18<niggler18>	tbh it would be neat to run a socket server in-browser
T 1568080956 18<sinclair18>	niggler, there is a WebTransport spec in the works
T 1568080962 18<sinclair18>	its still not raw TCP
T 1568080988 18<sinclair18>	niggler, also, being able to create raw outbound TCP connections seems dangerous
T 1568081020 18<sinclair18>	niggler, or even Raw UDP, imagine if you loaded my web page, and i UPnP port mapped your router from inside your network
T 1568081022 18<personx18>	I'm not too familiar with nodejs either so I'll need a lil help with the concepts at work here. when a browser fetches this page, the server creates a new socket connection to irc using the server's own ip?
T 1568081064 18<sinclair18>	niggler, at least with WS/HTTP, you have to access remote resources through a domain securable protocol scheme
T 1568081065 18<niggler18>	any different from webgl / canvas?
T 1568081083 18<niggler18>	canvas fingerprinting is still a thing
T 1568081115 18<sinclair18>	niggler, imagine if i could port scan your internal network by you loading a webpage.
T 1568081134 18<sinclair18>	niggler, the question is, could you reasonably apply same domain / origin policies to TCP/UDP
T 1568081141 18<niggler18>	im saying the security rubicon has been passed
T 1568081153 18<sinclair18>	tcp://whatever.com
T 1568081166 18<sinclair18>	udp://hack_my_router.com
T 1568081237 18<sinclair18>	niggler, raw tcp connections from a browser would be nice, but not without the same origin policy / security stuff mandated all in
T 1568081272 18<sinclair18>	niggler, i mean, if you want to talk cross origin today, you need to return a policy as a http header
T 1568081284 18<personx18>	before we get lost in the debate. when a person on machine A with ip X fetches this webpage, does the server somehow opens an isolated connection with the irc server where the user ip appears as X or is it the servers?
T 1568081299 18<sinclair18>	if you're talking cross origin TCP, how would you ever get that policy over?
T 1568081304 18<personx18>	*server's ip
T 1568081339 18<sinclair18>	personx, the web page opens a web socket connection to a web server, the web server opens a 'tcp' connection to the irc server.
T 1568081358 18<sinclair18>	page -> [ws] -> web server -> [tcp] -> irc server
T 1568081363 18<personx18>	that part I understand.
T 1568081381 18<personx18>	what I'd like details is about the websocket
T 1568081400 18<sinclair18>	personx, there is no details about the websocket
T 1568081450 18<sinclair18>	personx, the web socket can send/receive whatever, the web server talking to the irc server needs to talk IRC protocol (obviously), but how that data is sent to and from the page, that is a meh implementation detail
T 1568081454 18<sinclair18>	personx, you could...
T 1568081479 18<sinclair18>	1) send the IRC protocol to the browser (forcing the browser to parse IRC protocol lines) - don't do this...
T 1568081511 18<personx18>	no no, I want the server to handle that
T 1568081512 18<sinclair18>	2) send a message / object messaging protocol to the browser (with the IRC protocol line parsed and objectified on the server)
T 1568081545 18<personx18>	I suppose this is more of a nodejs question I guess but the channel is too quiet. :3
T 1568081564 18<sinclair18>	personx, right, so have the server handle that, it doesn't matter what the protocol looks like, i doubt very much there is a recommended WS IRC protocol to implement
T 1568081593 18<sinclair18>	anymore than there would be a XMPP IRC Protocol (well, actually, there probably would be a XMPP protocol for IRC)
T 1568081613 18<sinclair18>	personx, just use XMPP
T 1568081627 18<sinclair18>	personx, and no one likes node anymore, so we all just hang out in here
T 1568081663 18<personx18>	okay, so, here's my question : is it possible for the irc server to identify the user ip as the one that's fetching the webpage even when the connection is being made via websocket proxy?
T 1568081696 18<kapilp_18>	hello
T 1568081706 18<personx18>	oh? is there a better replacement for it out? one I can use to create a webbased irc client?
T 1568081721 18<kapilp_18>	i want to write todo list like website like todoist.
T 1568081732 18<kapilp_18>	which framework should I use?
T 1568081765 18<kapilp_18>	or i should not use any framework?
T 1568081806 18<sinclair18>	personx, no
T 1568081831 18<sinclair18>	personx, its not possible
T 1568081851 18<sinclair18>	personx, because the browser isn't connecting to the irc server, the web server is.
T 1568081859 18<personx18>	the unique ip on every page fetch part?
T 1568081871 18<personx18>	yes, understood.
T 1568081920 18<personx18>	okay, another question, more to do with irc specs than anything else. can one ip address connect to an irc server again and again with different nicks simultaneously and not be banned?
T 1568081959 18<roomba18>	that's not irc specs
T 1568081981 18<roomba18>	that's individual server config / network policy
T 1568082015 18<roomba18>	typically unless you're irccloud or a similar service, you can probably get away with a few but not a lot.
T 1568082025 18<personx18>	yeah I'm not too sure about those either. :P so theoretically, its possible to have multiple connections to the save irc server simultaneously?
T 1568082037 18<roomba18>	not theoretically. is.
T 1568082042 18<roomba18>	just not a lot.
T 1568082043 18<personx18>	yes, that.
T 1568082079 18<personx18>	also, all those cloud based irc clients, are they employing multiple IP addresses to solve this issue or what?
T 1568082113 18<roomba18>	they have multiple IP addresses to scale but i think they also have agreements with the irc networks.
T 1568082185 18<personx18>	oh, so basically I'm screwed in that regard. xD that means this nodejs irc client is also restricted in this manner, yup?
T 1568082221 18<roomba18>	yep.
T 1568082282 18<roomba18>	limiting the number of clients from a single IP has been around for a loooong time.
T 1568082293 18<sinclair18>	personx, wait, no
T 1568082309 18<sinclair18>	personx, you don't have the page repeatedly call fetch
T 1568082326 18*	personx is intrigued. 
T 1568082344 18<sinclair18>	why would you be, this is obvious, use a web socket
T 1568082391 18<kapilp_18>	sinclair: i want to write todo list like website like todoist.  which framework i should use?
T 1568082399 18<personx18>	use a websocket to overcome the limited connections restriction? o.O
T 1568082407 18<sinclair18>	kapilp_, react
T 1568082410 18<kapilp_18>	no
T 1568082416 18<sinclair18>	k
T 1568082421 18<personx18>	xD
T 1568082421 18<roomba18>	wat
T 1568082433 18<roomba18>	Rebooting channel...
T 1568082443 18<personx18>	sinclair, how would a websocket help in that regard?
T 1568082451 18<kapilp_18>	sinclair: please suggest vanilla framework without virtual dom
T 1568082463 18<sinclair18>	kapilp_, DOM
T 1568082484 18<sinclair18>	kapilp_, const todo = document.createElement('ul')
T 1568082507 18<sinclair18>	kapilp_, ^ its next gen
T 1568082526 18<kapilp_18>	sinclair: thanks a lot
T 1568082589 18<sinclair18>	personx, you need to read what a web socket is, a IRC connection is real time, you DONT want to be asking the server "do you have data yet? do you have data yet? do you have data yet? do you have data yet? "
T 1568082624 18<personx18>	sinclair, that part I'm already clear on. no intention to do that. where did you get that idea? o.O
T 1568082636 18<afawfweaf18>	where did you get that idea? o.O
T 1568082640 18<afawfweaf18>	where did you get that idea? o.O...
T 1568082643 18<afawfweaf18>	where did you get that idea? o.O......
T 1568082649 18<afawfweaf18>	(sorry, couldn't help it xD)
T 1568082680 18<personx18>	we were talking about limited number of connections from a single ip, did you have a workaround for that?
T 1568082735 18<sinclair18>	personx, yes, have the web socket server drop connections that exceed the allowed number of connections
T 1568082735 18<roomba18>	websockets don't magically fix how irc network operators mitigate abuse
T 1568082797 18<personx18>	sinclair, I think you've lost context. :3  roomba , yeah, ain't that a bitch. xD
T 1568082823 18<sinclair18>	personx, you can join the IRC network itself as a federated IRC node, then just expose a WS socket on it
T 1568082827 18<roomba18>	no. i think sinclair was just focusing on a different aspect of solving the problem
T 1568082828 18<sinclair18>	personx, isn't it obvious?
T 1568082864 18<roomba18>	sinclair: ummm... no lol
T 1568082866 18<sinclair18>	personx, then your server isn't going to care how many clients connect
T 1568082867 18<personx18>	sinclair, that is interesting. I had no idea about that. federated irc node, anyone can become one?
T 1568082868 18<roomba18>	well yes... but no.
T 1568082884 18<roomba18>	you can't just federate into an irc network
T 1568082888 18<sinclair18>	roomba, its what the pros do when IRC networks limit the number of users originating from a single IP
T 1568082894 18<sinclair18>	(as would be the case for a web server)
T 1568082900 18<roomba18>	sinclair: yes
T 1568082902 18<sinclair18>	roomba, so 'yes' >_>
T 1568082904 18<roomba18>	but not anyone can just do it
T 1568082913 18<sinclair18>	roomba, its not what you know, its who you know
T 1568082932 18<sinclair18>	personx, ask in #freenode
T 1568082947 18<roomba18>	right. personx can't just install ircd and bring up their own link to freenode unless freenode allows it.
T 1568082982 18<roomba18>	and i don't think will just do it if you ask rofl
T 1568082993 18<roomba18>	like ... there is likely some level of palm-greasing and whatnot
T 1568083009 18<sinclair18>	roomba, details details
T 1568083012 18<personx18>	asking won't hurt. xD
T 1568083017 18<roomba18>	sure :)
T 1568083026 18<sinclair18>	personx, there is one more option
T 1568083051 18<personx18>	sinclair, yeah? which is
T 1568083065 18<sinclair18>	personx, https://repl.it/@sinclairzx81/rust-irc-logger
T 1568083087 18<sinclair18>	personx, write a IRC client on repl.it and when users want to connect, send them a link and tell them to press 'run'
T 1568083099 18<sinclair18>	personx, that's what the pros do >_>
T 1568083101 18<roomba18>	lol that's so evil
T 1568083112 18<sinclair18>	roomba, got bored late last week
T 1568083122 18<sinclair18>	roomba, felt like writing some rust
T 1568083134 18<roomba18>	sinclair: in theory could do this across a few other sandbox playgrounds too
T 1568083161 18<sinclair18>	roomba, well, any of them that allow one to run docker containers at the click of a button
T 1568083167 18<sinclair18>	future tech
T 1568083172 18<personx18>	can this handshake be done without requiring user input?
T 1568083174 18*	sinclair <3 repl.it
T 1568083211 18<roomba18>	another thing to try would be getting a vps that has an ipv6 prefix delegation
T 1568083229 18<personx18>	[party pooped. :3 "<thumbs> personx: there is no such thing on freenode, if you're thinking of linking your server" ]
T 1568083239 18<roomba18>	not sure if freenode's servers consider entire prefixes but it's worth a try
T 1568083254 18<personx18>	roomba, yeah, not in my budget. xD
T 1568083261 18<roomba18>	$5/mo is too much?
T 1568083297 18<roomba18>	i'm ircing from a $5/mo box that has 2^64 ipv6 ips at my disposal.
T 1568083348 18<personx18>	roomba, well, my father's paying for my current hosting. :P and its cheaper still. but not a vps.
T 1568083371 18<personx18>	I just have one ipv4 static.
T 1568083374 18<roomba18>	ah
T 1568083398 18<kapilp_18>	is vanilla javascript is best than any framework? but its not declarative
T 1568083399 18<personx18>	and it still won't allow me to run my apps on it. so I'm using heroku for it.
T 1568083410 18<sinclair18>	kapilp_, just use react
T 1568083418 18<niggler18>	kapilp_: chocolate JS is best JS
T 1568083462 18<sinclair18>	kapilp_, react is pretty much the defacto nowadays, the tooling for it is pretty decent and its fairly lightweight to run
T 1568083496 18<sinclair18>	kapilp_, there is svelte if you're brave, that doesn't have a virtual dom, niggler would probably like it because its inspired by spreadsheet computed expressions
T 1568083500 18<roomba18>	gonna stay on vue for a while
T 1568083524 18<niggler18>	knockout is also "inspired by spreadsheet computed expressions"
T 1568083535 18<kapilp_18>	sinclair: thank you so much
T 1568083547 18<kapilp_18>	niggler: oh which you recommand?
T 1568083550 18<sinclair18>	niggler, yeah, i remember using knockout for a while
T 1568083570 18<niggler18>	kapilp_: are you trying to pick a framework to learn or trying to solve a problem
T 1568083576 18<personx18>	do we trust facebook developers? o.O
T 1568083587 18<kapilp_18>	niggler: trying to solve a problem.
T 1568083593 18<niggler18>	then use what you know kapilp_
T 1568083596 18<kapilp_18>	i was highly burned by the react
T 1568083599 18<niggler18>	personx: its not that
T 1568083615 18<niggler18>	you're implicitly supporting facebook by using their tech
T 1568083627 18<kapilp_18>	niggler: i currently using svelte
T 1568083634 18<niggler18>	then continue using svelte
T 1568083641 18<kapilp_18>	thanks
T 1568083659 18<personx18>	niggler, that's also another concern. do we even want to support Zark Mukerberg? :3
T 1568083662 18<sinclair18>	kapilp_, it doesn't matter what you use, framework of the week discussions are pretty much a thing of the past
T 1568083677 18<niggler18>	as the man said himself, you're a "dumb fuck" if you use react
T 1568083690 18<sinclair18>	lol, when did he say that?
T 1568083732 18<niggler18>	ok technically he said "you're ... a ... dumb fuck ... if ... you ... use ... react", the "..." might span days or months
T 1568083753 18<niggler18>	but id bet those words were uttered in that order
T 1568083771 18<sinclair18>	personx, you should use technologies on their merit, not because the the owner of the tech company appears to be some alien in human skin
T 1568083789 18<niggler18>	no thats wrong sinclair, you should care
T 1568083800 18<sinclair18>	niggler, well, probably, i don't know i don't follow zuckerburg
T 1568083800 18<niggler18>	its used as part of the apology tour
T 1568083811 18<niggler18>	see what great things we're doing for the tech community?  we released react
T 1568083822 18<niggler18>	that doesn't absolve them from other travesties
T 1568083823 18<sinclair18>	niggler, sounds like conflating politics with engineering to me
T 1568083823 18<roomba18>	not an alien. a transhuman. the greys are not from another galaxy. they're from an underground base in australia where they are grown in vats and programmed with specific tasks.
T 1568083833 18<niggler18>	engineering is politics
T 1568083843 18<sinclair18>	niggler, only because millenials happened
T 1568083844 18<niggler18>	anytime there is more than one approach to solve a problem
T 1568083850 18<niggler18>	no this is a general rule
T 1568083860 18<personx18>	hahah. I hate the guy. And most of the geeks I know, do too. xD
T 1568083866 18<niggler18>	when you really dig down into it, there's no technical reason to prefer react over vue
T 1568083876 18<niggler18>	vice versa, there's no real technical reason to prefer vue over react
T 1568083878 18<jaawerth18>	I mean, like, it's not like he makes money every time you use react
T 1568083881 18<niggler18>	both solve the same set of problems
T 1568083886 18<sinclair18>	niggler, there are a few reasons actually
T 1568083889 18<niggler18>	jaawerth: sort
T 1568083903 18<roomba18>	technical reasons?
T 1568083903 18<jaawerth18>	mrege-sort
T 1568083908 18<jaawerth18>	lol
T 1568083925 18<sinclair18>	niggler, better type and language support in TS, fairly sane programming model...JSX being portable, etc etc
T 1568083927 18<personx18>	could it be increased overhead?
T 1568083933 18<niggler18>	meaning, you contribute to a usage statistic that im sure they're using as part of R&D tax credit calculation
T 1568083958 18<niggler18>	but its not really directly a cash payment, merely a vote of support
T 1568083962 18*	personx is loving niggler's hate for Mukerberg. :'
T 1568083966 18<niggler18>	and it just seems hypocritical
T 1568083969 18<roomba18>	niggler: which is like 0.00000000000001% implicitly support FB
T 1568083973 18<niggler18>	nah if you love facebook, embrace react
T 1568083982 18<sinclair18>	niggler, i think TS supports Vue in some capacity, but i mean, TSX is a thing, and type checked and intellisense on props is pretty good
T 1568083987 18<niggler18>	just don't hold the untenable position of not using facebook, disliking facebook ,and loving react
T 1568083988 18<sinclair18>	so, technical reasons
T 1568083999 18<niggler18>	vue has its own thing
T 1568084017 18<niggler18>	again, there's no technical reason, its your predilection
T 1568084020 18<jaawerth18>	I thought most of those tax credits were just whether you *do* release it /maintain it open source and less to do with how many people are using it
T 1568084031 18<niggler18>	you have to put a valuation on it
T 1568084050 18<sinclair18>	niggler, i've weighed the merits and demerits of react, of all the crap out there, react seems the least crap
T 1568084053 18<roomba18>	niggler: walking around in public is supporting FB just as much as using react, with all the zombies around you - their black rectangles listening, seeing, sensing, reporting.
T 1568084062 18<jaawerth18>	by using it you are part of a community that leads to people doing free dev/bug-fixing/QA on it which means you're in a sense giving them free maintenance help
T 1568084069 18<jaawerth18>	but I'm ok with that if it's a tool I actually want to use
T 1568084095 18<niggler18>	its a facebook project at the end of the day in the sense that they are the stewards and its their project
T 1568084097 18<sinclair18>	niggler, if it were up to me, react wouldn't need to exist...but as it stands, react is better equipped at integrating with native web components than other stuff
T 1568084112 18<niggler18>	if what you want is at odds with the book, the book gets thrown at your face
T 1568084113 18<sinclair18>	integrating with 'less magic'
T 1568084119 18<roomba18>	sinclair: only because the hive mind chose react
T 1568084124 18<niggler18>	^^
T 1568084138 18<personx18>	I don't really care about where the code originates as long as its good code. My dislike for FB and Mukerberg is just one of the variables in choosing/not choosing react
T 1568084144 18<niggler18>	technically polymer is better equipped with web components
T 1568084146 18<sinclair18>	roomba, um, i don't think so, i have never been particularily hive mind about react
T 1568084155 18<niggler18>	sinclair: you aren't arguing technical advantages
T 1568084160 18<jaawerth18>	last I knew polymer still did dirty-checking
T 1568084164 18<jaawerth18>	though.. I imagine that's changed by now
T 1568084167 18<niggler18>	everything you've suggested is personal opinion
T 1568084184 18<niggler18>	technical = I can do ___ in react and cannot do the same in ____
T 1568084187 18<roomba18>	sinclair: maybe not you per-se. but there is a hive mind. it's very real. and it's growing. humanity only has about 5-10 years left.
T 1568084196 18<lf9418>	man oh man
T 1568084200 18<sinclair18>	roomba, could say the same for Rust
T 1568084211 18<niggler18>	and the number of words you need to use to describe ____ is inversely proportional to the technical merit of your claim
T 1568084228 18<sinclair18>	niggler, i already listed the technical reasons tho, ill list them again
T 1568084232 18<sinclair18>	1) react is lightweight
T 1568084236 18<sinclair18>	2) the tooling is good
T 1568084236 18<niggler18>	you listed a series of opinions
T 1568084237 18<roomba18>	sinclair: Think Rust will go the way of elixir?
T 1568084243 18<niggler18>	vue is lightweight with solid tooling
T 1568084245 18<jaawerth18>	I like react's approach better than vue's in that the react abstraction is very widely applicable because of how generic it is with components/props
T 1568084252 18<sinclair18>	3) its well supported with typescript (including type checked components)
T 1568084260 18<jaawerth18>	but vue is decent enough for web-facing stuff
T 1568084270 18<sinclair18>	4) its not doing anything particularly magic
T 1568084273 18<lf9418>	any else see the treenotation site?
T 1568084273 18<niggler18>	https://vuejs.org/v2/guide/typescript.html
T 1568084284 18<sinclair18>	5) JSX / TSX is portable (as evident by next.js)
T 1568084289 18<jaawerth18>	react's approach to functional components is applicable to a lot of different ui abstractions beyond DOM, which I think has great potential
T 1568084289 18<roomba18>	isn't vue's typescript support not very polished in v2?
T 1568084291 18<niggler18>	vue isn't doing anything magicale ither
T 1568084299 18<niggler18>	next.js :: nuxt.js
T 1568084307 18<sinclair18>	6) React integrates very well with native web components
T 1568084308 18<niggler18>	i dunno i searched vue typescript and that was the first result
T 1568084317 18<sinclair18>	niggler, so, 6 technical reasons
T 1568084338 18<personx18>	I don't mind react. But as long as another dev using react is converting to a stat helping FB, still a dick move.
T 1568084340 18<niggler18>	"1) react is lightweight" unless you're suggesting vue is not lightweight, its not a technical reason for using react over anything
T 1568084367 18<niggler18>	there are numerous lightweight frameworks
T 1568084369 18<jaawerth18>	and I'm pretty sure vue is lighter than react in terms of raw code content
T 1568084373 18<sinclair18>	niggler, well, last time i pulled react, it had 4 dependencies, that makes me happy
T 1568084376 18<sinclair18>	let me check view
T 1568084379 18<sinclair18>	*vue
T 1568084389 18<niggler18>	https://www.npmjs.com/package/vue oh snap[
T 1568084398 18<niggler18>	"0 DEPENDENCIES"
T 1568084415 18<niggler18>	you're getting a boot sinclair, how dare you besmirch the vue
T 1568084423 18<niggler18>	lol
T 1568084429 18<sinclair18>	niggler, it actually has 1 dependency
T 1568084439 18<sinclair18>	that makes vue better (in my book)
T 1568084440 18*	roomba bends the knee to Lord Vuerys
T 1568084446 18<jaawerth18>	lol booo
T 1568084458 18<niggler18>	if there's a dep, https://www.npmjs.com/package/vue doesnt know about it
T 1568084461 18<jaawerth18>	but yeah I've nothing against vue
T 1568084462 18<evulish18>	hey if we're goint by dependencies
T 1568084464 18<evulish18>	https://www.npmjs.com/package/angular
T 1568084464 18<sinclair18>	well, 0 dependencies
T 1568084469 18<evulish18>	angularjs ties!
T 1568084474 18*	personx is preparing people for a boot to the head. xD
T 1568084479 18<sinclair18>	npm install vue === 1 node_module folder
T 1568084484 18<sinclair18>	containing....vue
T 1568084488 18<sinclair18>	that pleases me
T 1568084497 18<niggler18>	ok we've heard enough facebook propaganda for one day
T 1568084508 18<roomba18>	yes
T 1568084509 22*	26ChanServ gives channel operator status to 18niggler
T 1568084509 18<roomba18>	on to google!
T 1568084513 22*	26niggler has kicked 18sinclair from 22##javascript (24sinclair)
T 1568084517 22*	26ChanServ removes channel operator status from 18niggler
T 1568084519 18<niggler18>	lol
T 1568084537 18<sinclair18>	niggler, maybe don't kick me eh
T 1568084538 18<evulish18>	abuse of power!
T 1568084565 18<evulish18>	demand a public apology!
T 1568084576 18<roomba18>	evulish: i suppose niggler is going to tell you to take up your concerns with Zark Muckerbang
T 1568084579 18<niggler18>	we don't need a facebot here pushing anti-vue fake news
T 1568084607 18<sinclair18>	i don't care about react anyway, its just a thing i happen to use without even thinking about it
T 1568084617 18<roomba18>	yea! no more anti-vue fake news from the Reacuckts!
T 1568084617 18*	sinclair has next to 0 interest in web frameworks
T 1568084628 18<niggler18>	in all seriousness tho, there are differences in opinion regarding the approach vue, react, angular take
T 1568084633 18<jaawerth18>	I mean I don't think there's a huge reason to pick vue over react either, they're both perfectly cromulent frameworks
T 1568084639 18<niggler18>	and they have strengths and weaknesses
T 1568084649 18<niggler18>	but none are technically superior to the others
T 1568084658 18<jaawerth18>	THOUGH I was tempted to kick niggler for daring to besmirch react, thereby starting a war that would tear the channel apart
T 1568084659 18<niggler18>	just along different axes = different opinions
T 1568084677 18<jaawerth18>	but I fear reprisal
T 1568084680 18<niggler18>	so im actually guilty of a deeper sin
T 1568084681 18<sinclair18>	except for svelte, with is technically (and morally) superior as it does not have a virtual dom
T 1568084683 18<roomba18>	having only ever used vue - but looked at others - vue seems like somewhere between angular and react. is that a good VUEpoint? lelz sorry couldn't help it.
T 1568084684 18<evulish18>	##javascript-react and ##javascript-vue no more ##javascript
T 1568084686 18<evulish18>	you have to pick a side
T 1568084692 18<evulish18>	even if you use neither
T 1568084701 18<jaawerth18>	##javascript: Civil War
T 1568084717 18<personx18>	This will be a very uncivil war.
T 1568084720 18<niggler18>	jaawerth: so somehow code i wrote made its way into react 15 https://github.com/facebook/react/blob/v16.0.0/src/renderers/shared/utils/adler32.js#L17 which makes me question what other technologies my open source code enabled :(
T 1568084740 18<personx18>	niggler, good god, is that true?
T 1568084747 18<jaawerth18>	good!
T 1568084781 18<niggler18>	i must atone for the fact that a facebook employee thought it appropriate to integrate some apache2 licensed js into react
T 1568084811 18<personx18>	WARRRRRRRRRRR
T 1568084816 18<personx18>	Fuck the System!
T 1568084817 18<niggler18>	fwiw it wasnt even me who submitted it, i found out after the fact, still feel bad about it
T 1568084817 18<personx18>	xD
T 1568084822 18<jaawerth18>	niggler: doesn't the apache license require you include it if you use part of the code?
T 1568084826 18<sinclair18>	niggler, of some interest and food for thought, svelte achieves its stuff without a virtual DOM, however....Blazor implements a virtual DOM for server / wasm diffing. The question is....are virtual doms necessary at all, and is svelte a short sighted hack that can't be accelerated with WASM due to not having a Virtual DOM to accellerate
T 1568084835 18<niggler18>	yeah it was discussed in the PR https://github.com/facebook/react/pull/11250
T 1568084841 18<niggler18>	err
T 1568084846 18<niggler18>	https://github.com/facebook/react/pull/4400
T 1568084887 18<roomba18>	It was 2019 AD, and the Sinclairites were preparing to invade the Protected States of Vuex. The master spy niggler got wind by intercepting a Promise to fly a sparrow containing a json object detailing the invasion. A civil war was averted.
T 1568084891 18<niggler18>	but again sinclair that reflects a difference of opinion
T 1568084930 18<jaawerth18>	yeah not sure how I feel about their argument there
T 1568084944 18<personx18>	^^
T 1568084979 18<niggler18>	anyway, they are different techs
T 1568084985 18<sinclair18>	niggler, not at all
T 1568084990 18<niggler18>	there are advantages and disadvantages to using each
T 1568084998 18<personx18>	Muckerberg ~ no better than the Night King.
T 1568085000 18<jaawerth18>	yeah, that
T 1568085006 18<evulish18>	roomba: heh that's pretty similar to the book i'm reading! The Moon is a Harsh Mistress
T 1568085019 18<jaawerth18>	and I do have a preference to react's api/approach or a few reasons but those reasons still come down to my priorities
T 1568085040 18<sinclair18>	niggler, right, and weighing those technical advantages and disadvantages is not political, anything that is measurable can't (or shouldn't) be political
T 1568085062 18<jaawerth18>	I disagree, politics can still matter
T 1568085067 18<roomba18>	yea definitely
T 1568085082 18<roomba18>	i don't use anything that has a contributor covenant based code of conduct.
T 1568085083 18<sinclair18>	if it is political, then there exists a cancer around said thing...and it needs to be weeded out, least we get lost in a sea of frivolous distractions
T 1568085087 18<roomba18>	j/k
T 1568085089 18<niggler18>	sinclair: suppose that jeffrey epstein funded development of a project
T 1568085093 18<niggler18>	would you want to touch it?
T 1568085117 18<jaawerth18>	in my opinion the politics here aren't enough to keep me from using react but there are scenarios where they would be
T 1568085120 18<sinclair18>	not particularily
T 1568085146 18<niggler18>	so there are certainly redlines that most people agree should never be crossed
T 1568085164 18<niggler18>	and beyond that, it's a matter of opinion what factors should and shouldn't be applied
T 1568085180 18<jaawerth18>	I mean, I quit my last job over politics lol
T 1568085187 18<sinclair18>	niggler, so if Einstein was jeffrey epstein, would you reject general relatively despite the evidence supporting it?
T 1568085207 18<personx18>	sinclair, that's stupid.
T 1568085219 18<sinclair18>	niggler, how is it any less stupid than what niggler said?
T 1568085230 18<personx18>	if 1=1, then 1 is always 1.
T 1568085246 18<jaawerth18>	if react is general relativity, then vue is quantum mechanics
T 1568085260 18<niggler18>	if/when we find out that einstein ran a child sex trafficking ring, we can revisit that question sinclair
T 1568085265 18<sinclair18>	niggler, there is a subtle distinction and nuance with the question you asked
T 1568085266 18<jaawerth18>	one theory doesn't preclude the other
T 1568085290 18<four3318>	/part
T 1568085290 18<sinclair18>	niggler, well, you brought up hypotheticals
T 1568085293 18<personx18>	lets PLEASE not put react on any pedestal. use it or don't. just don't support FB. Civil war over.
T 1568085342 18<niggler18>	sinclair: people at research labs throughout the country took money from epstein knowing what he did
T 1568085361 18<roomba18>	personx: but we haven't gotten to the part where FB, amazon, google, microsoft combine into a Mother AI that rules humanity forever and ever!
T 1568085409 18<jaawerth18>	I meant a civil war where niggler and I increasingly abuse our op powers to destroy one another (and before anyone points out that would be over almost immediately, I was kidding!)
T 1568085411 18<personx18>	roomba, just a random question : are we the weird survivalists on the tech age? xDDDD
T 1568085433 18<sinclair18>	niggler, i expect you wouldn't reject 'general relatively', even if it did happen to originate from 'Epstein'. I expect you would accept the testable, provably correct theory on physics grounds, but still find Epstein morally reprehensible
T 1568085434 18<roomba18>	personx: i donno. i mean... i don't have a smartphone if that's what you're asking.
T 1568085435 18<niggler18>	it affects all of SV
T 1568085455 18<niggler18>	like how yuri milner flooded the valley with tainted money
T 1568085511 18<jaawerth18>	sinclair: is responding as if react is under attack and the rest of us as if vue is under attack, these are all mostly deffense-of-framework arguments
T 1568085524 18<personx18>	follow up : are we doing anything to stop the mother AI or are we just bitching?
T 1568085525 18<niggler18>	nah there are different arguments at play
T 1568085528 18<jaawerth18>	so maybe we can all agree that either is fine lol
T 1568085529 18<sinclair18>	jaawerth, i don't care about vue or react >_>
T 1568085541 18<jaawerth18>	well there's that AND the politics argument sure
T 1568085550 18<niggler18>	i personally believe that using a technology is implicit support of the technology and of the related politics
T 1568085551 18<roomba18>	personx: just bitching. there is no stopping the mother AI.
T 1568085552 18<sinclair18>	jaawerth, im talking about being able to keep politics out of engineering
T 1568085570 18<niggler18>	you can't tho sinclair
T 1568085573 18<jaawerth18>	yeah but you're jumping into a pretty far simile
T 1568085577 18<roomba18>	LiftLeft: lelz. whois me please
T 1568085584 18<sinclair18>	jaawerth, read the conversation
T 1568085586 18<jaawerth18>	I mean, theories aren't licensed and copyrighted
T 1568085603 18<jaawerth18>	theoretically evil Einstein wouldn't get money every time I calculated time dilation
T 1568085614 18<sinclair18>	jaawerth, im responding to what niggler asked of me, responding with a hypothetical with another hypothetical
T 1568085622 18<jaawerth18>	in rearct's case I don't think react gets more money either but, like, there is more *business* involved
T 1568085641 18<jaawerth18>	yeah I'm saying why I don't think that hypothetical is analogous under scrutnity
T 1568085651 18<personx18>	okay wait, is our problem that muckerberg monetizing our use of his tech or just the fact that we do not like muckerberg at all?
T 1568085665 18<sinclair18>	jaawerth, well, you either reject the theory based on who came up with it, or you don't.
T 1568085673 18<niggler18>	the question is whether using react is showing support for facebook
T 1568085687 18<sinclair18>	if you don't reject it, you're able to separate politics from 'insert domain here'
T 1568085702 18<niggler18>	and whether it is internally consistent to use and support react but still dislike the parent organization and its other offerings
T 1568085706 18<jaawerth18>	sinclair: yes and I'm saying the ramifications of use for a peer-reviewed and experimentally-confirmed scientific theory that came from evil are different from using a technology product that came from evil
T 1568085725 18<sinclair18>	jaawerth, depends on the technology
T 1568085725 18<niggler18>	especially a technology product with comparable alternatives
T 1568085744 18<jaawerth18>	again, *I* don't think those ramifications weigh enough to preclude react
T 1568085749 18<jaawerth18>	but there are scenarios where they would be
T 1568085754 18<niggler18>	sinclair: you hadn't presented a real technical argument for react over vue or an alternative, everything you listed was an opinion
T 1568085762 18<sinclair18>	jaawerth, what if Epstein came up with the notion of turing completeness (or epstien completeness) >_>
T 1568085766 18<jaawerth18>	like, I avoid Oracle because of their business practices and licensing
T 1568085780 18<sinclair18>	niggler, i did tho, i listed 6, scroll up
T 1568085795 18<jaawerth18>	sinclair: the notion of something is still more akin to scientific theory
T 1568085800 18<jaawerth18>	unless you can license a notion
T 1568085805 18<niggler18>	"6) React integrates very well with native web components" so does vue angular and in fact polymer has better integration
T 1568085825 18<jaawerth18>	niggler: I find vue's outer api is more tightly coupled to certain functions
T 1568085835 18<roomba18>	all of those points mentioned earlier had very little to do with technological advantages. they are too subjective.
T 1568085840 18<niggler18>	sure, no one said its superlative
T 1568085854 18<jaawerth18>	and angular is so opinionated that if you repurposed its api for a different kind of ui abstraction you'd likely run into more limiters
T 1568085855 18<niggler18>	im saying that the listed items are "opinions" moreso than technical arguments
T 1568085876 18<jaawerth18>	niggler: yeah, I mentioned them in terms of my preference
T 1568085882 18<sinclair18>	niggler, yeah, but there is less 'magic' going on with the angular case, and i can't speak for polymer
T 1568085889 18<jaawerth18>	I am not disagreeing that tehy're opinions - they're technical arguments bbaseed on *my* priorities
T 1568085892 18<jaawerth18>	which is an opinion
T 1568085899 18<personx18>	this is basically like having an empty hollow skull and a mug, both doing the same to quench our thirst, one 'maybe' better than other. which utensil do we use?
T 1568085912 18<jaawerth18>	niggler: In other words, I wasn't disagreeing wiht you taht they were opinions
T 1568085925 18<niggler18>	right, sinclair was arguing they were technical arguments
T 1568085931 18<niggler18>	i was arguing they were opinions
T 1568085932 18<jaawerth18>	I think vue is fine for various usecases and I would not object to using it
T 1568085940 18<jaawerth18>	ah ok
T 1568085940 18<sinclair18>	jaawerth, there are many ways to measure a 'thing' on techincal terms, and mostly those 'technical' considerations come down to the task at hand.
T 1568085943 18<niggler18>	but getting back to the very beginning
T 1568085950 18<niggler18>	sinclair: politics is inextricably linked
T 1568085952 18<jaawerth18>	I thought you thought *I* was claiming athem as technical arguments rather than opoinions heh
T 1568085965 18<niggler18>	its not some "millenial" thing
T 1568085968 18<sinclair18>	jaawerth, if there is reason to use vue over react, use vue...i don't care what people use.
T 1568085970 18<niggler18>	its the nature of the beast
T 1568085983 18<sinclair18>	niggler, i don't care if you like vue dude >_>
T 1568085985 18<personx18>	as long as we have opinions, politics cannot be kept away.
T 1568085991 18<sinclair18>	i don't hate vue >_>
T 1568085995 18<roomba18>	npm install react
T 1568085997 18<roomba18>	Please select a payment option: [BezosBucks, Libra, UBI credit deduction]
T 1568086011 18<personx18>	that's why we better come up with ways to counter the mother AI, roomba. we don't have the hive taking over.
T 1568086018 18<niggler18>	too bad Libra wasn't called FaceBucks
T 1568086019 18<jaawerth18>	that's why I try to avoid oracle stuff
T 1568086031 18<sinclair18>	but, i haven't been technically compelled to shift from react to vue...(the only reason i would shift from A to B)
T 1568086064 18<sinclair18>	and i certainly wouldn't throw react in the bin on political grounds (like thinking facebook is arse, which it is)
T 1568086070 18<roomba18>	personx: countering the mother AI is easy. become a luddite before 2030. otherwise u screeeewed
T 1568086084 18<sinclair18>	react 'is what it is' and i don't think facebook when i use it.
T 1568086090 18<jaawerth18>	anyway if things get TOO politically readioactive and they're open source, people fork the thing
T 1568086101 18<niggler18>	hence preact, threeact, freeact
T 1568086101 18<roomba18>	^
T 1568086111 18<roomba18>	yes that has always been the case
T 1568086117 18<sinclair18>	im not adverse to using those
T 1568086124 18<jaawerth18>	and sometimes the fork kills its parent if enough people dont' wanna touch it
T 1568086125 18<roomba18>	especially with huge projects
T 1568086151 18<niggler18>	of course not everyone has the luxury of swaying their company
T 1568086183 18<personx18>	roomba, yeah, I don't think I'm that flexible. I don't think anyone here is that flexible. We need a counter. At times like these, those with the power to change have the responsibility to change. :3
T 1568086206 18<niggler18>	from my vantage point, angular is super popular
T 1568086222 18<jaawerth18>	certain kinds of shops love it, yeah
T 1568086224 18<niggler18>	angular the TS one, not the JS 1.x version
T 1568086230 18<roomba18>	personx: that is not realistic.
T 1568086234 18<niggler18>	government and corporate work
T 1568086247 18<roomba18>	i heard someone say earlier china loves angular
T 1568086248 18<roomba18>	but
T 1568086253 18<niggler18>	china loves vue
T 1568086256 18<jaawerth18>	yeah it has that "opinionated framework for big teams" thing
T 1568086258 18<roomba18>	yea
T 1568086268 18<roomba18>	isn't vue based out of china anyway?
T 1568086272 18<niggler18>	angular fills the role of java
T 1568086272 18<roomba18>	like the original devs are chinese?
T 1568086280 18<niggler18>	the primary author is ethnically chinese
T 1568086296 18<jaawerth18>	hell it was originally, in 1.x at least, entirely built around making java devs feel at home
T 1568086303 18<roomba18>	crap. are they gonna put tariffs on vue?
T 1568086307 18<ljharb18>	roomba: like if you subtract china, almost nobody uses vue
T 1568086307 18<niggler18>	what hurts vue in english JS circles is that a lot of the ecosystem is chinese
T 1568086316 18<roomba18>	ljharb: i do. lol
T 1568086322 18<niggler18>	documentation is chinese first, english second
T 1568086323 18<ljharb18>	roomba: that just means you're in the "almost"
T 1568086334 18<niggler18>	vue is pretty popular
T 1568086345 18<niggler18>	esp given the political concerns around the zucc
T 1568086356 18<roomba18>	i like vue because using it makes me feel like a rebel against the react hive mind. that's really ALL there is to it. i don't care about technical merits.
T 1568086363 18<sinclair18>	niggler, what's the 'zucc' been up to now?
T 1568086373 18<personx18>	okay, can we all just agree that no coder in their right mind has ever liked FB or muckerberg and neither will. Does not negate the intrinsic value of any utility produced by them. ALSO does not warrants tech produced by them being thrown in the bin, never to be used. Use it any where you see fit, if it makes your life easier. Just be aware of the amount of salt you need in the mix to trust it with.
T 1568086414 18<niggler18>	the problem is many people in the tech community made boatloads of money thanks to him and thus are disincentivized from having an honest discussion
T 1568086430 18<niggler18>	same problem we see in open source projects that raised VC money
T 1568086439 18<sinclair18>	yeah, like npm
T 1568086441 18<niggler18>	same problem with mozilla selling out
T 1568086447 18<sinclair18>	i can agree
T 1568086448 18<roomba18>	personx: think about it like this... both sides of the react vs. vue civil war are using github, a proprietary platform recently acquired by microsoft...
T 1568086465 18<niggler18>	so thats what i mean when i say politics are always involved sinclair
T 1568086474 18<ljharb18>	niggler: there are no concerns about react related to facebook at this point
T 1568086485 18<niggler18>	you're thinking this is about licensing ljharb
T 1568086487 18<ljharb18>	niggler: other than typical "is the corporation that owns this project going to maintain it properly"
T 1568086492 18<roomba18>	niggler: who did mozilla sell out to?
T 1568086498 18<ljharb18>	niggler: licensing issues are long since resolved
T 1568086512 18<jaawerth18>	yeah like "trust it with salt" - it's open source and its code is auditable, I don't trust it any less than I would other large open source codebases
T 1568086513 18<niggler18>	mozilla's been slowly chipping away at the privacy and advertising wall for years
T 1568086520 18<ljharb18>	and even if i worked for facebook i'd complain loudly about react if i had something to complain about
T 1568086531 18<niggler18>	ljharb: we're talking about how using react is a political decision in support of facebook
T 1568086532 18<ljharb18>	nobody's withholding criticism of react because of facebook
T 1568086534 18<sinclair18>	niggler, well, sure, but that doesn't mean you can tear into a domain on technical grounds without involving larger political concerns that only serve to dilute any technical discussion with noise
T 1568086535 18<ljharb18>	right, but it's not
T 1568086545 18<niggler18>	it absolutely is
T 1568086546 18<ljharb18>	niggler: any more than using google for searching is a political decision in support of google
T 1568086549 18<ljharb18>	nah that's crazy talk
T 1568086561 18<jaawerth18>	I still question how much it's actually supporting facebook
T 1568086563 18<niggler18>	so you can choose not to use google search
T 1568086565 18<ljharb18>	jaawerth: zero
T 1568086576 18<niggler18>	there are other search engines
T 1568086579 18<ljharb18>	niggler: and you can choose not to use react, but neither decision makes the slightest impact on those companies
T 1568086580 18<jaawerth18>	other than contributing to a community that will help them maintain the library via free QA and PR's
T 1568086585 18<jaawerth18>	but that benefits everyone
T 1568086603 18<niggler18>	ljharb: so i take it you don't believe in the philosophy of voting with your wallet?
T 1568086619 18<roomba18>	there is no such thing as voting with your wallet
T 1568086620 18<ljharb18>	niggler: a) no, i happen not to; b) react is free, so no wallet is involved.
T 1568086625 18<jaawerth18>	I'm pretty sure any tax breaks they might get for it, they'd get regardless of usage numbers (they'd just have to tkae on more maintenance burden themselves if nobody else was using it)
T 1568086657 18<ljharb18>	niggler: using facebook dot com is perhaps a political decision, or the absence of one, but using react has *zero* connection to facebook itself.
T 1568086671 18<niggler18>	the defeatist attitude isn't really helpful, in context you are free to choose other frameworks, in no meaningful sense has react become the defacto standard outside of the avant garde
T 1568086675 18<ljharb18>	it's not defeatist
T 1568086677 18<ljharb18>	it's *irrelevant*
T 1568086679 18<jaawerth18>	especially after they removed that one sneaky license addendum
T 1568086682 18<niggler18>	it absolutely is defeatist
T 1568086682 18<personx18>	ljharb, oh good god. you spend time on ANY google produced tech == you support them.  [so not saying to or not to use it. just the concept. ]
T 1568086701 18<ljharb18>	personx: false tho
T 1568086705 18<niggler18>	its the same argument the mozilla zealots use to support firefox
T 1568086707 18<ljharb18>	niggler: even if everything died but react, that wouldn't cause facebook to change their policies
T 1568086712 18<niggler18>	why use chrome? you're supporting google when you do
T 1568086721 18<niggler18>	i dont disagree ljharb
T 1568086724 18<ljharb18>	niggler: you remain the only person i have *ever met or heard of* who has a negative opinion of mozilla, fwiw
T 1568086727 18<jaawerth18>	except google has monetized chrome usage
T 1568086741 18<jaawerth18>	it can allow all kinds of data collection and whatnot
T 1568086742 18<ljharb18>	using chrome relates to google *way* more than using react relates to facebook, and neither really do anyways.
T 1568086750 18<jaawerth18>	which google uses to make money
T 1568086755 18<ljharb18>	if facebook makes a browser, that'd apply the same as chrome
T 1568086761 18<nwoob18>	Can I access .className > div:nth-child(3n-1) this kind of name in react className
T 1568086764 18<niggler18>	as a rule of thumb, if you're going to gaslight users into thinking that ads are user-enhancing, you don't stand for privacy
T 1568086784 18<innovati18>	hello javascribes
T 1568086790 18<ljharb18>	niggler: you remain the only person who considers that one incident gaslighting
T 1568086794 18<innovati18>	javascriptwriters?
T 1568086800 18*	personx seconds niggler 
T 1568086802 18<niggler18>	multiple documented incidents
T 1568086803 18<ljharb18>	innovati: lol javascribes
T 1568086803 18<sinclair18>	ljharb, what incident?
T 1568086805 18<jaawerth18>	but react can't introduce any of that stuff without the change being caught, because it's all auditable code
T 1568086812 18<jaawerth18>	there's scrutiny on it
T 1568086830 18<jaawerth18>	it doesn't collect data or disable ad-blocking or anything like that, we know this
T 1568086831 18<ljharb18>	niggler: ok fine, but as we've gone over before, being not-perfect 1% of the time still makes you way better than everyone else who's not-perfect > 50% of the time
T 1568086834 18<niggler18>	https://twitter.com/dherman76/status/433320156496789504
T 1568086835 18<nwoob18>	Can I access .className > div:nth-child(3n-1) this kind of name in react className
T 1568086837 18<niggler18>	no it doesnt ljharb
T 1568086838 18<nwoob18>	Can I access .className > div:nth-child(3n-1) this kind of name in react className
T 1568086841 18<ljharb18>	niggler: yes, it does.
T 1568086841 18<roomba18>	chrome is just a telemetry box for a marketing company that is totally not at all trying to be evil and unleash an AI to rule turn humanity into a hive mind slave race for the elite.
T 1568086843 18<nwoob18>	sorry for multiple message
T 1568086845 18<niggler18>	if you are making the argument that you stand for privacy and security
T 1568086851 18<niggler18>	and you make a misstep on that front
T 1568086861 18<ljharb18>	niggler: then you made a misstep. mistakes happen.
T 1568086868 18<niggler18>	once twice maybe
T 1568086869 18<ljharb18>	nwoob: why are you using css selectors in react
T 1568086873 18<personx18>	ljharb, don't throw statistics from the hive mind. or folk wisdom.
T 1568086880 18<niggler18>	what's the saying? fool me once, shame on you, fool me twice ...
T 1568086881 18<sinclair18>	personx, lol
T 1568086885 18<jaawerth18>	nwoob: now sure I understand the question tbh but with react generally you want to be working with its abstraction, and not the DOM directly, unless you use a ref
T 1568086896 18<ljharb18>	niggler: "let's trust this murderer, because at least he's honest about killing!"
T 1568086900 18<sinclair18>	personx, you're lucky to get statistics from ljharb tho, its mostly heresay
T 1568086912 18<ljharb18>	sinclair: don't be hostile, that is a personal attack.
T 1568086913 18<nwoob18>	ljharb: I want to remove some style conditionally which is applied on that selector jaawerth
T 1568086920 18<ljharb18>	niggler: pretending to be good is objectively way better than not pretending, whether you're good or not.
T 1568086923 18<niggler18>	so firefox updates have been known to re-enable studies
T 1568086934 18<jaawerth18>	I mean you can define styles that use a selector
T 1568086935 18<niggler18>	something which users opted out of in previous versions
T 1568086948 18<rustyshackleford18>	so normally if I want to do something when a component is first rendered, i'd use componentDidMount. For example to fetch data
T 1568086949 18<niggler18>	chrome never once changed your default search engine back to google
T 1568086952 18<ljharb18>	niggler: and that's not cool. but if every other browser does it *more* then they're still better
T 1568086955 18<jaawerth18>	but generally speaking I would make the styling you want to change togglable by adding/removing a css class
T 1568086960 18<rustyshackleford18>	is there a hook I could use to make this a functional component instead?
T 1568086962 18<ljharb18>	niggler: somehow i doubt that.
T 1568086965 18<jaawerth18>	so those details are abstracted from the actual component code
T 1568086969 18<niggler18>	ljharb: mozilla lost the plot
T 1568086973 18<ljharb18>	rustyshackleford: `useEffect` iirc
T 1568086980 18<niggler18>	and that you support the behavior is disappointing
T 1568086983 18<ljharb18>	niggler: that still doesn't make them worse.
T 1568086985 18<ljharb18>	niggler: i never said that.
T 1568086993 18<niggler18>	the hypocrisy makes it worse tbh
T 1568086997 18<sinclair18>	ljharb, no its not
T 1568086998 18<ljharb18>	niggler: i just said that "not living up to a claimed moral imperative" doesn't make it worse
T 1568087004 18<ljharb18>	sinclair: yes, it is.
T 1568087010 18<sinclair18>	ljharb, was an observation
T 1568087013 18<niggler18>	you can't make said moral imperative your raison d'etre and not expect pushback
T 1568087022 18<ljharb18>	sinclair: this observation was also a personal attack. observations aren't immune from being that.
T 1568087022 18<sinclair18>	ljharb, anyway, just reading the backlog
T 1568087027 18<sinclair18>	ljharb, still reading the backlog
T 1568087028 18<ljharb18>	sinclair: keep your observations about me to yourself.
T 1568087033 18<sinclair18>	ljharb, keep having your discussion
T 1568087035 18<sinclair18>	go go
T 1568087036 18<ljharb18>	niggler: sure, pushback is fine
T 1568087040 18<jaawerth18>	rustyshackleford: useEffect, I believe
T 1568087057 18<ljharb18>	niggler: you, on the other hand, continually sound like an anti-mozilla zealot
T 1568087061 18<niggler18>	chrome isn't arguing it respects your privacy better than firefox
T 1568087067 18<ljharb18>	niggler: and i don't even use firefox, i'm not a pro-mozilla zealot.
T 1568087069 18<niggler18>	^^ that's why mozilla's actions are worse
T 1568087072 18<rustyshackleford18>	now I wonder if useEffect is easier than making a class component
T 1568087082 18<rustyshackleford18>	just trying to get up to speed with all the new react stuff
T 1568087084 18<ljharb18>	niggler: establishing good norms, whether you follow them or not, is better than not establishing them.
T 1568087094 18<ljharb18>	niggler: hypocrisy isn't worse, accepting bad behavior as normal is.
T 1568087098 18<sinclair18>	niggler, what's mozilla done wrong?
T 1568087104 18<personx18>	ljharb, oh good god. you're probably one of the very few coders [if you're one?] in direct conflict with the philosophy we all live on. and no, not a personal attack. we are not fighting here.
T 1568087122 18<niggler18>	https://venturebeat.com/2018/12/31/mozilla-ad-on-firefoxs-new-tab-page-was-just-another-experiment/
T 1568087126 18<ljharb18>	personx: srsly i have no idea what you're talking about
T 1568087127 18<niggler18>	"Mozilla: Ad on Firefox’s new tab page was just another experiment "
T 1568087128 18<niggler18>	kek
T 1568087144 18<niggler18>	like they can't even own up to what they did, it's just an "experiment"
T 1568087154 18<personx18>	also, a killer who admits freely about the murders and you still choose to be around them, that is WAY better than being around someone who's pretending.
T 1568087160 18<ljharb18>	personx: disagree
T 1568087167 18<ljharb18>	personx: because others will see that as "killing is ok"
T 1568087173 18<niggler18>	actions speak louder than words
T 1568087174 18<sinclair18>	niggler, must have missed the ad stuff
T 1568087199 18<sinclair18>	niggler, um, ads .... not necessarily the worst thing in the world
T 1568087225 18<sinclair18>	bit suprising coming from mozilla (i assumed they were fairly non profit and lived on donations)
T 1568087227 18<roomba18>	it's not just ads thuogh
T 1568087229 18<niggler18>	to a product whose primary argument is privacy and security? absolutely
T 1568087229 18<jaawerth18>	no niggler's right that it was kind of a betrayal of their own principle when they did it. they undid it though
T 1568087233 18<niggler18>	there were quite a few cases
T 1568087235 18<personx18>	ljharb, ... you're one of those, aren't you? the self-righteous puritanical hypocrites? xD
T 1568087246 18<sinclair18>	niggler, yeah, its questionable as it flies in the face of privacy
T 1568087255 18<jaawerth18>	ok let's cool this off before it gets more ad hominem
T 1568087257 18<ljharb18>	personx: again, no idea what you're talking about
T 1568087267 18<niggler18>	https://blog.mozilla.org/press-uk/2017/10/06/testing-cliqz-in-firefox/
T 1568087268 18<ljharb18>	personx: but yeah you're making lots of personal attacks and i'm pretty sure you've never spoken in here before a few hours ago
T 1568087277 18<niggler18>	"This experiment also includes the data collection tool Cliqz uses to build its recommendation engine. Users who receive a version of Firefox with Cliqz will have their browsing activity sent to Cliqz servers, including the URLs of pages they visit"
T 1568087296 18<niggler18>	We hope that users will appreciate the improved experience, but if users want to turn it off, they can always disable data collection or remove the Cliqz add-on entirely.
T 1568087300 18<niggler18>	aka opt-out
T 1568087301 18<nwoob18>	Why are you guys fighting
T 1568087320 18<nwoob18>	I am mod i kick people
T 1568087328 22*	26ChanServ gives channel operator status to 18niggler
T 1568087331 18<jaawerth18>	two of us are mods
T 1568087333 18<niggler18>	yeah say that again nwoob :)
T 1568087337 18<nwoob18>	:D
T 1568087344 22*	26ChanServ removes channel operator status from 18niggler
T 1568087346 18<nwoob18>	my apologies
T 1568087349 18<nwoob18>	:D
T 1568087353 18<personx18>	xDDD
T 1568087381 18<roomba18>	niggler: boiling frogs
T 1568087384 18<personx18>	and ljharb, not a pissing contest. :3 really. xD
T 1568087384 18<niggler18>	https://www.theregister.co.uk/2017/12/18/mozilla_mr_robot_firefox_promotion/
T 1568087385 18<roomba18>	is all mozilla is doing
T 1568087388 18<sinclair18>	niggler, and moz likes to wave the privacy banner
T 1568087394 18<niggler18>	exactly roomba and sinclair
T 1568087395 18<hussar18>	is 'input :not(#Agree)' a valid querySelector?
T 1568087409 18<sinclair18>	niggler, yeah, questionable
T 1568087415 18<roomba18>	i stil use firefox
T 1568087431 18<jaawerth18>	I still want to use it, if they ever add the highlight-scrollbar-with-find-matches feature
T 1568087440 18<jaawerth18>	(or make it possible to do so with an extension again)
T 1568087455 18<niggler18>	that's the part that pisses me off the most, i feel like im alone in thinking there's deep moral rot in the industry as a whole
T 1568087465 18<roomba18>	i'd rather use a frog boiler that i know is at least trying to maintain a facade of respecting privacy than an ad-company telemetry box that will be responsible for the end of humanity within a decade.
T 1568087477 18<personx18>	as long as its possible to sandbox, using any tech is okay. isn't it?
T 1568087480 18<jaawerth18>	yeah it's a matter of degrees
T 1568087481 18<sinclair18>	niggler, still, their decision to try and push ads is not really a technical issue, its a business-ish decision somewhere up the chain
T 1568087488 18<ljharb18>	niggler: i don't disagree
T 1568087503 18<niggler18>	i agree sinclair but your usage of mozilla is arguably an implicit vote in favor of those practices
T 1568087506 18<ljharb18>	niggler: but "deep moral rot" doesn't mean "everything is bad", it means "we desperately need to support whoever's the least bad, so the trend starts moving in the right direction"
T 1568087508 18<jaawerth18>	sinclair: yeah but we disagree with your premise that only technical issues should matter
T 1568087519 18<ljharb18>	^ +1, that's a terrible premise
T 1568087520 18<sinclair18>	niggler, oh hey, have you noticed that when places do things like this, they label it as a 'experiment' as if labelling it that makes it perfectly fine.
T 1568087522 18<jaawerth18>	and it IS kind of a technical issue if your technical issues include privcy
T 1568087537 18<jaawerth18>	(it can be more than just a political consideration)
T 1568087549 18<sinclair18>	ljharb, that's a personal attack on me, keep your personal attacks to yourself
T 1568087558 18<ljharb18>	sinclair: no, it's an attack on the premise
T 1568087569 18<ljharb18>	sinclair: if i said "sinclair consistently makes terrible premises" that'd be a personal attack
T 1568087582 18<roomba18>	no that would be an observation
T 1568087590 18<ljharb18>	roomba: it'd be both
T 1568087597 18<roomba18>	ljharb: no.
T 1568087602 18<sinclair18>	you just said it then, and i do consistently make terrible premises, sooo....personal attack
T 1568087611 18<sinclair18>	obviously
T 1568087616 18<personx18>	lets not get personal and be united in our hate against advertised hypocrisy.
T 1568087634 18<jaawerth18>	yellow cards all around, stahp
T 1568087636 18<ljharb18>	roomba: observations aren't immune from being attacks.
T 1568087647 18<ljharb18>	sinclair: lol now you attacked yourself tho
T 1568087653 18<ljharb18>	but yes, stahp is a good call, sorry
T 1568087655 18<hussar18>	is 'input :not(#Agree)' a valid querySelector?
T 1568087669 18<ljharb18>	hussar: looks right to me. if you try it, does it throw?
T 1568087678 18<sinclair18>	jaawerth, anyway, not really, if im looking at a technology, and wondering 'why is this thing not doing a thing', im not particularily interested in the political, im interested 100% in the technical, unless said thing isn't working because 'political reasons'
T 1568087704 18<jaawerth18>	hussar: should be but the best way to find out is to try it. oh, and I would avoid upper-case id's
T 1568087722 18<sinclair18>	jaawerth, and there has been scenarios for a thing not working on political sounds in the past, and that is cancer
T 1568087730 18<innovati18>	hussar since <input> cannot contain HTML elements as content it would never ever match anything in HTML…but if you were using XML or something with a custom <input> element, then that would match any element that didn't have id="Agree" inside an <input> element that was not an HTMLInputElement
T 1568087732 18<jaawerth18>	sinclair: and "why is this thing leaking my behavioral data" doesn't meet that metric?
T 1568087736 18<hussar18>	it's not for js, just a method that uses query selectors in a situation that's hard to test
T 1568087764 18<jaawerth18>	I mean, :not is allowed to contain selectors you want to blacklist so
T 1568087771 18<personx18>	jaawerth, it so does. sinclair would agree, I think
T 1568087787 18<sinclair18>	jaawerth, depends if it was designed to do that
T 1568087792 18<hussar18>	I'm worried that it may need a space before the ':'
T 1568087798 18<personx18>	umm, but react IS doing that, no?
T 1568087809 18<innovati18>	input:not(#Agree) would target any <input> that wasn't <input id=Agree>
T 1568087817 18<personx18>	not leaking private data, but behavioral stats>
T 1568087818 18<personx18>	?
T 1568087831 18<ljharb18>	personx: um, no?
T 1568087836 18<ljharb18>	personx: react doesn't transmit any data anywhere
T 1568087837 18<sinclair18>	jaawerth, you can question the intent in other discussions, if the intent of something is to 'leak your private data', lets have a discussion on 'how best to leak personal data at massive scale' and consider the ethical concerns in other channels
T 1568087852 18<innovati18>	a space in a CSS selector is significant, it's a descendant combinator and targets an element inside another element's content
T 1568087861 18<jaawerth18>	sinclair: I mean, there are practical and technical considerations for why that might make it bad to use
T 1568087875 18<jaawerth18>	beyond the question of one's opinion about whether it's right thati t does that
T 1568087881 18<jaawerth18>	so IMO it falls under both criteria
T 1568087888 18<jaawerth18>	*both realms
T 1568087895 18<niggler18>	some of the CLI tools have built-in telemetry
T 1568087899 18<sinclair18>	jaawerth, perhaps, but i mean, i think its perfectly fine to question 'wait, why am i writing something to leak personal data at scale', but its tangential from the engineering
T 1568087908 18<personx18>	okay, are we moral and / or ethical people?
T 1568087909 18<niggler18>	not sure if CRA does
T 1568087920 18<roomba18>	personx: no
T 1568087930 18<niggler18>	id like to think so
T 1568087942 18<roomba18>	but technically we are not
T 1568087953 18<sinclair18>	jaawerth, and for what its worth, no, i wouldn't blindly write something, or partake in projects i deemed 'ethically questionable'
T 1568087965 18<personx18>	and we're not opposed to advertisment either, as long as you say that's what you're doing. but if you say "we're just trying to make the world a better place" and shoving ads, that's disrespectful.
T 1568087966 18<roomba18>	we complicit in tyranny
T 1568087976 18<niggler18>	alternatively, id like to think we're in this industry to do what we love and not merely to enrich our bank accounts
T 1568087983 18<ljharb18>	niggler: oh maybe CRA does, dunno
T 1568087993 18<ljharb18>	but react itself doesn't
T 1568087996 18<niggler18>	the browser libraries dont
T 1568088013 18<niggler18>	vue, react, angular, polymer, none of them have telemetry built into the web libraries
T 1568088030 18<jaawerth18>	most of the cli tools I've used that have telemetry ask you whether you want to allow it though
T 1568088045 18<jaawerth18>	though I suppose the ones that don't ask would naturally be the ones I'm going to be less aware of, sooo
T 1568088060 18<niggler18>	many have documented opt-out procedures
T 1568088068 18<niggler18>	but by default those tools enable it
T 1568088101 18<ljharb18>	which ones do?
T 1568088107 18<ljharb18>	have default telemetry, i mean
T 1568088117 18<personx18>	I feel as long as we've ensured our survival, any steps that we take to enrich our bank account on the cost of data, dick move.
T 1568088135 18<niggler18>	the react-native toolchain used to have something as part of the expo integration
T 1568088146 18<ljharb18>	niggler: in expo specifically?
T 1568088156 18<jaawerth18>	default without a prompt?
T 1568088166 18<jaawerth18>	yeah I don't like that
T 1568088178 18<niggler18>	gatsby has it and i don't recall prompting https://www.gatsbyjs.org/docs/telemetry/
T 1568088195 18<niggler18>	i think the confusion ljharb was that the expo stuff wasn't properly communicated in the CLI
T 1568088221 18<niggler18>	so you'd go through the process, enabling it by default without knowing that it required credentials
T 1568088240 18<niggler18>	and would find out near the end of the workflow
T 1568088262 18<personx18>	I call a MotherAI-Counter Initiative. Who's in? xD
T 1568088283 18<ljharb18>	niggler: ok, fair
T 1568088303 18<roomba18>	personx: how do we know you're not a shill for BigTech(tm) ?
T 1568088374 18<personx18>	Muckerberg ki maa ka bhosda. roomba : if you understood hindi, you'd know you can trust me. xD
T 1568088395 18*	roomba uses google translate
T 1568088434 18<personx18>	yeah, I'm not entirely sure if that can be translated easily. :3
T 1568088463 18<roomba18>	illuminati confirmed
T 1568088514 18<personx18>	umm, I'm thinking I'd be proud to have influenced so much. :3
T 1568088656 18*	personx is looking for volunteers for the MAIC Initiative.
T 1568088874 18<ljharb18>	still no idea what that means
T 1568088916 18<personx18>	Mother AI Counter Initiative. The world's last resort before the hive mind takes over.
T 1568088964 18<ljharb18>	in what universe is that a thing
T 1568088984 18<personx18>	roomba knows. so does niggler. :'3
T 1568089013 18<ljharb18>	sounds like you've got the perfect recipe for lots of people volunteering - only 3 people know what it is
T 1568089031 18<nibzAU18>	Hey all.. So agin im learning but why would i want to use a function expression over a function declaration ( i bet the next page explains this heheh)
T 1568089060 18<ljharb18>	!fe vs fd @ nibzAU
T 1568089060 18<ecmabot18>	nibzAU: A function declaration `function declared() {}` & a function expression e.g. `var bar = function expressed() {}`: the former is !hoisted, the latter can be immediately invoked (see !iife) and can be anonymous (eg can omit the name "expressed"). "function" as the first word of a statement at global scope or directly inside a function starts a function declaration; otherwise, it starts a function expression.
T 1568089073 18<ljharb18>	nibzAU: avoid relying on hoisting; declarations allow you to rely on hoisting.
T 1568089080 18<personx18>	A Few Good Men. ;) xD
T 1568089216 18<nibzAU18>	Never used expressions always used declarations in other languages  so Not used them
T 1568089237 18<nibzAU18>	!hoisted
T 1568089237 18<ecmabot18>	nibzAU: ‘Hoisting’ is the name given to the mechanism whereby names defined with ‘var’ or function declarations (see !fe) are made available throughout their scope, even before the declaration is encountered textually.  Beware: though the *definition* of a variable is available, its value (if given) will be undefined until the var declaration is encountered or the variable is otherwise assigned to.
T 1568089586 18<innovati18>	am I the only denotard here?
T 1568090151 18<ljharb18>	type not found, it seems
T 1568090355 18<sinclair18>	niggler, ever remember the Amiga?
T 1568090372 18<niggler18>	no that was before my time
T 1568090376 18<sinclair18>	niggler, im blown away by this demo https://www.youtube.com/watch?v=iD9xk3SDSYc
T 1568090384 18<sinclair18>	how could the Amiga be before your time
T 1568090407 18<sinclair18>	the black lotus - like the greatest of all demosceners
T 1568090413 18<niggler18>	The Amiga is a family of personal computers introduced by Commodore in 1985.
T 1568090417 18<ljharb18>	because the amiga is insanely old?
T 1568090459 18<sinclair18>	well, watch that demo make that 1980's tech sing
T 1568090461 18<niggler18>	consider that someone born in 1985 is like 34 now, basically a boomer :P
T 1568090471 18<niggler18>	almost aged out of the 18-35 demographic
T 1568090473 18<sinclair18>	the Amiga should have been an alternative to Apple
T 1568090484 18<ljharb18>	to be old enough to have seriously used an amiga you'd have to be solidly in your 50s or older, so it shouldn't be surprising that few people remember it
T 1568090508 18<sinclair18>	the Amiga tho, it was pretty popular in the 90's
T 1568090517 18<sinclair18>	the A500 was everywhere
T 1568090530 18<sinclair18>	maybe it was a europe thing, had em in NZ tho
T 1568090541 18<niggler18>	On April 29, 1994, Commodore filed for bankruptcy
T 1568090554 18<sinclair18>	niggler, yeah, it sucks
T 1568090565 18<sinclair18>	the Amiga was years ahead of its time
T 1568090585 18<ljharb18>	yeah, definitely not pretty popular in the US in the 90s
T 1568090594 18<sinclair18>	the C64 was years ahead of its time in terms of the audio hardware it used, the Amiga's tho, graphics power houses for the time.
T 1568090596 18<ljharb18>	commodore 64, arguably
T 1568090604 18<ljharb18>	altho that was much more 80s
T 1568090654 18<sinclair18>	makes me sad there wasn't a continuation of the Amiga brand, they would have made for Apple rivals in todays world
T 1568090705 18<niggler18>	only 3 console makers left
T 1568090713 18<sinclair18>	but seriously, give this a watch https://www.youtube.com/watch?v=iD9xk3SDSYc, that demo was release this year.
T 1568090723 18<niggler18>	sony / microsoft / nintendo
T 1568090758 18<ljharb18>	how "console" is nintendo really, at this point tho
T 1568090768 18<ljharb18>	the switch is a handheld you can plug into your tv, barely a console
T 1568090791 18<niggler18>	true, its running old tech
T 1568090805 18<ljharb18>	the wii was just embarrassing on so many levels
T 1568090818 18<niggler18>	its all about the software (games) tbh
T 1568090833 18<niggler18>	although on the games front sony is catching up
T 1568090856 18<ljharb18>	also tho, if you don't look at the platform exclusives, which platform would you use - that's the real tell
T 1568090859 18<niggler18>	and ironically nintendo is getting into phones
T 1568090865 18<sinclair18>	just a note on that demo, i note one of the programmers behind pushing things on Amiga is working at EA on Frostbite, pushing the tech forward
T 1568090883 18<niggler18>	for me the switch's portability is great
T 1568090902 18<niggler18>	and its not marketing fluff, maybe half the time docked and half the time handheld
T 1568090950 18<niggler18>	but if you're getting a dedicated unit for tv, xbox at least lets you write apps
T 1568090956 18<niggler18>	the others are like pulling teeth
T 1568091177 18<sinclair18>	god that demo is amazing
T 1568091320 18<sinclair18>	ljharb, its sad a lot of that 'lets push this hardware beyond its limits' ethos has largely died off over the years, there is usually more compute and memory than anyone really needs, but something is ultimately lost when you watch the latest game / demo graphics and are like ... meh
T 1568091498 18<sinclair18>	i mean, anyone can make 'art' on modern computer hardware, but only a few have the chops to push 30+ year old hardware to make something equally compelling, you have to respect those that spend the time pushing tech beyond its limits.
T 1568091605 18<sinclair18>	ljharb, its like those days when you would see a JavaScript prog doing something interesting....and you're like "wait, javascript can do that!?"
T 1568091624 18<sinclair18>	seemed almost absurd
T 1568091639 18<niggler18>	we're past that point sinclair
T 1568091646 18<ljharb18>	I’m not like meh
T 1568091647 18<sinclair18>	niggler, nowadays we are
T 1568091660 18<niggler18>	i mean in terms of being impressed by pushing old hardware
T 1568091670 18<ljharb18>	maybe you’re just too cynical to appreciate things
T 1568091675 18<niggler18>	even pushing new hardware isnt as interesting as it used to be
T 1568091704 18<sinclair18>	niggler, not at all, not if you've been following demoscene since the 90's
T 1568091716 18<niggler18>	the thriving indie community suggests that gaming community is looking more and more for well executed game mechanics
T 1568091729 18<sinclair18>	every now and again, a demo pops out of the wood work and you're like "that's next level"
T 1568091752 18<sinclair18>	that demo i linked is one of those kinds of demos
T 1568091770 18<sinclair18>	running on A500 hardware, seems impossible
T 1568092008 18<sinclair18>	ljharb, its not about being cynical about things, these days developers have commercial engines and immense about of tools at their disposal
T 1568092015 18<sinclair18>	*amounts
T 1568092031 18<niggler18>	then make your own demo
T 1568092066 18<sinclair18>	ljharb, when you see similar things emerge for ancient hardware, you know everything has been hand crafted from the ground up to achieve a result, there is art in that.
T 1568092074 18<sinclair18>	and you appreciate it on that level
T 1568092137 18<sinclair18>	niggler, ah, id like to one day, i used to watch demo scene happenings from a far in NZ, but NZ was far removed from Europe where a lot of the scene and people were doing this stuff.
T 1568092220 18*	sinclair just looks on in awe
T 1568093007 18<personx18>	just me or vue is much more cleaner than react? o.o
T 1568093048 18<sinclair18>	personx, depends on your definition of clear
T 1568093061 18<personx18>	how about sleeker? :P
T 1568093087 18<sinclair18>	personx, again, depends on your definition of sleek
T 1568093116 18<sinclair18>	personx, id say those React hooks are pretty sleek, but that's just me
T 1568093147 18<personx18>	hmm, makes sense. lets not give way to another civil war. xD
T 1568093208 18<sinclair18>	personx, are you looking to use a front end framework for something?
T 1568093243 18<personx18>	yeah, and I think I'm leaning towards Vue
T 1568093282 18<sinclair18>	personx, i don't think it matters what you pick really, anything will work
T 1568093355 18<evulish18>	functional react components are nice and neat, i had to switch back to React.Component and it was gross
T 1568093356 18<sinclair18>	personx, they all work well enough, tho i had been a bit apprehensive about using Vue primarily because of how TS was supposed to work with Vue templates
T 1568093370 18<sinclair18>	not sure how well TS works with Vue
T 1568093434 18<sinclair18>	https://vuejs.org/v2/guide/typescript.html
T 1568093499 18<sinclair18>	personx, looking at how Vue integrates with TS, might as well be using React, as the react hook stuff mitigates the need for component decorates and class syntax almost entirely.
T 1568093547 18<sinclair18>	personx, well, actually, https://github.com/vuejs/vue-class-component
T 1568093606 18<sinclair18>	personx, this looks like the preferred approach for component orientated stuff in Vue (as most people would approach it), but it doesn't seem to bring much to the table other than a slightly different approach.
T 1568093661 18<sinclair18>	personx, also... const Component = Vue.extend({ ... }) is pretty gross
T 1568093748 18<sinclair18>	personx, class MyComponent extends Vue {} is probably how you want to approach things, but it seems to mandate on a decorator, not sure why
T 1568093790 18<sinclair18>	personx, and as it stands, decorators are questionable things to use in JS until the TC39 figures out what its doing with them
T 1568094765 18<MJCD18>	what's up doofuses
T 1568094770 18<MJCD18>	doofii
T 1568095011 18<evulish18>	i'm trying to figure out how to make spotify recongize the songs on my sd card after i accidentally unmounted it
T 1568095023 18<evulish18>	it switched storage devices and i can't get it to switch back :'(
T 1568095139 18<evulish18>	super annoying. i have like 30gb of music on there and i think i have to delete all of it
T 1568095185 18<MJCD18>	evulish, step 1)
T 1568095194 18<MJCD18>	don't use spotify
T 1568095199 18<MJCD18>	step 2) piracy ?
T 1568095203 18<MJCD18>	step 3) profit ?
T 1568095214 18<MJCD18>	jdownloader 2 + youtube ftw
T 1568095235 18<MJCD18>	+ youtube vanced (some of youtube subscription for free)
T 1568095262 18<MJCD18>	can even download just as audio :O
T 1568095263 18<evulish18>	keeping up with a music collection is too much work
T 1568095274 18<MJCD18>	you just make a playlist like in spotify
T 1568095280 18<sinclair18>	MJCD, what's new? currently looking at the larrabee rasterization algorithm on recommendation from a friend to look at it.
T 1568095284 18<MJCD18>	and then jdownloader 2 to sdcard makes it available 'offline' :D
T 1568095289 18<evulish18>	i already have like 20tb in video
T 1568095297 18<MJCD18>	hahah yeah you don't need that
T 1568095300 18<evulish18>	i just use other people's spotify playlist
T 1568095306 18<sinclair18>	MJCD, rasterization with integer math sounds alright yeah?
T 1568095309 18<MJCD18>	unless you're planning on some kind of worldwide disaster
T 1568095320 18<MJCD18>	in which case probably no time for 50232304230 movies
T 1568095323 18<MJCD18>	(:
T 1568095324 18<evulish18>	some sort of porn disaster
T 1568095339 18<MJCD18>	people who hoard a porn collection are super weird
T 1568095355 18<evulish18>	sites go offline!
T 1568095362 18<MJCD18>	lucky there's like 23492359239
T 1568095368 18<MJCD18>	with mostly the same stuff
T 1568095369 18<MJCD18>	lol
T 1568095396 18<evulish18>	yeah that's the problem, the weird freaky deaky stuff gets forgotten about!
T 1568095541 18<MJCD18>	scraping bots forget nothing sir
T 1568095541 18<evulish18>	i wonder if i have my old mp3 collection backed up somewhere, i think i deleted it years ago
T 1568095543 18<MJCD18>	nothing
T 1568095549 18<MJCD18>	good
T 1568095557 18<MJCD18>	like
T 1568095571 18<MJCD18>	a full hd m4v is like 40-60mb a song
T 1568095583 18<MJCD18>	m4a is like 3-6mb
T 1568095591 18<evulish18>	man i def messed something up on my phone
T 1568095609 18<evulish18>	shouldn't have deleted the spotify dir
T 1568095617 18<evulish18>	probably should have uninstalled the app first
T 1568095619 18<evulish18>	oh well
T 1568095661 18<sinclair18>	evulish, i can't receive emails on my windows phone anymore, for some reason trying to open my email inbox results in the phone wanting to open the windows phone store, with the caveat the windows phone store isn't even a thing anymore....my phone has been software bricked
T 1568095668 18<sinclair18>	thanks microsoft
T 1568095725 18<sinclair18>	evulish, i can still make phone calls on the thing...i suppose i should probably upgrade my phone to a android
T 1568095735 18<carlino318>	hello
T 1568095741 18<carlino318>	i was thinking
T 1568095766 18<grr1231418>	guys whats your usual approach when you need a change in some 3rd party package, but haven't made it generic or polished enough for public contribution/official merge request, but only a quick hack for your own purpose
T 1568095791 18<grr1231418>	copy the package in a local subfolder?
T 1568095792 18<carlino318>	would be able a malicious site to send XHR request to the default gateway of the user and access router configuration?
T 1568095796 18<sinclair18>	grr12314, what is the package out of interest?
T 1568095803 18<carlino318>	is there any protection mechanism against this?
T 1568095810 18<MJCD18>	grr12314, npm link ofcourse
T 1568095823 18<grr1231418>	sinclair odata-v4-sql
T 1568095835 18<sinclair18>	grr12314, oh wow, kudos
T 1568095848 18<sinclair18>	a odata user in the wild
T 1568095868 18<evulish18>	what about branching it on github and doing npm install right from the repo?
T 1568095893 18<evulish18>	er forking, whatever
T 1568095929 18<grr1231418>	thought about it but thats still feel sorta a bit too public
T 1568095934 18<sinclair18>	carlino3, no, you can't get a a browser to leak router info (i assume trying to http on your gateway), your gateway address is considered a remote origin from some page you're loading from.
T 1568095941 18<evulish18>	private repo?
T 1568095943 18<grr1231418>	though it might push me to generalize the change sooner
T 1568095956 18<MJCD18>	you fork on github
T 1568095960 18<MJCD18>	then npm link that
T 1568095973 18<MJCD18>	push/commit/pr when polished
T 1568095976 18<sinclair18>	carlino3, i suppose it would be possible if your router had a permission cors policy on it, but that seems unlikely
T 1568095999 18<evulish18>	MJCD: why npm link over just npm install the repo?
T 1568096005 18<evulish18>	i've never used npm link
T 1568096015 18<carlino318>	sinclair: that idea came to my mind and i did the test
T 1568096015 18<MJCD18>	because you should never ever edit anything directly in node_modules
T 1568096025 18<carlino318>	and it worked
T 1568096031 18<grr1231418>	not sure npm link even works right on windows and gommits right in git etc
T 1568096043 18<sinclair18>	carlino3, nope
T 1568096044 18<grr1231418>	but install from git url seems ok
T 1568096050 18<sinclair18>	carlino3, test harder
T 1568096062 18<carlino318>	sinclair: what do you suggest?
T 1568096070 18<evulish18>	MJCD: you wouldn't be.. it'd pull the changes from your repo
T 1568096077 18<sinclair18>	carlino3, loading the page from a domain that isn't your domain
T 1568096091 18<MJCD18>	that requires you to commit the unpolished thing
T 1568096094 18<MJCD18>	ie publish it
T 1568096101 18<MJCD18>	and to keep the repo up to date
T 1568096105 18<carlino318>	sinclair: i set up a simple website on 000webhost and put the script there
T 1568096106 18<MJCD18>	ie publish every change
T 1568096110 18<MJCD18>	and then update the project
T 1568096115 18<carlino318>	request was successfull to my surprise
T 1568096116 18<MJCD18>	unworkable.
T 1568096120 18<sinclair18>	carlino3, actually, do you run on port 7777 ?
T 1568096122 18<MJCD18>	thus npm link
T 1568096139 18<carlino318>	sinclair: run what?
T 1568096144 18<sinclair18>	carlino3, your server
T 1568096153 18<carlino318>	sinclair: what server?
T 1568096174 18<carlino318>	the webserver is listening in standard http port
T 1568096176 18<carlino318>	(80)
T 1568096202 18<sinclair18>	address?
T 1568096217 18<sinclair18>	carlino3, send link
T 1568096229 18<carlino318>	of my test?
T 1568096232 18<sinclair18>	yup
T 1568096323 18<carlino318>	sinclair: https://pastebin.com/Z5ifz8qf just that simple code
T 1568096385 18<sinclair18>	carlino3, it doesn't work, you would have to be loading the page from http://192.168.255.1/page.html
T 1568096404 18<sinclair18>	carlino3, as the origin would have to be 192.168.255.1
T 1568096419 18<carlino318>	it does, or i think it does
T 1568096443 18<sinclair18>	then its not some exploit, otherwise the planet would be hacked by now
T 1568096456 18<carlino318>	i can see the request in the developer toolbar succeded with a message from the router complaining about credentials
T 1568096492 18<sinclair18>	carlino3, past e the code into codepen and see if it still works then
T 1568096521 18<sinclair18>	carlino3, https://codepen.io/
T 1568096554 18<grr1231418>	we should stop suggesting codepen
T 1568096560 18<grr1231418>	now that they dont allow anonymous pens
T 1568096608 18<carlino318>	sinclair, tried in jsfiddle and it was blocked. that is ok
T 1568096613 18<carlino318>	but not in the 000webhost page
T 1568096619 18<sinclair18>	carlino3, said that 10 mins ago
T 1568096669 18<carlino318>	it seems like it was blocked for mixed content
T 1568096763 18<carlino318>	sinclair still working in the 000webhost page. why?
T 1568096831 18<carlino318>	it is blocked if i access the site over https, because mixed content. otherwise the request is successfull
T 1568096955 18<BlaDe^18>	Hi-- I'm trying to make a loop blocking..... because reasons.. failing tho - what's the issue with:
T 1568097015 18<BlaDe^18>	const addRows = async (sheet, rows) => { rows.map(async (day) => { return await new Promise((resolve, reject) => { lameThing(row, () => resolve()); }); } }
T 1568097129 18<evulish18>	weird i'm getting parse errors from eslint for all my jsx files but i've changed nothing :/
T 1568097147 18<grr1231418>	BlaDe^ return promise all of the map
T 1568097161 18<BlaDe^18>	OHHH DUH
T 1568097162 18<BlaDe^18>	lol
T 1568097166 18<grr1231418>	tho its not really a blocking loop
T 1568097185 18<BlaDe^18>	yeah wait, that wouldn't do what I want
T 1568097206 18<BlaDe^18>	I need to block on each lameThing() -- the damn API doesn't let me specify order so if I fire off a bunch of async inserts it's not deterministic
T 1568097223 18<BlaDe^18>	I can do it recursively but I thought it'd be easy to block
T 1568097228 18<grr1231418>	make it an actual loop then
T 1568097233 18<grr1231418>	with await in it and all
T 1568097251 18<BlaDe^18>	why isn't the await inside the map blocking right now?
T 1568097261 18<grr1231418>	it is
T 1568097276 18<BlaDe^18>	then why is it firing off a ton of concurrent requests
T 1568097278 18<grr1231418>	"blocks" each separate invocation of the map callback\
T 1568097287 18<grr1231418>	but they still all get fired up at once
T 1568097308 18<BlaDe^18>	gah, ok :p
T 1568097341 18<grr1231418>	you can have anything after the await inside the same function and it would actually wait
T 1568097350 18<grr1231418>	but things after the whole map are totally different
T 1568097369 18<grr1231418>	or separate calls of the map
T 1568097370 18<BlaDe^18>	I didn't think the map would advance to the next key before the first returned _if_ it was blocking
T 1568097421 18<grr1231418>	thinking of blocking/nonblocking is a bit wrong to begin with
T 1568097445 18<grr1231418>	but you could say each async function invocation is "blocking" if called with await infront of it
T 1568097453 18<grr1231418>	map doesnt call its argument with await tho
T 1568097540 18<BlaDe^18>	loop worked as expected :/   heh
T 1568097593 18<grr1231418>	so, consider what happens if you remove the "await" inside your loop body. thats what map is like
T 1568097626 18<BlaDe^18>	yup yup. makes sense now.. ty
T 1568097698 18<graingert18>	BlaDe^: it's best to separate your new Promise api comparability code from your business logic
T 1568097733 18<BlaDe^18>	graingert whatcha mean?
T 1568097753 18<graingert18>	Eg const asyncLameThing = utils.promisify(lameThing);
T 1568097771 18<graingert18>	As early as possible
T 1568097796 18<BlaDe^18>	I ended up w/ https://pastebin.com/sYYGWw7N
T 1568097837 18<BlaDe^18>	the `addRowsSync` is sufficiently abstracted away I think.. given addRow is a 3rd party library already addRowsSync wrapping it with the hack seems sane enough
T 1568097938 18<graingert18>	BlaDe^: is not sync tho
T 1568097957 18<BlaDe^18>	the loop is
T 1568097962 18<graingert18>	BlaDe^: no it's not
T 1568097980 18<graingert18>	Also I'd go for reduce instead of a for loop
T 1568097985 18<BlaDe^18>	not sure if we're being picky on terminology but it is not concurrently making rest requests as it was before
T 1568098018 18<grr1231418>	putting "sync" in an async functon's name is nuts
T 1568098022 18<grr1231418>	just saying
T 1568098041 18<grr1231418>	you have some serious misunderstanding of sync/async/blocking
T 1568098052 18<graingert18>	It's not nuts
T 1568098056 18<graingert18>	It's confusing
T 1568098062 18<graingert18>	Or wrong
T 1568098084 18<BlaDe^18>	fair it's misleading
T 1568098089 18<BlaDe^18>	addRowsOrdered.. happy? :p
T 1568098100 18<grr1231418>	"series" is a term often used for that
T 1568098105 18<graingert18>	BlaDe^: ordered?
T 1568098108 18<grr1231418>	or serial etc
T 1568098111 18<graingert18>	waterfall
T 1568098119 18<BlaDe^18>	yeah serial also works
T 1568098142 18<graingert18>	BlaDe^: why do you also mutate the row items?
T 1568098170 18<BlaDe^18>	you mean appending the date?
T 1568098179 18<grr1231418>	your loop is weird too
T 1568098186 18<grr1231418>	seems like just a for-of would do
T 1568098198 18<grr1231418>	or for-in
T 1568098227 18<graingert18>	BlaDe^: it doesn't look like an append
T 1568098232 18<grr1231418>	for-in since you want the keys
T 1568098250 18<BlaDe^18>	yeah, flipped it to for-in
T 1568098290 18<grr1231418>	and indeed use util.promisify
T 1568098322 18<graingert18>	BlaDe^: I'd doe something like const rowData = { ...item, date: }
T 1568098324 18<grr1231418>	ah damn but it's on a method not just a function
T 1568098349 18<grr1231418>	you can still use it but you have to .bind it, its a bit more awkward
T 1568098363 18<graingert18>	Or arrow it
T 1568098377 18<graingert18>	Or find the prototype of the object outside your function
T 1568098465 18<BlaDe^18>	huh that's weird, that claims date isn't defined if I try expand it (i removed the trailing : because that said unexpected "}" )
T 1568098492 18<grr1231418>	{a} is same as {a:a}
T 1568098497 18<grr1231418>	so it looks for a
T 1568098524 18<grr1231418>	you want date: arr[i]
T 1568098620 18<BlaDe^18>	ah I had not renamed correctly.. wanted for (const date in rows) { const rowData = { ...rows[date], date }
T 1568098632 18<grr1231418>	but its not clear from the code so far - do you need this date field just for this particular addrows function call, or do you want it to stick around in the original rows array too.
T 1568098647 18<BlaDe^18>	it needs to be in the original rows array
T 1568098674 18<grr1231418>	then you'd need the mutation anyway
T 1568098692 18<BlaDe^18>	oh I see what you mean
T 1568098709 18<BlaDe^18>	only needs to be in this one function for the one lameThing()
T 1568098794 18<grr1231418>	nice, thats the cleaner approach
T 1568098804 18<BlaDe^18>	haven't written much JS in years.. so the shorthand expansion thing / promises are pretty new to me
T 1568098860 18<evulish18>	is there a better way to turn an array of digits into a number?
T 1568098873 18<evulish18>	n> new Number([1,2,3].join(''))
T 1568098874 18<jellobot18>	(okay) [Number: 123]
T 1568098878 18<evulish18>	n> Number([1,2,3].join(''))
T 1568098879 18<jellobot18>	(okay) 123
T 1568098882 18<evulish18>	^
T 1568098922 18<ashnur18>	parseInt(string, 10) ?
T 1568098932 18<ashnur18>	or use BigInt ;)
T 1568099147 18<grr1231418>	better in what way
T 1568099208 18<grr1231418>	n> [1,2,3].reduce((a,b)=>a*10+b)
T 1568099209 18<jellobot18>	(okay) 123
T 1568099255 18<grr1231418>	better in that it avoids pointless intermediate string conversions
T 1568099269 18<grr1231418>	but maybe less obvious as far as readability
T 1568099357 18<grr1231418>	n> [1,'2',3].reduce((a,b)=>a*10+b) // also more finicky about the input
T 1568099358 18<jellobot18>	(okay) 1023
T 1568099394 18<evulish18>	n> parseInt(""+[1,2,3])
T 1568099396 18<jellobot18>	(okay) 1
T 1568099409 18<grr1231418>	dont parseint
T 1568099417 18<grr1231418>	Number or +
T 1568099422 18<evulish18>	just wanted to see if it worked
T 1568099427 18<evulish18>	n> +[1,2,3]
T 1568099428 18<jellobot18>	(okay) NaN
T 1568099436 18<evulish18>	n> +[1]
T 1568099436 18<jellobot18>	(okay) 1
T 1568099445 18<grr1231418>	n> +[].join``
T 1568099446 18<jellobot18>	(okay) 0
T 1568099450 18<grr1231418>	n> +[1,2,3].join``
T 1568099451 18<jellobot18>	(okay) 123
T 1568099459 18<grr1231418>	if you feel golfy
T 1568099572 18<grr1231418>	n> [1,'2',3].reduce((a,b)=>a*10+b*1) // of course you could coerce types if that bothered you
T 1568099573 18<jellobot18>	(okay) 123
T 1568099845 18<sloth18>	First you get the sugar, then you get the do do do do do do, then you get the honey
T 1568100949 18<evulish18>	n> String.raw({raw:[1,2,3]})
T 1568100950 18<jellobot18>	(okay) '123'
T 1568100958 18<evulish18>	zoom zoom
T 1568100969 18<evulish18>	n> +String.raw({raw:[1,2,3]})
T 1568100970 18<grr1231418>	thats not a number :p
T 1568100970 18<jellobot18>	(okay) 123
T 1568102263 18<stennowork18>	nice
T 1568102933 18<MJCD18>	lol is it tho
T 1568102970 18<stennowork18>	really doe
T 1568103680 20*	Disconnected (20)
T 1568103704 19*	Now talking on 22##javascript
T 1568103704 22*	Topic for 22##javascript is: JavaScript is *not* Java. | Just ask your question. | Say "!mdn abc" for docs on "abc". | Don't paste code in the channel. | Can't talk? Get registered on freenode ( https://git.io/vaTS2 )
T 1568103704 22*	Topic for 22##javascript set by 26niggler!~niggler@unaffiliated/niggler (24Tue Jan 15 07:16:23 2019)
T 1568105135 18<sinclair18>	its a shame JavaScript will never support SIMD
T 1568105270 18<personx18>	https://pastebin.com/SQwxVWrv I understand what's happening here but could someone lay down the flowchart of the references' transfers for me?
T 1568105336 18*	personx is blazed out. 
T 1568105400 18<MJCD18>	lol
T 1568105405 18<MJCD18>	I need to get on that
T 1568105414 18<MJCD18>	get my medicine into me
T 1568105445 18<personx18>	We got techquila right here. ;) xD
T 1568105454 18<MJCD18>	haha too early to start drinking
T 1568105460 18<MJCD18>	unless I wanna crash at 8pm
T 1568105461 18<MJCD18>	lol
T 1568105488 18<bjorngi18>	It's always 4 o'clock somewhere.
T 1568105494 18<personx18>	3pm here. xD
T 1568105525 18<techquila18>	;-P
T 1568105529 18<personx18>	drinking right after toking, there's only pills that are better than that. :3 xD
T 1568105642 18*	personx is just realizing there's many many desi people here! 
T 1568105694 18<grr1231418>	n> 1_000
T 1568105695 18<jellobot18>	(okay) 1000
T 1568105705 18<grr1231418>	n> +'1_000'
T 1568105706 18<jellobot18>	(okay) NaN
T 1568105717 18<grr1231418>	n> parseInt('1_000')
T 1568105719 18<jellobot18>	(okay) 1
T 1568105744 18<grr1231418>	n> JSON.parse('1_000')
T 1568105745 18<jellobot18>	(fail) SyntaxError: Unexpected token _ in JSON at position 1
T 1568105747 18<Intelo18>	How can I return "" if required result is not found? https://jsfiddle.net/3zy7atfp/
T 1568105768 18<MJCD18>	Intelo, return ""
T 1568105769 18<MJCD18>	:))
T 1568105776 18<MJCD18>	!next
T 1568105776 18<ecmabot18>	MJCD: Another satisfied customer! NEXT!!
T 1568105789 18<grr1231418>	you cant return from foreach
T 1568105821 18<grr1231418>	i mean you can but it only applies to the inner function and is ignored
T 1568105833 18<MJCD18>	lol
T 1568105840 18<MJCD18>	#jokes
T 1568105850 18<grr1231418>	you want .find
T 1568105854 18<MJCD18>	but also not
T 1568105855 18<MJCD18>	lol
T 1568105863 18<grr1231418>	or a loop
T 1568105864 18<MJCD18>	like look for thing, if found, store somewhere
T 1568105875 18<MJCD18>	after the iterator, check the result store
T 1568105882 18<MJCD18>	if not there, return "" done
T 1568105890 18<MJCD18>	not rocket surgery
T 1568105901 18<grr1231418>	^ works too, but a bit roundabout vs .find
T 1568105918 18<MJCD18>	.find in the above would just take the place of the iterator
T 1568105922 18<grr1231418>	then again, if you didn't know all array methods, you should at least know that one
T 1568105924 18<MJCD18>	the same as using .some
T 1568105942 18<MJCD18>	or any other with a short-circuit mechanism inside the function passed in
T 1568105953 18<grr1231418>	find would save you from storing the found item tho
T 1568105955 18<grr1231418>	as it returns it
T 1568105959 18<MJCD18>	sure
T 1568105961 18<MJCD18>	sounds fine
T 1568106032 18<Intelo18>	MJCD, which line.
T 1568106041 18<personx18>	people, help.
T 1568106045 18<personx18>	https://pastebin.com/SQwxVWrv I understand what's happening here but could someone lay down the flowchart of the references' transfers for me?
T 1568106059 18<Intelo18>	MJCD,  as per my code, it loops over all items even if it gets the required result. As per my code, it always returns ""
T 1568106063 18<Intelo18>	MJCD,  why is that?
T 1568106156 18<MJCD18>	Intelo, urgh fine ill open the link
T 1568106157 18<MJCD18>	lol
T 1568106188 18<Intelo18>	MJCD, what?
T 1568106191 18<MJCD18>	Intelo, as grr12314 said you cannot return within most iterators
T 1568106196 18<MJCD18>	forEach included
T 1568106197 18<Intelo18>	MJCD,  oh..
T 1568106202 18<Intelo18>	hm.. strange..
T 1568106204 18<Intelo18>	why?
T 1568106209 18<Intelo18>	so whats the correct way?
T 1568106211 18<MJCD18>	because it makes no sense
T 1568106213 18<grr1231418>	Intelo understand functions
T 1568106216 18<MJCD18>	its not returned to anywhere
T 1568106220 18<grr1231418>	return returns a result from a function
T 1568106228 18<grr1231418>	do you see in shich function you wrote it?
T 1568106232 18<grr1231418>	which*
T 1568106243 18<Intelo18>	grr12314,  it was in .each
T 1568106248 18<Intelo18>	.forEach
T 1568106259 18<grr1231418>	so it wasn't in the main one
T 1568106262 18<MJCD18>	it is technically in a function
T 1568106269 18<MJCD18>	it just makes no sense to have a return there
T 1568106270 18<grr1231418>	so the main one is always undefined
T 1568106281 18<MJCD18>	as grr12314 said just replace it with .find
T 1568106288 18<MJCD18>	!mdn find
T 1568106289 18<jellobot18>	MJCD, Array.prototype.find(), JavaScript - The find() method returns the value of the first element in the provided array that satisfies the provided testing function. https://mdn.io/find
T 1568106299 18<grr1231418>	well its not as simple as "just replace it with .find"
T 1568106314 18<grr1231418>	when the actual problem is not understanding functions as a concept
T 1568106315 18<MJCD18>	I mean short of me writing all the code for them it is
T 1568106316 18<MJCD18>	:P
T 1568106454 18<grr1231418>	personx there are no references and certainly no transfers, what are you on about?
T 1568106541 18<grr1231418>	or are we calling argument passing "reference transfer" now
T 1568106546 18<grr1231418>	idk
T 1568106564 18<grr1231418>	even then what is there to flowchart lol
T 1568106612 18<MJCD18>	lol yeah
T 1568106625 18<MJCD18>	and why would we do all that for you
T 1568106630 18<MJCD18>	sounds like homework to me
T 1568107498 18<grr1231418>	n> 0b1010_0001_1000_0101
T 1568107500 18<jellobot18>	(okay) 41349
T 1568107503 18<grr1231418>	n> 0b_1010_0001_1000_0101
T 1568107504 18<jellobot18>	(fail) SyntaxError: Invalid or unexpected token
T 1568107514 18<grr1231418>	n> 0b1010__0001_1000_0101
T 1568107515 18<jellobot18>	(fail) SyntaxError: Only one underscore is allowed as numeric separator
T 1568107665 18<Intelo18>	grr12314, MJCD  how to do it correctly?
T 1568107677 18<MJCD18>	!tutorial @ Intelo
T 1568107678 18<ecmabot18>	Intelo: It is HIGHLY recommended that you establish a firm grasp of the core syntax within both JavaScript, HTML, and basic CSS. Before asking any syntax error related questions you can use `!eslint` to detect any contextual errors. A critically acclaimed tutorial is available @ http://eloquentjavascript.net/
T 1568107691 18<MJCD18>	!ydkjs @ Intelo
T 1568107691 18<ecmabot18>	Intelo: You Don't Know Javascript - Free book series on Github (https://github.com/getify/You-Dont-Know-JS)
T 1568107736 18<MJCD18>	!learn ydkjs=You Don't Know Javascript - A free book series for intermediate-advanced skill levels (https://github.com/getify/You-Dont-Know-JS)
T 1568107736 18<ecmabot18>	MJCD: Learned `ydkjs`.
T 1568107892 18<rindolf18>	Hi all! "time npm install camel-case eslint eslint-config-google html-minifier jquery param-case prettier sass uglify-es" is taking 11s without updating anything :( how can i speed it up?
T 1568108119 18<grr1231418>	dont run it?
T 1568108125 18<grr1231418>	why would you run it?
T 1568108143 18<rindolf18>	v
T 1568108172 18<grr1231418>	"without updating anything" is wrong - it's fully replacing all those packages, even if it happens to be with the exact same versions
T 1568108183 18<rindolf18>	grr12314: it is part of my site's rebuild process
T 1568108211 18<rindolf18>	grr12314: ah
T 1568108236 18<grr1231418>	just change it to a simple npm install
T 1568108255 18<grr1231418>	hm
T 1568108266 18<rindolf18>	grr12314: using package.json?
T 1568108310 18<grr1231418>	yes
T 1568108336 18<grr1231418>	since you ran that full install xxxx thing it should have already added them to package.json tho
T 1568108341 18<grr1231418>	if you had one at least
T 1568108354 18<rindolf18>	grr12314: ok, thanks
T 1568108376 18<rindolf18>	grr12314: sources are here for reference - https://github.com/shlomif/shlomi-fish-homepage
T 1568108447 18<kristian_18>	any hints how I can get last quarters start date with momentjs?
T 1568108474 18<kristian_18>	moment().startOf('quarter') gives me the current quarters start but I need last quarters start
T 1568108543 18<grr1231418>	.....startOf('quarter').subtract(something).startOf('quarter') ?
T 1568108576 18<kristian_18>	grr12314: thanks, almost :P moment().subtract(1, 'quarter').startOf('quarter')
T 1568108581 18<grr1231418>	does subtract(1, 'quarter') maybe work too?
T 1568108591 18<kristian_18>	grr12314: yup :)
T 1568108671 18<grr1231418>	n> !!require('moment')
T 1568108672 18<jellobot18>	(fail) Error: Cannot find module 'moment' Require stack: - /run/run.js
T 1568108770 18<DnzAtWrk18>	can you declare and call an arrow function in one statement?
T 1568108790 18<grr1231418>	n> (_=>'yes')()
T 1568108791 18<jellobot18>	(okay) 'yes'
T 1568108802 18<DnzAtWrk18>	ah, nice
T 1568108807 18<grr1231418>	why wouldnt you
T 1568108832 18<DnzAtWrk18>	addEventListener('resize', (() => resize stuff)());
T 1568108835 18<DnzAtWrk18>	so this should work then
T 1568108846 18<grr1231418>	no
T 1568108878 18<grr1231418>	this will call it but it will also pass its result to addEventListener, not the function itself
T 1568108888 18<DnzAtWrk18>	hmm
T 1568109117 18<Intelo18>	as per my code, it loops over all items even if it gets the required result. As per my code, it always returns ""
T 1568109139 18<Intelo18>	https://paste.ubuntu.com/p/gq57VskXsG/
T 1568109224 18<grr1231418>	not really "", but undefined
T 1568109241 18<grr1231418>	is there a question hidden in your message somewhere?
T 1568109314 18<MJCD18>	lol
T 1568109527 18<escherial18>	hey, i'm trying to write a small browser game using webpack with a graphics library called pixi.js, but i'm having trouble adapting a library, tmx-parser, that was apparently meant for use with node to being used with the browser and webpack-created bundles
T 1568109567 18<MJCD18>	escherial, k
T 1568109569 18<MJCD18>	what about it
T 1568109591 18<escherial18>	mostly tmx-parser relies on fs for reading files by default, but i'm struggling to understand how i'd replace that with a call to require(), or whatever i'm supposed to use to read arbitrary files out of the bundle that webpack creates
T 1568109619 18<escherial18>	MJCD: er, or less dunning-krueger, i just want to load a tiled TMX map somehow; i don't particularly care how as long as i don't have to rewrite tmx-parser completely
T 1568109704 18<escherial18>	i'm sorry, i realize there's a lot going on in this question...basically i'd like to read TMX maps, but all the support for that for pixi.js is based on ancient non-es6 versions of pixi afaict
T 1568109721 18<MJCD18>	escherial, you may find this useful
T 1568109722 18<MJCD18>	https://github.com/tmux-plugins/tpm
T 1568109726 18<grr1231418>	tmx-parser has a function that works on strings too
T 1568109755 18<MJCD18>	easy modular tmux :D
T 1568109758 18<MJCD18>	manager
T 1568109764 18<grr1231418>	so just load your files separately, with a webpack static file loader
T 1568109792 18<MJCD18>	i'd imagine you'd want to use a webpack loader!thing
T 1568109822 18<escherial18>	grr12314: right, but it still needs to read other files, e.g. tilesets; it uses an overrideable method called readFile to do that, but...hrm, alright, is it possible to use webpack's loader at runtime, since i won't know the tmx file references before i parse it?
T 1568109836 18<escherial18>	MJCD: sadly tmux and tiled's TMX format are unrelated
T 1568109843 18<MJCD18>	webpack is not a loader
T 1568109847 18<MJCD18>	so no
T 1568109873 18<MJCD18>	escherial, ah my apologies I typed my search wrong
T 1568109873 18<MJCD18>	https://github.com/Antonin-Deniau/tmx-loader
T 1568109880 18<MJCD18>	webpack tmx loader
T 1568109890 18<escherial18>	MJCD: ah, that is  interesting, thanks
T 1568109898 18<MJCD18>	you will need a backend api endpoint for the readFile's
T 1568109917 18<MJCD18>	that can just return require('loader!thing.tmx')
T 1568109919 18<MJCD18>	or somesuch
T 1568109996 18<escherial18>	MJCD: i'm hoping this tmx-loader you linked handles that for me, because frankly i still don't get what require() actually does...correct me if i'm wrong, but my understanding is that webpack will statically analyze all the calls to require() and then bundle those things, replacing the call to require() with references to elements in the bundle
T 1568110018 18<escherial18>	so how does that work if you're require()ing something you don't know about at build time?
T 1568110033 18<escherial18>	e.g. an embedded reference to a TSX file in your TMX file that you parse at runtime?
T 1568110159 18<grr1231418>	https://medium.com/front-end-weekly/webpack-and-dynamic-imports-doing-it-right-72549ff49234
T 1568110208 18<grr1231418>	then the readfile thing you mentioned can do require(somedynamicxxx)
T 1568110228 18<grr1231418>	but yea hopefully the tmx-loader saves you all that
T 1568110277 18<grr1231418>	eh sorry i meant the section about /* webpackMode: "eager" */ from that article in particular
T 1568110286 18<grr1231418>	tho i guess the whole thing is a good read too
T 1568110528 18<grr1231418>	alternatively https://github.com/webpack/docs/wiki/context#requirecontext if you prefer actual code instead of comments
T 1568110584 18<escherial18>	grr12314: neat, thanks; i'll give those links a look
T 1568111996 18<escherial18>	if anyone's curious, i think i'm making progress; i was able to replace tmx-loader's readFile with a call to fetch() to a folder that i've made publicly-accessible via webpack, and it appears to be loading the files as expected
T 1568112038 18<escherial18>	just tracking down and resolving weird path choices in the TMX format, e.g. tilesets are given as relative paths from the location of the TMX file, and graphics assets mentioned in the tilesets are relative to the tileset's path...
T 1568112056 18<escherial18>	not hard to deal with, just annoying
T 1568112784 18<grr1231418>	the node-side readfile (default one) seems to just pass path to fs.readfile, so its always relative to cwd imo
T 1568112948 18<grr1231418>	(that is, the path that gets passed to the function, not the path in the format itself)
T 1568114023 18<robin___18>	hi! how can I call a static method from a static method in the same class? https://pastebin.com/raw/y33cUYwh thanks
T 1568114165 18<Maxdamantus18>	robin___: MethodClass.method1()
T 1568114251 18<Maxdamantus18>	robin___: JS doesn't do anything like making class members available in scope.
T 1568114311 18<robin___18>	Thanks!
T 1568148708 20*	Disconnected (20)
T 1568148732 19*	Now talking on 22##javascript
T 1568148732 22*	Topic for 22##javascript is: JavaScript is *not* Java. | Just ask your question. | Say "!mdn abc" for docs on "abc". | Don't paste code in the channel. | Can't talk? Get registered on freenode ( https://git.io/vaTS2 )
T 1568148732 22*	Topic for 22##javascript set by 26niggler!~niggler@unaffiliated/niggler (24Tue Jan 15 07:16:23 2019)
T 1568149151 18<niggler18>	vscode folding is weird when you have large files
T 1568149216 18<niggler18>	it thinks a function is folded but still kept an array around
T 1568149265 18<ningu18>	you gotta know when to code em, know when to fold em
T 1568149282 18<niggler18>	https://i.imgur.com/5xI7gDa.png
T 1568149291 18<niggler18>	so it successfully folded the array
T 1568149299 18<niggler18>	but kept the close brace and the inner callback
T 1568149317 18<useretail18>	i have npm-module and inside there is src folder. how to compile it into esm/lib
T 1568149328 18<niggler18>	import the src entrypoint
T 1568149334 18<useretail18>	how?
T 1568149348 18<niggler18>	most will tell you what to import
T 1568149360 18<niggler18>	*most READMEs will tell you the entry point for esm
T 1568149381 18<ningu18>	useretail: you want to compile the module into _your_ build or you want to build the module itself?
T 1568149383 18<useretail18>	how to develop such module on a running webserver?
T 1568149405 18<useretail18>	i want to develop that module further and see how it works with my app
T 1568149430 18<ningu18>	useretail: if you are modifying an existing module and want to build it, I'd look into package.json to see what build scripts it has
T 1568149441 18<ningu18>	or just try npm build, I suppose
T 1568149493 18<useretail18>	npm build doesn't work
T 1568149530 18<useretail18>	  "main": "lib/index.js",  "module": "esm/index.js",
T 1568149565 18<useretail18>	but it's a pain in the ass to develop a module this way
T 1568149585 18<useretail18>	i mean after every change i have to build it wo work with main app
T 1568149630 18<ljharb18>	useretail: typically when using `npm link` you'd run the build process in another shell tab with a watcher.
T 1568149647 18<ljharb18>	useretail: but better is, build your module so that it's architected well enough, with good enough tests, that you don't need to test it inside another app
T 1568149738 18<useretail18>	i'm trying to develop a data provider module for react-admin
T 1568149749 18<useretail18>	what's the proper way to do this?
T 1568149772 18<ljharb18>	you'll probably want to use `npm link` for that, given that it sounds like a plugin
T 1568149831 18<useretail18>	it wants to create a symlink in /usr/lib/node_modules/
T 1568149848 18<useretail18>	i'm not sure what it solves
T 1568149884 18<useretail18>	besides, i have to restart react-admin app every time i make a change
T 1568149899 18<useretail18>	is that what modern development looks like?
T 1568149980 18<GreenJello18>	npm link isn't very friendly to file watchers, but try `touch node_modules/the-package-name`
T 1568150095 18<useretail18>	GreenJello, but how to avoid restarting the main app every time i make some changes?
T 1568150155 18<GreenJello18>	useretail, sometimes touching the symlink causes a program to reread the files behind the link
T 1568150189 18<useretail18>	main app starts with: react-scripts start
T 1568150214 18<useretail18>	anyone familiar with react?
T 1568150473 18<GreenJello18>	useretail, hmm, I used `yarn link` but my create-react-app project picked up the change
T 1568150519 18<GreenJello18>	useretail, you might just need to run the build script
T 1568150553 18<useretail18>	sure, but like i said, such development is a pain in the ass
T 1568150569 18<GreenJello18>	useretail, I mean the build script in the project you're linking from
T 1568150572 18<useretail18>	there must be more efficient way
T 1568150667 18<useretail18>	GreenJello, i have only these: "scripts": {"start": "react-scripts start","build": "react-scripts build","test": "react-scripts test","eject": "react-scripts eject"  }
T 1568150717 18<GreenJello18>	useretail, I'm talking about the build script in the package you're linking, but I guess if it works when you restart create-react-app then you're already running that
T 1568150735 18<useretail18>	GreenJello, that
T 1568150743 18<useretail18>	*that's exactly the problem
T 1568150759 18<useretail18>	how to avoid restarting?
T 1568150841 18<useretail18>	plugins has: "scripts": {"build": "yarn run build-cjs && yarn run build-esm","build-cjs": "rimraf ./lib && tsc","build-esm": "rimraf ./esm && tsc --outDir esm --module es2015","watch": "rimraf ./lib && tsc --watch"}
T 1568150853 18<useretail18>	but this doesn't solve anything
T 1568150881 18<useretail18>	because plugin has to be compiled to be used in main app
T 1568150896 18<useretail18>	*build, not compiled
T 1568150998 18<useretail18>	and in main app, everything goes into a webpack
T 1568151064 18<niggler18>	n> 0 == ""
T 1568151065 18<jellobot18>	(okay) true
T 1568151099 18<useretail18>	n> 0 != ""
T 1568151100 18<jellobot18>	(okay) false
T 1568151166 18<useretail18>	it's hard to believe that among 1000+ users present in this channel, nobody faced the same problem
T 1568151201 18<niggler18>	heh ^^ was doing a regex to test for complex numbers and forgot to put back the "1" for the implicit cases of 1+i and 3-j
T 1568151246 18<niggler18>	useretail: id recommend looking at some other starter that does it right and see what they are doing
T 1568151268 18<niggler18>	you need a PhD in webpackology to understand what's going on half the time
T 1568151397 18<useretail18>	react, angular, typescript and all that crap is so overrated
T 1568151425 18<niggler18>	i always thought the technology churn served as a form of job security for those involved
T 1568151473 18<Dirak18>	assuming the technology market is effecient, nothing is truly overrated
T 1568151491 18<niggler18>	thats the point
T 1568151498 18<niggler18>	technology is inherently inefficient
T 1568151549 18<niggler18>	as individuals, we are participants in the labor half of the divide, while as businesses we are on the capital side, we are effectively doing work to ensure we don't have future work
T 1568151550 18<DeltaHeavy18>	How is technology inefficient?
T 1568151568 18<niggler18>	so the individual participants are incentivized to crawl as slowly as possible subject to market constraints
T 1568151569 18<DeltaHeavy18>	Like I'm sure that's not what they said when they invented the horse drawn plow.
T 1568151645 18<useretail18>	angular = google; react = facebook; typescript = microsoft;
T 1568151651 18<useretail18>	great
T 1568151691 18<useretail18>	which makes all modern js devs slaves
T 1568151701 18<niggler18>	you dont have to use them
T 1568151702 18<DeltaHeavy18>	lol
T 1568151705 18<niggler18>	and there's vue
T 1568151722 18<DeltaHeavy18>	React is licensed under the MIT license which means I owe nothing to FB.
T 1568151732 18<DeltaHeavy18>	I'm free to use the software as I see fit pretty much.
T 1568151738 18<Dirak18>	yikes. All those technologies are owned by the community because they're free as in freedom and open source
T 1568151761 18<useretail18>	DeltaHeavy, facebook still own a patent for react
T 1568151765 18<niggler18>	we were sort of discussing this yesterday Dirak
T 1568151765 18<DeltaHeavy18>	Quality work is likely going to be behind projects where very high grade developers are paid to focus on the development and improvment of said software.
T 1568151769 18<ljharb18>	useretail: it's not overrated at all
T 1568151773 18<DeltaHeavy18>	useretail So?
T 1568151773 18<ljharb18>	useretail: not anymore they don't
T 1568151780 18<ljharb18>	useretail: oh well, i guess they still do, that's true
T 1568151783 18<niggler18>	patent concerns aside, react is a facebook production
T 1568151784 18<ljharb18>	useretail: but also yes, so?
T 1568151786 18<Dirak18>	When FB threatened to pull the MIT license, the community was ready to switch off to a FOSS fork
T 1568151793 18<ljharb18>	Dirak: that never happened
T 1568151798 18<useretail18>	DeltaHeavy, check you local patent laws
T 1568151800 18<DeltaHeavy18>	I don't recall thath appening either
T 1568151803 18<ljharb18>	Dirak: FB had a modified MIT license that *also* was a patent grant
T 1568151808 18<DeltaHeavy18>	useretail I know the situation. I don't owe React anything.
T 1568151811 18<niggler18>	there's no governance model outside of FB, and that's also true of angular
T 1568151813 18<ljharb18>	a revocable patent grant
T 1568151818 18<ljharb18>	Dirak: and everyone wanted them to use a regular MIT license. so they eventually did.
T 1568151825 18<niggler18>	*google being the sole arbiter of angular's future
T 1568151838 18<ljharb18>	niggler: "no governance model outside of the company" is a super valid complaint about a great many open source software projects, irrespective of the company.
T 1568151851 18<DeltaHeavy18>	niggler Anybody is free to fork it and create a new one.
T 1568151855 18<niggler18>	that's a vote in favor of vue btw
T 1568151860 18<DeltaHeavy18>	But what's the value in it when FB is already doing it and doing it well?
T 1568151887 18<useretail18>	https://svelte.dev/blog/virtual-dom-is-pure-overhead
T 1568151891 18<ljharb18>	rofl, yeah
T 1568151892 18<niggler18>	the value is in not implicitly supporting the entity behind it, same reason people reject blood diamonds
T 1568151906 18<ljharb18>	useretail: re the earlier thing, many of us have run into the problem; the solution is `npm link` and a tab with a build process with a watcher.
T 1568151915 18<ljharb18>	blood diamonds are hardly comparable to facebook or google
T 1568151929 18<ljharb18>	also, you buy diamonds. you don't buy oss software.
T 1568151933 18<ljharb18>	so, false equivalency.
T 1568151937 18<niggler18>	sure they are, its the same principle except one step removed
T 1568151942 18<jaawerth18>	didn't facebook get rid of its license addendum after the community made noise about it?
T 1568151945 18<niggler18>	you vote with your technology choices
T 1568151959 18<niggler18>	yes FB switched to MIT license, that isn't the discussion here
T 1568151978 18<jaawerth18>	well ljharb  mentioned it and I was just making sure I remembered right that they removed the addon
T 1568151981 18<useretail18>	ljharb, might work, but not efficient, cause it has to webpacked on every change
T 1568151993 18<niggler18>	it was BSD with a dubious patent grant
T 1568151996 18<jaawerth18>	(it was always MIT iirce, it just had an additional license file that went into the patent crap)
T 1568151999 18<jaawerth18>	ahh ok
T 1568152013 18<niggler18>	historically, it was originally Apache2
T 1568152020 18<ljharb18>	jaawerth: FB's original thing was a gift
T 1568152022 18<niggler18>	and to some extent its unfortunate they didnt just go back
T 1568152023 18<useretail18>	jaawerth, doesn't matter, they still have the patent and the right to sue you
T 1568152029 18<ljharb18>	jaawerth: it was a patent grant, but a revocable one if you sued facebook
T 1568152046 18<ljharb18>	jaawerth: they removed the grant, is all, so now instead of "you're only sue-able if you sue facebook" now it's "you're always sue-able"
T 1568152049 18<ljharb18>	useretail: so?
T 1568152049 18<jaawerth18>	useretail: I mean they always have the rights to sue me for anything
T 1568152059 18<jaawerth18>	and they have more lawyers than I do
T 1568152077 18<ljharb18>	useretail: i'm 100% certain - have consulted with lawyers - that anyone using vue also is sue-able by facebook because it's infringing on some of their react patents.
T 1568152087 18<ljharb18>	useretail: but facebook would never do that because it's untenable and unwise from a PR perspective.
T 1568152111 18<ljharb18>	useretail: almost everything is patented at this point.
T 1568152127 18<useretail18>	ljharb, that's exactly the plan - to get more attention
T 1568152185 18<useretail18>	why there's no such hype about libphonenumber developed by google?
T 1568152231 18<useretail18>	it's a great library that i personally used, but unfortunately it wasnt covered in the media as well as angular/react/typescript
T 1568152254 18<useretail18>	it's all about pr
T 1568152270 18<useretail18>	and for me personally angular/react/typescript = fake news
T 1568152275 18<ljharb18>	my point is that who owns the patent is irrelevant unless they’re a known troll
T 1568152283 18<bambanx18>	there is a webpack channel specific on irc?
T 1568152290 18<niggler18>	ljharb: companies are unknown trolls until they start trolling
T 1568152292 18<bambanx18>	or you ask here too about it?
T 1568152295 18<niggler18>	that's not a defense of anything
T 1568152301 18<niggler18>	if the $$ is big enough they'll flip
T 1568152305 18<ljharb18>	perhaps so
T 1568152317 18<ljharb18>	but at that point there’s too many users to sue everyone
T 1568152319 18<niggler18>	so all we can say is that they are currently not suspected of patent trolling
T 1568152325 18<niggler18>	didnt stop oracle from going after google
T 1568152326 18<ljharb18>	and they lose the patent if they don’t
T 1568152363 18<niggler18>	we all vote with our technology choices
T 1568152383 18<useretail18>	yeah, just imagine some rival company of facebook using react. no doubt that they will sue
T 1568152389 18<ljharb18>	You’re legally compelled to sue everyone infringing your patents, or you lose your patents. At this point is doubtful Facebook could ever win a lawsuit over their react patents
T 1568152411 18<systemfault18>	useretail: Why, React is not how facebook makes their money.
T 1568152471 18<systemfault18>	The facebook share is not at 187$ because of React.
T 1568152481 18<useretail18>	systemfault, i thought the same way until apple sued samsung
T 1568152517 18<systemfault18>	useretail: Apple does tablets and phones... Samsung doess ????
T 1568152524 18<systemfault18>	(Hint: tablets and phones)
T 1568152531 18<niggler18>	samsung was forced to adopt asymmetric designs because of apple's suit
T 1568152543 18<niggler18>	which is funny in many ways
T 1568152572 18<sidetracking18>	samsung does refrigerators
T 1568152591 18<mandude18>	I have input name = itemqtyorder65 and I need to grab the last digits (coudl be 2 or 3 digits) to get the line #
T 1568152593 18<mandude18>	not sure how
T 1568152600 18<useretail18>	samsung produces a lot of stuff
T 1568152601 18<niggler18>	samsung is the korean ACME
T 1568152634 18<ningu18>	yamaha is my favorite grand piano/motorcycle company
T 1568152795 18<mandude18>	nevermind
T 1568152806 18<mandude18>	I think I'll pass in line number as data-line='echo php stuff'
T 1568152816 18<niggler18>	mandude:  you need the digits from the string ?
T 1568152818 18<ningu18>	mandude: eh? regex match for digits is really easy
T 1568152824 18<niggler18>	like var name = "itemqtyorder65"?
T 1568152844 18<niggler18>	n> var name = "itemqtyorder65"; name.match(/\d+$/)
T 1568152845 18<jellobot18>	(okay) [ '65', index: 12, input: 'itemqtyorder65', groups: undefined ]
T 1568152848 18<useretail18>	mandude, remove  itemqtyorder from the string and you'll get what you want
T 1568152848 18<ningu18>	passing as data attribute is likely a better idea but sure
T 1568152852 18<ningu18>	regex is easy too
T 1568152883 18<niggler18>	also recommended, if you have control over the source, to prepend with an underscore or dollar sign to avoid confusion
T 1568152902 18<ningu18>	prepend to what?
T 1568152910 18<niggler18>	itemqtyorder$65 like that so you can distinguish itemqtyorder6$5 from itemqtyorder$65
T 1568152921 18<ningu18>	ah yeah
T 1568152924 18<ningu18>	agreed
T 1568152967 18<useretail18>	if you have control over the source don't add itemqtyorder at all
T 1568153207 18<ningu18>	useretail: that is a bit more complicated, depends a lot on specific details. in general I agree though
T 1568153904 18<sinclair18>	ljharb, is correcting comment spelling across a codebase as a PR considered a shit thing to do, or a welcome thing?
T 1568153930 18<niggler18>	depends, the good thing to do is introduce a spellcheck
T 1568153932 18<sinclair18>	ljharb, im not sure how id feel about someone submitting a PR to correct my comment spelling tbh
T 1568153946 18<Aquazi18>	n> const p = new Promise(res => {res('hi'); console.log('ho')}); p.then(val => console.log)
T 1568153947 18<jellobot18>	(okay) ho [Function: bound consoleCall]
T 1568153951 18<systemfault18>	A good way to become famous
T 1568153974 18<Aquazi18>	why does it print 'ho'?
T 1568153996 18<Aquazi18>	I would've thought a promise would exit when you resolve it
T 1568154000 18<niggler18>	Aquazi: calling resolve doesn't exit
T 1568154010 18<niggler18>	sinclair: relevant https://github.com/mochajs/mocha/pull/2983
T 1568154017 18<Aquazi18>	what do you mean niggler
T 1568154019 18<niggler18>	someone ran spell check noticed a test wasn't being run and identified an issue
T 1568154027 18<niggler18>	Aquazi: its not like process.exit in node
T 1568154029 18<deltab18>	Aquazi: it's not a return statement, nor does it throw
T 1568154049 18<Aquazi18>	it's a bit stupid of a design imho tho
T 1568154070 18<niggler18>	there's no pure-JS way of doing that
T 1568154071 18<Dirak18>	why should it return once resolve is called? lol
T 1568154086 18<Aquazi18>	why should it not?
T 1568154098 18<Aquazi18>	what are you gonna do inside the promise anymore?
T 1568154099 18<Dirak18>	because there's no indication that it should imo
T 1568154103 18<deltab18>	because that'd be inconsistent with how other function calls work
T 1568154111 18<jaawerth18>	because that's not how functions work
T 1568154118 18<graingert18>	Dirak jaawerth it could throw
T 1568154137 18<jaawerth18>	yeah but the Promise constructor is a callback that, in turn, takes resolve as a callback
T 1568154137 18<deltab18>	graingert: it could, but there's no need to
T 1568154141 18<ningu18>	I would expect code after resolve() to still run
T 1568154141 18<Aquazi18>	idk, would've made more sense if it just quit after it resolved or rejected
T 1568154147 18<deltab18>	it'd be wasteful overhead most of the time
T 1568154153 18<jaawerth18>	what that function does *after* resolving, there's no way for the Promise to know unless the callback tries to re-invoke resolve/reject
T 1568154154 18<niggler18>	sinclair: ljharb people have found bugs through spellcheck and it's 100% worth spellchecking comments to potentially find bugs
T 1568154165 18<ningu18>	Aquazi: how would the interpreter know to do that?
T 1568154178 18<graingert18>	we spellcheck for stuff like metatdata
T 1568154185 18<Aquazi18>	idk, I'm not a language designer
T 1568154189 18<ningu18>	do they spell check in harry potter?
T 1568154190 18<graingert18>	common stuff that can never be wrong
T 1568154195 18<jaawerth18>	I'm just saying that's how functions work
T 1568154213 18<Aquazi18>	idk imho resolving or rejecting should have the same effect of returning
T 1568154214 18<jaawerth18>	function won't return early unless you tell it to - it's up the author of the callback to return after invoking resolve()
T 1568154231 18<Aquazi18>	should've been implicit behavior
T 1568154231 18<graingert18>	Aquazi: what
T 1568154237 18<ningu18>	Aquazi: there is no facility in the language to return from a function other than "return"
T 1568154247 18<niggler18>	that's not the point ningu
T 1568154247 18<ningu18>	or end of block
T 1568154248 18<graingert18>	and throw
T 1568154249 18<jaawerth18>	you would have to define a special magic function that does that
T 1568154257 18<jaawerth18>	which would make things even more complicated
T 1568154257 18<graingert18>	you could use goto
T 1568154259 18<ningu18>	niggler: also there is no guarantee than Promise is builtin
T 1568154260 18<niggler18>	the spec couldve made it an implicit bailout
T 1568154262 18<graingert18>	python also has comefrom
T 1568154269 18<graingert18>	which is the duel of goto
T 1568154273 18<niggler18>	but they chose not to
T 1568154273 18<graingert18>	dual*
T 1568154273 18<ningu18>	although I guess you could ban things like bluebird or ignore this case for them
T 1568154289 18<Dirak18>	Also, a common pattern with Promises is to do { if (success) { resolve() } else { reject() } ... cleanup logic }
T 1568154295 18<Aquazi18>	I'm just saying it's a bit confusing with the utility of a promise
T 1568154298 18<deltab18>	ningu: yes; it's even more important in HP, where the intonation or rhythm can change the effect :-)
T 1568154302 18<ningu18>	niggler: well, yeah, because that kind of implicit behavior is really surprising to language users, if it's not consistent/systematic
T 1568154333 18<graingert18>	Dirak: cleanup logic?
T 1568154340 18<jaawerth18>	yeah I thin it just working as a regular callback is actually less confusing so long as you remember a promise is just an object with methods that take callbacks, which is created by a constructor that takes a callback
T 1568154343 18<Aquazi18>	just doesn't make sense to me it executes code when you're resolving or rejecting nor it has any desireable utility other than executing some side effect
T 1568154349 18<jaawerth18>	no magic - just functions that take/pass functions
T 1568154363 18<graingert18>	imho use nodebacks or async/await only
T 1568154365 18<Dirak18>	@graingert post-processing logic* I guess
T 1568154367 18<niggler18>	Aquazi: it was a design choice
T 1568154373 18<graingert18>	and util.promisify as asap as possible
T 1568154376 18<jaawerth18>	nodebacks? ew
T 1568154377 18<Aquazi18>	I dislike asinc await
T 1568154397 18<niggler18>	they decided "be consistent with JS implementations" over "implicit return"
T 1568154399 18<Aquazi18>	that's just a personal preference, you just end up try catching entire blocks
T 1568154416 18<graingert18>	Aquazi: ?
T 1568154419 18<jaawerth18>	yeah - magic implicit behavior like that adds to the syntax complexity
T 1568154437 18<jaawerth18>	and would also make native promises really hard to polyfill
T 1568154439 18<niggler18>	also consider a case like
T 1568154444 18<Aquazi18>	don't understand the ?
T 1568154459 18<niggler18>	res => { do_something(res); something_else(); } where do_something(res) resolves
T 1568154464 18<graingert18>	Aquazi: when you do you not try catch entire blocks?
T 1568154464 18<Aquazi18>	if you fetch some data it can fail, you use async await and think you have a value, you don't
T 1568154470 18<niggler18>	it becomes more confusing to read because now you need to know that do_something does resolve
T 1568154477 18<niggler18>	will something_else be called?
T 1568154486 18<niggler18>	action at a distance is bad
T 1568154497 18<graingert18>	Aquazi: what can fail?
T 1568154502 18<Aquazi18>	anything?
T 1568154504 18<graingert18>	Aquazi: when can you think you have a value but not?
T 1568154521 18<Aquazi18>	request can throw
T 1568154532 18<Aquazi18>	so does axios for any non 200-300 status code
T 1568154535 18<Aquazi18>	they just throw
T 1568154547 18<graingert18>	ok so
T 1568154550 18<jaawerth18>	yeah that's often the desired behavior - a rejected promise, which throws with async/await
T 1568154554 18<graingert18>	you can get that with .thens
T 1568154558 18<Aquazi18>	every monadic behavior has to be trycatched but async/await does not make it obvious
T 1568154558 18<systemfault18>	Yes, async/await is imperative, not functional.
T 1568154563 18<jaawerth18>	though I'll sometimes await res.catch(handleRejection) if I don't wanna put try/catch everywhere
T 1568154579 18<graingert18>	systemfault: comprehensions would have been better
T 1568154592 18<systemfault18>	There's no hope for JS in that area.
T 1568154601 18<jaawerth18>	async comprehensions?
T 1568154612 18<Aquazi18>	people even forget to try catch JSON.parse
T 1568154620 18<Aquazi18>	let alone async code that does 200 things
T 1568154641 18<Aquazi18>	I like promises better, but it's a matter of personal preference, not arguing about any objective "betterness"
T 1568154657 18<niggler18>	we should optimize for readability
T 1568154662 18<jaawerth18>	I mean, sometimes you don't need to catch every single thing in an async fufnction and just need to handle the outer promise rejection - I only individually catch things that might be recoverable
T 1568154668 18<niggler18>	and any sort of action at a distance or magic detracts from readability
T 1568154676 18<jaawerth18>	(and I'll often use .catch even inside an async function)
T 1568154689 18<jaawerth18>	people forget that async/await and promises +./then/.catch aren't mutually exclusive
T 1568154694 18<Aquazi18>	well, I don't really think promises are hard to read..
T 1568154704 18<jaawerth18>	I only use await when the code will be cleaner if made a bit more imperative
T 1568154706 18<Aquazi18>	they are as much as you make them hard to read
T 1568154722 18<niggler18>	having `res` return detracts from readaability
T 1568154722 18<jaawerth18>	I sometimes use async functions without any await at all
T 1568154760 18<jaawerth18>	just to ensure any synchronnous throws are wrapped in the promise, plus I find `async` to be a nice little cue that "this function returns a promise"
T 1568154767 18<Aquazi18>	that's exactly like not catching a promise btw
T 1568154772 18<Aquazi18>	no difference at all
T 1568154782 18<Aquazi18>	oh didn't read the second line
T 1568154782 18<jaawerth18>	what? no it isn't
T 1568154835 18<jaawerth18>	like, you can write an async function with no try/catch so long as you use .catch on the promise it returns. it depends on where you need to intercept the error
T 1568154838 18<Aquazi18>	that being said as a ts user it's pretty obvious from the function signature that it would return a promise
T 1568154841 18<sinclair18>	niggler, https://github.com/mochajs/mocha/pull/2983 doesn't need a spell checker, it needs a type checker
T 1568154848 18<Aquazi18>	so never had this issue
T 1568154891 18<niggler18>	spellchecker wouldve picked up both without the need for worrying about types and whatnot
T 1568154941 18<jaawerth18>	like I might do `const res = await foo.catch(handleRejection)`, where handleRejection knows how to recover from certain types of error - and it will do that, or else re-reject, in which case the throw happens and some outer error handler (that, say, displays an error message to the user or whatever) will deal with the non-specific error case
T 1568154993 18<Aquazi18>	got another question, anybody knows a plug and play jest reporter that gives me test results in a simple html page?
T 1568155020 18<Aquazi18>	not really readable to follow them in a terminal
T 1568155071 18<niggler18>	use mocha
T 1568155102 18<prometh18>	mocha++
T 1568155124 18<jaawerth18>	Aquazi: there's an istanbul html reporter you can use, and jest works with all istanbul reporters
T 1568155128 18<jaawerth18>	and also boo mocha
T 1568155131 18<jaawerth18>	tape > jest > mocha
T 1568155150 18<niggler18>	jest < tape < mocha
T 1568155175 18<prometh18>	mocha
T 1568155180 18<jaawerth18>	and the lcov reporter generates both lcov text AND html
T 1568155184 18<niggler18>	jest, by din of being a facebook product, already starts in the hole
T 1568155204 18<niggler18>	and mocha, being a gift from our patron saint TJ Holowaychuk, already starts with +1
T 1568155219 18<jaawerth18>	mocha and tape both introduce globals: -100
T 1568155221 18<jaawerth18>	er
T 1568155223 18<jaawerth18>	mocha nad jest
T 1568155226 18<jaawerth18>	tape does not: +100
T 1568155228 18<prometh18>	jaawerth: that's the only negative for mocha
T 1568155267 18<prometh18>	you can avoid it with lints, though
T 1568155275 18<prometh18>	and do `import {it} from 'mocha'`
T 1568155298 18<jaawerth18>	I don't love jest but it does have a bunch of built-in goodies that ease client-side testing when you don't want to hand-craft your testing toolchain
T 1568155307 18<jaawerth18>	so I allowed my team to adopt it
T 1568155316 18<prometh18>	i haven't used jest enough, but i did find its setup weird
T 1568155340 18<jaawerth18>	there are things I dislike about it still but if I'm gonna deal with things I dislike, it might as well make it worth my while by having goodies
T 1568155341 18<prometh18>	i really prefer chai, too
T 1568155357 18<niggler18>	my exposure to jest was primarily through gatsby and it was painful to get setup
T 1568155368 18<jaawerth18>	just so long as you aren't using chai's should api :P
T 1568155369 18<niggler18>	but that was a few years ago, it mightve improved since then
T 1568155373 18<prometh18>	jaawerth: expect
T 1568155386 18<jaawerth18>	yeah that's fine, I just can't stand the one that pollutes all the prototypes
T 1568155388 18<prometh18>	"nothing should work"
T 1568155405 18<jaawerth18>	"oh sure let's inject magic prototypes into everything"
T 1568155418 18<prometh18>	yep
T 1568155427 18<prometh18>	but also the fact that "should" instills doubt
T 1568155441 18<jaawerth18>	I used to prefer expect but these days I prefer a minimalist set of assert functions that can be extended if need be
T 1568155460 18<jaawerth18>	but expect is still fine
T 1568155461 18<prometh18>	assert functions look too much like code to me.. it takes longer to read
T 1568155499 18<Aquazi18>	last quick question, my test suite took like few seconds before, added an html reporter and it takes like 4 times more...? how's that related :v
T 1568155561 18<jaawerth18>	I wouldn't expect the html reporter to slow it down THAT bad. What happens when you rerun it? Wondering if it maybe had to generate some static resources that are now cached
T 1568155591 18<Aquazi18>	still takes the same time (went from 3s to 23)
T 1568155613 18<jaawerth18>	23 seconds? that's nuts
T 1568155630 18<jaawerth18>	yeah that is not at all my experience
T 1568155632 18<Aquazi18>	there has to be something wrong there
T 1568155647 18<jaawerth18>	you plugged it directly in via jest's coverage reporter api, right?
T 1568155650 18<Aquazi18>	I noticed async callbacks are not called in 5'000 ms, I'll check why
T 1568155656 18<jaawerth18>	ahh
T 1568155660 18<jaawerth18>	maybe something else changed
T 1568155670 18<jaawerth18>	in which case it should also take longer if you remove the html reporter
T 1568155710 18<Aquazi18>	it's strange tho, same test, no code changes.. and yes not runner related
T 1568155736 18<jaawerth18>	sounds like a promise somewhere is being left pending
T 1568155762 18<Aquazi18>	yeah but again..no changes from before..probably I fked up somewhere :D I'll go fix
T 1568155883 18<Aquazi18>	that's my test: https://gist.github.com/VulcanRav/8ba3bc0c5ae25b3d81c274b3ac06048c
T 1568155929 18<Aquazi18>	also noticed a bug, but unrelated to the issue
T 1568156052 18<systemfault18>	That test is bad and breaks the promise chain.
T 1568156070 18<Aquazi18>	could you expand maybe?
T 1568156071 18<systemfault18>	You need to return the inner promise so the error propagates
T 1568156101 18<systemfault18>	Or... line 8 is missing an await or something
T 1568156115 18<jaawerth18>	both inside the query function, and also you'll need to etiher return the outer promise to jset or add .catch(done) to teh outer promise in lieu of the try/catch
T 1568156148 18<Aquazi18>	wait I didn't understand what you both said
T 1568156185 18<Aquazi18>	first of all idc about the error atm, second, shouldn't jest wait for the done callback to be called?
T 1568156228 18<jaawerth18>	and if the done callback is never called, like if there's an error and you aren't invoking done in the error handler, it will just sit there until jest's timeout is reached
T 1568156238 18<Aquazi18>	oh I see
T 1568156261 18<Aquazi18>	now it's clear
T 1568156337 18<jaawerth18>	no reason to .catch and console.log the error - if your tests don't *want* an error to happen, you can just let it throw and the test framework will handle it. OR if it's a promise rejecting, just do .catch(done) - since done(error) reports the failure to jest
T 1568156359 18<Aquazi18>	yes that was the issue, I didn't realize I had to call done() in the error block
T 1568156364 18<jaawerth18>	OR you can not use the done callback at all and instead return a promise from inside test(), and jest will know how to handle it - it supports both styles
T 1568156378 18<jaawerth18>	the try/catch won't work if the promise rejects though
T 1568156389 18<jaawerth18>	I would get rid of it and just .catch(done) on the promise
T 1568156403 18<Aquazi18>	I tried without the done callback
T 1568156409 18<Aquazi18>	but it never worked for me
T 1568156420 18<Aquazi18>	maybe I wasn't returning a promise tho
T 1568156430 18<Aquazi18>	but executing a block with a promise in it
T 1568156435 18<jaawerth18>	yeah you can only omit the callback entirely for async stuff when you return a promise to est
T 1568156438 18<jaawerth18>	to jest*
T 1568156469 18<jaawerth18>	jest can then use that promise to know when the test is finished, OR when it's failed, using .then/.catch under the hood
T 1568156495 18<Aquazi18>	now it works as supposed, but to be fair I think that if you didn't tell me it would've taken me an afternoon to catch the issue
T 1568156530 18<Aquazi18>	now that I look at it seems obvious
T 1568156535 18<Aquazi18>	lol
T 1568156767 18<jaawerth18>	for what it's worth, that's not an uncommon confusion to run into at first
T 1568156799 18<jaawerth18>	it's pretty easy to spot once you get used to it ;-)
T 1568157589 18<_ohm18>	what's that html input where it presents you a list of values, and when you click an element it is simply highlighted?
T 1568157774 18<grr1231418>	select[multiple]
T 1568157860 18<_ohm18>	grr12314: <select[multiple]> ?
T 1568157986 18<nibzAU18>	Hello.. So.. let sum = (a,b) => a+b;  from what  reading is an arrow function.. Thats the example they gave so...  Why not just... Let sum = a+ b; ? I dont see the use of arrow functions
T 1568158021 18<ningu18>	nibzAU: that isn't a function then
T 1568158043 18<ningu18>	it's just a number stored in a variable called sum
T 1568158054 18<niggler18>	n> foo: if(true) { if(true) break foo; console.log("inner") }
T 1568158055 18<jellobot18>	(okay) undefined
T 1568158083 18<nibzAU18>	Ooooooohh so let sum makes sum a function i can call
T 1568158105 18<nibzAU18>	Its not just storing the return value as a variable
T 1568158164 18<nibzAU18>	So i could later go newSum = sum(1,3) ???
T 1568158167 18<_ohm18>	grr12314: ty
T 1568158232 18<GreenJello18>	nibzAU, yes
T 1568158284 18<netgene18>	Can anyone help me with this? Why the events don't trigger correctly??????  https://paste.ofcode.org/dR2mzgcVQERpHP6LQxAa8C
T 1568158396 18<evulish18>	healthy food is disgusting
T 1568158521 18<evulish18>	netgene: maybe this? https://stackoverflow.com/a/7476832/6833683
T 1568158548 18<netgene18>	I tried that too... doesn't work.  The onload doesn't trigger!
T 1568158754 18<deltab18>	nibzAU: here's another one:  let isEven = (x) => x % 2 == 0;
T 1568158786 18<deltab18>	n> let isEven = (x) => x % 2 == 0; [1, 2, 3, 4, 5, 6, 7, 8].filter(isEven)
T 1568158787 18<jellobot18>	(okay) [ 2, 4, 6, 8 ]
T 1568158802 18<poboy18>	how are we even supposed to know which version of ES javascript is using?
T 1568158811 18<poboy18>	I'm still trying to wrap my brain around es6.   :)
T 1568158895 18<deltab18>	poboy: the important question is: does the implementation I'm using have the feature I want to use?
T 1568158921 18<poboy18>	well I'm fine with using jQuery the rest of my days, but apparently the rest of the world is not
T 1568158953 18<deltab18>	and there are websites that can answer that
T 1568158956 18<deltab18>	!kangax
T 1568158957 18<ecmabot18>	deltab: ES5,ES6/ES2015,ES2016-ES2020 (ES2015 was formerly known as ES6) and proposal support tables: http://kangax.github.io/compat-table/
T 1568158961 18<nibzAU18>	Thanks deltab Im new and can only just underatand that. Ive forgotten what filter did
T 1568159039 18<deltab18>	nibzAU: filter looks at each element of an array in turn, calling a function. If the function returns true, filter adds the element to a new array, which it returns at the end
T 1568159076 18<deltab18>	so in that example, it's made an array of only the even numbers
T 1568159117 18<deltab18>	you could do the same thing with  function isEven(x)
T 1568159144 18<deltab18>	n> function isEven(x) { return x % 2 == 0; }; [1, 2, 3, 4, 5, 6, 7, 8].filter(isEven)
T 1568159145 18<jellobot18>	(okay) [ 2, 4, 6, 8 ]
T 1568159187 18<poboy18>	so looks like es8 is already released
T 1568159199 18<poboy18>	haha 2+ years ago
T 1568159225 18<devsnek18>	poboy: just refer to them by year
T 1568159226 18<devsnek18>	its easier
T 1568159237 18<devsnek18>	es2015, es2016, es2017, etc
T 1568159242 18<poboy18>	so there's an es2019 somewhere?
T 1568159253 18<deltab18>	yes, it's the most recent one
T 1568159264 18<deltab18>	next year we'll have es2020
T 1568159268 18<poboy18>	not trying to be clueless.  as a php dev I'm just ecstatic that I've been able to do super basic stuff in both React and Vue
T 1568159279 18<devsnek18>	es2020 is already drafted https://tc39.es/ecma262/
T 1568159287 18<poboy18>	but .some() and .find() are pretty cool
T 1568159352 18<deltab18>	yep
T 1568159463 18<evulish18>	my dinner is gross, i'm about to throw it out and get some wendy's and a beer
T 1568159588 18<ljharb18>	sinclair: it's usually a nice thing to do, if you're not a jerk about it. if you do it tho, do it all in one commit/PR, not like 50 separate ones
T 1568159600 18<ljharb18>	poboy: there's one every year
T 1568159606 18<ljharb18>	poboy: and no browser implements exactly one edition
T 1568159620 18<ljharb18>	poboy: they all have a mix of "lacking older stuff" and "having newer stuff"
T 1568159695 18<sinclair18>	ljharb, mmm, not sure, i might leave it, i don't want to be a jerk about it, but i mean, in time, i imagine tools will exist to auto correct spelling mistakes in repos any
T 1568159717 18<sinclair18>	ljharb, its a cheap way to contribute to a project.
T 1568159721 18<ljharb18>	sinclair: i doubt it. programming words are hard to detect.
T 1568159726 18<sinclair18>	might as well let a machine do it
T 1568159746 18<sinclair18>	ljharb, ah, these are just general spelling mistakes in an otherwise brillant piece of software
T 1568159765 18<sinclair18>	0 impact on the code at all
T 1568159768 18<devsnek18>	my first pr to node was a spelling mistake
T 1568159774 18<ljharb18>	one kind of sloppiness implies others
T 1568159778 18<devsnek18>	and now look at me
T 1568159783 18<devsnek18>	inventing js
T 1568159804 18<devsnek18>	maybe a lack of spelling fixes is what's holding you back sinclair
T 1568159820 18<sinclair18>	devsnek, ill think ill pass
T 1568159843 18<sinclair18>	id like to think i have more to provide to a software than fixing spelling errors in comments
T 1568160089 18<ynggekko18>	note: spelling → grammar → coding
T 1568160091 18<ljharb18>	sinclair: fixing prose is often much more valuable than code.
T 1568160098 18<ynggekko18>	ie, spelling precedes coding
T 1568160118 18<sinclair18>	ljharb, maybe in JS land
T 1568160132 18<ljharb18>	sinclair: in all lands
T 1568160224 18<sinclair18>	ljharb, secondary concern, i think what's important is someone is able to grok a comment irrespective of the comment being grammically and spelling correct.
T 1568160240 18<devsnek18>	those last two bits help with the first bit
T 1568160248 18<devsnek18>	especially in open source
T 1568160255 18<devsnek18>	because you get people who don't speak your language
T 1568160261 18<devsnek18>	and google translate can't fix spelling mistakes
T 1568160271 18<sinclair18>	ljharb, its a nice to have, but submitting a PR fixing spelling errors demonstrates a certain level of pedantic, id interpret it as annoying, but thanks
T 1568160294 18<devsnek18>	every oss project i work on loves getting those
T 1568160337 18<sinclair18>	devsnek, it can be automated
T 1568160346 18<niggler18>	sinclair: spelling errors in documentation and comments are oftentimes indicative of sloppy practices elsewhere.  A comment is useless if no one has read it, and spelling errors more often than not indicate that the developers never revisited that code segment or bothered to look at the comments
T 1568160364 18<devsnek18>	people try to do automated comment fixes and they all suck
T 1568160377 18<niggler18>	so merely identifying those areas is enough to get a fresh pair of eyes on code blocks that probably haven't been touched in years
T 1568160385 18<ljharb18>	sinclair: so it sounds like you're more concerned with how a maintainer will feel about you making their project better, than about making it better
T 1568160386 18<sinclair18>	niggler, in this particular scenario, i don't think that's true.
T 1568160396 18<sinclair18>	ljharb, yeah, in this instance, yeah actually
T 1568160410 18<ljharb18>	sinclair: which seems odd given your insistence on technical issues being much more important than human issues.
T 1568160419 18<niggler18>	it absolutely is true
T 1568160423 18<devsnek18>	even the linux kernel has a tradition of newcomers starting out fixing typos
T 1568160430 18<ljharb18>	so which is it - do human issues matter more, or do technical issues?
T 1568160436 18<sinclair18>	ljharb, not really, comments are not technical issues, they are human issues
T 1568160459 18<sinclair18>	ljharb, if the comments had any bearing on the overall functioning of the software, i wouldn't care.
T 1568160466 18<ljharb18>	sinclair: comments that don't help maintenance of the code are bloat and should be expunged.
T 1568160482 18<ljharb18>	so if it's not important enough to fix them, send a PR removing them ¯\_(ツ)_/¯
T 1568160491 18<sinclair18>	ljharb, fwiw, i could easily grok all the comments, and its a well commented project
T 1568160502 18<niggler18>	sinclair: the human parts are always important
T 1568160507 18<ljharb18>	then it seems like the maintainer would appreciate the improvement
T 1568160510 18<hassoon18>	who are we
T 1568160523 18<hassoon18>	meh.
T 1568160539 18<niggler18>	https://github.com/gatsbyjs/gatsby/issues/13011 if "technical issues" like tests are disregarded, it calls into question the quality of the project as a whole
T 1568160561 18<niggler18>	and there's a spectrum, "spelling and grammar" definitely matter for many people
T 1568160590 18<sinclair18>	ljharb, i think this is a matter of OSS etiquette, I know i've been annoyed in the past for a PR that corrected comments, when im knee deep in technical details
T 1568160613 18<niggler18>	you shouldn't be in OSS then
T 1568160622 18<ljharb18>	sinclair: OSS etiquette is to appreciate all sorts of spelling corrections. getting annoyed at it is de passe in OSS.
T 1568160634 18<sinclair18>	niggler, you're not the judge of that
T 1568160638 18<ljharb18>	iow, you should discount your own reaction as being not representative.
T 1568160644 18<niggler18>	99% of the advantage of making something open source is getting other people to look at your code
T 1568160647 18<sinclair18>	ljharb, yeah maybe
T 1568160651 18<niggler18>	otherwise you wouldn't make it open in the first place
T 1568160656 18<prometh18>	spelling errors can be the result of english as a second language
T 1568160665 18<sinclair18>	^ this is a factor also
T 1568160669 18<prometh18>	it might require three times the effort from the dev
T 1568160670 18<ljharb18>	right, which is good to correct
T 1568160676 18<prometh18>	sure, correct them
T 1568160691 18<ljharb18>	anyone who gets upset that someone nicely corrects their non-native language is someone looking for reasons to be upset
T 1568160702 18<devsnek18>	i really can't think of anything but positives for fixing spelling mistakes
T 1568160708 18<prometh18>	rewording them can be annoying as it can require a lot of context to review
T 1568160711 18<devsnek18>	hacktoberfest is coming up too
T 1568160729 18<devsnek18>	and a lot of hacktoberfest prs are little things like documentation and comments
T 1568160737 18<sinclair18>	ljharb, i think when you're writing native OS abstractions for unix, windows, and redox, comment spelling correctness is the least of your concerns
T 1568160741 18<prometh18>	but if the comment rewording is part of other relevant fixes, then sure
T 1568160743 18<sinclair18>	well, food for thought
T 1568160749 18<devsnek18>	sinclair: or its the most of your concerns
T 1568160775 18<devsnek18>	the importance of comments tends to scale with the complexity of the system
T 1568160776 18<prometh18>	comments are language, just a code is langauge... if teh comment is needed, then it should be correct
T 1568160784 18<prometh18>	"just as"
T 1568160785 18<sinclair18>	devsnek, im just questioning the etiquate around submitting spelling mistakes in comments when it has 0 bearing on a softwares functioning
T 1568160795 18<ljharb18>	sinclair: there is no software where prose correctness is the least of one's concerns.
T 1568160799 18<devsnek18>	and everyone is saying its a positive thing
T 1568160813 18<sinclair18>	yeah, guess so
T 1568160820 18<devsnek18>	https://github.com/nodejs/node/blob/master/lib/internal/timers.js#L3-L73
T 1568160821 18<ljharb18>	sinclair: you asked the question, suggesting you have doubts. ZERO people here have doubts that it's a positive thing.
T 1568160821 18<prometh18>	if you notice it, fix it
T 1568160824 18<RenjieAbarai18>	celphi: I still haven't. Any thoughts?
T 1568160826 18<prometh18>	someone else may not notice it
T 1568160833 18<devsnek18>	you all should definitely appreciate the comment i linked
T 1568160834 18<ljharb18>	sinclair: how is "maybe you" vs "definitely everyone" not a clear outcome?
T 1568160836 18<RenjieAbarai18>	NoiseEee: No there was no # on my url.
T 1568160840 18<devsnek18>	i didn't write it but its fantastic
T 1568160856 18<ljharb18>	devsnek: fantasticness confirmed
T 1568160876 18<devsnek18>	this comment allowed me to implement my own system twice with similar performance characteristics
T 1568160883 18<prometh18>	that probably should've been its own lib
T 1568160894 18<prometh18>	that long comment oculd've been a readme
T 1568160913 18<ljharb18>	devsnek: original source: https://github.com/nodejs/node/commit/67963c8c6643f0f6f406b0645814faf88f88b679
T 1568160943 18<prometh18>	at this point, node.js source code should use npm
T 1568160944 18<sinclair18>	ljharb, personally, i think eqittate would dictate 2 PR's, one to enhance or fix an issue, and another one fixing spelling errors.
T 1568160952 18<poboy18>	spelling errors are the worst
T 1568160958 18<ljharb18>	sinclair: i agree, if the spelling issues aren't related to the issue
T 1568160960 18<devsnek18>	prometh: it almost does
T 1568160966 18<ljharb18>	sinclair: if they're related, bundle them together.
T 1568160966 18<devsnek18>	node core has a dependency on acorn
T 1568160981 18<ningu18>	squirrels do too
T 1568160985 18<prometh18>	devsnek: a lot of js in node.js source code shouldn't even be part of the codebase.. they should be depednencies
T 1568160987 18<sinclair18>	ljharb, just randomly submitting a PR correcting spelling mistakes comes of pedantic to me without offering something of actual technical value to a project to demonstrate investment
T 1568160999 18<ljharb18>	sinclair: it's not pedantic, it's helpful
T 1568161002 18<ljharb18>	the same as randomly submitting any PR
T 1568161011 18<ningu18>	I completely agree it's helpful
T 1568161013 18<ljharb18>	we've all said multiple times that spelling corrections ARE actual technical value.
T 1568161022 18<ningu18>	right. documentation is of technical value
T 1568161024 18<devsnek18>	prometh: strong disagree
T 1568161024 18<prometh18>	comments are language, code is language
T 1568161049 18<sinclair18>	it may be, but i think you can approach it more tactfully with demonstrating investment in a project by offering technical assistance in some other capacity.
T 1568161053 18<sinclair18>	that's just me
T 1568161058 18<prometh18>	devsnek: the code can be reused elsewhere, instead of re-publishing
T 1568161162 18<ningu18>	sinclair: most projects welcome help on "boring" tasks like fixing documentation, improving tests, etc
T 1568161164 18<sinclair18>	ljharb, well, perhaps as part of a larger effort to provide documentation for said project, then perhaps....just pedantically fixing spelling mistakes in isolation in a otherwise brillant project, just seems a bit off to me. But im weird like that
T 1568161169 18<ningu18>	that is also a way to build trust
T 1568161172 18<devsnek18>	prometh: pretty much everything in node core requires native backing
T 1568161183 18<devsnek18>	with the exception of eventemitter
T 1568161195 18<devsnek18>	but so much stuff depends on eventemitter its not worth moving
T 1568161210 18<ningu18>	sinclair: documentation is always an effort, there doesn't need to be a specific ongoing effort to improve it
T 1568161236 18<prometh18>	ningu: there is if no one wants to do it
T 1568161280 18<ningu18>	prometh: huh?
T 1568161299 18<ningu18>	my point is I don't see why there would be a moment where documentation improvements would be unwelcome
T 1568161428 18<LACampbell18>	trying to debug an async function in chrome. put a break point in the first line. press F10 for step over function call. it takes me to the declaration of the function, then starts debugging runtime.js. how are you supposed to do it?
T 1568161521 18<devsnek18>	runtime.js as in babel-runtime?
T 1568161536 18<devsnek18>	if its transpiled you're out of luck
T 1568161555 18<lloydxmas18>	we'll write the docs after we write the tests ;)
T 1568161597 18<LACampbell18>	devsnek: oh right, that's probably the problem. I suppose I should make a non-transpiled build so I can debug
T 1568161984 18<prometh18>	LACampbell: source maps?
T 1568161993 18<devsnek18>	source maps won't let the debugger hop
T 1568161995 18<prometh18>	i don't use the debugger, though
T 1568161997 18<prometh18>	ok
T 1568162006 18<devsnek18>	they just map source code
T 1568162012 18<devsnek18>	hence source map
T 1568162023 18<devsnek18>	they don't tell the engine how to interpret the change
T 1568162028 18<prometh18>	i don't see why it can't map break points
T 1568162065 18<prometh18>	if 3 transpiled lines equates to 1 mapped line, it can break before or after those 3 lines
T 1568162072 18<devsnek18>	prometh: its not that
T 1568162107 18<devsnek18>	its that the engine doesn't know where to place the breakpoint in the output because the entire control flow is different
T 1568162146 18<prometh18>	i'll take your word for it
T 1568162156 18<prometh18>	but things seemed to line up pretty well in code coverage
T 1568162176 18<devsnek18>	its possible in theory
T 1568162182 18<devsnek18>	but its infinitely complex
T 1568162194 18<prometh18>	sounds like something that will eventually happen, then :)
T 1568162198 18<devsnek18>	every new way source text can be transformed requires the engine to understand that new way
T 1568162201 18<prometh18>	i mean, the js runtime is complex
T 1568162210 18<mia18>	Hey all, what do you think about embedded document/object databases
T 1568162216 18<mia18>	such as nedb
T 1568162230 18<devsnek18>	prometh: engines can do trivial sourcemap breakpoints
T 1568162242 18<devsnek18>	the problem is when the control flow changes
T 1568162265 18<jaawerth18>	mia: I like them but don't use them unless the project calls for it
T 1568162295 18<mia18>	jaawerth, which one do you use
T 1568162317 18<mia18>	I found taffy, loki, nedb
T 1568162325 18<jaawerth18>	I have plans for a hybrid notes app that uses pouchdb (which I've used a bit before on other things) locally and can can optionally sync up to anything that supports the couchdb api, which could be a server running pouchdb or a full couch instance
T 1568162326 18<mia18>	I'm sure there are others, I just don't know which one to go for
T 1568162337 18<mia18>	I can't find benchmarks about these things
T 1568162348 18<jaawerth18>	generally it depends on what your usecase is
T 1568162368 18<jaawerth18>	like, pouchdb isn't particularly fast for querying, comparatively speaking, but it's very good for syncing since it can act as a node in a couchdb cluster
T 1568162443 18<mia18>	jaawerth, I'll keep user data in it after successful oauth
T 1568162443 18<jaawerth18>	then there are graph databases like gun (which is also real-time and can sync/be decentralized). others are more optimized for efficient querying etc
T 1568162448 18<Dirak18>	can js intercept a browser refresh?
T 1568162464 18<jaawerth18>	often localStorage is good enough but not always
T 1568162473 18<jaawerth18>	mia: how much user data we talking?
T 1568162508 18<mia18>	jaawerth, not much I suppose
T 1568162519 18<mia18>	if it grows I'll switch to postgres
T 1568162523 18<jaawerth18>	so a db might be overkill. nedb has a good rep for basic local db usage though
T 1568162526 18<mia18>	I jsut wanted something compact
T 1568162552 18<mia18>	jaawerth, hm, what should be done if there is no db?
T 1568162566 18<jaawerth18>	oh wait is this for server-side?
T 1568162632 18<mia18>	Here is my aapproach (if there is a better I'd love to know) --- when oauth is done I'll record tokens and user email to an object db (for ease of use while inserting the received json object) - when the user wants to make a query I'll check if their email exists in the db and if their token is still valid
T 1568162653 18<mia18>	jaawerth, yes server side
T 1568162656 18<jaawerth18>	ahh ok
T 1568162661 18<jaawerth18>	in that case yeah you'll want a db
T 1568162678 18<jaawerth18>	if you want an embedded thing that doesn't require a separate db server, I would use leveldb or even (from the look of it) nedb
T 1568162703 18<jaawerth18>	You COULD just persist to a file but if you do that by hand you have to worry about safe writes (e.g. making sure you don't end up with a corrupt file if the server crashes mid-write)
T 1568162717 18<jaawerth18>	nedb and leveldb both do that and should be fast
T 1568162724 18<mia18>	jaawerth, yeah I want to deal with as less as I can
T 1568162748 18<jaawerth18>	for smaller loads you should be able to use sqlite3 no problem, too, if you want sql
T 1568162763 18<jaawerth18>	and it's generally easy to convert sqlite3 to postgres later if need be
T 1568162767 18<mia18>	thank you!
T 1568162772 18<mia18>	well postgres takes objects as well
T 1568162777 18<mia18>	I use t weirdly, as a document storage
T 1568162797 18<jaawerth18>	yeah I use the hybrid stuff in postgres a fair bit, especially when I'm syncing data from an external api to a local database
T 1568162803 18<mia18>	generally I don't querty anything in my document so I don't use fields - maybe a stupid way of using postgres
T 1568162815 18<jaawerth18>	I might project it into a flattened thing or not but storing the raw data as jsonb makes it easy to iterate on how I process it
T 1568162818 18<mia18>	so I just put in the whole object/json into a field/column
T 1568163419 18<LACampbell18>	jaawerth: I spent a lot of time looking into couch/pouch, and my take away at the end was great tech, great idea, but both projects have manpower issues. they're too complex to rely on a few lone un-sponsored hackers
T 1568163437 18<jaawerth18>	I get that
T 1568163438 18<LACampbell18>	which is why couchdb 2 still can't be a debian package because it relies on an unsupported spider monkey version, etc
T 1568163468 18<jaawerth18>	it's been a year or so since I touched it but I did find the pouchdb devs extremely responsive in their gitter, though, which struck me as a good sign
T 1568163499 18<LACampbell18>	I thought pouchdb was mainly just one, stressed out dev
T 1568163506 18<jaawerth18>	couch, well... it's still good but the fact that it's now maintained by the apache foundation does not speak well about its forward maintenance
T 1568163509 18<LACampbell18>	(who is a clever dude, don't get me wrong, great guy, but yeah)
T 1568163518 18<Dirak18>	anybody who works on dbs with great developer experiences deserve a gold medal. SQL is a joke in terms of usability
T 1568163539 18<jaawerth18>	(apache foundation is often where open source software goes to die)
T 1568163546 18<LACampbell18>	huh? SQL is great. it just requires learning SQL.
T 1568163554 18*	jaawerth glares at Google Wave
T 1568163557 18<LACampbell18>	which people don't wnat to do, hence ORMs and all the nightmares they bring
T 1568163579 18<ljharb18>	LACampbell: hence query builders, which are great.
T 1568163586 18<jaawerth18>	(still, better apache maintaining it as much as they can spare the time than nobody maintaining it at all)
T 1568163595 18<ljharb18>	ORMs are because people have this completely ridiculous fantasy that they'll be able to swap out the database backend without making major change
T 1568163596 18<ljharb18>	s
T 1568163619 18<jaawerth18>	well, or ORMs are so they can get total abstractions and not have to deal with the db directly
T 1568163629 18<LACampbell18>	the idea of an ORM is good but it's never worked well for me
T 1568163630 18<jaawerth18>	which is kinda the same thing but it also falls under "avoiding sql"
T 1568163642 18<LACampbell18>	yeah jaawerth that sounds great in theory ;)
T 1568163644 18<poboy18>	Laravel's Eloquent ORM is freaking phenomenal
T 1568163649 18<LACampbell18>	if it worked seemelssly, cool
T 1568163667 18<jaawerth18>	I have used ORM-lite things that are pretty good - but they're more toolkits to BUILD a data model than automagic abstractions
T 1568163677 18<evulish18>	my company uses laravel extensively and we're switching to writing SQL instead of relying on the ORM
T 1568163684 18<evulish18>	or the query builder rather
T 1568163694 18<poboy18>	evulish: what's the reason?
T 1568163696 18<jaawerth18>	(Objection is the best ORMish thing I've tried for node, for example, or the non-magical parts of sqlalchemy, which are mostly the query builder)
T 1568163704 18<jaawerth18>	and knex of course is the querybuilder of recorrd in node
T 1568163725 18<jaawerth18>	then there's graphql which is not an orm but probably belongs in the conversation
T 1568163727 18<evulish18>	i think it was clarity, we have some real monster queries
T 1568163737 18<LACampbell18>	none of the JS ORMs use better-sqlite3. yeah I use sqlite on websites, deal with it
T 1568163775 18<evulish18>	i think complex queries which are sometimes hard to represent in query builders are easier to read in just pure SQL
T 1568163785 18<jaawerth18>	what's better about better-sqlite3?
T 1568163813 18<evulish18>	i'm using knex in js and pretty much just do knex.raw('..') for everything
T 1568163813 18<jaawerth18>	I mean, when I use knex, I am not shy about using knex.raw when the query calls for it
T 1568163815 18<poboy18>	working on a side project that requires fairly indepth queries, so I'm using sql but normally for things like CRUD stuff, there's little to no need for any sql in the entire project
T 1568163835 18<evulish18>	yeah anything more complex than a simple join or something, i break out raw
T 1568163839 18<jaawerth18>	I've even made custom functions for it to wrap stuff like pg jsbon operators in a function for composition
T 1568163864 18<jaawerth18>	since you can use knex.raw inside the querybuilder
T 1568163868 18<LACampbell18>	jaawerth: https://github.com/JoshuaWise/better-sqlite3/blob/master/docs/benchmark.md
T 1568163870 18<jaawerth18>	(if you know what you're doing)
T 1568163871 18<poboy18>	evulish: I love the ability to just chain things.  $user->posts()->lastWeek()   etc...
T 1568163928 18<jaawerth18>	LACampbell: on the one hand that's pretty compelling - on the other hand if you're using sqlite then your primary concern likely isn't perf
T 1568163955 18<jaawerth18>	or at least perf concerns are likely more "fast enough" than "fastest"
T 1568163970 18<jaawerth18>	ymmv
T 1568164024 18<jaawerth18>	and it seems like they should be able to make a knex-compatible api for that just by making an api that's compliant with the regular sqlite3 driver
T 1568164036 18<jaawerth18>	though it appears they haven't done that :-\
T 1568164139 18<LACampbell18>	the faster the query completes, the faster you can release the write lock ;)
T 1568164149 18<jaawerth18>	fair enough
T 1568164162 18<LACampbell18>	sqlite is much faster than its competitors when it comes to queries by themselves
T 1568164183 18<LACampbell18>	it's a lot of concurrent writing where it falls apart
T 1568164211 18<LACampbell18>	well, "competitors", I guess postgres isn't really "competing" with it. but you get what i mean
T 1568164218 18<jaawerth18>	yeah
T 1568164231 18<jaawerth18>	though I also haven't seen any comparisons since, like, postgres 7
T 1568164235 18<jaawerth18>	I don't think they update that page anymore
T 1568164290 18<jaawerth18>	but it wouldnt' surprise me if sqlite was still faster for non-concurrent queries
T 1568164343 18<jaawerth18>	though that might change if you change postgres's transaction serialization setting and a few other tweaks
T 1568164360 18<LACampbell18>	sqlite can have multiple readers now, remember
T 1568164364 18<jaawerth18>	(though obviously sqlite3 has other benefits for certain usecases, like embeddability)
T 1568164369 18<jaawerth18>	oh sure, it's just not optimized for that
T 1568164401 18<LACampbell18>	yeah. but with fast SSDs, caching on the browser, and WAL mode, the space where sqlite can operate has definitely grown
T 1568164401 18<jaawerth18>	it's impressive than it can do it at all tbh
T 1568164412 18<jaawerth18>	oh I'm not denigrating the product
T 1568164438 18<LACampbell18>	neither. but you'd agree where there's a point you'd definitely bust out postgres et al, right?
T 1568164448 18<jaawerth18>	yeah
T 1568164459 18<jaawerth18>	I mean all else being equal, I default to postgres
T 1568164460 18<LACampbell18>	I'd argue that that point is further along than most people think
T 1568164469 18<jaawerth18>	but if I don't want to be running a db server, sqlite is great
T 1568164521 18<prussian18>	I tried arguing at my university the db class should focus on sqlite3 instead since it's the most immediately useful for small and personal projects.
T 1568164534 18<Dirak18>	Are iffes acceptable in modern javascript? I want to write code like `const myVar = (() => complex logic )()`
T 1568164546 18<jaawerth18>	it's also inspired by (or at least related to) postgres, so moving from one to the other is easy for new learners
T 1568164547 18<prussian18>	IIFEs are fine
T 1568164550 18<LACampbell18>	one great thing about sqlite is you can create a datbase in memory. so you can write your schema, and set up/destroy in-memory databases each time you run a test. there's probably a way to do that in postgres but I bet it's not easy
T 1568164550 18<jaawerth18>	(comparatively easy)
T 1568164574 18<jaawerth18>	Dirak: you shouldn't have to do it too often but they're acceptable when the usecase calls for it
T 1568164579 18<LACampbell18>	Dirak: I don't see why not? what else would people do
T 1568164586 18<prussian18>	Dirak: yes. that usecase is basically what they are trying to kill with do-expresionns
T 1568164597 18<prussian18>	god I hate do-expressions.
T 1568164608 18<jaawerth18>	if you're already breaking stuff into small composable functions, though, you shouldn't need to use an iife to hide your vars as much
T 1568164619 18<LACampbell18>	oh i haven't kept up with ECMA standard. have they decided on what kind of pipe operator they'll use?
T 1568164658 18<jaawerth18>	|>
T 1568164669 18<prussian18>	nah. IIFEs are still useful for stuff like // bootiful const\n const somethingThatMayThrow = (() => { // throwing thingie })()
T 1568164692 18<prussian18>	also lack of top level await
T 1568164716 18<prussian18>	LACampbell: pretty sure pipe is dead
T 1568164720 18<LACampbell18>	jaawerth: but there's like 3 different semantics they were considering
T 1568164723 18<LACampbell18>	prussian: oh :( damn
T 1568164748 18<prussian18>	it's mired in contraversy. I mean look. the class-fields are still drawing contraversy after like... what 4-5 years?
T 1568164765 18<prussian18>	pipes would probably take a decade
T 1568164801 18<prussian18>	at this point, I don't see the contention in just using sweetjs
T 1568164812 18<prussian18>	i mean, everyone is transpiling everything anyway anyhow
T 1568164821 18<prussian18>	might as well write your own macros
T 1568164843 18<jaawerth18>	oh right it's the chaining operator that's still alive
T 1568164848 18<jaawerth18>	tbh I was always ambivalent about the pipe operator
T 1568164874 18<jaawerth18>	not sure it's actually more readable than a simple compose/pipe function
T 1568164889 18<LACampbell18>	I have a lot of code that ends up being f(g(h(x)))
T 1568164898 18<jaawerth18>	like you could add pipe to Function.prototype
T 1568164905 18<jaawerth18>	to create a piped function
T 1568164906 18<LACampbell18>	yeah I'd be done for that
T 1568164909 18<LACampbell18>	*down
T 1568164928 18<jaawerth18>	I already use the functional versions of those a lot
T 1568164941 18<LACampbell18>	the functional versions of what?
T 1568164950 18<jaawerth18>	of pipe/compose
T 1568164953 18<prussian18>	the only modern tc39 thing I thought was cool was the context manager thing
T 1568164964 18<jaawerth18>	just via my own implementation, or a library, etc
T 1568164994 18<netgene18>	Can anyone help me with this? Why the events don't trigger correctly??????  https://paste.ofcode.org/dR2mzgcVQERpHP6LQxAa8C     I already tried this, didnt work https://stackoverflow.com/questions/7476660/why-does-window-open-onunload-function-not-work-as-i-expect/7476832#7476832
T 1568165079 18<LACampbell18>	jaawerth: like lodash?
T 1568165130 18<jaawerth18>	well I *typically* prefer using smaller util libraries but I am known to use ramda or lodash/fp
T 1568165145 18<prussian18>	ya the pipeline operator doesn't even have a "stage" on the proposal
T 1568165146 18<prussian18>	https://github.com/tc39/proposal-pipeline-operator
T 1568165147 18<prussian18>	damn
T 1568165212 18<LACampbell18>	netgene: what event doesn't trigger? line 16?
T 1568165234 18<prussian18>	netgene: I mean, I'd just redirect to a /login. I'm not sure what the expected events of a window would even be available
T 1568165258 18<LACampbell18>	(wtf is that website called where you can write a little web page with css/html/js, like a paste bin?)
T 1568165289 18<jaawerth18>	b> const pipe = (...funcs) => (...args) => funcs.slice(1).reduce((v, f) => f(v), funcs[0](...args)), add = x => y => x + y, prod = x => y => x * y;  pipe(add(1), prod(5))(2)
T 1568165290 18<jellobot18>	(okay) 15
T 1568165292 18<prussian18>	or redir to google I mean
T 1568165297 18<prussian18>	and just callback
T 1568165310 18<jaawerth18>	LACampbell: usually a (language)bin or fiddle
T 1568165318 18<LACampbell18>	jsfiddle! that was it
T 1568165322 18<prussian18>	one's in the topic
T 1568165328 18<jaawerth18>	I'm partial to repl.it, personally
T 1568165330 18<prussian18>	err... I thought there was
T 1568165348 18<LACampbell18>	jaawerth: yeah I am wary of lodash/rambda as well, I'm a kilobyte weenie
T 1568165350 18<jaawerth18>	(though you have to search "web" in the list for the one that gives you html + css + js and not just js + a console)
T 1568165379 18<LACampbell18>	I wrote my own implementation of the 'either' monad because at the time I couldn't find a small stand a lone one. should document that properly at some point
T 1568165387 18<jaawerth18>	LACampbell: though in its defense, both libraries now publish individual modules for many of their functions
T 1568165406 18<nibzAU18>	So.. If i have a login form on my index.html page.. Can i make it check the server get the user validate and check and login wihoutthe page refreshing all with java and nothing else??
T 1568165427 18<jaawerth18>	with... java?
T 1568165427 18<evulish18>	javascript, yes
T 1568165432 18<evulish18>	!java
T 1568165432 18<ecmabot18>	evulish: Remember, Java is to JavaScript as Pain is to Painting, or Ham is to Hamster. We don't know Java, and if you're trying to apply your Java knowledge to JavaScript, it probably won't work. See also: http://ow.ly/GMctL and https://twitter.com/ryber/status/567681894662164480 - Try ##java
T 1568165439 18<nibzAU18>	Sorry javascript only not java
T 1568165483 18<nibzAU18>	Nice. I heard i would need php and mysql
T 1568165502 18<jaawerth18>	well, you need to have or make a server
T 1568165512 18<jaawerth18>	but you could use node to create the server in js
T 1568165514 18<nibzAU18>	But then i heard about node.js not quite sure what it is.. Replacemebt for php maybr.. Not up to node yet
T 1568165520 18<jaawerth18>	and you may or may not need a database depending on what you're doing
T 1568165561 18<nibzAU18>	So does node talk to mysql or does it replacemysql and php anf id use just node
T 1568165570 18<jaawerth18>	nibzAU: node is just a js runtime (powered by teh same engine as chrome) that's hooked to some core libraries for io and some extra utils - you can use it to create servers, among other things
T 1568165586 18<jaawerth18>	any server-side language can talk to mysql
T 1568165590 18<nibzAU18>	Interesting
T 1568165599 18<evulish18>	kind of like instead of running: php myapp.php you'd run node myapp.js
T 1568165604 18<evulish18>	to oversimplify
T 1568165630 18<nibzAU18>	Cool that makes me happy
T 1568165648 18<jaawerth18>	mysql is a database - you generally use that WITH your server, though node (among others) do have libraries that let it BE a db more or less. though usually you only do that in certain use-cases since a dedicated database is more powerful
T 1568165661 18<evulish18>	essentially you can do similar things with php and javascript/node.
T 1568165665 18<nibzAU18>	Im sooooooo excoted to learneverything javascript im enjoying it so far
T 1568165713 18<MightBeParanoid18>	:)
T 1568165722 18<LACampbell18>	express.js might be worth checking out
T 1568165733 18<LACampbell18>	(or does everyone hate that now? stuff moves so fast)
T 1568165776 18<MightBeParanoid18>	Just make sure to not sidetrack yourself with too much stuff, focus on 1 or 2 things at a time
T 1568165841 18<nibzAU18>	Basically i was writing a txt adventure but then it changed to a space yxt adventure but db driven. For example you go to a region in space.. In the region there are astetoid belts and stations and planets.. At the moment im using php to pull things in amd out of the database depending on your region on what u see.
T 1568165878 18<nibzAU18>	If u go to a belt u can see asteroids and their type and mind then depending ob ur skill lvl etc.. Allcoming from the db
T 1568165913 18<nibzAU18>	But .. I dont wanna get into php yet i wanna learn all things js so i can get a career change to front end web
T 1568165924 18<jaawerth18>	LACampbell: nah, express is still the go-to for sure. like most server libraries in the Sinatra family it's a really nice balance of minimal and extensible/powerful
T 1568165974 18<MightBeParanoid18>	No reason to use PHP, just use nodejs if u were to program in the backend
T 1568165997 18<netgene18>	LACampbell, the onload doesn't trigger .  if i use just the onunload then, it gets triggered on open, lilke stackoverflow explains
T 1568165999 18<nibzAU18>	Thats what i wanted to hear
T 1568166054 18<netgene18>	LACampbell,  line 5,6.. dont run when the popup opens
T 1568166063 18<MightBeParanoid18>	a neat trick nibzAU , to prevent a page reload on submit events, use e.preventDefault()
T 1568193167 20*	Disconnected (20)
T 1568193192 19*	Now talking on 22##javascript
T 1568193192 22*	Topic for 22##javascript is: JavaScript is *not* Java. | Just ask your question. | Say "!mdn abc" for docs on "abc". | Don't paste code in the channel. | Can't talk? Get registered on freenode ( https://git.io/vaTS2 )
T 1568193192 22*	Topic for 22##javascript set by 26niggler!~niggler@unaffiliated/niggler (24Tue Jan 15 07:16:23 2019)
T 1568193193 18<sinclair18>	stennowork, it assume people actually know anything >_>
T 1568193207 18<sinclair18>	stennowork, they thought it wouldn't pass
T 1568193237 18<sinclair18>	all while ranking up political points promoting a nationalist / protectionist UK stance
T 1568193239 18<Aquazi18>	fml anyway, I got fired from my last job without getting any motivation 6 weeks ago
T 1568193259 18<sinclair18>	which is fine....i guess, except when you get the majority on board and .... whoops....brexit
T 1568193261 18<Aquazi18>	I insisted on getting feedback and they only told me the reason wasn't technical but I didn't communicate well
T 1568193326 18<Aquazi18>	which was a bullshit reason as the company was basically anarchy when you only met your managers/leads when they assigned you and reviewed your tasks, and I always completed them well and in time, while also code reviewing, improving the codebase, writing docs, bugfixing, assisting my colleagues and designers, etc...
T 1568193358 18<Aquazi18>	now every company I send my cv to at some point asks me the reasons of me being fired, I cannot lie and say I left it as they can (and actually did) background checks
T 1568193368 18<Aquazi18>	but I have no answer to the reason why I got fired
T 1568193370 18<sinclair18>	Aquazi, leave them off your resume
T 1568193385 18<Aquazi18>	so I didn't work for the last 6 months?
T 1568193395 18<Aquazi18>	by the way you know your suggestion is actually good
T 1568193405 18<sinclair18>	Aquazi, yeah, say you went soul searching in Greece or something
T 1568193407 18<Aquazi18>	now that I think of it
T 1568193429 18<sinclair18>	only 6 months, who cares, people take 6 months off
T 1568193443 18<Aquazi18>	yeah...but I started working november 2018...
T 1568193471 18<Aquazi18>	so that would reduce my xp to 6 months total...
T 1568193480 18<sinclair18>	Aquazi, sorry, why did they fire you?
T 1568193488 18<Aquazi18>	I have no idea!
T 1568193498 18<sinclair18>	did you get along with people?
T 1568193509 18<Aquazi18>	I think the reason is that our team went from 2 to 7 js developers in like 3 months
T 1568193516 18<Aquazi18>	and I was fired at the very end of a cycle
T 1568193526 18<Aquazi18>	before vacations started
T 1568193527 18<thykka18>	sounds like 'financial reasons'
T 1568193552 18<thykka18>	"they've built most of what we needed, time to trim the fat"
T 1568193559 18<Aquazi18>	that's what I think
T 1568193560 18<sinclair18>	thykka, yeah, but you can't just fire people like that based on finance issues, that would be a management fuck up
T 1568193576 18<Aquazi18>	but honestly that's what I think it happened
T 1568193579 18<thykka18>	sinclair, doesn't mean it doesn't happen
T 1568193581 18<thykka18>	¯\_(ツ)_/¯
T 1568193581 18<Aquazi18>	since they couldn't give me any valid feedback
T 1568193599 18<thykka18>	^ lack of valid reasons points towards invalid reasons
T 1568193599 18<sinclair18>	thykka, well, if it was a management fuck up, blaming him that he wasn't technical enough is vile shit
T 1568193600 18<Aquazi18>	even tho I insisted and my seniors said they had no idea
T 1568193610 18<Aquazi18>	nono
T 1568193614 18<Aquazi18>	they told me the reason wasn't technical
T 1568193618 18<Aquazi18>	nor productivity related
T 1568193627 18<sinclair18>	Aquazi, soooo, why you and not someone else?
T 1568193633 18<Aquazi18>	they just threw in a generic "communication issues"
T 1568193649 18<Aquazi18>	only when I insisted
T 1568193653 18<thykka18>	sinclair, "our team went from 2 to 7 js developers"
T 1568193667 18<thykka18>	no wait..
T 1568193668 18<Aquazi18>	maybe because I had the least experience
T 1568193669 18<thykka18>	xD
T 1568193674 18<Aquazi18>	or I was making more than the others
T 1568193680 18<sinclair18>	Aquazi, were you the 7th?
T 1568193685 18<Aquazi18>	no, the 3rd
T 1568193689 18<sinclair18>	wtf
T 1568193692 18<Aquazi18>	but we all got hired like in a very short span
T 1568193703 18<Aquazi18>	I mean except the two seniors who were there from years
T 1568193710 18<sinclair18>	you were the 3rd, which means the company valued 4th, 5th and 7th more than you
T 1568193722 18<Aquazi18>	well yes
T 1568193727 18<Aquazi18>	but never told me why
T 1568193734 18<Aquazi18>	and to be honest the other two were very weak programmers
T 1568193737 18<sinclair18>	that doesn't bother you in a very deep way?
T 1568193740 18<prometh18>	how do i find a specific object using chrome's memory profiler?
T 1568193743 18<Aquazi18>	I mean two of the people that came after me
T 1568193754 18<Aquazi18>	ofc it does sinclair
T 1568193784 18<Aquazi18>	there was one incident one week before I got laid off, but I can't believe that could be it
T 1568193791 18<sinclair18>	what was it?
T 1568193809 18<Aquazi18>	basically I didn't show up for work as the sister of my mother died, we had a rule that if you don't show you should communicate it before 10 am
T 1568193812 18<Aquazi18>	I did at 10.30
T 1568193813 18<sinclair18>	Aquazi, did the other developers get on better with one another?
T 1568193832 18<sinclair18>	Aquazi, your sister of your mother is your Aunt
T 1568193835 18<Aquazi18>	and the day after HR was very angry during the meeting
T 1568193836 18<sinclair18>	>_>
T 1568193857 18<Aquazi18>	and started asking me a general feedback to my xp in their company and what I could improve
T 1568193861 18<sinclair18>	who cares about HR
T 1568193865 18<Aquazi18>	and I just threw a generic "maybe communication"
T 1568193878 18<Aquazi18>	it has lots of weight in my prev company
T 1568193890 18<sinclair18>	communication is the most important thing
T 1568193892 18<Aquazi18>	and they reused that motivation when they fired me one week later
T 1568193897 18<Aquazi18>	but it was bs
T 1568193913 18<Aquazi18>	nobody communicated, gave you feedbacks nor we had planned meetings
T 1568193922 18<Aquazi18>	not me, nor my colleagues
T 1568193931 18<sinclair18>	Aquazi, how much notice did they give before saying you're fired?
T 1568193932 18<Aquazi18>	not with your superiors at least
T 1568193938 18<Aquazi18>	none
T 1568193943 18<Aquazi18>	I was fired the same day
T 1568193950 18<sinclair18>	Aquazi, so you just don't turn up to work the next day?
T 1568193954 18<rocktop18>	can anyone help to achieve this : https://stackoverflow.com/questions/55608214/whatsapp-web-disable-scrolling-and-move-chat-to-top-when-send-new-message
T 1568193955 18<Aquazi18>	yes
T 1568193972 18<sinclair18>	Aquazi, you have grounds for complaint, and possible legal there
T 1568193980 18<Aquazi18>	not really in Italian law
T 1568194001 18<Aquazi18>	Because per contract I had a trial period of 120 working days
T 1568194012 18<Aquazi18>	And only after those 120 they needed a reason to fire me
T 1568194012 18<thykka18>	how much left?
T 1568194020 18<Aquazi18>	40ish
T 1568194022 18<sinclair18>	Aquazi, if you haven't been given adequate reason for termination, and no notice, then you surely have grounds to contact a solicitor and see if you can make a claim
T 1568194040 18<sinclair18>	120 days
T 1568194047 18<Aquazi18>	no man, you don't need an adequate reason during the first 120 days
T 1568194058 18<sinclair18>	you were there 6 months tho
T 1568194061 18<sinclair18>	right?
T 1568194063 18<thykka18>	sinclair, not where I live. If you're on trial period, the contract can be terminated by either side with no notice
T 1568194063 18<Aquazi18>	no
T 1568194066 18<Aquazi18>	april-august
T 1568194068 18<kapil_18>	can I use class Instead of object?
T 1568194070 18<Aquazi18>	didn't make it to 120 working days
T 1568194077 18<sinclair18>	Aquazi, oh, well, that sucks
T 1568194092 18<Aquazi18>	but idc, that's the past, what bothers me is the lack of feedback
T 1568194093 18<sinclair18>	still, i don't understand why the more juniors weren't let go
T 1568194107 18<Aquazi18>	they weren't more juniors
T 1568194111 18<Aquazi18>	only one was
T 1568194119 18<Aquazi18>	the rest has had a longer cv and xp than me
T 1568194136 18<Aquazi18>	I had only 6 months of company xp on my back
T 1568194145 18<sinclair18>	i don't think the resume aspect means much once you're actually employed at a place
T 1568194152 18<Aquazi18>	but I don't think that was the major factor, like I think productivity and quality would matter more
T 1568194157 18<Aquazi18>	yes indeed, was writing that
T 1568194159 18<sinclair18>	you'll have demonstrated your competence by then
T 1568194205 18<sinclair18>	Aquazi, i think, either you were targetted by management, or the other developers had a little clique and channel to management, and conspired against you
T 1568194221 18<sinclair18>	ive seen it in a couple of places
T 1568194225 18<Aquazi18>	but tbh I didn't really get along with other colleagues
T 1568194231 18<Aquazi18>	not like we had issues of any sort
T 1568194243 18<sinclair18>	right, but that supports the second case
T 1568194248 18<Aquazi18>	just I'm more of a quiet and loner, and would not always go with them on lunch
T 1568194259 18<Aquazi18>	or join them for after work activities
T 1568194276 18<Aquazi18>	I mean, why should I be forced to do social extra work stuff
T 1568194289 18<sinclair18>	well, there you go, it was the second case i mentioned above
T 1568194297 18<Aquazi18>	still I don't think that was the reason as one of the seniors told me it wasn't
T 1568194305 18<Aquazi18>	what do I know
T 1568194306 18<sinclair18>	management talks to 'the in group' and if you're not in it, your cast out
T 1568194320 18<sinclair18>	it sucks, but that's how it works :(
T 1568194328 18<Aquazi18>	anyway I got a good suggestion of removing them from my cv
T 1568194337 18<sinclair18>	yeah, remove em
T 1568194344 18<Aquazi18>	I did some freelance work in the meanwhile
T 1568194353 18<Aquazi18>	I'll put that in so it doesn't look empty in those months
T 1568194361 18<kapil_18>	sinclair:  can i use class instead of object?
T 1568194374 18<sinclair18>	kapil_, sure, go for it
T 1568194397 18<kapil_18>	but how to initialise class like object?
T 1568194399 18<sinclair18>	Aquazi, you don't need to put anything really, if someone asks what you did for those months, you can say 'holiday'
T 1568194403 18<thykka18>	or, you know, leave it, and if someone asks, you can tell that you didn't get a proper reason, but you suspect A or B, and that you've thought about those things and plan to take action
T 1568194416 18<sinclair18>	kapil_, dunno, thought you had that worked out already
T 1568194439 18<kapil_18>	n> form = {a: 1, b: 2}
T 1568194440 18<jellobot18>	(okay) { a: 1, b: 2 }
T 1568194449 18<kapil_18>	how to write it as a class?
T 1568194460 18<sinclair18>	Aquazi, if you say 'you did contract work' all your going to get is 'why not keep up the contracting'
T 1568194484 18<kapil_18>	sinclair: i make websockets working. thanks.
T 1568194485 18<sinclair18>	kapil_, k, you wouldn't write that up as a class
T 1568194529 18<sinclair18>	kapil_, there are things called 'record types' and there are 'interface implementations'
T 1568194539 18<sinclair18>	classes === interface implementations
T 1568194546 18<sinclair18>	{a: 1, b: 2} === record type
T 1568194555 18<Aquazi18>	kapil why do you want it to be a class
T 1568194566 18<kapil_18>	it open so many possiblilites
T 1568194574 18<Aquazi18>	so do simple functions
T 1568194581 18<Aquazi18>	they are also much clearer and reusable
T 1568194582 18<kapil_18>	sinclair: thanks a lot
T 1568194583 18<sinclair18>	kapil_, note, interface implementations and record types are not 'actual' things in any JS literature, but there are distinctions between these concept in terms of 'usage'
T 1568194585 18<thykka18>	n> class myForm { constructor() { this.a = 1; this.b = 2; } } new myForm() @ kapil_
T 1568194586 18<jellobot18>	kapil_, myForm { a: 1, b: 2 }
T 1568194607 18<Aquazi18>	anyway you can mdn that stuff..
T 1568194618 18<kapil_18>	thykka: thanks
T 1568194637 18<kapil_18>	I make this website with websocket: http://scesoftwares.com:3056
T 1568194661 18<kapil_18>	i want to transfer 1 gb file over websocket to the websocket server. is it possible
T 1568194664 18<sinclair18>	Aquazi, anyway, im sorry to hear about your story dude
T 1568194669 18<sinclair18>	that sucks
T 1568194677 18<kapil_18>	i tried to transfer 230mb file and transfer is successfull
T 1568194695 18<thykka18>	yeah, hopin better luck for your next job Aquazi !
T 1568194701 18<kapil_18>	i transferred without making chunk
T 1568194757 18<rnmhdn18>	I have foo that can be called like foo(1) and foo(1,{a:2})
T 1568194766 18<rnmhdn18>	now I want to pass foo
T 1568194766 18<ashnur18>	Aquazi: maybe it was because of the money
T 1568194771 18<rnmhdn18>	oh
T 1568194778 18<rnmhdn18>	I'm passing like x => foo(x)
T 1568194790 18<rnmhdn18>	but I can actually even pass foo itself right? lol I'm silly
T 1568194812 18<kapil_18>	thykka: thank you. you opened new world to me.
T 1568194813 18<ashnur18>	rnmhdn: yes, functions are first  class and can pass them as arguments just using their names
T 1568194823 18<rnmhdn18>	thanks
T 1568194842 18<ashnur18>	lol, such hurry, wanted to say to use .bind or .call too
T 1568194882 18<prometh18>	Aquazi: i was laid off in april and haven't been getting hired... i think i'll use the "i've been on vacation" line
T 1568194919 18<thykka18>	just say you were working undercover
T 1568194944 18<prometh18>	waht's that? hookers?
T 1568194945 18<thykka18>	and that if you told more, you'd have to kill them
T 1568194964 18<thykka18>	could be that, could be something else!
T 1568194979 18<prometh18>	fat girls :P
T 1568194982 18<alexsuraphel18>	hey guys, I want to practice leaflet.js online. Which fiddling website do you recommend. I want something fast
T 1568194999 18<thykka18>	jsfiddle is fastish
T 1568195022 18<thykka18>	but setting up a basic web server and developing locally is even faster
T 1568195034 18<kapil_18>	I have:
T 1568195034 18<kapil_18>	n > form = {a: 1, b:2};
T 1568195041 18<kapil_18>	how to make above class thykka ?
T 1568195047 18<SaraDR18>	Hi, anyone with experience for Chrome extensions? When I try to use anonomous functions, it doesn't know see the variable? -- https://pastebin.com/raw/4KXwz7mH
T 1568195061 18<SaraDR18>	Maybe it's not related to chrome extensions in particular, but just that i don't know how to do this right lol.
T 1568195125 18<SaraDR18>	I'm assuming that the anonomous function I insert, isn't evaluated, since names[i] becomes undefined when it actually runs. Am I doing this totally wrong?
T 1568195190 18<SaraDR18>	Or maybe I'm using eventListener wrong?
T 1568195318 18<grr1231418>	you are using i wrong
T 1568195337 18<grr1231418>	if you change the var to let it will work
T 1568195366 18<grr1231418>	or for-of
T 1568195372 18<grr1231418>	or forEach
T 1568195387 18<SaraDR18>	wow, really.. What should I read up on for this, the let keyword?
T 1568195439 18<thykka18>	SaraDR, you could use an anonymous function for the click handler
T 1568195444 18<grr1231418>	yes, and variable scope
T 1568195444 18<thykka18>	err no..
T 1568195448 18<thykka18>	an arrow function
T 1568195454 18<grr1231418>	let/const are block scoped
T 1568195474 18<grr1231418>	let inside a for loop is a bit more complicated to explain
T 1568195487 18<grr1231418>	it is separate variable for each loop iteration
T 1568195497 18<Alexendoo18>	It does what you expect
T 1568195515 18<SaraDR18>	Well it works. Thanks a lot grr12314 (and thykka)
T 1568195520 18<grr1231418>	while var is function scoped, only one variable instance, that goes 0 1 2 3
T 1568195532 18<grr1231418>	so by the time you click anything it is already 3
T 1568195538 18<grr1231418>	and guess what names[3] is
T 1568195539 18<SaraDR18>	Yeah that's what I was seeing.
T 1568195565 18<thykka18>	a forEach would work well instead of the for loop
T 1568196057 18<forbiddenera18>	SaraDR: You could use  use .bind(names) at the end of the anonymous function
T 1568196080 18<SaraDR18>	That sounds a bit too complicated for my javascript level :)
T 1568196118 18<forbiddenera18>	UNCTION
T 1568196119 18<forbiddenera18>	 THE NAMES VARIABLE TO THE SCOPE OF THE FUNCTION
T 1568196119 18<forbiddenera18>	 THE NAMES VARIABLE TO THE SCOPE OF THE FUNCTION
T 1568196125 18<forbiddenera18>	oops
T 1568196150 18<forbiddenera18>	not sure what happened there sorry.. it's not that complicated .bind just binds the scope of a variable to the scope of whatever you're binding it to
T 1568196193 18<thykka18>	SaraDR, it's not as complicated as it might sound, and you'll want to understand the subject area anyway, sooner or later
T 1568196230 18<forbiddenera18>	document.querySelector('#' + names[i]).addEventListener('click', function () { document.querySelector('img').src = 'img/' + names[i] + '.png'; }); becomes document.querySelector('#' + names[i]).addEventListener('click', function () { document.querySelector('img').src = 'img/' + names[i] + '.png';  }.bind(names));
T 1568196286 18<stennowork18>	UNCTION UNCTION
T 1568196303 18<forbiddenera18>	scope is important in JS.. when you do function () {}, you're creating an anonymous function..this functioany other variables.ate 'scope' thus can't access any other variables.
T 1568196459 18<niggler18>	dunno why labeled blocks don't get more love
T 1568196461 18<forbiddenera18>	you should check out something like jquery though.. it can make life easier.. you'd just do $('.myCSSSelector').on('click', function(){ /* handle */ } ); and it assigns handlers to every eleemtn with tha tselector
T 1568196489 18<forbiddenera18>	you can also easily do things like $('.myselector').each(function() { /* do something for each element */ });
T 1568196747 18<forbiddenera18>	people?! never.
T 1568196766 18<forbiddenera18>	Example indeed.
T 1568196840 18<SaraDR18>	Maybe it's the exact same problem, but when I try to save options (in chrome extension), nothing happen. It's hard to say as I can't console.log from there, but the problem might be the exact same? -- https://pastebin.com/raw/t5wh0p07
T 1568196868 18<howdoi18>	How would you solve a situation where the header in page loads in two part, the first part is plain HTML, the second is created post an AJAX call, this latency causes janks in rendering. [We get the first part and then the second part]
T 1568196884 18<forbiddenera18>	yes.. again, you're inside a function that doesn't have scope
T 1568196887 18<SaraDR18>	In the first one, I assume I'm referencing this, to something else. But in the second I tried to use the let, to bind the value before calling it.
T 1568196894 18<howdoi18>	skeleton DOM and some animation?
T 1568196951 18<SaraDR18>	forbiddenera, which part? The event listeners scope, should be able to understand this.checked right?
T 1568196988 18<M3TAGH0ST18>	good day everyone, I'm having a bit of trouble settings up order for each element using a for loop https://jsfiddle.net/M3TAGH0ST/3pqachtk/4/ do you think guys could help me out ? It seems that that is getting set is order 1; and order6; and i'm not sure what i'm doing wrong.
T 1568196996 18<mursu18>	I don't know why people use jQuery when instead of importing a pretty big library you can just document.querySelectorAll('.myCSSSelctor').forEach(function() { /*do stuff /})
T 1568197063 18<forbiddenera18>	mursu: I don't disagree as JS has come a long way over the last 10 years but it can still help with some things.
T 1568197118 18<mursu18>	especially with older browsers :+1:
T 1568197155 18<forbiddenera18>	SaraDR: yes, the function in addEventListener can't see K .. your last pastebin has syntax error too btw .. but it should be like this kinda probably :
T 1568197157 18<forbiddenera18>	for (let k in names){document.querySelector('#' + k + ' input').addEventListener('change', function (){chrome.storage.sync.set({k : this.checked}, function() {});}.bind(k));}
T 1568197654 18<SaraDR18>	forbiddenera, it seems that this.checked is undefined. As even before i call the chrome set call, I tried changing the color of an element to: (v == undefined ? 'red' : 'blue'); .. and it becomes red.
T 1568197708 18<SaraDR18>	( in this: https://pastebin.com/raw/PaWYqfRK )
T 1568197748 18<ccapndave18>	Hey everyone
T 1568197775 18<ccapndave18>	My logs are full of errors saying: "Error code 20 [The operation was aborted.]" (coming from Safari)
T 1568197779 18<ccapndave18>	Has anyone ever seen that before?
T 1568197844 18<ccapndave18>	Google doesn't have much to say about it
T 1568197945 18<SaraDR18>	forbiddenera, it appears when I add that .bind(k) .. it no longer can read this.checked. If i remove it, it can read it (but then it can't read k)
T 1568197977 18<SaraDR18>	Does bind set a different scope, which would make this.checked not appear?
T 1568198019 18<mursu18>	bind sets the this of the function to the value of the argument
T 1568198035 18<mursu18>	poorly worded probably
T 1568198053 18<mursu18>	but in your case if you do bind k and use this in the function this would equal k
T 1568198085 18<SaraDR18>	Ah, so that's why it can't see the this scope. Right. Need to think a bit about this then.
T 1568198179 18<SaraDR18>	I'll give it a break and then rethink it, and try to read up on the concepts. Thanks everyone <3
T 1568198428 18<rocktop18>	anyidea?
T 1568199133 18<SaraDR18>	Can I pass a null instead of a callback function? or should I just put an empty function? There's no console output in this stupid chrome environment.
T 1568199856 18<deadbeat18>	SaraDR: you will get an error, something like "cb is not a function" when the function tries to call the callback, and it is null
T 1568200338 18<will18>	I wanna add translation capabilty to my app, but first I want to create a structure where I can look up supposed languages, and their attributes
T 1568200359 18<will18>	Is this good pratice for js https://hastebin.com/omikadosen.js
T 1568200431 18<will18>	To me it is structured well enough for me to add attributes down the line without having to restructure the whole thing, bit it also looks a bit hard to read. is there a better aproach
T 1568200828 18<alexsuraphel18>	Can I ask LeafletJS questions here?
T 1568201127 18<alexsuraphel18>	how do I add buttons on Leaflet to show/hide markers?
T 1568203460 18<DnzAtWrk18>	window.open().document.write('test'); opens a new tab with test in it
T 1568203468 18<DnzAtWrk18>	but it still treats the page as if it was the original page
T 1568203479 18<DnzAtWrk18>	so ctrl+s saves the .html page
T 1568203482 18<DnzAtWrk18>	in this case
T 1568204413 18<MJCDawy18>	what
T 1568204417 18<MJCDawy18>	where would it save that
T 1568204425 18<MJCDawy18>	sounds weird
T 1568204980 18<xvx18>	I have function parameters `fun1(name=uniqueName(), setNameInJson=true)` which are used in many functions
T 1568204992 18<xvx18>	I want a separate function to return the two params. e.g. `fun2(defaultNameParams)` inserts those params into the original function's parameters
T 1568205021 18<xvx18>	what would `fun2` function have to return?
T 1568205043 18<niggler18>	what are some fun features supported only in chrome
T 1568205066 18<mursu18>	having all your browsing habits sent to Google
T 1568205089 18<grr1231418>	not having the concept of temp downloads
T 1568205118 18<Kirjava18>	sanity check: if you have an async function that does nothing async, and you await it elsewhere, does it happen sync or on another event loop cycle?
T 1568205133 18<grr1231418>	another loop cycle
T 1568205138 18<Kirjava18>	damn, okay
T 1568205148 18<grr1231418>	or rather, the end of the current one, like all promises
T 1568205158 18<grr1231418>	still not sync
T 1568205161 18<Kirjava18>	k, so it wont happen inline
T 1568205187 18<Kirjava18>	I'm using mobx with autorun(() => { <something awaited sync> })
T 1568205189 18<Kirjava18>	so that won't work
T 1568205194 18<grr1231418>	thats a feature, for predictability
T 1568205221 18<Kirjava18>	yeah, that's fine
T 1568205305 18<xvx18>	no noe know how to have a function returning function parameters?
T 1568205350 18<thykka18>	wh-whaat
T 1568205377 18<thykka18>	function derp(foo, bar, baz) { return { foo, bar, baz }; }
T 1568205379 18<thykka18>	?
T 1568205446 18<grr1231418>	xvx its just that your question made no sense.
T 1568205469 18<xvx18>	the function (takes no parameters) needs to return: `name=uniqueName(), setNameInJson=true`
T 1568205471 18<stennowork18>	why not write fun2 so that it just calls fun1 with certain parameters?
T 1568205476 18<xvx18>	what this function returns will be used as parameters in another function
T 1568205496 18<stennowork18>	const fun2 = () => fun1('foo', 'bar');
T 1568205503 18<grr1231418>	it can return [uniqueName(), true]
T 1568205518 18<grr1231418>	then the other can use f()[0], f()[1] as defaults
T 1568205525 18<grr1231418>	but this seems too silly
T 1568205538 18<xvx18>	there are 50 functions with more parameters, however I want those default parameters to be the same for all functions
T 1568205547 18<stennowork18>	soudns like an xy problem
T 1568205584 18<xvx18>	insert_text(name=uniqueName(), setNameInJson=true, inclSchemaProps={...}, inclOptionsFields={...}, data=...) {...}
T 1568205596 18<xvx18>	this is what the 50 functions look like. the first two params are always the same
T 1568205621 18<xvx18>	so I want a separate function to return the exact same (name=uniqueName(), setNameInJson=true)
T 1568205639 18<stennowork18>	do you want partial application or argument binding instead?
T 1568205656 18<xvx18>	so that function then looks like: `insert_text(defaultNameSettings(), inclSchemaProps={...}, inclOptionsFields={...}, data=...) {...} `
T 1568205666 18<grr1231418>	thats not valid js
T 1568205688 18<grr1231418>	functions dont return just random program fragments
T 1568205706 18<xvx18>	you can't insert parameters in a function by calling another function (with it returning the actual params)?
T 1568205738 18<xvx18>	_6a68 not sure what that means
T 1568205739 18<MikeD_18>	xvx, you might just make new functions
T 1568205795 18<xvx18>	in other words I don't want to keep typing `name=uniqueName(), setNameInJson=true`. instead let another function take care of putting that in the parameter
T 1568205835 18<MikeD_18>	curried_insertTex( name, foo ){ return ( bar ) => { insert_text( name, foo, bar } }
T 1568205890 18<stennowork18>	already suggested that  but it was ignored
T 1568205902 18<grr1231418>	well its not really fitting
T 1568205928 18<MikeD_18>	yeah, don't write 50 functions with the same parameters and you don't have this problem to solve, amirite?
T 1568205941 18<grr1231418>	but some version that returns an object with 50 methods, and then some helper that maps over them all and uncurries them... maybe
T 1568205989 18<xvx18>	I need all the functions. they insert different "types"
T 1568205998 18<xvx18>	and there are about 50 different types
T 1568206004 18<MikeD_18>	also if you'd have used a single object parameter, you could merge properties with the default object
T 1568206017 18<xvx18>	gets confusing because some types rely on other types e.g. insert_textarea calls insert_string
T 1568206035 18<MikeD_18>	refactor - your future self with thank you for it
T 1568206050 18<MJCDawy18>	check for features/capabilities not for any concept of classes as you know from other languages
T 1568206054 18<xvx18>	then insert_textarea adds more stuff on top of insert_string
T 1568206058 18<MJCDawy18>	also true of most things on the web
T 1568206077 18<MJCDawy18>	so check the thing has xyz method, don't try to check it's 'class'
T 1568206088 18<MJCDawy18>	that's reflection nonsense in most languages anyway
T 1568206089 18<MJCDawy18>	lol
T 1568206101 18<MJCDawy18>	which is not really desirable for most usecases
T 1568206118 18<MJCDawy18>	if you want strict typing that compiles to javascript there's always typescript :)
T 1568206124 18<grr1231418>	MJCDawy who you talking to?
T 1568206142 18<MJCDawy18>	<xvx> gets confusing because some types rely on other types
T 1568206208 18<xvx18>	i'm new to JS, let alone using TS lol
T 1568206225 18<MikeD_18>	h:\
T 1568206236 18<MikeD_18>	oops, nm
T 1568206245 18<MJCDawy18>	xvx, that doesn't really matter
T 1568206255 18<MJCDawy18>	they're very, very similar
T 1568206269 18<MJCDawy18>	typescript infact abstracts a lot of underlying concepts by its very nature
T 1568206278 18<stennowork18>	typescript is a strict superset of SJ
T 1568206279 18<stennowork18>	JS
T 1568206282 18<MJCDawy18>	and includes a built in build chaind
T 1568206290 18<xvx18>	by senior at work makes these decisions though :/
T 1568206291 18<stennowork18>	therefore, any JS code is valid TS code
T 1568206303 18<MJCDawy18>	wellll
T 1568206316 18<MJCDawy18>	while (true) {} will error that it's a redundant thing
T 1568206317 18<grr1231418>	thats all really irrelevant to his question tho
T 1568206322 18<MJCDawy18>	sure
T 1568206326 18<MJCDawy18>	just a suggestion
T 1568206336 18<MJCDawy18>	I gave one as to how to solve it first
T 1568206343 18<MJCDawy18>	and how its approached in js
T 1568206349 18<grr1231418>	like, oh he used the word "type" in his question, lets go school him on typescript
T 1568206351 18<MJCDawy18>	and more widely the web
T 1568206362 18<xvx18>	haha
T 1568206365 18<MJCDawy18>	lol except I addressed the problem then just mentioned a thing
T 1568206372 18<MJCDawy18>	I don't even use/like TS
T 1568206397 18<grr1231418>	no, the features/capabilities thing was also irrelevant
T 1568206408 18<grr1231418>	or i'm too blind to see the connection
T 1568206417 18<MikeD_18>	that's ok... when the JW come to your door to tell you about Jesus, you can say "but do you know about Typescript?"  and expound on it's virtue
T 1568206480 18<grr1231418>	anyway, refactor to use a single argument with different properties. may even be able to combine the 50 functions into one
T 1568206496 18<grr1231418>	is my vague best guess so far
T 1568206586 18<xvx18>	it's kind of what I'm doing. each function will take 5 params, but there are objects in 3 params which can have 30+ items
T 1568206640 18<MikeD_18>	xvx, it sounds like you should have 1 parameter
T 1568206838 18<MikeD_18>	function(p){ return p.prop1 + p.prop2 }  or use destructuring like function({ prop1: 1, prop2: 2 }) => { return prop1 + prop2; }
T 1568206923 18<MikeD_18>	then you trade the problem of enumeration of agnostic properties for the requirement that the sender must use the correct property names - but i think that still sensible.
T 1568206942 18<aLeSD18>	hi all js world
T 1568206970 18<aLeSD18>	How could I unit test a class that is dealing with a postgres db ?
T 1568207015 18<thykka18>	you'll probably want a separate db for testss
T 1568207034 18<aLeSD18>	I have the schema file, so ideally I could create a sqlite3 inmemory db
T 1568207190 18<grr1231418>	not really helpful unless you use some universal orm/query builder
T 1568207300 18<aLeSD18>	grr12314, yes. You're right
T 1568207678 18<celphi18>	how do you get req.url when using http2 stream
T 1568207713 18<MJCDawy18>	streams still have urls/endpoints...
T 1568207738 18<MJCDawy18>	so you feed in the url when you instantiate the thing, and then it's stored in reqObj.url (probably)
T 1568207872 18<celphi18>	what you're saying doesnt make sense to me
T 1568207884 18<grr1231418>	https://nodejs.org/api/http2.html#http2_event_stream_2 ?
T 1568207892 18<grr1231418>	theres a path header apparently
T 1568207902 18<grr1231418>	idk, dump all the thing
T 1568207916 18<celphi18>	oh probably headers
T 1568208588 18<ashnur18>	https://www.isitdownrightnow.com/developer.mozilla.org.html noice
T 1568208872 18<trampi18>	yeah, saw that too :-/
T 1568209067 18<horribleprogram18>	Hey guys
T 1568209081 18<horribleprogram18>	I'm having troubles understanding this typeof operator on weird values
T 1568209095 18<horribleprogram18>	for example, typeof(null) returns "object" whereas typeof(undefined) returns "undefined"
T 1568209118 18<horribleprogram18>	so when typeof returns "object" what exactly does this mean?
T 1568209134 18<horribleprogram18>	because from my programming experience, since undefined is a global variable, it should be the one returning "object"
T 1568209170 18<horribleprogram18>	and the whole thing about typeof returning a string verses a type object, such as in Python, is weird as well, but let's not get into flame wars
T 1568209217 18<horribleprogram18>	for example:
T 1568209223 18<horribleprogram18>	n> typeof([])
T 1568209224 18<jellobot18>	(okay) 'object'
T 1568209230 18<horribleprogram18>	n> typeof(null)
T 1568209232 18<jellobot18>	(okay) 'object'
T 1568209247 18<horribleprogram18>	okay why the hell is [] returning "object", shouldn't it return something like "array"
T 1568209252 18<thykka18>	n> [] instanceof Array
T 1568209253 18<jellobot18>	(okay) true
T 1568209257 18<horribleprogram18>	EXACTLY
T 1568209266 18<thykka18>	n>Array.isArray([])
T 1568209268 18<jellobot18>	(okay) true
T 1568209275 18<horribleprogram18>	That's my point exactly
T 1568209296 18<horribleprogram18>	so instanceof works like Java
T 1568209304 18<stennowork18>	no
T 1568209308 18<horribleprogram18>	yes it does
T 1568209310 18<celphi18>	Why does this fail? https://jsfiddle.net/p954yus3/
T 1568209314 18<stennowork18>	no, it doesn't.
T 1568209320 18<thykka18>	nothing here works like java
T 1568209321 18<stennowork18>	instanceof checks the prototype chain
T 1568209325 18<Nach0z18>	I think in javascript, an array technically is an object
T 1568209339 18<horribleprogram18>	stennowork: what does that mean, prototype chain?
T 1568209351 18<stennowork18>	prototype chain is a thing you don't have in java
T 1568209363 18<celphi18>	I keep getting `TypeError [ERR_HTTP2_INVALID_CONNECTION_HEADERS]: HTTP/1 Connection specific headers are forbidden: "connection`
T 1568209376 18<stennowork18>	damn MDN is down
T 1568209379 18<horribleprogram18>	stennowork: link me to an article explaining it
T 1568209389 18<horribleprogram18>	stennowork: yeah it is :P
T 1568209394 18<thykka18>	can't, docs return 503 atm :P
T 1568209396 18<stennowork18>	!g javascript prototype chain
T 1568209400 18<stennowork18>	!google javascript prototype chain
T 1568209400 18<ecmabot18>	stennowork: Google search: "javascript prototype chain" <http://www.google.com/search?q=javascript%20prototype%20chain>
T 1568209406 18<stennowork18>	horribleprogram, the link ^
T 1568209408 18<horribleprogram18>	stennowork: that's an insult.
T 1568209419 18<stennowork18>	what?
T 1568209426 18<thykka18>	lmgtfy is an insult, this is just a suggestion ;)
T 1568209449 18<horribleprogram18>	actually the tylermcginnis video looks pretty in-depth
T 1568209453 18<horribleprogram18>	so ty
T 1568209458 18<grr1231418>	celphi obviously because of your Connection: 'keep-alive', thing
T 1568209474 18<stennowork18>	isn't keepalive moot for http/2
T 1568209479 18<stennowork18>	oh yeah it is
T 1568209483 18<stennowork18>	obv. :D
T 1568209621 19*	Now talking on 22##javascript
T 1568209621 22*	Topic for 22##javascript is: JavaScript is *not* Java. | Just ask your question. | Say "!mdn abc" for docs on "abc". | Don't paste code in the channel. | Can't talk? Get registered on freenode ( https://git.io/vaTS2 )
T 1568209621 22*	Topic for 22##javascript set by 26niggler!~niggler@unaffiliated/niggler (24Tue Jan 15 07:16:23 2019)
T 1568209633 18<stennowork18>	javascript doesn't have classes like in java
T 1568209635 18<horribleprogram18>	stennowork: in this video, we see a global function declaration called Animal, it's not within a class construct
T 1568209649 18<horribleprogram18>	ic
T 1568209650 18<stennowork18>	they have something they call classes, but they are just syntax sugar on prototype
T 1568209696 18<robdrake18>	developer.mozilla.org is back up
T 1568209711 18<horribleprogram18>	yeah so basically you basically make a function-like Constructor, then attach specific things to the prototype attribute
T 1568209746 18<horribleprogram18>	this guy is charging $17 for this course :'( I'm not complaining about the price at all
T 1568210052 18<luist18>	is there a way to export / import / require classes from another file using ES5?
T 1568210110 18<bradleymeck18>	luist: nope, use a module system or use ES modules
T 1568210127 18<luist18>	isn’t module ES6?
T 1568210143 18<luist18>	at least i need ES6 pre compiler to use it with django compress
T 1568210145 18<bradleymeck18>	compile down via something like rollup
T 1568210247 18<bradleymeck18>	also if you are using django compress but targetting more modern browsers the compiling down to ES5 is probably going to be a net loss
T 1568210523 18<niggler18>	typescript getting confused with binds :(
T 1568210537 18<RLa18>	why would you need binds
T 1568210561 18<niggler18>	typing out foo.bar.baz(qux) gets old pretty quickly
T 1568210603 18<niggler18>	so you'd think typescript would figure out at least that the arguments for foo.bar.baz would be the same as the arguments for foo.bar.baz.bind(foo.bar)
T 1568210714 18<niggler18>	actually maybe the answer is replacing everything with one-letter variables
T 1568210818 18<niggler18>	f.b.b(q) is arguably more readable
T 1568210831 18<OnkelTem18>	I wonder why MDN regularly goes down
T 1568210843 18<OnkelTem18>	It's down for me right now, again
T 1568210852 18<niggler18>	isup.me
T 1568210876 18<niggler18>	OnkelTem: https://downforeveryoneorjustme.com/developer.mozilla.org
T 1568210878 18<niggler18>	yeah sure enough
T 1568210883 18<niggler18>	"It's not just you! developer.mozilla.org is down. "
T 1568210894 18<OnkelTem18>	Yeah, I check few VPNs already
T 1568210897 18<OnkelTem18>	checked*
T 1568210937 18<OnkelTem18>	It's just a bunch of static pages, what can go wrong? (you think)
T 1568210949 18<OnkelTem18>	Sure I don't pay for it, but anyways... weird
T 1568210985 18<niggler18>	ehh w/e
T 1568212100 18<nontester18>	Hello! What does (0, func)(args) do? it seems to behave like calling the function normally, i.e func(args)
T 1568212132 18<niggler18>	if func is eval, then there's a behavioral difference
T 1568212160 18<niggler18>	nontester: http://perfectionkills.com/global-eval-what-are-the-options/#indirect_eval_call_theory
T 1568212217 18<stennowork18>	not sure if i should actually read this
T 1568212224 18<stennowork18>	it might be helpful for golfing
T 1568212233 18<niggler18>	absolutely should as it goes over the spec
T 1568212248 18<stennowork18>	fair
T 1568212255 18<niggler18>	that particular section goes over direct vs indirect calls
T 1568212301 18<niggler18>	the spec link is bad but it should point to https://es5.github.io/x15.1.html#x15.1.2.1.1
T 1568212408 19*	Now talking on 22##javascript
T 1568212408 22*	Topic for 22##javascript is: JavaScript is *not* Java. | Just ask your question. | Say "!mdn abc" for docs on "abc". | Don't paste code in the channel. | Can't talk? Get registered on freenode ( https://git.io/vaTS2 )
T 1568212408 22*	Topic for 22##javascript set by 26niggler!~niggler@unaffiliated/niggler (24Tue Jan 15 07:16:23 2019)
T 1568212492 18<nontester18>	Alright, but that seems to be only for eval - I can't really understand the implications for non-eval functions
T 1568212516 18<niggler18>	you have an example
T 1568212587 18<nontester18>	Nothing I can link to, but basically (0, makeitem)(query).then(item=>{code})
T 1568212603 18<niggler18>	more generally, if you have an unbound function, the `this` will be the global
T 1568212670 18<niggler18>	n> var bar = "global"; var foo = {bar: "foo", baz: function() { return this.foo; }}; [foo.baz(); (1,foo.baz)(), (1,foo.baz.bind(foo))()]
T 1568212672 18<jellobot18>	(fail) SyntaxError: Unexpected token ;
T 1568212673 18<earend118>	wait.. (0, eval)() hack applies to other functions too?
T 1568212685 18<niggler18>	n> var bar = "global"; var foo = {bar: "foo", baz: function() { return this.foo; }}; [foo.baz(), (1,foo.baz)(), (1,foo.baz.bind(foo))()]
T 1568212686 18<jellobot18>	(okay) [ undefined, { bar: 'foo', baz: [Function: baz] }, undefined ]
T 1568212697 18<niggler18>	n> var bar = "global"; var foo = {bar: "foo", baz: function() { return this.bar; }}; [foo.baz(), (1,foo.baz)(), (1,foo.baz.bind(foo))()]
T 1568212699 18<jellobot18>	(okay) [ 'foo', 'global', 'foo' ]
T 1568212700 18<niggler18>	^^
T 1568212710 18<niggler18>	neat little trick eh?
T 1568212768 18<renlo18>	clear
T 1568212775 18<renlo18>	lol, thought I was in a terminal
T 1568212786 18<niggler18>	reset :P
T 1568212787 18<renlo18>	todays gonna be a long day
T 1568212800 18<stennowork18>	df -h
T 1568212807 18<niggler18>	hunter2
T 1568212829 18<stennowork18>	mplayer spongebob_sex_tape.ogv
T 1568212831 18<stennowork18>	oops
T 1568212848 18<stennowork18>	is mplayer even still used
T 1568212856 18<stennowork18>	or is it all vlc nowadays
T 1568212867 18<niggler18>	vlc
T 1568212878 18<stennowork18>	pity
T 1568212886 18<stennowork18>	mplayer was the king of video players
T 1568212905 18<niggler18>	remember winamp?
T 1568212908 18<stennowork18>	sure
T 1568212911 18<stennowork18>	yeah on windows
T 1568212916 18<stennowork18>	but never played videos with that i think
T 1568212919 18<arve18>	webamp.org
T 1568212925 18<stennowork18>	maybe some AMVs
T 1568212926 18<stennowork18>	>_>
T 1568212927 18<niggler18>	yeah all those old apps died off, vlc is king
T 1568212934 18<stennowork18>	rip
T 1568212938 18<stennowork18>	well vlc is great though
T 1568212940 18<stennowork18>	so its no problem
T 1568212947 18<niggler18>	and open source
T 1568212947 18<stennowork18>	and the programmer has the right attitude
T 1568212950 18<earend118>	n>var x=23;  (()=>{ x=6; var f=(a)=>console.log(a); (0,f)(x); })()
T 1568212950 18<stennowork18>	yep
T 1568212951 18<jellobot18>	(okay) 6 undefined
T 1568212968 18<niggler18>	make a global earend1
T 1568212988 18<earend118>	n>var x=23;  (()=>{ x=6; var f=(a)=>console.log(x); (0,f)(x); })()
T 1568212988 18<niggler18>	err
T 1568212990 18<jellobot18>	(okay) 6 undefined
T 1568212993 18<niggler18>	its arrow function
T 1568212997 18<niggler18>	so `this` has different semantics
T 1568213064 18<nontester18>	n> var bar = "global"; var foo = {bar: "foo", baz: function() { return this.bar; }}; [(0,foo.baz()), (1,foo.baz)()]
T 1568213065 18<jellobot18>	(okay) [ 'foo', 'global' ]
T 1568213115 18<stennowork18>	n> var bar = "global"; var foo = {bar: "foo", baz: function() { return this.bar; }}; with (foo) { return [(0,foo.baz()), (1,foo.baz)()]; }
T 1568213117 18<jellobot18>	(fail) SyntaxError: Illegal return statement
T 1568213122 18<stennowork18>	n> var bar = "global"; var foo = {bar: "foo", baz: function() { return this.bar; }}; with (foo) { [(0,foo.baz()), (1,foo.baz)()]; }
T 1568213124 18<jellobot18>	(okay) [ 'foo', 'global' ]
T 1568213126 18<earend118>	wow
T 1568213376 18<earend118>	nontester: where can i read about this? keyword?
T 1568213449 18<darkseid18>	`with`?
T 1568213581 18<renlo18>	what is `with`
T 1568213592 18<earend118>	i wondered if it's some general feature that only needs to be understoof
T 1568213648 18<niggler18>	you mean the indirect call? nah
T 1568213654 18<niggler18>	most people don't write code like that
T 1568213666 18<niggler18>	its like labeled blocks or >>>=
T 1568213668 18<bradleymeck18>	avoid `with`, it doesn't work in strict mode contexts
T 1568213676 18<earend118>	i don't even get why stennowork used with at all. i mean that indirect referencing via (0,f) and (1,f)
T 1568213676 18<stennowork18>	yes, never use 'with'
T 1568213690 18<stennowork18>	i just tried something out, it was unrelated to your issues
T 1568213699 18<earend118>	ok.
T 1568213703 18<niggler18>	its better to stick with simpler constructs
T 1568213705 18<renlo18>	til JS has namespaces
T 1568213706 18<renlo18>	lol
T 1568213721 18<renlo18>	https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/with#Using_with ; that looks so weird to me
T 1568213722 18<stennowork18>	`with` is just a thing that is probably from the very early days of JS and nobody cared to remove it yet
T 1568213726 18<niggler18>	love labeled if blocks, but tslint is way too opinionated
T 1568213740 18<earend118>	i think it was related..hehe. however i mean that what we're all testing
T 1568213742 18<niggler18>	`with` is great when used judiciously
T 1568213755 18<stennowork18>	niggler, do you have an actual `with` usecase?
T 1568213762 18<renlo18>	n> ctx={'blehhhhh': 2}; with(ctx) { console.log(blehhhhh) }
T 1568213763 18<jellobot18>	(okay) 2 undefined
T 1568213768 18<renlo18>	so weird
T 1568213770 18<stennowork18>	i always looked at it a bit like looking on goto or so.
T 1568213783 18<earend118>	yeah .. but then you would have to use baz alone .. and it would be bound.. probably
T 1568213789 18<niggler18>	its for situations where you have a large nested chain
T 1568213793 18<niggler18>	foo.bar.baz.qux
T 1568213801 18<stennowork18>	like those are things that were probably very important for something in the distant past where we didn't have any more powerful flow contrl
T 1568213818 18<earend118>	n> var bar = "global"; var foo = {bar: "foo", baz: function() { return this.bar; }}; with (foo) { [(0,baz()), (1,baz)()]; }
T 1568213819 18<jellobot18>	(okay) [ 'foo', 'global' ]
T 1568213826 18<niggler18>	if you're modifying foo.bar.baz.qux a lot, it gets old to type it every time, and a temporary variable potentially detracts from readability
T 1568213835 18<niggler18>	same reason to use bind
T 1568213841 18<stennowork18>	wait
T 1568213855 18<earend118>	n> var bar = "global"; var foo = {bar: "foo", baz: function() { return this.bar; }}; with (foo) { [(0,baz)()), (1,baz)()]; }
T 1568213856 18<jellobot18>	(fail) SyntaxError: Unexpected token )
T 1568213856 18<stennowork18>	n> const foo = {a: 23}; with (foo) { a = 24; }; foo
T 1568213858 18<jellobot18>	(okay) { a: 24 }
T 1568213860 18<stennowork18>	oh wow
T 1568213866 18<stennowork18>	didn't know it'd behave like that
T 1568213871 18<earend118>	damn .. my arrow keys dont work
T 1568213874 18<niggler18>	what did you expect?
T 1568213892 18<stennowork18>	niggler, just a variable 'a' in the block scope
T 1568213896 18<earend118>	me neither.
T 1568213901 18<earend118>	just tested it.
T 1568213904 18<stennowork18>	n> const foo = {a: 23}; with (foo) { b = 123; }; foo
T 1568213905 18<jellobot18>	(okay) { a: 23 }
T 1568213912 18<stennowork18>	strange
T 1568213917 18<niggler18>	it's a limited form of VB's with
T 1568213925 18<niggler18>	VB's with statement lets you add properties
T 1568213926 18<earend118>	have you blocked nontester?
T 1568213931 18<earend118>	or sth?
T 1568213931 18<niggler18>	but that's because you're explicit
T 1568213933 18<renlo18>	why is that strange stennowork ?
T 1568213950 18<niggler18>	With foo : .Bar = "Baz" : End With
T 1568213967 18<niggler18>	^^ you need the dot, so there's no ambiguity
T 1568213993 18<stennowork18>	n> const foo = {a: 23}; with (foo) { a = 42; b = 23; }; foo /// @renlo
T 1568213995 18<jellobot18>	renlo, { a: 42 }
T 1568213996 18<renlo18>	with seems kinda cool now
T 1568214029 18<stennowork18>	i treated `with` always as something that is just useful for golfing
T 1568214036 18<renlo18>	golfing?
T 1568214038 18<niggler18>	the modern trend favors code you can statically anaylze
T 1568214045 18<niggler18>	code golf renlo
T 1568214054 18<stennowork18>	javascript code golf like the cool kinds in ##jsgolf
T 1568214304 18<nontester18>	Thanks for the help! I am still confused but now atleast I have something to dig into =)
T 1568214329 18<bradleymeck18>	there are a few very rare uses for `with` but they all involve emulating virtual containment of some kind
T 1568214338 18<bradleymeck18>	which is... extremely rare
T 1568214348 18<stennowork18>	noted
T 1568214428 18<niggler18>	there aren't "a few very rare uses", it's just that the community prefers other approaches in general
T 1568214451 18<bradleymeck18>	niggler: Realms shim cannot be reproduced without it
T 1568214475 18<bradleymeck18>	it literally is like 3-5 uses that I've seen that actually need it
T 1568214475 18<niggler18>	i meant that it's useful far beyond "a few very rare uses"
T 1568214483 18<niggler18>	but that the community decided that other approaches are better
T 1568214496 18<bradleymeck18>	i don't think its costs are worth the code golf
T 1568214499 18<niggler18>	its akin to the argument that for loops have "a few very rare uses" since there are array functions
T 1568214533 18<bradleymeck18>	it introduces dynamic scope which is hard to reason about, which is very different from for loop vs methods
T 1568214534 18<prussian18>	Ya, i've used with a few times but stopped after getting issues making everything 'use strict';
T 1568214545 18<prussian18>	oh well
T 1568214550 20<threenuc>30	Is this the right channel to ask why is running `mysql -uroot -proot < somescript.sql` producing different results when ran from an npm script vs from regular terminal (written by hand)?
T 1568214616 18<NoiseEee18>	what does 'different results' mean
T 1568214683 18<dka18>	Hi, I am trying tu use react-codemod as suggested by react v16.9.0 to add UNSAFE_ to deprecated lifecycle method
T 1568214701 18<dka18>	When running the npx react-codemod command, I have errors, it does not work, and I don't see any information about it online
T 1568214709 18<dka18>	this is the project I am trying to upgrade https://github.com/reactjs/react-codemod
T 1568214710 19<jaawerth>	threenuc: well, npm scripts (on linux) are executed by `sh`, and the PATH has <project root>/node_modules/.bin added to it
T 1568214713 18<damian__18>	hi. please, is it posibble to build an array of strings in which every string is always the same but a number (the index I think), like ['sameName0', 'sameName1', 'sameName2'] ... ?
T 1568214718 18<dka18>	https://github.com/bootstrap-styled/v4
T 1568214720 19<jaawerth>	threenuc: ^
T 1568214739 18<jaawerth18>	!doesn't work @dka
T 1568214740 18<ecmabot18>	dka: What do you mean it doesn't work? Is it unemployed? What happens when you try to run it? What did you try to run? What's the output? What's the error message? What did you want or expect to happen? Can you post a screenshot or a fiddle?
T 1568214755 19<earend1>	threenuc: i bet it's because of the < redirector
T 1568214761 18<stennowork18>	damian__, yes, its possible
T 1568214781 18<damian__18>	stennowork and do you know how ?
T 1568214783 18<jaawerth18>	n> Array.from({ length: 5 }, (v, i) => `foo${i}`) @damian__
T 1568214784 18<jellobot18>	damian__, [ 'foo0', 'foo1', 'foo2', 'foo3', 'foo4' ]
T 1568214797 18<stennowork18>	damian__, create an array, and append the indices from the iteration
T 1568214799 18<stennowork18>	or that
T 1568214806 18<stennowork18>	spoonfed
T 1568214820 18<jaawerth18>	lol yeah I suppose I should have done more "teach a man to fish" on that one lol
T 1568214833 19<earend1>	threenuc: u could try starting one process and then pipe its stdout via node api to the other
T 1568214834 18<stennowork18>	shrug
T 1568214839 18<NoiseEee18>	damian__: 'numbered variables' is codesmell
T 1568214856 18<jaawerth18>	damian__: Array.from({ length: n }) generates an array of n length, and the second arg to Array.from is an optional mapper function (same signature as array.map)
T 1568214856 18<stennowork18>	to be fair its not a variable but a string
T 1568214864 20<threenuc>30	I'm creating a docker container with an empty db, then running redirecting the .sql script (mysql -uroot -proot -h 0 --port=4242). When ran from npm - 'ERROR 2013 (HY000): Lost connection to MySQL server at 'reading initial communication packet', when ran from terminal it runs fine.
T 1568214871 18<NoiseEee18>	stennowork: ahh true that
T 1568214884 20<threenuc>30	After I run it from terminal, running it from npm again works fine
T 1568214886 18<damian__18>	thanks a lot jaawerth !
T 1568214914 18<dka18>	jaawerth, I mean it says "Unexpected token export", full error is available in this reported issue  : https://github.com/facebook/jscodeshift/issues/344
T 1568214939 19<earend1>	threenuc: process.stdout.pipe(another_process.stdin)
T 1568215036 18<earend118>	you would need need to 'cat somescript.sql'  .. and pipe it to 'mysql blah'
T 1568215038 18<earend118>	i think
T 1568215078 18<Kartha18>	 hi, I need an alternative for Sleep() and delay() in javascript (in processing.js)
T 1568215086 18<earend118>	or .. i think u can set the process as a shell or sth.. then it would support scripts
T 1568215112 18<earend118>	again?
T 1568215114 20<threenuc>30	no theres no really any js code in the picture here, i'm writing npm scripts as like helper sripts
T 1568215125 18<stennowork18>	!sleep @ Kartha
T 1568215125 18<ecmabot18>	Kartha: JavaScript in the browser and Node.js doesn't have a sleep function -- as it's single threaded (if that makes no sense, ask). const sleep = util.promisify(setTimeout); Or const sleep = t => new Promise(r => setTimeout(r, t)); Then use await sleep(400);
T 1568215143 18<RLa18>	really?
T 1568215150 20<threenuc>30	but ill try the pipe thanks hang on
T 1568215182 18<earend118>	i would go for the script too :)
T 1568215186 18<RLa18>	you could easily write your own sleep function but it would be really efficient
T 1568215198 18<RLa18>	inefficient*
T 1568215210 18<stennowork18>	RLa, see the code examples in that factoid
T 1568215214 18<earend118>	but in case u want to use the node process api .. you got a few things to try.
T 1568215219 20<threenuc>30	nope, same error with cat db.sql | mysql hmm
T 1568215228 18<jaawerth18>	dka: well, that error would suggest it's trying to process an uncompiled ES module export somewhere
T 1568215250 19<earend1>	threenuc:  first try if it works in console.. (no node)
T 1568215281 18<jaawerth18>	looking at the "main" field of package.json, lib/index.js, and looking at that file, it's been compiled by babel into a commonjs export so I'm surprised it's having that issue
T 1568215287 18<jaawerth18>	unless there's code of yours it's trying to parse
T 1568215296 18<earend118>	then know why and if you want not to use a npm script =bash for instance.
T 1568215299 18<mia18>	How should I set the date to the first day of the next month
T 1568215302 18<mia18>	For any given date
T 1568215303 18<jaawerth18>	I dunno enough about that package to know what it does and doesn't support but it seems like something isn't beingg compiled
T 1568215305 18<dka18>	jaawerth, yes we use esm, but that's fairly common
T 1568215316 18<mia18>	is there any easy way or do I have to do the math myself
T 1568215323 18<dka18>	there's no interest of running the codemod on compiled files
T 1568215323 18<jaawerth18>	dka: well something in that build chain must be broken if you're getting that error
T 1568215327 18<earend118>	usually its for portability/universality  or so..
T 1568215347 18<dka18>	jaawerth, build is not broken, and jscodeshift is supporting babel
T 1568215352 18<stennowork18>	moment(date).add(1, 'month').startOf('month')
T 1568215356 18<dka18>	I amusing a babel.config.js file, it should be picked up by default
T 1568215376 18<jaawerth18>	I mean, it's etiher that or there's an actual syntax error somewhere
T 1568215405 18<jaawerth18>	or that npx command isn't going through esm
T 1568215411 18<jaawerth18>	(or isn't utilizing it)
T 1568215445 19<earend1>	threenuc: what i mean if you don't specify the command is to be executed in a shell .. the usage of pipes and redirectors will possibly not be interpreted ad hoc. so just dig there if u really need to.
T 1568215451 18<jaawerth18>	in which case you'll need to modify the command so it does, probably with -r something if you mean the esm package
T 1568215452 18<dka18>	that is just weird, it is widely used by facebook and again, there is no point of running the codemod on compiled source
T 1568215463 18<dka18>	I have read their documentation and example show that esm work
T 1568215470 18<dka18>	the project I am trying to run the codemod on is on github
T 1568215473 18<jaawerth18>	well you should in theory be able to see where the unexpected token is coming from
T 1568215480 18<jaawerth18>	since you didn't show me your actual error stack I can't tell you
T 1568215487 18<jaawerth18>	but ify ou narrow down the problem file you can eliminate possible cluprits
T 1568215504 18<jaawerth18>	it could be something the package author screwed up too
T 1568215518 18<jaawerth18>	something they failed to compile etc
T 1568215537 18<jaawerth18>	I did notice lib/ is compiled but their prepublish script also builds a dist/, which is odd
T 1568215557 18<jaawerth18>	(unless dist is for non-bundled client-facing code or something)
T 1568215565 18<dka18>	jaawerth, it come from : /home/dka/workspace/github.com/bootstrap-styled/v4/node_modules/react-codemod/transforms/rename-unsafe-lifecycles.js:18
T 1568215579 18<dka18>	have you checked the error? I believe this should not happen something is going wrong
T 1568215593 18<jaawerth18>	oh, same one as the issue - I thought that was someone else with a similar issue to yours
T 1568215667 18<dka18>	no it is me
T 1568215692 18<dka18>	so there own source can't be read, that doesn't make any sens
T 1568215697 18<dka18>	and facebook did react, they know how to do
T 1568215807 18<dka18>	I have tried in a sample project and the codemod work fine, just by doing `npm install react react-codemod` and by creating a source with `import React from 'react'; export default class Hello extends React.Component { componentWillMount() {} }`
T 1568215817 18<dka18>	I have the expected result
T 1568215844 18<jaawerth18>	it isn't react that's the issue
T 1568215863 18<jaawerth18>	the file being pointed to there - the rename-unsafed-lifecycles - did you check to see if that's using export?
T 1568215876 18<jaawerth18>	rename-unsafe-lifecycles*
T 1568215896 18<jaawerth18>	facebook isn't the author of that boostrap-styled package you're using
T 1568215917 18<dka18>	I am the author, as explained in the post, I just came back from a retreat and I wish to upgrade to react v16.9.0 for people
T 1568215931 18<dka18>	I have removed all the source code within the file that fail and it keep failing
T 1568215944 18<dka18>	the file look like: `class AbbrUnstyled extends React.Component {}`
T 1568215952 18<dka18>	but I have the same error, while a sample empty project does it well
T 1568215963 18<jaawerth18>	alright. sorry then, I don't have time to dig in deeper and it sounds like this is more involved than I can help with at a quick glance
T 1568215989 18<EmergencyMedical18>	Hello folks
T 1568215993 18<EmergencyMedical18>	09:32:28.378 var conversion = $('input[name=conversion'+65+']').val();
T 1568215995 18<EmergencyMedical18>	09:32:28.418 undefined
T 1568216004 18<EmergencyMedical18>	In javascript consolein browser I get confused by this
T 1568216005 18<dka18>	damnb
T 1568216017 18<EmergencyMedical18>	Instead of just saying '1' or whatever the value is, how come it says undefined?
T 1568216028 18<EmergencyMedical18>	I have to actually type the variable name to get the actual value
T 1568216034 18<EmergencyMedical18>	How does the console javascripting work?
T 1568216046 18<EmergencyMedical18>	What exactly is undefined?
T 1568216084 18<jaawerth18>	that most likely means it didn't find the input element, so when trying to get the value in the element it returned undefined
T 1568216085 18<RLa18>	console.log first argument has value undefined
T 1568216095 18<EmergencyMedical18>	 $('input[name=conversion'+65+']').val(); if I just do this or .value or whatever then I get the direct thing
T 1568216103 18<EmergencyMedical18>	I just want to understand what the actual undefined bit is
T 1568216117 18<RLa18>	oh
T 1568216117 18<EmergencyMedical18>	the flow of the process from statement execution to output
T 1568216128 18<jaawerth18>	oh
T 1568216156 18<EmergencyMedical18>	Say you type this in console: var something = some.selector (pseudocode) and it says undefined.
T 1568216166 18<jaawerth18>	well since you're assigning to a variable - that statement returns nothing to the REPL
T 1568216172 18<EmergencyMedical18>	What does the js engine do when you type that statement, how does it execute it and tell me undefined? what is undefined
T 1568216176 18<jaawerth18>	and a REPL always outputs somethign returned by an expression you input
T 1568216181 18<EmergencyMedical18>	hmm
T 1568216202 18<jaawerth18>	so if you input an expression that doesn't erturn a value (like a variable assignment), it says undefined
T 1568216212 18<RLa18>	I think it's variable declaration that "returns" undefined, not assignment
T 1568216223 18<jaawerth18>	ah, you're right
T 1568216228 18<jaawerth18>	pure assignment DOES return
T 1568216234 18<jaawerth18>	"return"
T 1568216329 18<EmergencyMedical18>	u see
T 1568216332 18<EmergencyMedical18>	I see
T 1568216400 18<EmergencyMedical18>	Ok then thank you
T 1568216403 18<EmergencyMedical18>	Time for candy
T 1568216437 18<EmergencyMedical18>	Is there a better js console in browser that is better multiline editing
T 1568216441 18<EmergencyMedical18>	thank you
T 1568216562 18<thykka18>	what are you using now?
T 1568216586 18<jaawerth18>	there might be some browser extensions out there
T 1568216588 18<jaawerth18>	never checked tbh
T 1568216711 18<EmergencyMedical18>	firefox developer edition
T 1568216730 18<EmergencyMedical18>	Whatever happened to firebug
T 1568275714 20*	Disconnected (20)
T 1568275739 19*	Now talking on 22##javascript
T 1568275739 22*	Topic for 22##javascript is: JavaScript is *not* Java. | Just ask your question. | Say "!mdn abc" for docs on "abc". | Don't paste code in the channel. | Can't talk? Get registered on freenode ( https://git.io/vaTS2 )
T 1568275739 22*	Topic for 22##javascript set by 26niggler!~niggler@unaffiliated/niggler (24Tue Jan 15 07:16:23 2019)
T 1568275801 18<Stealthy18>	10 pow 53 yottabytes
T 1568275811 18<Stealthy18>	right... thats a dead end project
T 1568277142 18<incognito18>	robin___: trunc the 0.009 and do a simple round of 2 decimals
T 1568277180 18<niggler18>	wow gotta love xml that mixes betwen "" attrs and ''
T 1568277496 18<grr1231418>	thats rare
T 1568277506 18<niggler18>	its some vml nonsense
T 1568277509 18<grr1231418>	i didnt think anyone still writes xml by hand in this day
T 1568277519 18<niggler18>	pretty sure two different systems are colliding
T 1568277521 18<grr1231418>	and machine output usually is consistent
T 1568277523 18<MJCDawy18>	you're rare
T 1568277540 18<MJCDawy18>	shut up niggler, you pretty
T 1568277540 18<grr1231418>	i am indeed
T 1568277555 18<niggler18>	lol sup MJCDawy
T 1568277605 18<MJCDawy18>	losing my mind slowly, hope everyones having a lovely day tho
T 1568277608 18<MJCDawy18>	lol
T 1568277621 18<niggler18>	i feel that
T 1568277665 18<MJCDawy18>	atleast there's some sunshine poking its head after a dreary winter
T 1568277738 18<qswz18>	nested ternaries http://dpaste.com/1M8580A
T 1568277747 18<MJCDawy18>	today I had to break the news to someone that vitamin d is not, infact, teleported via sunrays
T 1568277752 18<qswz18>	I wrote this, but was asked to break it down
T 1568277765 18<qswz18>	why ppl are not able to rea dit?
T 1568277775 18<qswz18>	it's clear like cristal
T 1568277786 18<niggler18>	its not the nested ternaries
T 1568277791 18<niggler18>	its the abuse of jsx
T 1568277801 18<qswz18>	abuse of jsx?
T 1568277814 18<qswz18>	yo've got something aginst jsx it seems
T 1568277821 18<qswz18>	a youth truamtism?
T 1568277823 18<niggler18>	when you start racking up double digit context switches in a single statement, there's a problem
T 1568277832 18<qswz18>	ah
T 1568277844 18<qswz18>	I don't know, it feels easy to read for me
T 1568277851 18<niggler18>	the flow is straightforward
T 1568277854 18<qswz18>	looks how it is after breaking it down:
T 1568277859 18<niggler18>	<Typography color="error">{`billing with "${settings.billing}" is not supported`}</Typography>
T 1568277863 18<niggler18>	stuff like that is no fun
T 1568277883 18<niggler18>	so you're trying to mix two different parts of the brain
T 1568277907 18<niggler18>	the JSX part of the brain eschews antiquated constructs like ternary operators
T 1568277909 18<MJCDawy18>	meh
T 1568277917 18<qswz18>	http://dpaste.com/18MWYZJ soooo verbose
T 1568277935 18<qswz18>	niggler: what would you write else?
T 1568277936 18<MJCDawy18>	the marketshares of techs like jsx are just so bad in the context of greater global market forces
T 1568277943 18<MJCDawy18>	that it's really like, who cares
T 1568277956 18<niggler18>	i dunno, today is fun with regexes
T 1568277959 18<qswz18>	<Typography color="error">billing with "{settings.billing}" is not supported</Typography>
T 1568277960 18<MJCDawy18>	use it, don't. whatever is best for the actual use case surely
T 1568277962 18<qswz18>	maybe
T 1568277963 18<MJCDawy18>	are we not scientists
T 1568277965 18<qswz18>	but it's buggy to do that
T 1568277973 18<qswz18>	i creates multiple text nodes
T 1568277975 18<qswz18>	it*
T 1568277980 18<qswz18>	niggler: ^
T 1568277986 18<MJCDawy18>	...
T 1568277989 18<qswz18>	not buggy, but not recommended
T 1568277993 18<niggler18>	i know what it does
T 1568278000 18<niggler18>	imagine its 4:45 AM
T 1568278000 18<MJCDawy18>	... lol
T 1568278013 18<niggler18>	and you spent hours trying to figure out why something isn't working
T 1568278016 18<MJCDawy18>	I have nothing positive to say about this opinion
T 1568278016 18<MJCDawy18>	^
T 1568278017 18<qswz18>	it's murica?
T 1568278021 18<qswz18>	east coast
T 1568278025 18<qswz18>	I guess
T 1568278030 18<niggler18>	only to discover that excel stores 3 different representations of the same thing in three different places
T 1568278056 18<MJCDawy18>	I would, as usual, advise you that this is not at all shocking
T 1568278058 18<qswz18>	excel is like IE5
T 1568278063 18<MJCDawy18>	because as per the previous x years
T 1568278064 18<niggler18>	so i think there was an attempt to clean up VML
T 1568278071 18<MJCDawy18>	"it's Excel"
T 1568278074 18<niggler18>	except they forgot to change the source of truth
T 1568278083 18<niggler18>	so you have this bs that's inconsistent with the VML
T 1568278094 18<niggler18>	but the VML is still truth, so the right answer is to discard everything else
T 1568278111 18<niggler18>	so you're left wondering why did two different teams try two different approaches to replace VML
T 1568278121 18<niggler18>	and KEEP BOTH IN EXCEL 2019???
T 1568278135 18<MJCDawy18>	!learn it's Excel=Got an error that's related to excels data methods? Ofcourse you do, it's EXCEL. More @ "!the niggler paradox"
T 1568278135 18<ecmabot18>	MJCDawy: Learned `it's Excel`.
T 1568278144 18<qswz18>	excel 2019
T 1568278149 18<qswz18>	it's in the game
T 1568278166 18<niggler18>	Excel is governed by ecma-376
T 1568278175 18<qswz18>	who's the guest star in excel 2019?
T 1568278195 18<niggler18>	oh that's definitely willie G
T 1568278199 18<MJCDawy18>	niggler, meaning ... ?
T 1568278213 18<niggler18>	like how there's ECMA-262 for JS
T 1568278216 18<MJCDawy18>	like what do you expect from that being true
T 1568278219 18<niggler18>	XLSX is covered under ECMA-376
T 1568278232 18<niggler18>	notable lack of quality from the output of ECMA
T 1568278240 18<niggler18>	not too dissimilar to the decline in the parent company EA
T 1568278250 18<MJCDawy18>	which means what in terms of what MS does or does not do based on commercial grounds
T 1568278266 18<MJCDawy18>	the same as chrome in theory implements just the standards
T 1568278268 18<niggler18>	it means sheetjs can still be a thing
T 1568278277 18<MJCDawy18>	but we all know that's pretty much the omplete reverse of the truth
T 1568278315 18<MJCDawy18>	they basically buy seats on these groups to influence their own agenda
T 1568278327 18<MJCDawy18>	and then the changes are upstreamed
T 1568278330 18<MJCDawy18>	and then they call it spec compliance heh
T 1568278332 18<niggler18>	yeah XLSX and ECMA-376 was an attempt to stifle ODS
T 1568278344 18<Stealthy18>	https://i.imgur.com/p6nA2N7.png
T 1568278346 18<Stealthy18>	whats cooking
T 1568278348 18<MJCDawy18>	lool nobody cares about ods
T 1568278352 18<MJCDawy18>	especially not MS
T 1568278357 18<Stealthy18>	frying silicium
T 1568278381 18<niggler18>	right, because microsoft came out with their own XML spec before ODS took off
T 1568278448 18<MJCDawy18>	even then
T 1568278466 18<MJCDawy18>	businesses dont WANT to use shitty openoffice
T 1568278473 18<niggler18>	you're right
T 1568278478 18<qswz18>	I'm going to to try to prove Collatz conjecture
T 1568278480 18<MJCDawy18>	they literally sacrifice productivity
T 1568278489 18<MJCDawy18>	everyones prior training and knowledge (in MS products)
T 1568278508 18<ashnur18>	aren't you away?
T 1568278509 18<MJCDawy18>	a web based component such as yours is fine because of its web nature
T 1568278515 18<qswz18>	Stealthy: get linux
T 1568278520 18<MJCDawy18>	which can be implemented and deployed internally
T 1568278522 18<qswz18>	it'll run smoothly
T 1568278538 18<MJCDawy18>	ashnur, depends, who's lookin' for me
T 1568278543 18<niggler18>	like this MJCDawy https://bugs.documentfoundation.org/show_bug.cgi?id=83511
T 1568278555 18<niggler18>	lol "We ignore the last two bits for many stuff to improve the user experience."
T 1568278567 18<niggler18>	its like when edge broke math
T 1568278578 18<MJCDawy18>	I have to take my landlords to the ombudsman
T 1568278597 18<MJCDawy18>	-__-
T 1568278606 18<ashnur18>	australia have ombudsmans?
T 1568278609 18<MJCDawy18>	I hate fucking realtors so fucking much
T 1568278616 18<MJCDawy18>	all they do is try to fuck you over
T 1568278622 18<ashnur18>	realtor?
T 1568278631 18<MJCDawy18>	realestate agent
T 1568278636 18<qswz18>	they have musulmans
T 1568278697 18<qswz18>	oh learn a new word
T 1568278701 18<qswz18>	learned*
T 1568278718 18<MJCDawy18>	congratulations.
T 1568278757 18<qswz18>	if 3n+1 if n is odd, n/2 if n is even converges to 1
T 1568278764 18<qswz18>	I bet 4n+1 too
T 1568278774 18<MJCDawy18>	... what.
T 1568278782 18<MJCDawy18>	modulus.
T 1568278821 18<niggler18>	<v:textbox style='mso-direction-alt:auto' o:singleclick="f">
T 1568278821 18<MJCDawy18>	sometimes I think I was the only one paying attention in highschool. Which is weird because I was on a LOT of ketamine
T 1568278828 18<niggler18>	why would you do that
T 1568278854 18<MJCDawy18>	why would I do that?
T 1568278873 18<niggler18>	the VML niggles are irritating
T 1568278881 18<niggler18>	some attributes have to be single quoted apparently
T 1568278888 18<niggler18>	and others have to be double quoted lolol
T 1568278961 18<MJCDawy18>	fwiw once again referencing back many years advising you against doing any of this
T 1568278965 18<MJCDawy18>	too late now tho haha
T 1568279036 18<MJCDawy18>	meanwhile I still haven't done anything at all ^_^
T 1568279043 18<MJCDawy18>	that's where the smart moneys at
T 1568279117 18<MJCDawy18>	gimme them $0 bills
T 1568279275 18<qswz18>	just avoid excel
T 1568279280 18<qswz18>	for sanity
T 1568279306 18<qswz18>	and all its derived languages
T 1568279474 18<ashnur18>	niggler: one is chars[] the other is string? :D
T 1568279774 18<niggler18>	qswz: that wouldve been great career advice years ago
T 1568279964 18<qswz18>	now it's too late
T 1568279971 18<qswz18>	you've seen too much shit
T 1568279990 18<qswz18>	irreversible
T 1568280246 18<niggler18>	don't get me wrong, as frustrating as it is, this has kept me engaged for years
T 1568280269 18<niggler18>	probably wouldve burned out on react or angular or vue or whatever the framework of the week is
T 1568280281 18<ashnur18>	haha, tell niggler to forget excel
T 1568280285 18<qswz18>	are google spreadsheets better?
T 1568280313 18<ashnur18>	there is no such thing as better if you are so vague
T 1568280321 18<niggler18>	its not better or worse
T 1568280329 18<niggler18>	id say google spreadsheets addresses 90% of what people need
T 1568280341 18<qswz18>	ok
T 1568280342 18<niggler18>	but more people are now familiar with google docs offerings
T 1568280355 18<niggler18>	so its not like microsoft is the obvious answer that it was 5 years ago
T 1568280379 18<niggler18>	microsoft had familiarity going for it, but can't compete with free
T 1568280402 18<niggler18>	so you'll find shops that would be willing to spend $$ on spreadsheet related stuff go with microsoft
T 1568280412 18<niggler18>	because they need certain things that google sheets can't do
T 1568280434 18<niggler18>	BUT for the overwhelming majority of people, google sheets is actually the better choice
T 1568280698 18<niggler18>	the real irony in all this is that microsoft is shooting itself in the foot, if the core value proposition is compatibility with excel and you break excel, why does compatibility even matter?
T 1568280718 18<darkseid18>	what's the difference between these 2 functions: https://gist.github.com/fdjones/1cb52415b40a119abbf2a4dabcf0532b
T 1568280758 18<niggler18>	neither are valid functions
T 1568280764 18<niggler18>	you don't returm anything
T 1568280799 18<niggler18>	second, the top one doesnt make sense, did you mean to just resolve bar/baz ?
T 1568280819 18<oznt18>	js idiot here, asking: how do I transform tests with jest? can some one look at this? https://pastebin.com/JDMW9W79 I don't get how to tell jest to compile the tests
T 1568282206 18*	CssNoob goodbye y'all . off to working out, Good evening :)
T 1568282374 20*	Disconnected (20)
T 1568282398 19*	Now talking on 22##javascript
T 1568282398 22*	Topic for 22##javascript is: JavaScript is *not* Java. | Just ask your question. | Say "!mdn abc" for docs on "abc". | Don't paste code in the channel. | Can't talk? Get registered on freenode ( https://git.io/vaTS2 )
T 1568282398 22*	Topic for 22##javascript set by 26niggler!~niggler@unaffiliated/niggler (24Tue Jan 15 07:16:23 2019)
T 1568285664 18<qswz18>	Can CSP headers pose issues with firewalls or corporate networks?
T 1568285815 18<qswz18>	I mean can 2 person, same browsers have different behaviors due to their network/firewalls and CSP headers
T 1568285824 18<qswz18>	one of that person getting blocked
T 1568285833 18<qswz18>	the other with no problem
T 1568286774 18<Maxdamantus18>	qswz: in theory, not as long as they're using TLS with the standard root certificates.
T 1568286820 18<qswz18>	so if the site is on HTTPS, it's all the same for everyone on every network?
T 1568286829 18<Maxdamantus18>	qswz: but aiui some corporate proxies require people to use alternative root certificates so the proxy can intercept the connection.
T 1568286839 18<oznt18>	what does start:dev in the scripts section of package.json mean/
T 1568286842 18<Maxdamantus18>	Should be.
T 1568286843 18<oznt18>	what does start:dev in the scripts section of package.json mean?
T 1568286873 18<thykka18>	oznt, it's the name of the script. you can do "npm run start:dev" to use it
T 1568286909 18<oznt18>	thykka, thanks
T 1568286976 18<qswz18>	thanks Maxdamantus
T 1568287022 18<qswz18>	oznt: imo you could just rename it to dev
T 1568288491 18<oznt18>	so I manged to run a simple test with jest and svetle, but now I encountered this error: https://pastebin.com/P0XTpGKR
T 1568288507 18<oznt18>	can someone here explain why I am getting eferenceError: fireEvent is not defined?
T 1568288545 18<oznt18>	This directly taken from the svetle test examples https://testing-library.com/docs/svelte-testing-library/intro#examples
T 1568289054 18<oznt18>	ok, I helped myself : import { fireEvent, waitForElement } from '@testing-library/dom' at the top
T 1568289058 18<oznt18>	broken exampels
T 1568289483 18<AMANEDIEL18>	heyho everyone
T 1568290971 18<DnzAtWrk18>	god I hate automatically scrolling forums/message boards/comments/news
T 1568290980 18<DnzAtWrk18>	just let me reach the bottom of the page you ****
T 1568291729 18<Intelo18>	Hi
T 1568291750 18<qswz18>	infinite scroll?
T 1568291766 18<qswz18>	I like how GH collapse middle comments
T 1568292047 18<ashnur18>	i don't like GH interface. I like the features, but not how it looks and how it is buitl
T 1568292108 18<thykka18>	try bitbucket/gitlab then?
T 1568292271 18<qswz18>	or gitea
T 1568292310 18<poboy18>	cli
T 1568292514 18<qswz18>	or gogs.io
T 1568292564 18<qswz18>	is there a nodejs based self-hosted git servic
T 1568292581 18<stennowork18>	why does it have to be nodejs based
T 1568293283 18<red8218>	qswz: self hosted git is trivially easy.  arguably if you need git in the fist place you have the skills necessary to set one up yourself.  I have one on a 5/month host, that backs itself up to amazon aws.
T 1568293700 18<ashnur18>	thykka: those are the same
T 1568293753 18<thykka18>	?
T 1568293776 18<thykka18>	same interface as GH?
T 1568293780 18<thykka18>	probably  not
T 1568293982 18<ashnur18>	maybe stretch your imagination for a bit more than that
T 1568293998 18<thykka18>	maybe explain what you meant?
T 1568293999 18<ashnur18>	otherwise it's going to be a windows vs linux debate which none of us wants :D
T 1568294020 18<ashnur18>	nah, we both have better things to do
T 1568294027 18<thykka18>	err.. okay?
T 1568294063 18<thykka18>	it's not like you asked a question or anything xD
T 1568294092 18<ashnur18>	exactly :)
T 1568294108 18<thykka18>	i still have no idea what you meant with 'those are the same' though
T 1568294122 18<thykka18>	bitbucket is the same as gitlab?
T 1568294124 18<ashnur18>	well, what i dislike in github is there in bitbucket or gitlab too
T 1568294135 18<ashnur18>	definitely not the same
T 1568294149 18<thykka18>	and what exactly is it that you don't like?
T 1568294196 18<ashnur18>	can't edit code from my smartphone on them
T 1568294210 18<thykka18>	you can though
T 1568294228 18<thykka18>	idk about the web interfaces, but i'm pretty sure there's a version of git for Android
T 1568294254 18<ashnur18>	will have to see then
T 1568294316 18<thykka18>	first google result, idk if good http://pocketgit.com/
T 1568294424 18<thykka18>	https://pedronveloso.com/proper-git-client-android/
T 1568294604 18<thykka18>	I guess my point is, being able to commit into a git repository doesn't really have much to do with whether you're using GitHub, GitLab, or any git provider. It's a function of git itself, so the answer is to find a suitable git client, instead of finding another git provider :PP
T 1568294739 18<thykka18>	issue tracker, wiki, github pages.. these are GitHub features, rather than git's. I initially thought you were referring to those
T 1568294752 18<ashnur18>	i agree
T 1568294768 18<qswz18>	red82: I mean all the project management sufff as well
T 1568294796 18<qswz18>	it's important in a team
T 1568295008 18<red8218>	qswz: our company is 10 years old (more or less).  we’ve changed issue trackers and so on at least three times, because we were trying to find one that suited our workflow.   we’ve never changed our git service.
T 1568295035 18<red8218>	it is my opinion that if you separate git from your PM stuff, then you have more flexibility.
T 1568295044 18<prometh18>	a recruiter just cancelled his scheduled meeting with me, 10min before the call
T 1568295046 18<red8218>	because there’s lot of PM tools that don’t have a software tracking component
T 1568295058 18<red8218>	but that may be good for you
T 1568295062 18<prometh18>	recruiters really are jerks
T 1568295073 18<prometh18>	i think i'll just avoid them from now on
T 1568295091 18<prometh18>	which is what i used to do
T 1568295094 18<red8218>	prometh: they don’t get paid until you get paid
T 1568295104 18<NoiseEee18>	like injury lawyers!
T 1568295105 18<qswz18>	I bet you tried trello
T 1568295110 18<prometh18>	red82: so?
T 1568295112 18<NoiseEee18>	top of the human class
T 1568295129 18<prometh18>	NoiseEee: which class of human?
T 1568295143 18<prometh18>	or are we getting into order/etc ?
T 1568295144 18<NoiseEee18>	prometh: sorry, the chart was upside down
T 1568295159 18<qswz18>	red82: I like doing git ci "Fix #42 some bugged shit"
T 1568295166 18<red8218>	prometh meaning that they are legitimiately tryign to get you a job, and avoid them completely because of a bad experience with one person may not be a good idea
T 1568295173 18<qswz18>	and have the issue state automatically updates
T 1568295176 18<prometh18>	red82: experience wiht many
T 1568295181 18<red8218>	ah ok
T 1568295207 18<qswz18>	ci=commit -m ofc
T 1568295229 18<stennowork18>	git ci = continuous integration?
T 1568295233 18<stennowork18>	autocommit on save? :D
T 1568295249 18<qswz18>	nah just one of my 100 aliases
T 1568295268 18<red8218>	yeah, I used to do that too.  I don’t do that anymore
T 1568295276 18<prometh18>	red82: your name makes me think.... in 2020, i'll be 37, having been born in 1983
T 1568295288 18<red8218>	because one day you will have to sit down at a co-workers desk without your aliases and you won’t be able to do anything
T 1568295296 18<qswz18>	rbc = rebase --continue
T 1568295301 18<qswz18>	typical git alias
T 1568295325 18<qswz18>	without them you lost time
T 1568295330 18<qswz18>	lose*
T 1568295343 18<prometh18>	qswz: seconds
T 1568295366 18<prometh18>	qswz: to be honest, using cli for interactive rebase loses more than seconds
T 1568295380 18<red8218>	not really.  the ratio of time spent staring at the screen trying to figure out what to type vs. actually typing is so skewed, that the aliases are insignificant.
T 1568295409 18<qswz18>	co = checkout
T 1568295413 18<qswz18>	at least
T 1568295420 18<red8218>	but the time lost (and embarrassment) of having to google how to do basic commands on someone’s machine because I don’t know the commands is priceless
T 1568295420 18<prometh18>	to each their own... it's more laziness than optimization
T 1568295421 18<qswz18>	everyone shouls have this
T 1568295444 18<prometh18>	automation is far better than saving keystrokes
T 1568295445 18<qswz18>	compare = "!f(){ git rev-list --count --left-right "${2:+$1}...${2:-$1}" | { read ahead behind; printf 'ahead: %s\tbehind: %s\n' $ahead $behind; } };f"
T 1568295448 18<qswz18>	my fav
T 1568295454 18<qswz18>	but I don't use it much
T 1568295485 18<qswz18>	clgh = "!f() { git clone --no-tags git@github.com:$@; }; f"
T 1568295495 18<prometh18>	i don't even using shorthand cli options (-a, etc)
T 1568295505 18<prometh18>	--option is better for self-documentation
T 1568295514 18<qswz18>	ragh = "!f() { repo=$(git r get-url origin 2> /dev/null || pwd); git remote add ${1:-origin} git@github.com:${2:-caub/$(basename $repo)}; }; f"
T 1568295519 18<qswz18>	remte add gh
T 1568295549 18<prometh18>	qswz: i use sourcetree :)
T 1568296310 18<prussian18>	people at my work seem to hate sourcetree
T 1568296318 18<prussian18>	is there something we're doing wrong?
T 1568296359 18<hmw_metalab18>	I'd like to try rolling my own syntax highlighting. Do you have hints on what to think of, what to avoid?
T 1568296377 18<prussian18>	syntax highlighting for...?
T 1568296379 18<prussian18>	js?
T 1568296386 18<hmw_metalab18>	I imagine, cutting a long text into many divs will impact performance
T 1568296401 18<prussian18>	it's mostly just understanding lexical analysis, aka writing a lot of regexps.
T 1568296404 18<hmw_metalab18>	Hm. Not sure yet, I just want to try it. I would start with JS and then a specific assembler language
T 1568296422 18<prussian18>	more complex highlighting will likely require an AST
T 1568296431 18<hmw_metalab18>	What topics should I research?
T 1568296438 18<prussian18>	uh. lexical analysis
T 1568296448 18<prussian18>	you just want to map a stream of tokens to a color basically
T 1568296464 18<hmw_metalab18>	I thing I vaguely understand. Thanks for the hint
T 1568296467 18<hmw_metalab18>	*think
T 1568296516 18<prussian18>	this gross example I ran into when looking up something in python sort of points in the right direction
T 1568296517 18<prussian18>	https://docs.python.org/3/library/re.html#writing-a-tokenizer
T 1568296534 18<hmw_metalab18>	How is this formal language description format called?
T 1568296541 18<prussian18>	the long and skinny is it's just a giant regexp that emits a bunch of sytanxtic tokens you can map to colos
T 1568296562 18<prussian18>	uh idk?
T 1568296647 18<hmw_metalab18>	An example is this:   alpha: A-Z | a-z | _ \n  numeral:  0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 \n alphanumeral: \n alpha | numeral ... I have no formal education, so I lack a lot of knowledge. This looks like it is meant to be parsed
T 1568296693 18<hmw_metalab18>	I will find out :)
T 1568296797 18<qswz18>	you want to highlight this text above?
T 1568296924 18<hmw_metalab18>	https://en.wikipedia.org/wiki/Extended_Backus%E2%80%93Naur_Form
T 1568296948 18<stennowork18>	oh the backus naur rform
T 1568296957 18<hmw_metalab18>	Nah, this is just an example of those language descriptions, I keep stumbling over every now and then
T 1568296962 18*	stennowork gets vague flashback to his uni times
T 1568296969 18<Alexendoo18>	What you pasted isn't BNF exactly, but they're not necessarily meant to be parsed
T 1568296971 18<hmw_metalab18>	I might use something like this for my syntax highlighting
T 1568296989 18<hmw_metalab18>	I've heard about parser generators
T 1568297013 18<hmw_metalab18>	I imagine, they spit out a nested case structure for you, after reading something like this
T 1568297065 18<hmw_metalab18>	I might have to make a meta-parser
T 1568297090 18<stennowork18>	at this moment i am really glad that i don't have your problems because that sounds absolutely terrible
T 1568297103 18<hmw_metalab18>	heheh :)
T 1568297162 18<hmw_metalab18>	I prefer such things over working with ugly legacy code from two aeons ago
T 1568297221 18<hmw_metalab18>	What I really need, is a simple text editor, not neccessarily with syntax highlightin, but with the capability of marking the "current" line (for a debugger)
T 1568297267 18<hmw_metalab18>	So I am thinking about what I will need to get that and what else will be easy to build in while doing it, etc
T 1568297279 18<hmw_metalab18>	also syntax highlighting would be nice
T 1568297303 18<hmw_metalab18>	I am mostly worried about performance
T 1568297372 18<prometh18>	why is regex considered more correct than a more functional approach?
T 1568297401 18<prometh18>	is it perhaps because it's more cross-language?
T 1568297419 18<Alexendoo18>	For syntax highlighting prometh?
T 1568297422 18<prometh18>	no
T 1568297423 18<hmw_metalab18>	I'd suppose. They told me, they weren't even fast
T 1568297428 18<prometh18>	subject change
T 1568297442 18<Alexendoo18>	Ah
T 1568297478 18<Alexendoo18>	Syntax highlighting in practise is a bunch of regex fwiw hmw_metalab, usually adapted from textmate
T 1568297511 18<hmw_metalab18>	mhm... adding it to my notes
T 1568297534 18<hyperisco18>	How can I stream files over HTTP to Web Storage or IndexedDB? Also, how can I stream data from Web Storage or IndexedDB?
T 1568297700 18<Alexendoo18>	hyperisco: There isn't an API for that AFAIK
T 1568297723 18<stennowork18>	just write the stream chunks into webstorage?
T 1568297726 18<Alexendoo18>	You could chunk it up and store it as multiple entries, but unless there's a real need for that I wouldn't bother
T 1568297739 18<MikeD_18>	what are you trying to accomplish?
T 1568297745 18<stennowork18>	yeah you'd expect that browser caching already does the job for you
T 1568297817 18<luist18>	hey, where am i missing a return here? https://paste.ofcode.org/5jzExN2szez6XjFFaH9aQC
T 1568297889 18<notchris18>	o/
T 1568297919 18<Alexendoo18>	prometh: I don't think they are considered more correct, it can be less effort though. It can also be far more difficult. So depends on the context I guess
T 1568297976 18<grr1231418>	luist what gave you the idea you're missing a return
T 1568297983 18<grr1231418>	and not say missing an assignment
T 1568297995 18<luist18>	grr12314: someone here said it
T 1568298014 18<grr1231418>	you define a local SignupTracker and then do nothing with it and lose it
T 1568298022 18<luist18>	grr12314: by the way i’m getting Uncaught ReferenceError: SignupTracker is not defined
T 1568298035 18<grr1231418>	but rather than return, i'd expect to assign it to a global
T 1568298039 18<luist18>	oh
T 1568298041 18<luist18>	right
T 1568298078 18<luist18>	grr12314: like window.SignupTracker = SignupTracker; ?
T 1568298119 18<hyperisco18>	Is web API documentation that is Chrome-specific published? If so, where?
T 1568298127 18<grr1231418>	yup
T 1568298149 18<Alexendoo18>	There are plenty of things on MDN that are chrome specific
T 1568298195 18<grr1231418>	https://developer.chrome.com/
T 1568298198 18<grr1231418>	https://developer.chrome.com/apps/api_index
T 1568298209 18<prometh18>	Alexendoo: at least in js, i've measured regex to perform faster than procedural/functional code
T 1568298289 18<luist18>	grr12314: still getting Uncaught ReferenceError: SignupTracker is not defined
T 1568298319 18<grr1231418>	use it like window.signuptracker too
T 1568298322 18<grr1231418>	or idk
T 1568298333 18<grr1231418>	check order of scripts
T 1568298399 18<Alexendoo18>	prometh: That won't matter all that much for most use cases
T 1568298405 18<luist18>	grr12314: the order is right… but i can’t see window.SignupTracker in the console either
T 1568298450 18<luist18>	grr12314: this is what i’m using now: https://paste.ofcode.org/kjNxNaVnLuzmRGLRK8Hj46
T 1568298513 18<grr1231418>	add some console logs to be sure it has ran
T 1568299530 18<mage_18>	hello
T 1568299553 18<mage_18>	is there a self-hosted solution for non-public js modules?
T 1568299766 18<qswz18>	github packages
T 1568299769 18<qswz18>	verdaccio
T 1568299801 18<mage_18>	I'll take a look at verdaccio :)
T 1568300721 18<prometh18>	i just learned something awesome about chai.js: you can chain assertions.... expect(result).to.be.an("object").with.property("isAllowed").that.is.a("function");
T 1568300747 18<prometh18>	and just keep going `.with.property...`
T 1568300995 18<Nyle18>	Hello, if php returns something as null, and I want to check it in javascript, how can do it?
T 1568301004 18<Nyle18>	just test to see if the var returns string 'null'?
T 1568301014 18<stennowork18>	Nyle, php is in the backend, javascript is in the frontend
T 1568301014 18<Nyle18>	or is javascript have a null thing to check for
T 1568301037 18<stennowork18>	so you cannot check the return value of a php function with javascript
T 1568301044 18<Nyle18>	You're very much wrong about that.
T 1568301053 18<Nyle18>	Or you're just arguing for the sake of it.
T 1568301055 18<jaawerth18>	what do you mean "returns?" Is this an xhr/http request you're making from JS? Or do you mean you're server-rendering something from php?
T 1568301070 18<stennowork18>	Nyle, no. PHP is on the SERVER SIDE, javascript is on the CLIENT SIDE
T 1568301074 18<Nyle18>	You make ajax request, data from php comes back as json, sometimes php returns something as null, I want to check injs.
T 1568301079 18<Nyle18>	Oh fuck fuck sake.
T 1568301083 18<Nyle18>	Just stop talking to me man
T 1568301085 18<jaawerth18>	ok, so it's xhr
T 1568301088 18<jaawerth18>	I did ask :P
T 1568301107 18<Nyle18>	jaawerth: :)
T 1568301114 18<jaawerth18>	it depends on what kind of http request it is. if it's JSON, then once you parse the JSON it should be a regular null value
T 1568301126 18<stennowork18>	lmao
T 1568301127 18<Nyle18>	ah, so typof null?
T 1568301140 18<jaawerth18>	in which case you can use `result === null` or the more permissive `result == null` which will match both null and undefined
T 1568301140 18<Nyle18>	or something != 'null' etc.?
T 1568301144 18<Nyle18>	ahh.
T 1568301148 18<Nyle18>	Thanks.
T 1568301152 18<Nyle18>	You're most helpful.
T 1568301167 18<stennowork18>	note to self: don't tell people the truth, but what they want to hear
T 1568301171 18<jaawerth18>	np
T 1568301178 18<stennowork18>	keeps their ego intact and everyone is happy
T 1568301189 18<jaawerth18>	stennowork: I mean what you said is true but it turns out they were asking a reasonable question and it just wasn't immediately clear which they were asking
T 1568301192 18<Nyle18>	note to stennowork: first step in solving any problem is information gathering.
T 1568301207 18<Nyle18>	Taking pride in 'oh I tell it how it is' that's just juvenile thinking.
T 1568301246 18<stennowork18>	taking pride in asking properly on a question instead of trying to guess what the person wants?
T 1568301251 18<stennowork18>	answering*
T 1568301253 18<stennowork18>	anyway
T 1568301256 18<jaawerth18>	Nyle: FWIW sometimes folks come in here and ask stuff that sounds a *little* like that and it turns out they aren't super clear about the boundary between server- and client-side code. but that's why I asked for clarification ;-)
T 1568301256 18<Nyle18>	I take no pride. I don't suffer pride.
T 1568301267 18<Nyle18>	That's your agony. Not mine. I'm working.
T 1568301269 18<Nyle18>	:)
T 1568301275 18<prometh18>	pride is fine, but there's such a thing as "new pride"
T 1568301281 18<Nyle18>	Haha
T 1568301289 18<Nyle18>	pride fighting championship
T 1568301302 18<stennowork18>	there is no agony on my part - after all, you are the one with a request, not me
T 1568301323 18<prometh18>	i feel good about the things i create and do, but i don't walk around feeling better tahn everyone unelss they're assholes
T 1568301338 18<Nyle18>	I apologize. I assumed that it would be obvious, if one is trying to check for a php returned null value... it seems odd to inform someone of the obvious that they are backend/frontend/ etc. etc. whaever he said
T 1568301349 18<Nyle18>	Next time I will be more obvious and specify the flow.
T 1568301383 18<pingo18>	I put a breakpoint somewhere inside minified code in devtools. I have an object here, any idea how to find where in global scope (window) this object is stored? I am sure it is somewhere but no idea how to find it
T 1568301393 18<Nyle18>	It just seems obvoius to me for you think that it's probably xhr type thing, php is returning a value, and instead of handling it in php, need to check it in js
T 1568301397 18<Nyle18>	Anyway cheers
T 1568301411 18<stennowork18>	yeah, if you asked: 'i am doing an xhr request to my php backend, and the backend returns JSON, how could i check if that backend returns the PHP value null?'
T 1568301427 18<prometh18>	i didn't read the history, but let's try to hit the reset button
T 1568301436 18<jaawerth18>	I mean, like, let's take it down a notch lol. I get why stennowork read the question that way but this could have been avoided if folks hadn't jumped right into talking at each other instead of with one another
T 1568301440 18<Nyle18>	prometh: I've been at my current dev position for almost 4 months now, every now nd agian they tell me im doing a good job etc. and it elates me sure
T 1568301455 18<stennowork18>	wot
T 1568301458 18<stennowork18>	meh
T 1568301463 18<prometh18>	Nyle: compliments give me no emotion :S but i say "thank you"
T 1568301515 18<Nyle18>	Yesteryday someone said, I like your hoodie. Just for ease and to keep walking I said thankyou, but to my lead engineer, I said, I don't get it., how do I accept a compliment for something which has nothing to do with me
T 1568301530 18<jaawerth18>	hey, you picked the hoodie
T 1568301533 18<prometh18>	Nyle: it's just a hoodie
T 1568301534 18<Nyle18>	What, are they trying to say I have 'good' taste? No. It just means my taste is in accordance with theirs.
T 1568301543 18<Nyle18>	It's neither good nor bad. It's a mere fuzzy match.
T 1568301547 18<prometh18>	Nyle: you both have something in common
T 1568301553 18<prometh18>	sounds like an ice breaker
T 1568301560 18<Nyle18>	However, everything that is common is not to be trusted.
T 1568301565 18<Nyle18>	That's why we factor.
T 1568301570 18<jaawerth18>	this is what we call "small talk"
T 1568301571 18<Nyle18>	WE take out the commonalities.
T 1568301573 18<prometh18>	Nyle: i'm not mathematical
T 1568301575 18<Nyle18>	I'm not a very social person
T 1568301582 18<Nyle18>	I'm seriously messed up in the head
T 1568301587 18<Nyle18>	<- folks were psychiatrists
T 1568301589 18<prometh18>	Nyle: neither am i anymore, but i used to be... different origins
T 1568301626 18<jaawerth18>	I a when I'm "present" but when I'm walking around halls and such I tend to be lost in thought so sometimes I forget to put the social face on
T 1568301632 18<prometh18>	i wish i was better at math, but my head gets cloudy
T 1568301662 18<prometh18>	now i just get stoned when i need to be sociable
T 1568301682 18<Nyle18>	Haha
T 1568301686 18<Nyle18>	That's awesome dude
T 1568301695 18<Nyle18>	Hopefully you live where you can go buy in store
T 1568301697 18<stennowork18>	if you want to find a job, maybe you shouldn't talk about your drug consumption and your psychological problems in a public channel
T 1568301700 18<prometh18>	canada ;)
T 1568301710 18<prometh18>	stennowork: they read irc logs?
T 1568301711 18<Nyle18>	Hey, they hired me right out of prison
T 1568301716 18<Nyle18>	*shrug*
T 1568301724 18<stennowork18>	you never know
T 1568301727 18<Nyle18>	Just asked me what was the felony about?
T 1568301733 18<prometh18>	stennowork:  i need to be myself somewhere
T 1568301736 18<Nyle18>	I was like, bullshit terrorist charge. I'm the wrong kind of brown.
T 1568301749 18<ashnur18>	lol
T 1568301751 18<Nyle18>	So even with some jail time, you still get hired as a programmer
T 1568301753 18<Nyle18>	np.
T 1568301759 18<prometh18>	Nyle: i'm sensing extreme sarcasm
T 1568301762 18<Nyle18>	durgs? the CEO is a former police chief.
T 1568301765 18<Nyle18>	I'm not joking.
T 1568301773 18<stennowork18>	yes, but a 1k people IRC channel about programming is probably not the right place
T 1568301776 18<Nyle18>	He is good people. Also a coder.
T 1568301780 18<Nyle18>	Interesting mix.
T 1568301781 18<ashnur18>	nice company
T 1568301787 18<prometh18>	stennowork: i find acceptance nowhere
T 1568301788 18<stennowork18>	but of course its your choice where you tell what
T 1568301793 18<Nyle18>	Very chill. I get high all day listen to youtube debug code
T 1568301794 18<ashnur18>	cops and criminals working together for the better good:D
T 1568301796 18<Nyle18>	it's brilliant.
T 1568301805 18<ashnur18>	heh. sounds fun
T 1568301812 18<Nyle18>	I'm trying to get him into the cannadis industry
T 1568301818 18<Nyle18>	now what hemp is also federally legal
T 1568301819 18<prometh18>	i can't write code while stoned
T 1568301822 18<Nyle18>	these people need software
T 1568301823 18<Nyle18>	man.
T 1568301834 18<Nyle18>	need to find a need in the cannabis industry and meet it
T 1568301836 18<Nyle18>	there's money
T 1568301838 18<Nyle18>	right there
T 1568301845 18<prometh18>	yes, "cannabis is the new wine" in canada
T 1568301846 18<ashnur18>	i am on the wrong continent for that
T 1568301854 18<Nyle18>	Green gold.
T 1568301898 18<prometh18>	the most fun is stoned and drunk
T 1568301919 18<prometh18>	slightly less fun is sober and writing code ;)
T 1568301927 18<prometh18>	hmm, caffeine
T 1568301945 18<ashnur18>	can't code when drunk
T 1568301964 18<prometh18>	same.. i just want to socialize
T 1568301995 18<jaawerth18>	https://observer.com/2012/04/bottoms-up-the-ballmer-peak-is-real-study-says/
T 1568301996 18<prometh18>	the antisocial part of my brain wants to express that it's funny that we want to socialize when our brains are in "dumb mode" (intoxicated)
T 1568302180 18<prometh18>	jaawerth: so, it's ideal to maintain a constant 0.139% blood/alcohol mix?
T 1568302216 18<prometh18>	so, like, what is that?
T 1568302262 18<prometh18>	oh.. the image caption is .1337%
T 1568302267 18<jaawerth18>	lol
T 1568302272 18<prometh18>	that article just lost credibility :P
T 1568302293 18<jaawerth18>	well that's for the xkcd comic
T 1568302327 18<prometh18>	i'm trying to calculate how much and how often i should consume aclohol
T 1568302352 18<jaawerth18>	credibility-wise it links to a CBS article about the study and credibility is a matter of the study itself (science news is almost always terrible) but I just find it funny that people are studying whether the Ballmer Peak is real at all
T 1568302932 18<prometh18>	jaawerth: performance optimization is valid
T 1568302995 18<qswz18>	gitlab uses jQuery, but not github
T 1568303011 18<qswz18>	GH is cleaner so
T 1568303048 18<luist18>	is my prototype right? I don’t really know to send the event using it: https://paste.ofcode.org/5DTTGLcGTA8uQKyq9etPgw
T 1568303158 18<luist18>	using: new EventTracker('Signed Up Confirmation').send();
T 1568303682 18<luist18>	hey, i’m getting: Uncaught TypeError: this.setContextDefaults is not a function
T 1568303683 18<luist18>	  in this extended prototype, can i get some help? https://paste.ofcode.org/8gjGQFcJhTtZhjyyXxSFsR
T 1568303687 18<jaawerth18>	typically one creates a fix set of events they want to use, with simple lowercase names (no spaces), and inclues a message in the event's data payload (in your case, props)
T 1568303733 18<jaawerth18>	luist: I mean, looking at the prototype, there is no setContextDefaults function defined.
T 1568303746 18<jaawerth18>	there's a setServiceDefaults
T 1568303769 18<jaawerth18>	oh nm it's defining it in the second paste you shared
T 1568303781 18<luist18>	yes
T 1568303844 18<gehn18>	prometh, only if you have profiled/benchmarked and established A) that there *is* a meaningful performance problem and B) precisely *where* that problem is
T 1568303873 18<prometh18>	gehn: the context was humans, alcohol and writing code :)
T 1568303892 18<gehn18>	those don't sound like they go together to me
T 1568303898 18<gehn18>	also not sure how that relates to performance
T 1568303902 18<prometh18>	gehn: science is trying to prove otherwise
T 1568303909 18<prometh18>	gehn: human performance
T 1568303913 18<gehn18>	[citation required]
T 1568303920 18<prometh18>	https://observer.com/2012/04/bottoms-up-the-ballmer-peak-is-real-study-says/
T 1568303937 18<jaawerth18>	luist: I mean, based on that code it should work
T 1568303937 18<gehn18>	studies say a lot of false things
T 1568303944 18<luist18>	jaawerth: any idea what’s wrong with my extended prototype? i managed to use the base EventTracker but not the extended SignupTracker
T 1568303947 18<jaawerth18>	sure there isn't a typo in there or something different from the paste?
T 1568303955 18<prometh18>	gehn: so? are you trying to upset me if i were drunk? :)
T 1568303957 18<gehn18>	popular culture is also *really* bad at correctly and accurately representing scientific studies
T 1568303965 18<luist18>	jaawerth: i’m calling it with: new SignupTracker('Signed Up Confirmation').send();
T 1568304022 18<prometh18>	qswz: gitlab uses jquery? wtfux
T 1568304036 18<jaawerth18>	luist: ohh ok, I see, it's using Object.create wrong
T 1568304042 18<prometh18>	qswz: i guess js devs are switching to ie11
T 1568304091 18<gehn18>	"the Ballmer Peak effect was present for creative problem solving but not for working memory"
T 1568304092 18<luist18>	jaawerth: oh how should it be
T 1568304113 18<gehn18>	working memory is probably the fundamentally more important of the two in terms of amount of usage on average during any given programming session
T 1568304159 18<gehn18>	also, if you want to establish a pattern of habitual usage with a high liklihood of leading to dependence and problems, be my guest
T 1568304178 18<gehn18>	for the rest of us, get good sleep, eat well, exercise, take periodic breaks, etc
T 1568304216 18<jaawerth18>	luist: well, I would recommend you check out the docs at https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/create because you probably want to set stuff like enumerable: true, configurable: true, and maybe writable: true, but at minimum it'd need to be Object.create(EventTracker.prototype, { setContextDefaults: { value: <actual function here> } })
T 1568304221 18<jaawerth18>	)
T 1568304226 18<gehn18>	I would also argue that "brain teasers" are a bad metric here and not representative of actual day to day programming in most of the real world
T 1568304251 18<luist18>	jaawerth: is there any better way to extend a prototype?
T 1568304255 18<gehn18>	Google explicitly states that they don't use brain teasers in interviews because they have the data showing that brain teasers don't work for assessing a person's technical skill
T 1568304276 18<jaawerth18>	I mean the Ballmer peak is actually a joke. It might be true in isolated cases but good luck with your liver if you try using booze as a regular performance enhancer
T 1568304282 18<gehn18>	^
T 1568304296 18<gehn18>	further, while a person may be able to perform a task they have previously learned relatively well while under the influence of alcohol, especially if that person uses alcohol regularly
T 1568304309 18<gehn18>	learning is for sure going to be impaired and there will be a host of other negative outcomes as well
T 1568304310 18<jaawerth18>	luist: I mean, you could use ES6 class syntax depending on whether you need to support legacy browsers
T 1568304315 18<GreenJello18>	I used to use alcohol so that I had an excuse to not work lol
T 1568304315 18<jaawerth18>	(and whether you're using babel)
T 1568304329 18<luist18>	jaawerth: unfortunately i can’t usee ES6 atm
T 1568304342 18<jaawerth18>	then yeah, that's the ES5 way and it works fine
T 1568304508 18<jaawerth18>	luist: except rather than manually use Object.create yourself, you could write a wrapper function for it to make it simpler, or just use https://www.npmjs.com/package/util.inherits
T 1568304538 18<jaawerth18>	luist: oh that's one thing that's often done that yours is missing - if Object.setPrototypeOf is available, it'll just use that instead of Object.create
T 1568304630 18<pingo18>	Is there some tool to search the whole JS object tree for a property with a certain name?
T 1568304698 18<jaawerth18>	probably on npm. maybe search for "recursive object filter" or "recursive object search"
T 1568304842 18<pingo18>	I have found this https://github.com/angus-c/waldojs but I cannot manage to build it into something I load into browser console or maybe it is just broken :/
T 1568307216 20*	Disconnected (20)
T 1568307242 19*	Now talking on 22##javascript
T 1568307242 22*	Topic for 22##javascript is: JavaScript is *not* Java. | Just ask your question. | Say "!mdn abc" for docs on "abc". | Don't paste code in the channel. | Can't talk? Get registered on freenode ( https://git.io/vaTS2 )
T 1568307242 22*	Topic for 22##javascript set by 26niggler!~niggler@unaffiliated/niggler (24Tue Jan 15 07:16:23 2019)
T 1568307243 18<lf9418>	Is the value being garbage collected?
T 1568307250 18<lf9418>	or something
T 1568307260 18<lf9418>	it's like a copy is being made and assigned instead
T 1568307768 18<hyperisco18>	Say I have the first half an image file at URL A, and the second half at URL B, then is there a way I can construct a URL C which is the concatenation of A and B? I should then be able to use this URL in, say, an img src, and the browser would download the complete image.
T 1568307856 18<sillyslux18>	hyperisco, lol...
T 1568307877 18<sillyslux18>	explain...
T 1568307882 18<hyperisco18>	What is unclear?
T 1568307909 18<sillyslux18>	what's an half image file?
T 1568307920 18<sillyslux18>	a broken file?
T 1568307934 18<lf9418>	sounds like it
T 1568307936 18<hyperisco18>	Take a complete image file, say a png file, then split it in half by bytes
T 1568307945 18<robertmaxrees18>	why would you do that?
T 1568307965 18<hyperisco18>	So the answer is "no"
T 1568307976 18<sillyslux18>	!xy @hyperisco
T 1568307977 18<ecmabot18>	hyperisco: The XY problem: You want to do X, but don't know how. You think you can solve it using Y, but don't know how to do that either. You ask about Y, which is a strange thing to want to do. Just ask about X. See also: http://xyproblem.info/
T 1568307997 18<hyperisco18>	You can't understand X. You don't want to understand X. Thank me.
T 1568308008 18<sillyslux18>	lol ok :)
T 1568308025 18<Stealthy18>	you can return a proper header (total byte size) and output the data that you download from both, sequentially after eachother to the output buffer
T 1568308033 18<Stealthy18>	php style; you can for sure do that in java too
T 1568308126 18<sillyslux18>	you can send binary data to your browser and use js to put things together
T 1568308152 18<hyperisco18>	I don't have enough RAM
T 1568308168 18<Stealthy18>	you dont need two halves in memory at the same time
T 1568308171 18<sillyslux18>	where? on your server or in your browser?
T 1568308174 18<hyperisco18>	I can explain one level up but then you'll ask what W is
T 1568308213 18<hyperisco18>	One level up is I have multiple chunks of a file stored in Web Storage, and I need to concatenate these without having them all in memory at once
T 1568308274 18<Stealthy18>	needed 10**52 YB of ram or storage earlier lol
T 1568308322 18<Stealthy18>	10**64*2 bytes of sha256 strings
T 1568308344 18<sillyslux18>	"Web Storage" is on your server?
T 1568308351 18<hyperisco18>	in the browser
T 1568308370 18<Stealthy18>	he's running on apple watch
T 1568308381 18<Stealthy18>	lol
T 1568308385 18<hyperisco18>	Not far from the truth.
T 1568308423 18<jaawerth18>	you could likely concatenate the binary chunks in an ArrayBuffer but you'd need a canvas to render it
T 1568308424 18<sillyslux18>	once you put it all together for displaying it, you'll consume all the memory needed
T 1568308470 18<hyperisco18>	Since you asked for more detail, now it is a video instead of an image.
T 1568308472 18<jaawerth18>	and yeah the problem is that once you've concatenated them, they will all be in memory
T 1568308472 18<Stealthy18>	why render it; just spit out buffer and proper header
T 1568308473 18<sillyslux18>	displaying half an file won't work, i think
T 1568308480 18<Stealthy18>	then you can use that url for your img src
T 1568308491 18<jaawerth18>	unless you mean you just can't have all the pieces AND the sum in memory at once
T 1568308493 18<Stealthy18>	first 1 half, then the other
T 1568308495 18<jaawerth18>	in which case, yes, you can do that.
T 1568308528 18<hyperisco18>	The video player will stream, but it has to be given a URL
T 1568308560 18<Stealthy18>	just header octet stream, total up the bytes and spit out
T 1568308585 18<jaawerth18>	wait if you have the binary data why is it a url?
T 1568308591 18<jaawerth18>	are you trying to use a data url?
T 1568308596 18<hyperisco18>	The data is on disk
T 1568308609 18<hyperisco18>	In Web Storage, or IndexedDB, take your pick.
T 1568308633 18<jaawerth18>	ah ok so base64
T 1568308644 18<jaawerth18>	this begins to make sense ;-)
T 1568308668 18<Stealthy18>	fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9
T 1568308668 18<Stealthy18>	fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8
T 1568308668 18<Stealthy18>	fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7
T 1568308678 18<Stealthy18>	by the type i'll hit 0 we'll get it
T 1568308723 18<Stealthy18>	10 million iterations per --
T 1568308726 18<Stealthy18>	you can do it
T 1568308821 18<sillyslux18>	45rdffffffffffffffffffffffffffffffffff
T 1568308836 18<sillyslux18>	this was my cat
T 1568308850 18<sillyslux18>	you have a cat too?
T 1568308854 18<hyperisco18>	If this all sounds insane, the alternative is to send the bytes over a websocket to node.js so I can merely use its streaming file API.
T 1568308885 18<Stealthy18>	i'm not going to cat my multiterabyte hash file lol
T 1568308899 18<hyperisco18>	But then I may as well just have it download the file as well
T 1568308921 18<Stealthy18>	you can do what you want in about 10 lines of php
T 1568308922 18<Stealthy18>	and be done
T 1568308926 18<Stealthy18>	if you have that option
T 1568308930 18<jaawerth18>	hyperisco: ok, so: you could have each chunk stored, and use an ArrayBuffer to aggregate them using ArrayBuffer.transfer(oldBuffer, oldBuffer.byteLength + newChunk.byteLength)
T 1568308967 18<jaawerth18>	hyperisco: you could then turn the final ArrayBuffer into a blob or the final string or whatever
T 1568309004 18<jaawerth18>	however, there'd be a time where you'd have all the binary data in memory at once AND the output string
T 1568309021 18<jaawerth18>	if you need to avoid that you'd need to, like, iteratively build up/concat the string itself I guess
T 1568309025 18<hyperisco18>	I know, which I don't have the memory for. That's why I can't make a single file in the first place =\
T 1568309039 18<jaawerth18>	but building up the string... now sure how gc is gonna treat that tbh
T 1568309050 18<Alexendoo18>	So this is for video? This sounds like absolutely the wrong place to be looking into
T 1568309067 18<jaawerth18>	so the problem is that even if you assemble it from parts, you can't actually assemble it lol
T 1568309086 18<hyperisco18>	I think I am going to websocket over to node.js
T 1568309087 18<Stealthy18>	why not sequentually
T 1568309092 18<Alexendoo18>	There's things like DASH, HLS already
T 1568309095 18<sillyslux18>	can't you just reduce quality and size?
T 1568309106 18<jaawerth18>	hmmm
T 1568309107 18<Alexendoo18>	They are precisely for chunking up videos into multiple files
T 1568309147 18<hyperisco18>	Which I know makes absolutely no sense as an option but that's a good thing for your sanity.
T 1568309147 18<jaawerth18>	hyperisco: oh I bet you could "stream" them chunk by chunk using the MediaSource api
T 1568309153 18<hyperisco18>	Thanks for letting me pick your brains.
T 1568309163 18<jaawerth18>	you might just have to tinker with how you'd want to handle rate-limiting it
T 1568309192 18<hyperisco18>	jaawerth, looking now
T 1568309352 18<jaawerth18>	hyperisco: googling, there are a couple articles out there that seem to apply - like https://developers.google.com/web/updates/2011/11/Stream-video-using-the-MediaSource-API and https://medium.com/@eyevinntechnology/how-to-build-your-own-streaming-video-html-player-6ee85d4d078a
T 1568309420 18<jaawerth18>	you'd just need to work out the logic about how it buffers/seeks by fetching and transferring the rirght set of buffers
T 1568309426 18<jaawerth18>	"buffer" in the video sense, that is
T 1568309443 18<jaawerth18>	you could even set your max "video buffer" size in terms of chunks
T 1568309476 18<jaawerth18>	mgiht even be able to plug the new ReadableStream api into it if you wanna get crazy
T 1568309512 18<hyperisco18>	You might have just saved me in the last few seconds jaawerth. I just need to see that I can match the producer speed to the consumer speed so that I do not unnecessarily exhaust memory
T 1568309522 18<jaawerth18>	nice
T 1568309524 18<hyperisco18>	"get crazy"
T 1568309526 18<jaawerth18>	haha
T 1568309530 18<hyperisco18>	Have you been reading the questions I've been asking?
T 1568309531 18<qswz18>	https://repl.it/@caub/fetch-upload-stream
T 1568309536 18<qswz18>	fetch streams
T 1568309538 18<jaawerth18>	some people don't like using the new DOM apis but I'd probably do it
T 1568309577 18<jaawerth18>	I dunno what polyfills there are out there for it
T 1568309580 18<jaawerth18>	!ciu ReadableStream
T 1568309581 18<ecmabot18>	jaawerth: Can I Use Streams? [FF 65+ (partial) | Chrome 52+ (partial) | Opera 39+ (partial) | Safari 10+ (partial) | iOS 10.3+ (partial) | Android 76+ (partial)] (Unsupported: IE) Overall: 87.3% <http://caniuse.com/streams>
T 1568309589 18<qswz18>	!polyfill.io @ jaawerth
T 1568309590 18<ecmabot18>	jaawerth: <script nomodule src="https://polyfill.io/v3/polyfill.js?flags=always&features=default,fetch"></script>
T 1568309623 18<jaawerth18>	qswz: why
T 1568309624 18<qswz18>	just drop it in your index.html
T 1568309630 18<qswz18>	no question
T 1568309646 18<Stealthy18>	500mb script instakill
T 1568309655 18<qswz18>	only for old browsers
T 1568309657 18<jaawerth18>	that's a rather naive approach when you're trying to manage memory
T 1568309659 18<hyperisco18>	I've been looking at ReadableStream and I see how it can be used to stream with the Fetch API
T 1568309678 18<jaawerth18>	one would likely need to know about the specific polyfill and any edge cases or memory ramifications
T 1568309687 18<qswz18>	nah
T 1568309692 18<qswz18>	just download everything
T 1568309697 18<qswz18>	for those stupid old browsrrs
T 1568309701 18<hyperisco18>	This only needs to run on a specific Chrome version
T 1568309701 18<qswz18>	the right punishment
T 1568309721 18<jaawerth18>	ah then you're good
T 1568309778 18<hyperisco18>	video.src = URL.createObjectURL(mediaSource);  that's the key there… at the end of the day I need a URL, because that's how the video player finds the video data
T 1568309792 18<hyperisco18>	So, this could work. Let me give it a try.
T 1568309798 18<qswz18>	a blobby url
T 1568309910 18<hyperisco18>	this may solve another majour preloading problem I have…
T 1568309943 18<qswz18>	Don't sha wish
T 1568309947 18<jaawerth18>	you could even use WritableStream to wrap the mediaSource api
T 1568309963 18<jaawerth18>	then you'd have backpressure to control the in-memory buffering
T 1568310025 18<hyperisco18>	if this solves my preloading problem too then you're a hero jaawerth
T 1568310030 18<jaawerth18>	hehe
T 1568310052 18<qswz18>	there are preload attributes for media rscrs
T 1568310061 18<qswz18>	resources
T 1568310293 18<lf9418>	Man, this is _evil_
T 1568310305 18<lf9418>	I have some angular code, that boils down to this basically:
T 1568310308 18<lf9418>	`{ let e = false; setTimeout(() => console.log(e), 20); } setTimeout(() => e = true, 10);`
T 1568310326 18<lf9418>	e being assigned is an entirely new e.
T 1568310342 18<lf9418>	I wish this would throw an error or a warning or _something_
T 1568310384 18<prussian18>	shouldn't it in strict mode?
T 1568310417 18<lf9418>	doesn't in nodejs at least
T 1568310431 18<lf9418>	'use strict'; { let e = false; setTimeout(() => console.log(e), 20); } setTimeout(() => e =true, 10)
T 1568310447 18<qswz18>	why should it throw?
T 1568310455 18<lf9418>	I'm not saying it should
T 1568310460 18<qswz18>	it shouldn't
T 1568310465 18<lf9418>	I agree
T 1568310465 18<prussian18>	n> { let e = false; setTimeout(() => console.log(e), 20); }; setTimeout(() => { 'use strict'; return e = true; }, 10);
T 1568310466 18<jellobot18>	(fail) Timeout { _idleTimeout: 10, _idlePrev: [TimersList], _idleNext: [TimersList], _idleStart: 44, _onTimeout: [Function], _timerArgs: undefined, _repeat: null, _destroyed: false, [Symbol(refed)]: true, [Symbol(asyncId)]: 13, [Symbol(triggerId)]: 0 }evalmachine.<anonymous>:1  { let e = false; setTimeout(() => console.log(e), 20); }; setTimeout(() => { 'use strict'; return e = true; },  ...
T 1568310476 18<prussian18>	shoul;d throw for Reference error... wut
T 1568310482 18<lf9418>	no
T 1568310482 18<qswz18>	oh it should
T 1568310490 18<lf9418>	it's hoisting or something
T 1568310490 18<qswz18>	I missed the block scope
T 1568310498 18<prometh18>	john carmack is a full-on engineer: https://www.youtube.com/watch?v=Ua-ikbZVofc
T 1568310500 18<lf9418>	it's pretending it's a var or something
T 1568310509 18<prometh18>	he understands software, cars and rockets... goddamn
T 1568310548 18<prussian18>	ya that's normal in not strict mode.
T 1568310572 18<lf9418>	but it will throw in strict? good to know.
T 1568310576 18<qswz18>	n> 'use strict'; {let e=2} setTimeout(() => {e=3; console.log(e, global.e)}, 10)
T 1568310577 18<jellobot18>	(fail) Timeout { _idleTimeout: 10, _idlePrev: [TimersList], _idleNext: [TimersList], _idleStart: 44, _onTimeout: [Function], _timerArgs: undefined, _repeat: null, _destroyed: false, [Symbol(refed)]: true, [Symbol(asyncId)]: 12, [Symbol(triggerId)]: 0 }evalmachine.<anonymous>:1  'use strict'; {let e=2} setTimeout(() => {e=3; console.log(e, global.e)}, 10)                                   ...
T 1568310592 18<qswz18>	n> 'use strict'; {let e=2} setTimeout(() => {e=3; console.log(e, global.e)}, 10); 'shutup'
T 1568310593 18<jellobot18>	(fail) 'shutup'evalmachine.<anonymous>:1  'use strict'; {let e=2} setTimeout(() => {e=3; console.log(e, global.e)}, 10); 'shutup'                                             ^  ReferenceError: e is not defined     at Timeout._onTimeout (evalmachine.<anonymous>:1:45)     at listOnTimeout (internal/timers.js:531:17)     at processTimers (internal/timers.js:475:7)
T 1568310600 18<qswz18>	see it throws
T 1568310623 18<lf9418>	good good :)
T 1568310629 18<qswz18>	n> 'use strict'; {let e=2; setTimeoout(()=>console.log(e), 20)} setTimeout(() => {e=3; console.log(e, global.e)}, 10); 'shutup'
T 1568310631 18<jellobot18>	(fail) ReferenceError: setTimeoout is not defined
T 1568310637 18<lf9418>	I can't make this +100,000 line codebase strict unfortunately
T 1568310638 18<qswz18>	n> 'use strict'; {let e=2; setTimeout(()=>console.log(e), 20)} setTimeout(() => {e=3; console.log(e, global.e)}, 10); 'shutup'
T 1568310640 18<jellobot18>	(fail) 'shutup'evalmachine.<anonymous>:1  'use strict'; {let e=2; setTimeout(()=>console.log(e), 20)} setTimeout(() => {e=3; console.log(e, global.e)}, 10); 'shutup'                                                                                 ^  ReferenceError: e is not defined     at Timeout._onTimeout (evalmachine.<anonymous>:1:81)     at listOnTimeout (internal/timers.js:531:17)    ...
T 1568310652 18<qswz18>	n> {let e=2; setTimeout(()=>console.log(e), 20)} setTimeout(() => {e=3; console.log(e, global.e)}, 10); 'shutup'
T 1568310653 18<jellobot18>	(okay) 'shutup'3 3 2
T 1568310681 18<qswz18>	non strict mode is real shit
T 1568310697 18<jaawerth18>	I don't think the repl will respect a strict mode directive top-level
T 1568310703 18<jaawerth18>	you need to wrap it in an iffe or some such
T 1568310707 18<jaawerth18>	iife*
T 1568310736 18<qswz18>	or node -e "'use strict'; ..."
T 1568310747 18<jaawerth18>	easy to test
T 1568310749 18<jaawerth18>	n> 'use strict'; x =1;
T 1568310750 18<jellobot18>	(fail) ReferenceError: x is not defined
T 1568310751 18<prometh18>	i like listening to john carmack speak
T 1568310752 18<qswz18>	I bet there's CLI flag for strictness
T 1568310753 18<jaawerth18>	ah, it does!
T 1568310836 18<lf9418>	qswz: > non strict mode is real shit < tell me about it.
T 1568310863 18<lf9418>	we should hard-accept strict mode by 2030 or sooner
T 1568310865 18<qswz18>	see how it allowed {let e=2} ..
T 1568310871 18<lf9418>	yep
T 1568310876 18<qswz18>	n> {let e=5} global.e
T 1568310878 18<jellobot18>	(okay) undefined
T 1568310881 18<lf9418>	lol
T 1568310884 18<qswz18>	hmm
T 1568310892 18<lf9418>	it goes out of scope
T 1568310894 18<lf9418>	just silently
T 1568310898 18<lf9418>	it's frigged up
T 1568310907 18<qswz18>	n> {let e=5} e
T 1568310909 18<jellobot18>	(fail) ReferenceError: e is not defined
T 1568310913 18<lf9418>	n> { let e=5; } e = 1; console.log(e);
T 1568310914 18<jellobot18>	(okay) 1 undefined
T 1568310923 18<lf9418>	so broken
T 1568310931 18<qswz18>	n> {let e=5} setTimeout(()=>console.log(e)); ''
T 1568310932 18<jellobot18>	(fail) ''evalmachine.<anonymous>:1  {let e=5} setTimeout(()=>console.log(e)); ''                                       ^  ReferenceError: e is not defined     at Timeout._onTimeout (evalmachine.<anonymous>:1:39)     at listOnTimeout (internal/timers.js:531:17)     at processTimers (internal/timers.js:475:7)
T 1568310942 18<lf9418>	e will be undefined
T 1568310952 18<qswz18>	yea I see
T 1568310958 18<lf9418>	it's just a new space in memory with the same name
T 1568310958 18<jaawerth18>	non-strict IS very broken yeah lol
T 1568310967 18<qswz18>	n> {let e=5} setTimeout(()=>{e=1; console.log(e)}); ''
T 1568310968 18<jellobot18>	(okay) ''1
T 1568310974 18<qswz18>	n>'use strict'; {let e=5} setTimeout(()=>{e=1; console.log(e)}); ''
T 1568310975 18<jellobot18>	(fail) ''evalmachine.<anonymous>:1 'use strict'; {let e=5} setTimeout(()=>{e=1; console.log(e)}); ''                                          ^  ReferenceError: e is not defined     at Timeout._onTimeout (evalmachine.<anonymous>:1:42)     at listOnTimeout (internal/timers.js:531:17)     at processTimers (internal/timers.js:475:7)
T 1568311139 18<jaawerth18>	why do you keep doing that lol
T 1568311475 18<poboy18>	https://getyarn.io/yarn-clip/9e444966-0e3a-44bf-94f6-1cebdd44b574
T 1568311503 18<qswz18>	jaawerth: just isolating the particular thing
T 1568311533 18<qswz18>	non-strict mode allow reassigning let
T 1568311541 18<qswz18>	apparently
T 1568311568 18<jaawerth18>	the setTimeout isn't really relevant there anyway - {let e = 5} e = 1; console.log(e) would also work
T 1568311574 18<jaawerth18>	(in strict/non-strict)
T 1568311591 18<jaawerth18>	with a cleaner stacktrace output probably :D
T 1568311605 18<qswz18>	try
T 1568311618 18<qswz18>	not sure, because e=1 is global.e=1
T 1568311629 18<qswz18>	but inside a function closure it's not I think
T 1568311634 18<jaawerth18>	it is if it's undeclared
T 1568311650 18<jaawerth18>	undeclared assignment in non-strict is implicit global no matter which scope you're in
T 1568311684 18<qswz18>	n> (() => { e=1; console.log(e, global.e) })()
T 1568311685 18<jellobot18>	(okay) 1 1 undefined
T 1568311689 18<qswz18>	ok TIL
T 1568311703 18<jaawerth18>	haha I mean not using strict is madness regardless
T 1568311736 18<ljharb18>	also not using a linter
T 1568311758 18<jaawerth18>	n> with (new Proxy({}, {has: ()=>true, get:(t,k) => console.log('bork! '.repeat(k.length)) || ':D '})) { a + bb + ccc + dddd }
T 1568311759 18<jellobot18>	(okay) bork!   bork! bork!   bork! bork! bork!   bork! bork! bork! bork!  ':D :D :D :D '
T 1568311824 18<qswz18>	nice
T 1568311837 18<qswz18>	intecepting global getters
T 1568312291 18<devsnek18>	you can use proxies to create inescapable sandboxes that way
T 1568312625 18<jaawerth18>	devsnek: wouldn't you have to account for every possible host exception lest they escape through e.constructor.constructor?
T 1568312656 18<devsnek18>	jaawerth: you give them Error
T 1568312663 18<devsnek18>	its different from a node context
T 1568312678 18<jaawerth18>	ahh I wasn't sure if that exception was using global error or its own copy
T 1568312679 18<devsnek18>	you start with nothing
T 1568312983 18<jaawerth18>	I suppose I can't think offhand how to cause a host error with nothing, yeah
T 1568313043 18<devsnek18>	null.a
T 1568313070 18<devsnek18>	the realms shim replaces literals with special calls
T 1568313129 18<jaawerth18>	yeah I just thought of null haha
T 1568313141 18<jaawerth18>	but yeah so you still need to transform the src code
T 1568313264 18<qswz18>	no need
T 1568313348 18<qswz18>	n> with (new Proxy({}, {get: (t, k) => ({})})) { console.log(null.a) }
T 1568313349 18<jellobot18>	(fail) TypeError: Cannot read property 'a' of null
T 1568313355 18<qswz18>	hmm
T 1568313378 18<qswz18>	n> with (new Proxy({}, {get: (t, k) => ({})})) { console.log(o.a) }
T 1568313380 18<jellobot18>	(fail) ReferenceError: o is not defined
T 1568313406 18<qswz18>	I need to return a Proxy instead of {}
T 1568313414 18<devsnek18>	yep
T 1568313675 18<jaawerth18>	you can't stop null.a that way
T 1568351749 20*	Disconnected (20)
T 1568351773 19*	Now talking on 22##javascript
T 1568351773 22*	Topic for 22##javascript is: JavaScript is *not* Java. | Just ask your question. | Say "!mdn abc" for docs on "abc". | Don't paste code in the channel. | Can't talk? Get registered on freenode ( https://git.io/vaTS2 )
T 1568351773 22*	Topic for 22##javascript set by 26niggler!~niggler@unaffiliated/niggler (24Tue Jan 15 07:16:23 2019)
T 1568351790 18<niggler18>	yeah more time to talk about it
T 1568351794 18<boodllebat18>	Hi, I have a function which is supposed to return true when the internal call to promise returns true , quite confused how do i achieve this https://paste.ubuntu.com/p/WcF3YRjv7g/
T 1568351814 18<niggler18>	its funny to watch some people defend insurance companies
T 1568351834 18<jaawerth18>	lol yeah a lot of gymnastics
T 1568351842 18<theskillwithin18>	boodllebat https://codesandbox.io/s/react-form-example-gm9o6
T 1568351844 18<niggler18>	as a general thing, we like the doctor and the ability to get medicine, but some people genuinely think we like insurance
T 1568351845 18<MJCDawy18>	xup
T 1568351858 18<jaawerth18>	boodllebat: huh?
T 1568351911 18<niggler18>	boodllebat: it will resolve to true if value is not null
T 1568351916 18<niggler18>	but you're using !==
T 1568351917 18<jaawerth18>	once you go promise you can never get out of async-land and back to returning raw values
T 1568351920 18<niggler18>	n> undefined !== null
T 1568351921 18<jellobot18>	(okay) true
T 1568351925 18<systemfault18>	boodllebat: Once you go async, there's no turning back, it infects everything it touches so you cannot take the value out of the promise.
T 1568351927 18<theskillwithin18>	my dad was a dentist and he enjoyed paying off his college loans
T 1568351941 18<boodllebat18>	systemfault: ah i see
T 1568351945 18<niggler18>	also that whitespace is horrifying
T 1568351948 18<jaawerth18>	you can get it out of the promise and into some other kind of time-independent wrapper
T 1568351953 18<jaawerth18>	but that's still async-land
T 1568351979 18<boodllebat18>	niggler: lol please ignore internals
T 1568351981 18<jaawerth18>	async-land is like Hotel California
T 1568351993 18<theskillwithin18>	welcome to the hotel California
T 1568351998 18<niggler18>	thats why i wish there were more sync utils
T 1568352004 18<niggler18>	stupid warfare against sync
T 1568352012 18<theskillwithin18>	bolderdash
T 1568352015 18<jaawerth18>	You can check out any time you like but you can never leave
T 1568352028 18<niggler18>	blob operations are async
T 1568352040 18<niggler18>	FileReaderSync only available within worker threads
T 1568352061 18<theskillwithin18>	ignore him hes from the past
T 1568352068 18<theskillwithin18>	( <3 )
T 1568352086 18<niggler18>	dont make the present bring out the future boot to kick you to the past
T 1568352103 18<theskillwithin18>	well u can use fetch atleast now huh?
T 1568352112 18<niggler18>	XHR supports sync, fetch doesnt
T 1568352115 18<niggler18>	stupid fetch
T 1568352125 18<theskillwithin18>	if u use that it will give u a warning
T 1568352135 18<theskillwithin18>	silly goose
T 1568352156 18<niggler18>	warning schwarning
T 1568352160 18<theskillwithin18>	lol
T 1568352164 18<theskillwithin18>	ignore browser warnings ok
T 1568352172 18<systemfault18>	He's gonna take you back to the past... to code in JavaScript that sucks ass. He'd rather have a buffalo take a diarrhea dump in his ears... He's the Angry ECMASport Niggler!
T 1568352173 18<theskillwithin18>	but don't claim ur not outdated at the same time
T 1568352178 18<MJCDawy18>	schwarning
T 1568352184 18<MJCDawy18>	of the jewish shwarners
T 1568352188 18<theskillwithin18>	we haven't had that spirit here since 1999
T 1568352192 18<jaawerth18>	counterpoitn: I've been tinkering with an nrepl socket server and it's really difficult to balance the socket's cpu usage for the read/write + wait loop without async behavior (it also doesn't have a thread pool unless I install a threading module)
T 1568352194 18<niggler18>	that last part didnt rhyme
T 1568352202 18<MJCDawy18>	systemfault, some people like to suck ass
T 1568352207 18<MJCDawy18>	why you hatin
T 1568352219 18<jaawerth18>	I'm gonna refactor it so one can leave it as the basic socket or plug in libuv (or into the event loop of a host operation)
T 1568352220 18<theskillwithin18>	ECMASports 2019
T 1568352222 18<niggler18>	im a huge fan of code that works
T 1568352222 18<systemfault18>	MJCDawy: Ask the Angry Video Game Nerd.
T 1568352230 18<jaawerth18>	but I do find myself wishing it was all async out of the box
T 1568352238 18<MJCDawy18>	jaawerth, what's this?
T 1568352252 18<jaawerth18>	a lua nrepl thing (for lua and a language that compiles to lua)
T 1568352257 18<theskillwithin18>	OMG u were MJCD the whole time!!
T 1568352257 18<MJCD18>	oh haha
T 1568352263 18<MJCD18>	lua repl
T 1568352265 18<MJCD18>	but why
T 1568352269 18<jaawerth18>	it's a WIP, and it's using socket.lua, which is sync
T 1568352279 18<theskillwithin18>	you can checkout any branch you like
T 1568352291 18<MJCD18>	but
T 1568352292 18<MJCD18>	why
T 1568352301 18<jaawerth18>	I just haven't made time to decouple the communication from the mechanics so I can make an abstraction you can plug other socket implemenations into
T 1568352304 18<jaawerth18>	(like async ones)
T 1568352345 18<MJCD18>	I mean
T 1568352355 18<MJCD18>	you use an sync thing in a sync thing
T 1568352361 18<MJCD18>	then decry that it's not all Rust
T 1568352363 18<jaawerth18>	though I found a method call today that should help make the wait loop cheaper
T 1568352365 18<MJCD18>	or something?
T 1568352376 18<MJCD18>	seems odd heh
T 1568352386 18<jaawerth18>	oh I'm just saying in response to niggler's comment about wanting more sync things
T 1568352398 18<jaawerth18>	sometimes when I'm in lots-of-sync-libarires land I miss the async uniformity
T 1568352410 18<ashnur18>	wut
T 1568352417 18<ashnur18>	what uniformity of async
T 1568352417 18<MJCD18>	wanting more sync things
T 1568352426 18<MJCD18>	that's just niggle-nonsense
T 1568352435 18<jaawerth18>	eh it's a valid viewpoint
T 1568352439 18<jaawerth18>	I just don't necessarily share it
T 1568352443 18<jaawerth18>	not all the time, anyway
T 1568352453 18<MJCD18>	nigglesense I say!
T 1568352455 18<jaawerth18>	async/await is close enough for me when I need to code imperatively
T 1568352470 18<MJCD18>	not really the same thing doe
T 1568352481 18<MJCD18>	just helps to grok whats going on heh
T 1568352487 18<jaawerth18>	ashnur: promises and async generators cover it and are slowlllly taking over
T 1568352499 18<jaawerth18>	(promises more than async generators, but async generators will get there)
T 1568352505 18<jaawerth18>	promises also including async/await, since that's all promises
T 1568352508 18<MJCD18>	ehh largely because you can just await the async thing
T 1568352510 18<MJCD18>	voila
T 1568352513 18<MJCD18>	sync version
T 1568352517 18<MJCD18>	:D
T 1568352521 18<jaawerth18>	it's still async when you await it :P
T 1568352526 18<ashnur18>	jaawerth: 1. async/generators are two things no? and they don't work the same?
T 1568352544 18<ashnur18>	2. you need polyfill that's larger than an operating system to run it in ie11
T 1568352545 18<MJCD18>	only because async is used in multiple confusing contexts
T 1568352548 18<jaawerth18>	ashnur: an async generator is to promise what an array is to a value
T 1568352548 18<MJCD18>	semantics
T 1568352554 18<MJCD18>	the best kind of man tics
T 1568352555 18<ashnur18>	3. callbacks are still another thing
T 1568352582 18<ashnur18>	jaawerth: i know about async/await and I know about generators. i am not familiar with "async generators"
T 1568352598 18<MJCD18>	they're like regular generators
T 1568352598 18<jaawerth18>	the polyfill isn't small but it's not THAT bad, all you need is the generator runtime
T 1568352601 18<MJCD18>	but with the word async
T 1568352604 18<MJCD18>	yw
T 1568352613 18<MJCD18>	(not even joking doe)
T 1568352630 18<jaawerth18>	an async generator is just a generator that returns an async iterator, and an async iterator is just an iterator where iter.next() is always a promise, and instead of checking .done you just wait for the promise to resolve before invoking .next() again
T 1568352693 18<ashnur18>	how is that a good thing though
T 1568352701 18<ashnur18>	i would like some stuff implemented using this
T 1568352711 18<ashnur18>	i mean i would like to see some stuff
T 1568352724 18<MJCD18>	SOMETIMES I THINK YOU LIKE YOUR FRIENDS AND FAMILY MORE THAN ME
T 1568352727 18<MJCD18>	:'(
T 1568352731 18<MJCD18>	er wrong channel lol
T 1568352763 18<evulish18>	sure it was
T 1568352765 18<ashnur18>	jaawerth: so you use these everywhere? that's what I don't understand. I have constant struggle with async stuff, when I have to cancel, clear up, order, drop answers
T 1568352773 18<MJCD18>	jaawerth, that seems like intentionally muddy wording
T 1568352774 18<MJCD18>	like
T 1568352781 18<ashnur18>	it just doesn't seem to me that this highly complex thing could help me in this aspect
T 1568352785 18<niggler18>	MJCD: are you asking for the boot?
T 1568352790 18<jaawerth18>	n> const { Readable } = require('stream'), src = Readable.from(['one', 'two', 'three']); (async () => { for await (const v of src) console.log(v); })(); 'for..await is using Readable.prototype[Symbol.asyncIterator]() under the hood' @ashnur
T 1568352791 18<jellobot18>	ashnur, 'for..await is using Readable.prototype[Symbol.asyncIterator]() under the hood'one two three
T 1568352801 18<MJCD18>	niggler, sure
T 1568352804 18<MJCD18>	why not
T 1568352870 18<jaawerth18>	thanks to async iterators//generators you can loop streams from an async function now :D
T 1568352871 18<boodllebat18>	Hi, I am trying to use react's asyncstorage like this `const value = AsyncStorage.getItem('user')` it should return null as i've never set it but it returns gibberish content like `{"_40":0,"_65":0,"_55":null,"_72":null}`
T 1568352916 18<MJCD18>	lol odd
T 1568352933 18<ashnur18>	jaawerth: but i don't use loops anywhere unless i am writing something that has to be bit-optimized
T 1568352977 18<jaawerth18>	I mean you can also just read values off of it, but compare a loop to the complexity of what you'd normally have to do to get the values out of a node stream so you can do something else with them
T 1568353002 18<ashnur18>	jaawerth: and again, it's not about my preferences, i just don't get it how these loopy promise generators are going to help you when you need to cancel some of them, do some stuff following up only part of them.. you know: anything that's not a toy example?
T 1568353005 18<jaawerth18>	the async generators act as a native pull-based async sequene, so you can use them as glue between other kinds of async sequence, like streams
T 1568353014 18<jaawerth18>	which gives you a sort of unified theory of reactivity
T 1568353028 18<jaawerth18>	ashnur: I'm trying to explain the uniformity
T 1568353036 18<MJCD18>	ashnur, don't see why you couldn't cancel them.. ?
T 1568353050 18<ashnur18>	jaawerth: well, i don't know what I would have to do to get values out of a node stream? i htink last time 6 years ago i did something with that and it was just a matter of splitting, chunking etc. not very complicated
T 1568353064 18<jaawerth18>	a lot more than a single loop
T 1568353065 18<ashnur18>	jaawerth: i am trying to understand
T 1568353070 18<jaawerth18>	point being it's a protocol for interop
T 1568353077 18<ashnur18>	but it's only a part
T 1568353092 18<jaawerth18>	which, when used, allows for symmetrical and apis that can more easily translate from one form to the other
T 1568353095 18<ashnur18>	that's my whole point from the beginning, seems to me you have a protocol for the happy path and you write only happy path code?
T 1568353111 18<ashnur18>	if things break, you just restart the superprocessor and reset everything?
T 1568353125 18<jaawerth18>	nah you can define your own whatever and annotate it with a Symbol.asyncIterator, so even if it's something else, people can get something out of it that works with native protocols
T 1568353141 18<jaawerth18>	same benefit Symbol.iterator gives, only asynchronous
T 1568353159 18<ashnur18>	yeah, i haven't yet needed Symbol.iterator either
T 1568353174 18<jaawerth18>	you've never used Array.from or Promise.all? or the spread operator?
T 1568353180 18<ashnur18>	in any case jaawerth, you are not answering one question :)
T 1568353210 18<jaawerth18>	what question?
T 1568353242 18<jaawerth18>	the cancellation thing?
T 1568353246 18<ashnur18>	yes
T 1568353252 18<jaawerth18>	they aren't meant to be actions, they're how you react to the results of the actions
T 1568353269 18<ashnur18>	isn't a cancellation a reaction to the result of actions?
T 1568353270 18<jaawerth18>	you can create a construct that can GIVE you a promise or an async generator or whatever, and that thing miht be cancellable
T 1568353273 18<jaawerth18>	but a promise is for reacting
T 1568353280 18<jaawerth18>	also, generators are cancellable
T 1568353282 18<jaawerth18>	async ones too
T 1568353285 18<MJCD18>	I did always like whoever named them promises
T 1568353289 18<jaawerth18>	so yeah that one you can actually *drive* things
T 1568353292 18<jaawerth18>	because it's pull-based
T 1568353312 18<ashnur18>	well, anything async needs to be pull-based, otherwise you are just fighting against physics the whole time
T 1568353313 18<jaawerth18>	haha yeah, you can keep a promise or you can break a promise but you don't get backsies
T 1568353327 18<jaawerth18>	promises are pushed-based though
T 1568353329 18<jaawerth18>	as are observables
T 1568353336 18<jaawerth18>	streams are... both
T 1568353371 18<ashnur18>	yeah, some stuff is both. promises is a push interface for a pulling action because js is eager and can't really understand pulling just by itself
T 1568353385 18<jaawerth18>	nah
T 1568353394 18<jaawerth18>	a promise is just a placeholder for a future value
T 1568353399 18<MJCD18>	^
T 1568353403 18<jaawerth18>	people tried using it for more than that because it was the first native construct they got
T 1568353424 18<MJCD18>	first native construct for async'ing you mean?
T 1568353437 18<theskillwithin18>	is it true most things are just monads behind the surface
T 1568353447 18<jaawerth18>	ehhh
T 1568353450 18<jaawerth18>	not sure I agree with that
T 1568353454 18<niggler18>	as the great crock once said, it's all monads and gonads
T 1568353462 18<jaawerth18>	what about nomads
T 1568353470 18<niggler18>	they were not covered in the talk
T 1568353471 18<jaawerth18>	and bro mads
T 1568353489 18<niggler18>	https://www.youtube.com/watch?v=b0EF0VTs9Dc
T 1568353504 18<jaawerth18>	49 minutes hahaha yeah I'll get right on this
T 1568353509 18<dodobrain18>	lawl
T 1568353512 18<jaawerth18>	but lol I did think you were kidding
T 1568353516 18<dodobrain18>	i remember that when that happened
T 1568353516 18<niggler18>	yall thought it was a joke
T 1568353522 18<ashnur18>	jaawerth: i believe you anything
T 1568353531 18<ashnur18>	jaawerth:but promise is a placeholder for a future value
T 1568353532 18<dodobrain18>	jaawerth, yeah its not a joke..
T 1568353542 18<ashnur18>	is the biggest bullshit promise marketing people are pushing
T 1568353553 18<jaawerth18>	ashnur: it's... literally what it is
T 1568353559 18<ashnur18>	jaawerth: it literally can't be that
T 1568353565 18<niggler18>	its a thing
T 1568353581 18<jaawerth18>	yeah so I don't have the energy for this, lol
T 1568353584 18<ashnur18>	jaawerth: literally it's an object, right? with live references to other objects and functions. not some lyrical melodical fairy tale
T 1568353585 18<jaawerth18>	night all
T 1568353598 18<niggler18>	dream of monads and gonads
T 1568353602 18<ashnur18>	jaawerth: you can't even get out the value, you have to wrap your handlers into promise to get at the value
T 1568353605 18<jaawerth18>	it's.. a placeholder you can apss around and invoke things on to react to future values?
T 1568353608 18<jaawerth18>	or await it
T 1568353612 18<ashnur18>	jaawerth: so is my handler now a promise for handling the value?
T 1568353616 18<jaawerth18>	in which case you're ACTUALLY using it as a placeholder
T 1568353620 18<ashnur18>	gnite :)
T 1568353634 18<jaawerth18>	lol yeah I need to go to bed rather than get drawn back in lol
T 1568353637 18<ljharb18>	sinclair: nope, most people aren't.
T 1568353656 18<ashnur18>	i don't want to argue with you because mostly we learn from each other. i just don't like this post-modernist talk to give happy fantasy land names to things to make them approachable and hide their faults
T 1568353694 18<sinclair18>	ljharb, lemme check
T 1568353697 18<ashnur18>	promise is not a placeholder, if it would be a placeholder i could arbitrarily change it. but it's exactly what you can't do, once you go promises, you will have them everywhere
T 1568353701 18<sinclair18>	ljharb, nope
T 1568353722 18<dodobrain18>	man.. sinclair and ljharb have some really long latency in their convos
T 1568353732 18<dodobrain18>	i had to grep my scrollback to see what lj was referring to :)
T 1568353738 18<ashnur18>	yeah
T 1568353741 18<ashnur18>	me2
T 1568353744 18<jaawerth18>	ashnur: counterpoint: you're wrong, and resorting to dimunitive talk like "fantasy-land" rather than supporting your argument ¯\_(ツ)_/¯
T 1568353752 18*	jaawerth runs to bed
T 1568353763 18<dodobrain18>	jaawerth, you are going to lala-land!
T 1568353769 18<ashnur18>	:)))
T 1568353846 18<dodobrain18>	i remember some people saying they simply traded in the old callback hell for the new promise hell
T 1568353849 18<ljharb18>	sinclair: nope what
T 1568353857 18<ljharb18>	sinclair: you still are, that's for sure, but most people aren't.
T 1568353864 18<dodobrain18>	ljharb, i imagine he is still on the banned list in that channel
T 1568353872 18<ljharb18>	dodobrain: doesn't take much imagination
T 1568353877 18<dodobrain18>	heh
T 1568353908 18<sinclair18>	ljharb, personal attacks
T 1568353935 18<ljharb18>	sinclair: think about your very delayed unsolicited and unhelpful comment that i'm replying to.
T 1568353939 18<sinclair18>	i didn't mention my banned status, mine is due to refusing to apoligize
T 1568353946 18<dodobrain18>	personnel attacks!
T 1568353947 18<ashnur18>	this is a first for me. i don't understand what people talk here and I DON'T EVEN WANT TO KNOW :D
T 1568353970 18<ljharb18>	ashnur: as for promises, of course they're a placeholder. that you can never transparently replace the placeholder with the future value doesn't make them not placeholders.
T 1568353988 18<sinclair18>	dodobrain, the "personal attack" comment is in reference to ljharb perceiving literally everything as a "personal attack"
T 1568353994 18<ashnur18>	ljharb: well, fine, you write your own langue, i will not corrupt mine like that
T 1568354001 18<ljharb18>	ashnur: i'm using english.
T 1568354006 18<ashnur18>	a placehold holds the place, then i can take it out and put the thing it was held for
T 1568354007 18<ljharb18>	ashnur: what language are you speaking?
T 1568354007 18<dodobrain18>	haha
T 1568354017 18<ljharb18>	ashnur: no no. a placeholder just holds the place. the other part isn't part of the definition of "placeholder"
T 1568354021 18<ashnur18>	if i can't take the thing of just by replacing, it's not a placeholder
T 1568354024 18<theskillwithin18>	"in order to understand burritos you must first understand spanish"
T 1568354030 18<ljharb18>	that's got nothing to do with being a placeholder
T 1568354044 18<ashnur18>	it's more like a bookmark, or index, or whatever, a map or a pointer or key
T 1568354047 18<dodobrain18>	theskillwithin, oh my.. i dont understand burritos :( i only eat them
T 1568354047 18<ljharb18>	a place holder literally and etymologically means "holds the place", and nothing more.
T 1568354054 18<ashnur18>	exactly
T 1568354063 18<ljharb18>	ashnur: so, the ability to replace it later is not part of the definition
T 1568354073 18<ashnur18>	if you say so
T 1568354074 18<ljharb18>	ashnur: a bookmark that's glued into a book is still a placeholder.
T 1568354084 18<ashnur18>	i have never until today met a placeholder i couldn't replace
T 1568354088 18<ashnur18>	but you know best
T 1568354089 18<dodobrain18>	the idea is that the placeholder's position/space gets replaced by "something"
T 1568354097 18<ljharb18>	ashnur: ah, now that's a different statement, one i can't refute
T 1568354103 18<dodobrain18>	the definition of the word placeholder doesnt say anything about what this replacement is!
T 1568354121 18<ashnur18>	ljharb: all our language is based on our experiences. i don't know what placeholders you know of.
T 1568354124 18<ljharb18>	nah "placeholder" doesn't even imply anything will be replaced
T 1568354133 18<ashnur18>	of course it does
T 1568354143 18<ashnur18>	otherwise it's not a holder, it's an occupier
T 1568354155 18<ljharb18>	it's holding it for whatever it *replaced*
T 1568354161 18<ashnur18>	what
T 1568354161 18<ljharb18>	holding it forever still makes it a placeholder.
T 1568354173 18<ljharb18>	what makes something a placeholder is that it displaced something else, to mark a spot
T 1568354181 18<ashnur18>	so by existence everything is a placeholder because everything that exists holds some place
T 1568354181 18<sinclair18>	ashnur, hes trying to pwn you on pedantic blah, nothing about this terminology is important
T 1568354192 18<ljharb18>	absolutely it is.
T 1568354207 18<sinclair18>	ashnur, ^ now hes going to have a go at me about it...
T 1568354211 18*	sinclair leaves
T 1568354212 18<ashnur18>	sinclair: i agree :) but these etymological arguments with ljharb are where i learn modern english it seems :D
T 1568354216 18<ljharb18>	but also the claim that "promises are a placeholder is marketing lies" is the same pedantic blah :-p
T 1568354232 18<dodobrain18>	who is doing this marketing ?
T 1568354236 18<ljharb18>	sinclair: so in fact i'm meeting ashnur where he's at, and i'll thank you to sealion yourself back out of it
T 1568354245 18<ashnur18>	it was just a comment from me dodobrain, don't take it so seriously
T 1568354253 18<dodobrain18>	:)
T 1568354267 18<ashnur18>	dodobrain: long time ago there were some arguments online about promises, A and A+ and such
T 1568354311 18<dodobrain18>	anyway, i understand what you are saying. essentially you're "beef" (if you call it that) here is that if its truly a placeholder you should be able to throw it out and use thingX instead in the place of a promise
T 1568354318 18<ashnur18>	ljharb: in any case, i can't see the placeholder word helping me. One such reason for example, that you never store promises
T 1568354321 18<sinclair18>	ljharb, nah, im going to sealion all over the place
T 1568354322 18<dodobrain18>	bu the problem is that the promise follows a specification.
T 1568354331 18<dodobrain18>	if your thingX does not follow thesame spec, your code is borken
T 1568354378 18<dodobrain18>	or you could simply replace the promise with thingX, but *also* require other changes in your code to make it work as desired
T 1568354404 18<dodobrain18>	the idea that you have some dro pin replacement for the promise is a little bit absurd
T 1568354431 18<sinclair18>	ljharb, also, referring to someone as 'sea lioning' is both a personal attack, and sealion appropriation, and worse when used in a negative context
T 1568354445 18<sinclair18>	things to think about
T 1568354450 18<dodobrain18>	is a sea lion like a snoop lion ?
T 1568354452 18*	dodobrain hides
T 1568354462 18<ljharb18>	sinclair: no it’s not, it’s an observation, and you’re just making bad faith arguments now,
T 1568354470 18<ljharb18>	!sealion @ sinclair
T 1568354470 18<ecmabot18>	sinclair: Please don't be a sea lion: http://simplikation.com/why-sealioning-is-bad/
T 1568354501 18<sinclair18>	ljharb, stop trolling
T 1568354518 18<ljharb18>	I’m not. I’m describing your behavior. Which is not a personal attack, because I’m not describing your character.
T 1568354531 18<sinclair18>	ljharb, is it tho?
T 1568354532 18<ljharb18>	(your repeated behavior defines your character, and that’s all on you)
T 1568354548 18<ljharb18>	yes, it is tho, but thanks for the incredibly obnoxious patronizing question again
T 1568354571 18<sinclair18>	ljharb, i don't want to engage with dialog with you at all right now, stop highlighting me
T 1568354579 18<ljharb18>	the answer to “is it tho” is always “yes, stop being an asshole”, for future reference.
T 1568354597 18<dodobrain18>	awww.. ashnur i think you should ask a different js (or unrelated) question
T 1568354606 18<ashnur18>	dodobrain: why?
T 1568354606 18<dodobrain18>	we're getting into some strange territory here
T 1568354610 18<ljharb18>	i can highlight whoever i want; if you don’t want to engage, it’s called “self control”
T 1568354612 18<ashnur18>	not on me
T 1568354613 18<sinclair18>	ljharb, yes yes, we all you know you think "is it tho" is some hostile comment,
T 1568354617 18<dodobrain18>	ok, i'll ask
T 1568354619 18<ljharb18>	it is.
T 1568354622 18<dodobrain18>	what is an observable?
T 1568354626 18<sinclair18>	not saying "snowflake" but ...
T 1568354629 18<dodobrain18>	do i need a telescope to see it?
T 1568354638 18<sinclair18>	ljharb, enough now, finish your conversation with ashnur
T 1568354644 18<ljharb18>	sinclair: good, because only bigots say that
T 1568354657 18<dodobrain18>	stop ignoring my question oh good people of ##js!
T 1568354661 18<sinclair18>	ljharb, yeah, only bigots say "is it tho"
T 1568354672 18<ashnur18>	lol, don't drag me into this sinclair . we argue enough with ljharb, no need for help there :D
T 1568354674 18<ljharb18>	dodobrain: it’s the plural future primitive in gtor
T 1568354690 18<sinclair18>	ashnur, you're reading what hes saying, im sure its not just me cringing
T 1568354694 18<dodobrain18>	woah.. whats a gtor? this questions genuine
T 1568354695 18<sinclair18>	anyway, out
T 1568354703 18<ashnur18>	sinclair: i am ignoring your conversation :)
T 1568354704 18<ljharb18>	ashnur: no i mean “snowflake”. “is it tho” is what condescending jerks say.
T 1568354716 18<sinclair18>	ashnur, for the best
T 1568354748 18<sinclair18>	ljharb, is it tho?
T 1568354753 18<sinclair18>	soz, i couldn't resist
T 1568354762 18<dodobrain18>	gah.. stop it you two
T 1568354766 18*	sinclair really does exit this conversation
T 1568354767 18<ljharb18>	i know, proving my point ¯\_(ツ)_/¯
T 1568354809 18<theskillwithin18>	i have a solution.   your all wrong, except me.
T 1568354818 18<ljharb18>	*you’re
T 1568354821 18<theskillwithin18>	fuck
T 1568354827 18<theskillwithin18>	were all wrong*
T 1568354836 18<ljharb18>	we’re
T 1568354839 18<theskillwithin18>	fuck
T 1568354841 18<dodobrain18>	haha
T 1568354841 18<ljharb18>	rofl
T 1568354872 18<dodobrain18>	actually i have a possibly relevant question on promises
T 1568354899 18<dodobrain18>	given that async/await are here, do you think people will eventually reduce usage of "raw" promises?
T 1568354905 18<ljharb18>	i can’t await for it
T 1568354911 18<theskillwithin18>	haha
T 1568354913 18<ljharb18>	and reduce, yes, but you can’t avoid it entirely
T 1568354932 18<theskillwithin18>	i can promise you that async await is awesome
T 1568354952 18<dodobrain18>	what are the cases where promises need to be used explicitly? i wish i had enough first hand experience to know this answer myself, but unfortunately i dont
T 1568354956 18<ljharb18>	and then, finally, you realize it’s way less awesome than you initially thought
T 1568354977 18<theskillwithin18>	u mean .finallly?
T 1568354981 18<ljharb18>	dodobrain: using `await` makes it far too easy to accidentally serialize things that should be concurrent
T 1568355037 18<dodobrain18>	ljharb, yes.. for me i feel as if async/await is similar to the syntactic sugar (is that what they call it?) that is function(a,b) {} to (a,b) => {}
T 1568355040 18<theskillwithin18>	u can use .then on async await which no one tells  u lol
T 1568355058 18<theskillwithin18>	https://codesandbox.io/s/react-form-example-gm9o6
T 1568355113 18<ljharb18>	dodobrain: except await is pure sugar; arrows actually have features/semantics
T 1568579907 20*	Disconnected (20)
T 1568579933 19*	Now talking on 22##javascript
T 1568579933 22*	Topic for 22##javascript is: JavaScript is *not* Java. | Just ask your question. | Say "!mdn abc" for docs on "abc". | Don't paste code in the channel. | Can't talk? Get registered on freenode ( https://git.io/vaTS2 )
T 1568579933 22*	Topic for 22##javascript set by 26niggler!~niggler@unaffiliated/niggler (24Tue Jan 15 07:16:23 2019)
T 1568579933 18<rjcobourn18>	Hey could anybody take a look at this glitch project? I just started writing it and I can't seem to be able to import my levelManager class. The whole canvas turns white when I uncomment the import code. https://glitch.com/edit/#!/innovative-porter
T 1568580086 18<GreenJello18>	rjcobourn, I'm guessing glitch doesn't support import
T 1568580139 18<GreenJello18>	rjcobourn, or it could be because your <script> doesn't have type="module"
T 1568580965 18<nwoob18>	does anyone know about this ESLint: Cannot find module './default-param-last'.
T 1568580975 18<nwoob18>	I can't find anything by google search
T 1568581005 18<ljharb18>	nwoob: we'd need more of the error
T 1568581096 18<rjcobourn18>	GreenJello it seems crazy that glitch wouldn't support es6
T 1568581118 18<rjcobourn18>	I can't find anything about the error online, I looked for hours and it seems like it does support it afaik
T 1568581137 18<nwoob18>	ljharb: It says only that no more
T 1568581144 18<ljharb18>	nwoob: on the command line?
T 1568581148 18<nwoob18>	in vscode
T 1568581404 18<ljharb18>	nwoob: ok, well, run it on the command line and see what happens. the CLI is the only thing that matters; if it works there but not in your editor, it's a bug with your editor.
T 1568581442 18<nwoob18>	ljharb: what command to run on terminal
T 1568581445 18<qswz18>	npx eslint .
T 1568582645 18<nwoob18>	is there a good eslintrc file that I should follow for reactjs
T 1568582650 18<nwoob18>	ljharb:
T 1568582683 18<niggler18>	rjcobourn: the true JS is ES5
T 1568582687 18<qswz18>	google
T 1568582700 18<niggler18>	nwoob: use a starter and see what they do
T 1568582718 18<qswz18>	I already pointed him to react-scripts
T 1568582854 18<ljharb18>	nwoob: https://npmjs.com/eslint-config-airbnb
T 1568583176 18<rjcobourn18>	imports in es5 are nasty though
T 1568583183 18<rjcobourn18>	:(
T 1568583311 18<ljharb18>	rjcobourn: there's no such thing
T 1568583316 18<ljharb18>	rjcobourn: and CJS is fine
T 1568583340 18<ljharb18>	rjcobourn: but also, don't mind niggler, he just doesn't like all the kids on his lawn, and he thinks skateboarding is a crime
T 1568583402 18<niggler18>	ES6 is like the hangover part 3 or star wars 7
T 1568583428 18<ljharb18>	great?
T 1568583457 18<niggler18>	they shouldve stopped long before then
T 1568583459 18<rjcobourn18>	How can you not like it. Templates and spread syntax feel soooo satisfying to use
T 1568583474 18<ljharb18>	niggler: nah i hope they keep making star wars movies. hangover, sure, there's nothing more there.
T 1568583488 18<qswz18>	ES6 is the best thing that happened to JS since 20 years
T 1568583498 18<ljharb18>	by and large that's true
T 1568583501 18<niggler18>	star wars 2018 was solo the star wars stor
T 1568583511 18<ljharb18>	it's also an almost universally held opinion (that ES6 is great)
T 1568583512 18<rjcobourn18>	So what is the best solution for me? Should I not use glitch or should I use some sort of preprocessor
T 1568583519 18<ljharb18>	niggler: solo was good.
T 1568583523 18<ljharb18>	rjcobourn: you can always use babel.
T 1568583553 18<qswz18>	babel reversed almost match kebab
T 1568583567 18<niggler18>	there is a lebab
T 1568583585 18<niggler18>	https://github.com/lebab/lebab
T 1568583636 18<qswz18>	yea seen that
T 1568585958 20*	Disconnected (20)
T 1568585985 19*	Now talking on 22##javascript
T 1568585985 22*	Topic for 22##javascript is: JavaScript is *not* Java. | Just ask your question. | Say "!mdn abc" for docs on "abc". | Don't paste code in the channel. | Can't talk? Get registered on freenode ( https://git.io/vaTS2 )
T 1568585985 22*	Topic for 22##javascript set by 26niggler!~niggler@unaffiliated/niggler (24Tue Jan 15 07:16:23 2019)
T 1568586647 18<realies18>	universalAssets has a key property, looking to get a list of all key properties with universalAssets.reduce((acc, cur) => acc.push(cur.key), []) but it returns 1
T 1568586857 18<realies18>	perhaps universalAssets.reduce((acc, cur) => { return acc.concat(cur.key); }, []);
T 1568587225 18<GreenJello18>	realies, yes, .push returns the array length
T 1568587269 18<GreenJello18>	realies, is .key an array?
T 1568587350 18<GreenJello18>	realies, this is just universalAssets.map(cur => cur.key), or if cur.key is an array then .flatMap instead of .map
T 1568587833 18<ljharb18>	!iteration methods @ realies
T 1568587833 18<ecmabot18>	realies: ECMAScript's Array contains a number of built-in methods for iteration (e.g., map, reduce, every, some, filter, and forEach). They relieve the need for manual iteration, provide better abstraction than a `for` loop, and make it clear what your iteration is doing. See https://gist.github.com/ljharb/58faf1cfcb4e6808f74aae4ef7944cff
T 1568617508 20*	Disconnected (20)
T 1568617535 19*	Now talking on 22##javascript
T 1568617535 22*	Topic for 22##javascript is: JavaScript is *not* Java. | Just ask your question. | Say "!mdn abc" for docs on "abc". | Don't paste code in the channel. | Can't talk? Get registered on freenode ( https://git.io/vaTS2 )
T 1568617535 22*	Topic for 22##javascript set by 26niggler!~niggler@unaffiliated/niggler (24Tue Jan 15 07:16:23 2019)
T 1568618181 18<LordVoldePort18>	This question might be a bit weird but I ask anyway, is there any tool I can use to generate UI based on my api without coding? web ui I mean. some sort of spa.
T 1568618488 18<grr1231418>	Vooloo await awaits only promises
T 1568618495 18<grr1231418>	settimeout doesnt return a promise
T 1568619435 18<ashnur18>	LordVoldePort: not based on any api, but there are schema based form generators, and lots of CMS's can take some structured data and give you an interface to interact with it :D
T 1568619451 18<ashnur18>	s/CMS's/CMSs
T 1568619467 18<ashnur18>	i have no idea how English deals with pluralizing acronyms lol
T 1568619470 18<LordVoldePort18>	schema based. hmm, you mean stuff like swagger?
T 1568619508 18<ashnur18>	LordVoldePort: or JSON Schema or stuff from other languages where there is a more ... general backend scene :D
T 1568619553 18<LordVoldePort18>	ashnur, most those tools I've seen are meant for developers. you know anything specific meant for end users?
T 1568619581 18<ashnur18>	LordVoldePort: think of it not like "i have an api" because to discover the api another machine would have to brute force try the universe on it to see what it is possible
T 1568619629 18<ashnur18>	LordVoldePort: what end user is who starts with the idea of "i have an api" :D
T 1568619767 18<grr1231418>	there was this thing "ngAdmin" for angular-based admin ui for rest apis, same guys seem to have something "react admin" now, not looked at either in detail tho
T 1568619790 18<grr1231418>	and google also turns up a similar ngx-admin thing now too
T 1568619966 18<ashnur18>	if you have a proper schema, there are lot of tools. and if there is a proper api, then it's relatively easy to make the schema - but I haven't yet seen it done without additional coding work. or at least very heavy configuration using config files (not interface)
T 1568619992 18<ashnur18>	on the other hand, if you have an api, you might have a database also, and the internet is full of free CMSs
T 1568620031 18<ashnur18>	but none of my friends would talk ever about "my api" :D
T 1568620059 18<hmw_metalab18>	Tried promise chaining. Is this "good" or can it be improved? http://84.114.244.155/stubs/.ares3/tests/nested_promise.html
T 1568620073 18<grr1231418>	CMSes use their own db structure, not a good fit on top of something already done imo
T 1568620114 18<ashnur18>	i mean my non-coder friends, sorry. need more caffeine. Everyone I know who could be categorized as 'end user' would either ask a friend for a cheap WP setup or buy some subscribtion online for some pre-made app or tool that does this and you can pay them to do the coding
T 1568620153 18<ashnur18>	hmw_metalab: would you be so kind to use some paste service or codesandbox.io or something ..
T 1568620182 18<LordVoldePort18>	One day we'll all be replaced by some software like that. no code might not be that far in future.
T 1568620203 18<ashnur18>	grr12314: I agree
T 1568620214 18<hmw_metalab18>	https://bpaste.net/show/eSuw
T 1568620230 18<hmw_metalab18>	technical problems or do you dislike the ip?
T 1568620296 18<LordVoldePort18>	grr12314, this react-admin thing looks really nice actually.
T 1568620311 18<LordVoldePort18>	But is there anything more general? something not meant for admin only?
T 1568620329 18<LordVoldePort18>	It might be what I'm looking for but am not sure what to search for exactly.
T 1568620346 18<ashnur18>	hmw_metalab: not the IP per se. You read that blook 'the black swan'?
T 1568620356 18<hmw_metalab18>	no?
T 1568620364 18<hmw_metalab18>	It is some sort of a paste, btwe
T 1568620381 18<hmw_metalab18>	Please elaborate
T 1568620409 18<hmw_metalab18>	And... did I do it correctly? Or is this again some outdated style
T 1568620445 18<ashnur18>	black swan is a book by nassim taleb
T 1568620457 18<grr1231418>	hmw_metalab that code is pretty bad. using new promise constructor and another promise inside it with the resolve/reject callback calls in then/catch handlers... seems absurdly redundand
T 1568620459 18<ashnur18>	very hard to remember numbers, that's my problem only
T 1568620461 18<hmw_metalab18>	I know the concept of some unexpected insights
T 1568620506 18<hmw_metalab18>	grr12314: Hmm... how would I chain asynchronous stuff then?
T 1568620518 18<stennowork18>	with promise chains
T 1568620522 18<ashnur18>	hmw_metalab: well, this is more like expected outsight
T 1568620523 18<grr1231418>	thats the whole thing about promises
T 1568620550 18<hmw_metalab18>	I basically want to do, what you see in function operation()
T 1568620556 18<ashnur18>	grr12314: what if the code is just trying to do both part of a real world example?
T 1568620578 18<grr1231418>	somepromise.then(...) makes you a new promise that waits the first one and then does something else
T 1568620582 18<ashnur18>	i don't see anything wrong with it, apart from it's entirely lack of purpose
T 1568620583 18<hmw_metalab18>	(I am about to refactor some bad code of mine, but want to make sure, the effort is worth it)
T 1568620592 18<ashnur18>	it's not bad, it's pointless.
T 1568620604 18<ashnur18>	can't be good or bad, unless someone takes it seriously
T 1568620639 18<hmw_metalab18>	grr12314: Do you know of any code examples, I should look at?
T 1568620655 18<ashnur18>	hmw_metalab: i think writing actual code that does something is better. I think this because I have fallen into this same exact trap with very bad results. I am quite frustrated with myself because of it http://ashnur.github.io/async-hell/#Promises-deferreds-and-vows
T 1568620715 18<hmw_metalab18>	It is a "data source" object, that calls a php script to access the file system. It needs to automatically show a popup with login, etc, so the client program can access the operations transparently
T 1568620768 18<hmw_metalab18>	And... this test looks way better than my previous real code, which hands over callbacks to callbacks... :)
T 1568620802 18<ashnur18>	certainly, but the fact of the matter is that you can meet this code only in safe environments, never in the wild
T 1568620822 18<hmw_metalab18>	oh? I have no idea, what could be dangerous here
T 1568620831 18<ashnur18>	so how much did you learn about the real world? One single pattern that you can combine. If you think this will be enough, you are mistaken.
T 1568620859 18<hmw_metalab18>	I am pretty green when it comes to modern JS, that's why I am working on this hobby project
T 1568620891 18<hmw_metalab18>	and why I keep pestering you :) Thanks for all the input, btw
T 1568620959 18<hmw_metalab18>	grr12314: I do not understand what you said with "makes you a new promise"
T 1568621035 18<ashnur18>	well, it doesn't return a previous promise, does it?
T 1568621073 18<ashnur18>	https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise/then
T 1568621126 18<ashnur18>	maybe 33% the time according to that page
T 1568621129 18<stennowork18>	it dies
T 1568621131 18<stennowork18>	does
T 1568621139 18<ashnur18>	thanks stennowork
T 1568621152 18<kakashiA118>	https://www.youtube.com/watch?v=9TpIYPUp9Bc  (I love it)
T 1568621161 18<hmw_metalab18>	I overlooked that it returns a promise. I will have to meditate more over this. Promises are somewhat weird, if you encounter them the first time
T 1568621161 18<stennowork18>	n> (async() => 3)().then().then().then().then().then(x => console.log('x is', x));
T 1568621163 18<jellobot18>	(okay) x is 3 undefined
T 1568621167 18<grr1231418>	hmw_metalab your check_credentials() function for example returns the same promise as request_credentials(), but tacks on logging
T 1568621178 18<grr1231418>	but does with a weird new promise wrapper
T 1568621210 18<hmw_metalab18>	Pfew... this is complicated.
T 1568621229 18<grr1231418>	instead of just return request_credentials().then(a=>{console.log(a); return a}).catch(a=>{console.log(a); throw a})
T 1568621294 18<ashnur18>	promises are a terrible interface this continous back and forth, going in time both ways
T 1568621329 18<stennowork18>	wut
T 1568621342 18<stennowork18>	promises are great and exactly the right tool for JS's async-ness
T 1568621347 18<hmw_metalab18>	grr12314: I think, I am starting to get you. I suppose, there will be at least two new Promise in the final code?
T 1568621358 18<stennowork18>	actually i haven't seen vue observer pattern yet
T 1568621362 18<stennowork18>	maybe its better than promises
T 1568621395 18<grr1231418>	new Promise is ok when converting callback-based api to promise, but when you already have a promise it is pointless
T 1568621402 18<grr1231418>	i.e. it's ok for the setTimeout cases
T 1568621416 18<grr1231418>	altho those are weird in other ways
T 1568621425 18<hmw_metalab18>	they represent ajax calls
T 1568621432 18<grr1231418>	cool
T 1568621432 18<stennowork18>	oh vue uses promises internally too
T 1568621462 18<grr1231418>	if you use fetch() api it already is a promise so you can just chain then calls there too
T 1568621512 18<hmw_metalab18>	Ah yes, fetch. I will look into those, too, when I will finally have wrapped my head around improving this thing
T 1568621595 18<ashnur18>	stennowork: maybe the JS mess you write it fits it, but not the stuff I write
T 1568621619 18<stennowork18>	ashnur, you don't write js?
T 1568621635 18<ashnur18>	i do write js, i write lots of js and most of it has to deal with async flow
T 1568621639 18<ashnur18>	and i hate promises
T 1568621671 18<stennowork18>	and how do you handle the async flow then
T 1568621675 18<stennowork18>	events?
T 1568621702 18<ashnur18>	i handle the async flow with whatever is at hand. not very easy to avoid using promises, right?
T 1568621722 18<ashnur18>	events are also very popular
T 1568621772 18<stennowork18>	so what kind of async flow control do you need that cannot be done ok with promises?
T 1568621778 18<ashnur18>	but events are very low level, not enough control. Promises have the right level, but not the right kind or amount
T 1568621805 18<ashnur18>	stennowork: so where did I write 'cannot be done'?
T 1568621813 18<stennowork18>	cannot be done ok
T 1568621819 18<stennowork18>	cannot be done well*
T 1568621922 18<ashnur18>	almost any i think. i believe most promise based codebase is just too wrong to care. like how rarely proper cleanup and cancellation is even considered, let alone implemented.
T 1568621975 18<ashnur18>	in 30 years none of this will be acceptable =)
T 1568622031 18<stennowork18>	well, not being able to cancel promises properly (disregarding AbortController) could indeed be seen as a weakness of promises
T 1568622161 18<ashnur18>	stennowork: a random example someone else found: https://github.com/mysticatea/abort-controller/blob/master/src/abort-signal.ts#L68
T 1568622204 18<ashnur18>	this is how someone tries to implement a cancellable promise
T 1568622220 18<stennowork18>	so, with events
T 1568622249 18<ashnur18>	not my code, i don't think this is actually correct, there is an easy race-condition here
T 1568622273 18<stennowork18>	but it seems to follow specs tbh
T 1568622277 18<ashnur18>	there is another abort controller which uses Promise.race() , I think that's way better
T 1568622281 18<stennowork18>	specs imply signals too
T 1568622303 18<stennowork18>	https://dom.spec.whatwg.org/#dom-abortcontroller-abort
T 1568622308 18<ashnur18>	yeah, but this is my whole problem, everyone is so busy in the circlejerk, doing the easy work, following the spec, they forget to actually think about what they are doing
T 1568622333 18<ashnur18>	and implement something that then is used possibly by millions ignorantly
T 1568622358 18<ashnur18>	"well, i don't know about race-conditions, but it followed the latest spec and had 100% coverage"
T 1568622365 18<stennowork18>	i am sure that the people at whatwg thought a lot about it
T 1568622374 18<ashnur18>	but this is not about the spec stennowork
T 1568622378 18<ashnur18>	the implementation is buggy
T 1568622452 18<ashnur18>	you can't safely cancel with an event, if the cancellable promise gets resolved before the events get handled you have undefined behavior
T 1568622541 18<Antho00018>	Helloe verybody :)
T 1568622606 18<stennowork18>	well to be fair abortcontroller is specifically for fetch, not generally for promise cancelling
T 1568622613 18<Antho00018>	Hello everybody ;)
T 1568622661 18<grr1231418>	Hell oeverybody :P
T 1568622680 18<Antho00018>	What do you advise me as a light bookstore to make a page? Because I need it just on the presentation page, on the rest of the site will not need a page.
T 1568622682 18<Antho00018>	:)
T 1568622743 18<grr1231418>	wat
T 1568622822 18<Antho00018>	What do you advise me as a light bookstore to make a page? Because I need it just on the presentation SCROLL PAGE, on the rest of the site will not need a page.
T 1568622874 18<Aliekezhi18>	hi, this script is supposed to save the checkbox state using localstorage, however, it doesn't behave as expected, with no error. Any idea why ? https://jsfiddle.net/wsr4a9tb/4/
T 1568622898 18<Alexendoo18>	ashnur: It's not undefined behaviour, if the Promise resolves before the operation backing it has a chance to be cancelled then that's fine. If it does get cancelled, the Promise will reject with an AbortError
T 1568622904 18<Aliekezhi18>	(clicking on the button isn't supposed to check the checkbox if it's unchecked)
T 1568622921 18<Alexendoo18>	Well a DOMException with the name AbortError anyway
T 1568622990 18<stennowork18>	Aliekezhi,  if (document.getElementById("caseMessageSystemes").checked = true) {
T 1568622997 18<grr1231418>	Aliekezhi comparison vs assignment
T 1568623024 18<Aliekezhi18>	grr12314, == should be used ?
T 1568623046 18<grr1231418>	but also, bool == true is redundand and silly
T 1568623067 18<grr1231418>	not that i've not made the same mistake back when starting
T 1568623081 18<Aliekezhi18>	grr12314, what would you use instead ?
T 1568623086 18<stennowork18>	Antho000, what is 'a light bookstore'?
T 1568623102 18<grr1231418>	bool == true is the same as just bool
T 1568623141 18<Aliekezhi18>	grr12314, so if (bool) { is ok ? true by default ?
T 1568623168 18<grr1231418>	idk what you mean "by default"
T 1568623170 18<stennowork18>	n> const foo = true; if (foo) { console.log('foo is true'); } // Aliekezhi
T 1568623171 18<jellobot18>	(okay) foo is true undefined
T 1568623179 18<grr1231418>	but true == true is true, and false == true is false
T 1568623187 18<stennowork18>	n> const foo = false; if (foo) { console.log('foo is true'); } else { console.log('foo is false'); } // Aliekezhi
T 1568623189 18<jellobot18>	(okay) foo is false undefined
T 1568623245 18<stennowork18>	n> [0,1,true,false,null,undefined,'','0'].filter(x => x)
T 1568623246 18<jellobot18>	(okay) [ 1, true, '0' ]
T 1568623324 18<grr1231418>	[0,1,true,false,,"true", null,undefined,'', '1', '0'].map(x=>[x, Boolean(x), x==true])
T 1568623330 18<grr1231418>	n> [0,1,true,false,,"true", null,undefined,'', '1', '0'].map(x=>[x, Boolean(x), x==true])
T 1568623331 18<jellobot18>	(okay) [ [ 0, false, false ], [ 1, true, true ], [ true, true, true ], [ false, false, false ], <1 empty item>, [ 'true', true, false ], [ null, false, false ], [ undefined, false, false ], [ '', false, false ], [ '1', true, true ], [ '0', true, false ] ]
T 1568623389 18<stennowork18>	the truthyness expert :P
T 1568623490 18<stennowork18>	b> [0,1,true,false,,"true", null,undefined,'', '1', '0'].map(x=>[x, Boolean(x), x||'falsy', x??'non-nullish'])
T 1568623491 18<jellobot18>	(okay) [ [ 0, false, 'falsy', 0 ], [ 1, true, 1, 1 ], [ true, true, true, true ], [ false, false, 'falsy', false ], <1 empty item>, [ 'true', true, 'true', 'true' ], [ null, false, 'falsy', 'non-nullish' ], [ undefined, false, 'falsy', 'non-nullish' ], [ '', false, 'falsy', '' ], [ '1', true, '1', '1' ], [ '0', true, '0', '0' ] ]
T 1568623507 18<stennowork18>	er nullish
T 1568623513 18<Antho00018>	stennowork Or a normal bookstore :), but that is to say that you have an advisor? because there are several
T 1568623514 18<stennowork18>	b> [0,1,true,false,,"true", null,undefined,'', '1', '0'].map(x=>[x, Boolean(x), x||'falsy', x??'nullish'])
T 1568623515 18<jellobot18>	(okay) [ [ 0, false, 'falsy', 0 ], [ 1, true, 1, 1 ], [ true, true, true, true ], [ false, false, 'falsy', false ], <1 empty item>, [ 'true', true, 'true', 'true' ], [ null, false, 'falsy', 'nullish' ], [ undefined, false, 'falsy', 'nullish' ], [ '', false, 'falsy', '' ], [ '1', true, '1', '1' ], [ '0', true, '0', '0' ] ]
T 1568623551 18<ashnur18>	Alexendoo: I don't think your analysis is quite exhaustive there
T 1568623563 18<stennowork18>	Antho000, i still don't understand, sorry
T 1568623575 18<stennowork18>	do you need an e-commerce solution?
T 1568623731 18<ashnur18>	Antho000: are you using google translator?
T 1568623734 18<alystair218>	is there a way to refer to child objects in shortform within JSON?
T 1568623770 18<Alexendoo18>	ashnur: Feel free to provide a counterexample
T 1568623771 18<ashnur18>	alystair2: with additional tooling, like JSON-Pointers
T 1568623833 18<ashnur18>	Alexendoo: https://github.com/mo/abortcontroller-polyfill/blob/master/src/abortableFetch.js#L104
T 1568623862 18<ashnur18>	not sure what i should "counter".
T 1568623877 18<Alexendoo18>	ashnur: You didn't notice the eventListener in that example...?
T 1568623909 18<Alexendoo18>	cancellation is just a Promise that wraps the 'abort' event from the AbortSignal
T 1568623985 18<ashnur18>	sorry, but I don't understand your references 'that example' 'cancellation is just a promise' ...
T 1568624020 18<ashnur18>	the point is the switch from push to pull using .race()
T 1568624024 18<Alexendoo18>	ashnur: You linked https://github.com/mo/abortcontroller-polyfill/blob/master/src/abortableFetch.js#L104 just now. It has a promise called `cancellation`
T 1568624034 18<grr1231418>	ashnur race is no pull tho
T 1568624058 18<Alexendoo18>	That promise just wraps the 'abort' event from an AbortSignal, as you can see a few lines up
T 1568624063 18<ashnur18>	grr12314: i bet you misunderstand just so you can disagree, but let's have it, why is it "not pull tho"
T 1568624066 18<grr1231418>	theres no guarantee they wont both be resolved in the same tick either
T 1568624091 18<ashnur18>	...
T 1568624095 18<ashnur18>	so?
T 1568624097 18<Alexendoo18>	The AbortSignal still uses events, that's how it works
T 1568624163 18<Alexendoo18>	https://github.com/mo/abortcontroller-polyfill/blob/master/src/abortcontroller.js#L67
T 1568624191 18<alystair218>	ashnur: `user.public.roles = ['foo','bar'];` turns into `{user:{public:{roles:["foo,bar"]}}}` ... which feels really ugly where it could just be something like `{user.public.roles:['foo','bar']}` ... if it were legal :P
T 1568624248 18<Alexendoo18>	The other polyfill you linked doesn't use race because it only implements the contoller+signal, if you take just the controller from abortcontroller-polyfill it's the same
T 1568624390 18<alystair218>	if anyone else has suggestions I'm all ears
T 1568624423 18<grr1231418>	`user.public.roles = ['foo','bar'];` is invalid if the objects dont exist already anyway
T 1568624435 18<alystair218>	within my system it
T 1568624440 18<alystair218>	it's guaranteed to exist
T 1568624465 18<grr1231418>	then just use that
T 1568624517 18<ashnur18>	grr12314: the original question was about using shortform for child objects, i pointed out that there is additional tooling to do just that. said tooling usually implements features on what to do when the path doesn't exist, json-ptr can force set it https://www.npmjs.com/package/json-ptr#user-content-settarget-pointer-value-force
T 1568624568 18<ashnur18>	using composed keys as actual keys is too much complexity for the sake of some imagined benefit
T 1568624585 18<ashnur18>	{'a.b':1} is the same as {a: {b: 1}} ?
T 1568624594 18<ashnur18>	very bad idea
T 1568624648 18<alystair218>	those aren't the same... are they?
T 1568624749 18<darkseid18>	they are not the same
T 1568624775 18<darkseid18>	one is an object with a key 'a.b' whereas the other is an obj with a key of 'a'
T 1568624939 18<alystair218>	yeah, that's not going to fly
T 1568624955 18<grr1231418>	he meant it without the ' ' probably
T 1568624965 18<alystair218>	you can't do that, it's an error.
T 1568624978 18<grr1231418>	yup. and it would be bad if you could
T 1568625067 18<alystair218>	eh still better than XML, whaetever. Just a few extra bits :p
T 1568625162 18<ashnur18>	i didn't mean anything else than what i wrote
T 1568625167 18<ashnur18>	are you reading part of the channel?
T 1568625183 18<Antho00018>	back :)
T 1568625184 18<ashnur18>	09:56:31       alystair2 | ashnur: `user.public.roles = ['foo','bar'];` turns into `{user:{public:{roles:["foo,bar"]}}}` ... which feels really ugly where it could just be something like  `{user.public.roles:['foo','bar']}` ... if it were legal :P
T 1568625201 18<Antho00018>	I'm trying to create a scroll page that activates with the mouse wheel, exemple=>  (https://alvarotrigo.com/fullPage/#) , but on my site I only need to do it on one page, do you have a JS library to advise me?
T 1568625205 18<ashnur18>	i just pointed out that it wouldn't be any better
T 1568625210 18<ashnur18>	would be much worse
T 1568625260 18<ashnur18>	Antho000: are you someone who has coding experience? if not, how much time do you want to spend on it?
T 1568625353 18<Antho00018>	ashnur Hello, yes but not in JS
T 1568625422 18<ashnur18>	in what?
T 1568625446 18<Antho00018>	Python
T 1568625535 18<ashnur18>	well, could be worse. i think if you just want to get over it, then you should find a jquery lib ;)
T 1568625585 18<Antho00018>	which one advise you ?
T 1568625651 18<qswz18>	!python
T 1568625676 18<qswz18>	"then you should find a jquery lib" oh please
T 1568625677 18<DnzAtWrk18>	qswz: although it has many similiarities, python is not javascript
T 1568625686 18<qswz18>	DnzAtWrk: no shit!
T 1568625692 18<qswz18>	:))
T 1568625710 18<qswz18>	I always thought python was just a javascript preprocessor like coffeescript
T 1568625725 18<ashnur18>	lol
T 1568625739 18<ashnur18>	that's not an entirely inaccurate description
T 1568625746 18<Antho00018>	ashnur which one advise you as jquery lib? ashnur:)
T 1568625753 18<ashnur18>	Antho000: ask qswz
T 1568625764 18<qswz18>	don't use jquery
T 1568625769 18<stennowork18>	lol
T 1568625770 18<qswz18>	even under torture
T 1568625783 18<DnzAtWrk18>	jquery is fine if all you want to do is make a website and not mess with babel or polyfills
T 1568625787 18<ashnur18>	qswz: i wish i had that option lol
T 1568625806 18<qswz18>	vanilla is strong nowadays
T 1568625814 18<ashnur18>	when i made the PR, our python backend dev said 'It is premature to remove jquery'
T 1568625815 18<DnzAtWrk18>	vanilla on modern browsers
T 1568625827 18<qswz18>	you can show my any jquery code, I'll give you the equivalent shiny vanilla
T 1568625830 18<stennowork18>	modern browser = any non-IE
T 1568625833 18<ashnur18>	and since i have no control over some page, there still is jquery
T 1568625833 18<qswz18>	vanilla = pure JS
T 1568625836 18<DnzAtWrk18>	and safari
T 1568625842 18<qswz18>	!polyfill.io
T 1568625842 18<ecmabot18>	qswz: <script nomodule src="https://polyfill.io/v3/polyfill.js?flags=always&features=default,fetch"></script>
T 1568625849 18<qswz18>	for old browsers and vanilla
T 1568625890 18<DnzAtWrk18>	anyway, I don't see why jquery should be hated any more than any other js framework
T 1568625932 18<Antho00018>	???
T 1568626012 18<Antho00018>	So, who is the solution to make a scrolling page with the help of the mouse wheel ? ( site ? GitHub ? etc.)
T 1568626303 18<ThePendulum18>	DnzAtWrk: because its scope is obsolete
T 1568626389 18<ThePendulum18>	a vast bulk of what people used jQuery for can now be done with native JS or CSS, and it doesn't really provide the kind of structures modern frameworks are useful for
T 1568626440 18<Antho00018>	just for information, I find this one => https://codyhouse.co/demo/page-scroll-effects/index.html
T 1568626498 18<ThePendulum18>	oh please don't :/
T 1568626517 18<DnzAtWrk18>	it can be done but not as smoothly
T 1568626527 18<ThePendulum18>	messing with native scroll behavior is one of the worst UX pitfalls out there
T 1568626539 18<DnzAtWrk18>	making json requests using jquery, or animating things, or accessing dom elements and setting css properties
T 1568626547 18<DnzAtWrk18>	they all use less user code with jquery
T 1568626585 18<ThePendulum18>	having buttons that scroll to sections is fine (although I don't think anyone is really asking for effects, just use good ole #anchors), but these jelly animations when scrolling, yikes
T 1568626596 18<DnzAtWrk18>	in addition, there are tons of javascript libraries which depend on jquery
T 1568626598 18<DnzAtWrk18>	like flot
T 1568626603 18<DnzAtWrk18>	and other graphing libraries
T 1568626608 18<ThePendulum18>	lol 'hijacking off'
T 1568626615 18<ThePendulum18>	a jihadists wank
T 1568626622 18<Antho00018>	:)
T 1568626788 18<hmw_metalab18>	Should I pass the resolve and reject functions to another function in order to prevent using a new Promise() in that other function? grr12314
T 1568626829 18<DnzAtWrk18>	why not just have the function return a promise
T 1568626874 18<hmw_metalab18>	I was asking about how to improve my code earlier and got told, that I used several new Promise() more than needed. I am trying to get used to Promises and create a nice and clean code example, DnzAtWrk
T 1568626897 18<hmw_metalab18>	That question was somewhat specific
T 1568626905 18<hmw_metalab18>	to the earlier code I presented
T 1568626928 18<qswz18>	don't scroll-jack
T 1568626930 18<hmw_metalab18>	(don't want to show you the current code, since I am still trying to improve it, will post a link later)
T 1568626940 18<hmw_metalab18>	what is scroll jacking?
T 1568626982 18<hmw_metalab18>	qswz: ? ^
T 1568627011 18<qswz18>	!google scroll-jacking @ hmw_metalab
T 1568627011 18<ecmabot18>	hmw_metalab: Google search: "scroll-jacking" <http://www.google.com/search?q=scroll-jacking>
T 1568627046 18<qswz18>	it's the act of fucking up with UX
T 1568627119 18<qswz18>	it's really bad for vsually impaired people
T 1568627134 18<hmw_metalab18>	ah, you weren't saying this to me.
T 1568627149 18<spinningCat18>	can i use each, forEach inside async function?
T 1568627163 18<qswz18>	no, previosu discussion indeed
T 1568627174 18<qswz18>	spinningCat: show the context
T 1568627195 18<qswz18>	usually it's a bad idea to use .forEach in async context
T 1568627209 18<qswz18>	because you can't know when it's finished
T 1568627219 18<spinningCat18>	hmm
T 1568627223 18<qswz18>	use await Promise.all(arr.map( .. ))
T 1568627227 18<hmw_metalab18>	Interesting. I am surprised that using the scroll wheel to advance a horizontal slider was considered bad. Wouldn't have guessed.
T 1568627276 18<hmw_metalab18>	Heh. I recently stumbled over this. I used forEach and tried to return a value, when it was found. I got 2 results. Looked like I had a qbit in my code...
T 1568627313 18<qswz18>	it's the definition of async
T 1568627321 18<hmw_metalab18>	Will foreach use multiple cores?
T 1568627331 18<hmw_metalab18>	or threads
T 1568627346 18<spinningCat18>	i am doing this get(`https://api.something.com/${x}`)
T 1568627351 18<qswz18>	n> [1].forEach(i => console.log('forEach', i)); 'sync';
T 1568627352 18<jellobot18>	(okay) forEach 1 'sync'
T 1568627357 18<spinningCat18>	x actually has value and i can see that on console
T 1568627367 18<qswz18>	.forEach runs synchronously
T 1568627372 18<spinningCat18>	but here in the axios url i cannot get value
T 1568627375 18<qswz18>	except if it has promises
T 1568627384 18<qswz18>	n> [1].forEach(async i => console.log('forEach', i)); 'sync';
T 1568627385 18<jellobot18>	(okay) forEach 1 'sync'
T 1568627388 18<qswz18>	hmm
T 1568627408 18<qswz18>	n> [1].forEach(async i => {await console.log('forEach', i)}); 'sync';
T 1568627409 18<jellobot18>	(okay) forEach 1 'sync'
T 1568627412 18<qswz18>	dam
T 1568627454 18<qswz18>	n> [1].forEach(i => {Promise.resolve().then(()=>console.log('forEach', i))}); 'sync';
T 1568627455 18<jellobot18>	(okay) forEach 1 'sync'
T 1568627462 18*	qswz gives up
T 1568627535 18<spinningCat18>	any idea?
T 1568627600 18<qswz18>	!axios @ spinningCat
T 1568627600 18<ecmabot18>	spinningCat: Promise based HTTP client for the browser and node.js that offers a level of abstraction compared to the XMLHttpRequest or node 'http', 'https' or 'http2' APIs – https://www.npmjs.com/package/axios https://danlevy.net/you-may-not-need-axios/ see also !fetch
T 1568627614 18<qswz18>	the end of it
T 1568627635 18<spinningCat18>	this is not my code
T 1568627636 18<Alexendoo18>	spinningCat: Post the code?
T 1568627638 18<qswz18>	spinningCat: x is the argument of .forEach?
T 1568627646 18<spinningCat18>	let me paste it
T 1568627659 18<qswz18>	11:47 <qswz> use await Promise.all(arr.map(x => ...))
T 1568627666 18<qswz18>	like I said
T 1568627683 18<spinningCat18>	i have to go on with axios
T 1568627704 18<qswz18>	you don't
T 1568627723 18<qswz18>	you're free to go with fetch
T 1568627733 18<qswz18>	you're even strongly encouraged to
T 1568627741 18<spinningCat18>	qswz,  this is not my code
T 1568627749 18<qswz18>	it is now
T 1568627754 18<qswz18>	since you're working on it
T 1568627816 18<spinningCat18>	this is the code http://dpaste.com/01G7TDD
T 1568627826 18<spinningCat18>	qswz,  i have to offer using it first
T 1568627830 18<spinningCat18>	i guess
T 1568627835 18<qswz18>	where is the forEach?
T 1568627852 18<spinningCat18>	i removed it
T 1568627857 18<spinningCat18>	it is not important now
T 1568627862 18<qswz18>	it def is
T 1568627876 18<spinningCat18>	what do you mean?
T 1568627881 18<qswz18>	change const data = await request.get to return request.get
T 1568627884 18<qswz18>	l.2
T 1568627890 18<qswz18>	spinningCat: show the context
T 1568627893 18<qswz18>	the relevant context
T 1568627916 18<spinningCat18>	return instead of await
T 1568627924 18<spinningCat18>	qswz,  do you want to see the object?
T 1568627952 18<slikts18>	what's a giblet???
T 1568627959 18<spinningCat18>	giblet?
T 1568627986 18<qswz18>	https://www.urbandictionary.com/define.php?term=giblets
T 1568628017 18<qswz18>	not very reliable
T 1568628046 18<spinningCat18>	i can see content of variable in console
T 1568628051 18<spinningCat18>	but not in axios url
T 1568628059 18<qswz18>	show
T 1568628060 18<qswz18>	the
T 1568628063 18<qswz18>	context
T 1568628073 18<spinningCat18>	this is context
T 1568628077 18<qswz18>	of how asyncFunc is used
T 1568628080 18<qswz18>	damnit
T 1568628086 18<qswz18>	are you a developer?
T 1568628104 18<spinningCat18>	yes i just called it   asyncFunc();
T 1568628116 18<qswz18>	show the lines around it
T 1568628117 18<spinningCat18>	like calling regular function
T 1568628121 18<qswz18>	SHOW
T 1568628273 18<slikts18>	man what's with these giblets
T 1568628281 18<qswz18>	a giblet is to a gib what a hamlet is to a ham
T 1568628292 18<slikts18>	can't dispute that
T 1568628326 18<qswz18>	gibberish
T 1568628367 18<slikts18>	there aren't enough special needs programming languages
T 1568628401 18<qswz18>	well, I believe more in mutipurposes langiages
T 1568628407 18<qswz18>	languages*
T 1568628430 18<qswz18>	spinningCat: just paste that code, sorry for my brutality
T 1568628442 18<slikts18>	you believe in the langauge of love
T 1568628456 18<qswz18>	hah, not at that point
T 1568628469 18<spinningCat18>	qswz,  not importnat i already pasted
T 1568628481 18<slikts18>	!importnat
T 1568628492 18<qswz18>	ok, I'll ignore it
T 1568628502 18<spinningCat18>	ops
T 1568628510 18<qswz18>	that's what this kind of person deserve
T 1568628511 18<spinningCat18>	i already pasted it
T 1568628534 18<qswz18>	you pasted a function
T 1568628537 18<qswz18>	and not how it's used
T 1568628553 18<qswz18>	which is what matters
T 1568628558 18<spinningCat18>	asyncfunction() i called it like that
T 1568628566 18<slikts18>	lifehack for making smelly water: put down something wet and forget about it
T 1568628567 18<qswz18>	without await before?
T 1568628575 18<slikts18>	then lift it up later and have smelly fingers
T 1568628587 18<qswz18>	an asyncFuntion has to be awaited, it's obvious
T 1568628644 18<qswz18>	smelly means full of life
T 1568628647 18<qswz18>	it's a good sign
T 1568628668 18<slikts18>	is that why you never change towels
T 1568628670 18<qswz18>	except for cigarettes, that smell is death
T 1568628681 18<slikts18>	sorry, I thought this was ##javascript
T 1568628728 18<qswz18>	I need to improve some code
T 1568628740 18<slikts18>	we all need to do our part in maintaining the level of discourse
T 1568628784 18<spinningCat18>	i need to sleep
T 1568628787 18<slikts18>	and also slowly lose your mind because people can't stop using pastebin
T 1568628873 18<qswz18>	this hideous code I wrote http://dpaste.com/23BK1WM for https://leetcode.com/problems/maximum-subarray/
T 1568628900 18<qswz18>	but it works, that's the principal
T 1568628909 18<slikts18>	that code is so uggo that even colors abandoned it
T 1568628928 18<qswz18>	http://dpaste.com/20NYFWF colors
T 1568628937 18<slikts18>	node | curl http://dpaste.com/23BK1WM.txt
T 1568628937 18<qswz18>	well not many
T 1568628979 18<qswz18>	slikts: your node CLI has syntax highlighting?
T 1568628989 18<qswz18>	mine doesn't
T 1568629052 18<slikts18>	sorry I'm still stuck on `while (nums[i]<=0 && i<nums.length) i++;`
T 1568629087 18<qswz18>	what's wrong with it
T 1568629100 18<slikts18>	you tell me
T 1568629104 18<qswz18>	we incr i as long as nums[i] is negative
T 1568629110 18<qswz18>	nothing more
T 1568629124 18<qswz18>	[-3,-5,4,7]
T 1568629128 18<qswz18>	i will be 2
T 1568629140 18<slikts18>	brb having mental breakdown
T 1568629144 18<qswz18>	:p
T 1568629145 18<grr1231418>	ugh
T 1568629154 18<grr1231418>	it is O(N^2)
T 1568629177 18<qswz18>	it's O(n) I believe
T 1568629185 18<grr1231418>	it has nested loops
T 1568629199 18<qswz18>	with different variables
T 1568629210 18<qswz18>	the nested vars start where the outer ones stopped
T 1568629230 18<qswz18>	in the end it's looping only once over nums
T 1568629236 18<qswz18>	I know it looks complex
T 1568629314 18<qswz18>	basically everytime we find a series (1+) if negative numbers, we fetched the net positive numbers (1+) and compare between 3 possible contiguous series to find the max one
T 1568629343 18<qswz18>	either the left one, either the right one either the one taking left, nagative values and right
T 1568629418 18<grr1231418>	i dont want to bother registering so cant test
T 1568629428 18<grr1231418>	but this seems to me just as simple as nums.reduce((a,v)=>Math.max(a+v,v),0)
T 1568629451 18<qswz18>	it's a bit more complex
T 1568629472 18<spinningCat18>	(in promise) TypeError: m.each is not a function what the hell is that?
T 1568629490 18<qswz18>	"find the contiguous subarray which has the largest sum and return its sum"
T 1568629521 18<qswz18>	Please, no one should reply to spinningCat until he provides a paste with relevant context
T 1568629525 18<qswz18>	don't waste your energy
T 1568629531 18<qswz18>	like I did by mistake
T 1568629539 18<slikts18>	joke's on you, I have no energy to waste
T 1568629542 18<qswz18>	it's a trap!
T 1568629587 18<spinningCat18>	dont have time for that
T 1568629605 18<qswz18>	do you have time for instructing yourself?
T 1568629616 18<qswz18>	never too late
T 1568629659 18<darkseid18>	man LastPass sucks
T 1568629701 18<slikts18>	darkseid: agreed, I forgot my password for lastpass and it's their fault
T 1568629708 18<darkseid18>	lol
T 1568629725 18<spinningCat18>	who cares
T 1568629740 18<slikts18>	spinningCat: go to bed
T 1568629753 18<spinningCat18>	i am at starrbucks
T 1568629762 18<slikts18>	exactly
T 1568629764 18<spinningCat18>	i guess i will sleep when i sit
T 1568629895 18<qswz18>	don't eat or drink there
T 1568629900 18<qswz18>	it's unhealthy
T 1568629902 18<grr1231418>	.reduce(([c,m],v)=>[Math.max(c+v,v),Math.max(m,c+v,v)],[0,0])[1]
T 1568629921 18<qswz18>	grr12314: it works?
T 1568629930 18<spinningCat18>	axios return error but i see 200 in network tab
T 1568629933 18<spinningCat18>	wtf?
T 1568629933 18<qswz18>	just log in with github
T 1568629937 18<grr1231418>	tested 1-2 cases in console
T 1568629977 18<qswz18>	!learn spinningCat=no one should reply to spinningCat until he provides a paste with relevant context
T 1568629977 18<ecmabot18>	qswz: Learned `spinningCat`.
T 1568630012 18<spinningCat18>	i really shouldnt use axios
T 1568630031 18<qswz18>	good! you're on the right path
T 1568630042 18<qswz18>	to redemption
T 1568630074 18<qswz18>	window.fetch
T 1568630096 18<spinningCat18>	okay
T 1568630100 18<spinningCat18>	do i need await?
T 1568630129 18<qswz18>	yes, if you show the whole code we could help
T 1568630152 18<grr1231418>	ok init with [-1/0,-1/0] since they apparently dont allow empty subarray
T 1568630154 18<qswz18>	await is not mandatory
T 1568630177 18<qswz18>	grr12314: I'm sure it doesn't pass some cases
T 1568630207 18<grr1231418>	it did tho :p
T 1568630243 18<qswz18>	on leetcode?
T 1568630250 18<grr1231418>	yup
T 1568630288 18<ashnur18>	qswz: do you use polyfill.io in production?
T 1568630328 18<qswz18>	ashnur: yes
T 1568630410 18<grr1231418>	now why doesnt that site have account deletion anywhere
T 1568630668 18<ashnur18>	qswz: where? :)
T 1568630672 18<hmw_metalab18>	Updated my promise chain example https://jsfiddle.net/agsc5rh8/1/ - There is something at line 100, I am not fully sure. Also, jsfiddle reformatted my code and removed a few comments... :(   Original should be available here, if you dare click an IP: http://84.114.244.155/stubs/.ares3/tests/nested_promise.html
T 1568630713 18<qswz18>	grr12314: did you click "submit"?
T 1568630723 18<qswz18>	because if you just tried on the example
T 1568630743 18<qswz18>	it's not complete test at all
T 1568630754 18<grr1231418>	why so sceptical
T 1568630763 18<grr1231418>	it probably does the same thing yours does
T 1568630774 18<grr1231418>	just in a way i can read it
T 1568630843 18<hmw_metalab18>	Also, how do you handle naming for functions that return promises? I tried it with a _promise postfix on the function name, which is not totally pretty.
T 1568630899 18<grr1231418>	you can use Promise.resolve to make a resolving promise
T 1568630917 18<grr1231418>	instead of using the new Promise constructor and immediately calling resolve
T 1568630923 18<hmw_metalab18>	ah, nice
T 1568631002 18<grr1231418>	and your operation_promise still has pointless new promise with another promise inside it
T 1568631085 18<hmw_metalab18>	Ah. So I would replace return new Promise()... in line 154 with just return check_credentials_promise of the next line?
T 1568631150 18<hmw_metalab18>	Nah. Not that simple...
T 1568631169 18<hmw_metalab18>	oh, indeed that simple :) thanks
T 1568631227 18<hmw_metalab18>	This is all backwards :) The promise starts deep within the nesting...
T 1568631245 18<switzernauts18>	I want to open IE and in the same time parse a bearer token in the header, is that possible?
T 1568631395 18<qswz18>	grr12314: if you didn't click submit, there are 99.9% chances this code is wrong
T 1568631441 18<qswz18>	I could spend 10mn to find a counter-example (because I don't wnt to lower my leetcode submissions stas)
T 1568631459 18<qswz18>	or you could be kind enough to admit
T 1568631542 18<grr1231418>	и прессед тхе годдамнед субмит
T 1568631548 18<grr1231418>	i pressed the goddamned submit
T 1568631554 18<xyz11118>	Hi All, I am using template literals to include HTML in my javascript. It's really convenient, but lacks syntax highlighting. I discovered that atom will syntax highlight a template literal if you tag it with html (i.e. html`<div></div>`), however this code does not run in the browser as it expects a function called html() - I was wondering if there's an easy 'passthrough' function I can create called html that just returns the compile
T 1568631555 18<xyz11118>	:)
T 1568631666 18<qswz18>	dam, it seems correct
T 1568631676 18<grr1231418>	hmw_metalab i think you want something like return check_credentials().then(check_sanity).then(request_confirmation).then(execute)
T 1568631756 18<hmw_metalab18>	Thanks for your patience :)
T 1568631786 18<qswz18>	grr12314: ok, you're good, thx
T 1568631863 18<grr1231418>	xyz111 you could do const html = String.raw
T 1568631883 18<grr1231418>	String.raw differs from untagged literals in how escapes work
T 1568631894 18<grr1231418>	(or dont)
T 1568632008 18<hmw_metalab18>	Ah!! Another insight happened. How is this so difficult? *shakes head*
T 1568632028 18<qswz18>	I got one-lined
T 1568632127 18<qswz18>	xyz111: the 'compiled' template? like the template with all variables replaced?
T 1568632137 18<adrian_190818>	When a JS file imports another module, is the path relative to the JS file? I can't seem to get relative paths to work, whereas absolute ones "/path/to/file" work.
T 1568632192 18<xyz11118>	qswz: yes
T 1568632199 18<hmw_metalab18>	I think, I can feel new neurons growing in my brain...
T 1568632206 18<qswz18>	xyz111: I do the same, I have a template function (module.exports = (someVar, someOtherVar) => `<!doctype html><html> ....`
T 1568632229 18<qswz18>	xyz111: then just evaluate it with the given arguments you want
T 1568632239 18<hmw_metalab18>	grr12314: also, your line of code is pretty pretty
T 1568632303 18<xyz11118>	qswz: not sure I follow - where do you actually define the 'html' function? Note, that I'm doing this primarily to get syntax highlighting in atom!
T 1568632328 18<qswz18>	xyz111: in a whatever file, I named it index.html.js
T 1568632335 18<qswz18>	oh
T 1568632342 18<qswz18>	I'm using it for a server
T 1568632360 18<qswz18>	so nvm, you're usecase is different
T 1568632418 18<xyz11118>	yeah, I literally just want the html function to be a passthrough that gives me the compiled string without modifying at all
T 1568632438 18<qswz18>	you can't 'compile' it
T 1568632447 18<qswz18>	just make a function
T 1568632467 18<qswz18>	the advantage of a html`` is to safe-scape variabes for example, to avoid injections
T 1568632475 18<qswz18>	safe-escape
T 1568632497 18<adrian_190818>	Problems solved, `import` doesn't use unix-like notation. For relative references, you always have to prefix your path with "./"
T 1568632499 18<xyz11118>	the only solution I can see is manually going through every line and every var and putting together the compiled func myself
T 1568632511 18<qswz18>	but still do: (var1, var2) => html`<div data-v1="${var1}">ok</div>`
T 1568632557 18<qswz18>	xyz111: maybe, I don't see clearly what you want, uou could use an AST parser is you need to convert JS code tho
T 1568632566 18<qswz18>	like acorn
T 1568632568 18<xyz11118>	qswz: something like this: https://medium.com/@trukrs/tagged-template-literal-for-html-templates-4820cf5538f9 (see heading Put It Together)
T 1568632622 18<qswz18>	a template tag function is still a function
T 1568632668 18<grr1231418>	wow that article is so all over the place lol
T 1568632682 18<xyz11218>	yeah, it's not great
T 1568632683 18<grr1231418>	but it basically reimplemented a String.raw polyfill
T 1568632689 18<qswz18>	n> let html=(xs, ...o) => o.reduce((oi,i)=>oi+xs[i+1], xs[0]); html`hello ${1+1}`
T 1568632691 18<jellobot18>	(okay) 'hello undefined'
T 1568632722 18<qswz18>	n> let html=(xs, ...o) => o.reduce((s,oi,i)=>s+oi+xs[i+1], xs[0]); html`hello ${1+1}`
T 1568632723 18<jellobot18>	(okay) 'hello 2'
T 1568632735 18<xyz11218>	that looks pretty good
T 1568632777 18<grr1231418>	n> let html = String.raw; html`hello ${1+1}`
T 1568632778 18<jellobot18>	(okay) 'hello 2'
T 1568632780 18<xyz11218>	it just feels like a lot of hard work, just to get syntax highlighting in atom!
T 1568632796 18<xyz11218>	grr12314: that's more like it...
T 1568632824 18<grr1231418>	thats what i said 15 mins ago
T 1568632826 18<qswz18>	n> let html=(xs, ...o) => o.reduce((s,oi,i)=>s+`${oi}`.replace(/<\/script>/g,'</scr+ipt>')+xs[i+1], xs[0]); html`hello ${1+1}`
T 1568632828 18<jellobot18>	(okay) 'hello 2'
T 1568632834 18<qswz18>	safe escape
T 1568632840 18<xyz11118>	grr12314: apologies, I'm not that bright sometimes...
T 1568632843 18<xyz11118>	;D
T 1568632845 18<xyz11118>	:D
T 1568632877 18<grr1231418>	uh
T 1568632916 18<grr1231418>	nothing safe about it really
T 1568633046 18<grr1231418>	it breaks the script closing tag, but it will still execute things in onmousemove, onload, onerror, or have the potential (or rather, guarantee, now with the mismatched opening/closing tags) to screw up formatting
T 1568633104 18<qswz18>	yea it's not fully safe
T 1568633118 18<qswz18>	like for href="javascript:.."
T 1568633135 18<qswz18>	it was just an example
T 1568633165 18<qswz18>	!npm html-escape
T 1568633165 18<jellobot18>	qswz, html-escape@2.0.0: Escape string for use in html - https://www.npmjs.com/package/html-escape
T 1568633174 18<qswz18>	dunno how good those packages are
T 1568633192 18<grr1231418>	https://www.npmjs.com/package/html-template-tag
T 1568633248 18<qswz18>	https://wonko.com/post/html-escaping/
T 1568633275 18<qswz18>	doing it well probably requires to parse html
T 1568633340 18<qswz18>	!npm html-es6cape
T 1568633341 18<jellobot18>	qswz, html-es6cape@1.0.5: Escape HTML special characters (including `) - https://www.npmjs.com/package/html-es6cape
T 1568633410 18<qswz18>	https://github.com/AntonioVdlC/html-es6cape/blob/master/src/index.js behh
T 1568633445 18<qswz18>	so in short, use react for templating
T 1568633448 18<slikts18>	leetcode doesn't support Array#flatMap
T 1568633463 18<qswz18>	https://github.com/reactjs/express-react-views
T 1568633495 18<qswz18>	slikts: yea sadly, I don't know how it works because it seems executed locally
T 1568633633 18<slikts18>	qswz: https://gist.github.com/slikts/57b3b1cb8b469aa28fd75f3fbf9c78ea
T 1568633745 18<qswz18>	slikts: you know that grr12314's one-liner works?
T 1568633819 18<slikts18>	what oneliner
T 1568633853 18<grr1231418>	nums.reduce(([c,m],v)=>[Math.max(c+v,v),Math.max(m,c+v,v)],[-1/0,-1/0])[1]
T 1568641511 20*	Disconnected (20)
T 1568641539 19*	Now talking on 22##javascript
T 1568641539 22*	Topic for 22##javascript is: JavaScript is *not* Java. | Just ask your question. | Say "!mdn abc" for docs on "abc". | Don't paste code in the channel. | Can't talk? Get registered on freenode ( https://git.io/vaTS2 )
T 1568641539 22*	Topic for 22##javascript set by 26niggler!~niggler@unaffiliated/niggler (24Tue Jan 15 07:16:23 2019)
T 1568641693 18<fred180718>	back to requestfullscreen()    ... If I double click, iframe player goes fullscreen, and when double click again, back to windowned.  But if I use .requestfullscreen(), the a double click in the fullscreen wont make to window again
T 1568641712 18<prometh18>	when referring to html links within the same site (protocol and host), does "local" make sense?
T 1568641744 18<prometh18>	or is that term reserved for the local file system?
T 1568641763 18<prometh18>	like, "local to what?"
T 1568642207 18<slikts18>	internal
T 1568642444 18<robin___18>	Hello! How can I create and use the insertAnalytics function? https://pastebin.com/raw/NtynVUUp
T 1568642459 18<robin___18>	I thought this was OK:
T 1568642463 18<robin___18>	const analytics = require('./model/analytics');
T 1568642463 18<robin___18>	const create = analytics({ firstname: 'firstname', lastname: 'lastname' });
T 1568642474 18<robin___18>	but it returns undefined
T 1568642622 18<notchris18>	function name is wrong
T 1568642628 18<notchris18>	its Analytics({})
T 1568642668 18<notchris18>	should be let create = Analytics({ firstname: 'firstname', lastname: 'lastname' })
T 1568642703 18<robin___18>	thanks!
T 1568642714 18<notchris18>	np
T 1568642742 18<robin___18>	notchris: still undefined :O
T 1568642765 18<notchris18>	'create' is undefined?
T 1568642768 18<robin___18>	ye
T 1568642772 18<robin___18>	const Analytics = require('./model/analytics');
T 1568642772 18<robin___18>	let create = Analytics({ firstname: 'firstname', lastname: 'lastname' });
T 1568642813 18<notchris18>	well first you can use Analytics again since you did a require
T 1568642815 18<notchris18>	and its a const
T 1568642821 18<notchris18>	var Analytics = (analytics) => is not valid
T 1568642827 18<notchris18>	cant*
T 1568642832 18<robin___18>	how can i require it then? :D
T 1568642841 18<notchris18>	change the func name to test it
T 1568642850 18<notchris18>	var AnalyticsTest = (analytics) =>
T 1568642864 18<notchris18>	let create = AnalyticsTest(obj)
T 1568642919 18<laravel718>	what port is this listening on, how to find out? "start": "json-server server/index.js --routes server/routes.json --middlewares server/handle-delay.js server/handle-ads.js",
T 1568642952 18<robin___18>	notchris: sorry. im unclear. first I need to require it right? then I need call the functions. How to do those two things?
T 1568642959 18<stennowork18>	laravel7, look up netstat
T 1568642960 18<grr1231418>	laravel7 watch your console, it probably tells you there
T 1568643016 18<grr1231418>	also https://github.com/typicode/json-server#cli-usage
T 1568643032 18<notchris18>	robin___:  you did const Analytics, so you cant use that variable name anymore, you need to change the name of the function
T 1568643042 18<notchris18>	(when you required)
T 1568643098 18<laravel718>	i have to install it globally i guess 'json-server' is not recognized as an internal or external command,
T 1568643113 18<grr1231418>	no, it can be local install
T 1568643134 18<sillyslux18>	npx json-server?
T 1568643135 18<grr1231418>	local dep bins are on the PATH during npm script execution
T 1568643137 18<notchris18>	could be a issue with their npm
T 1568643142 18<notchris18>	and their PATH
T 1568643157 18<grr1231418>	its a npm start script right? so should just work
T 1568643178 18<grr1231418>	if its in deps and you've ran npm i anyway
T 1568643200 18<laravel718>	its in the deps, its ok
T 1568643340 18<xvx18>	how do I console.log the value in a text field (without pressing a submit button)
T 1568643353 18<xvx18>	I tried this, but it's not working (maybe because it lacks submit button): https://paste.ubuntu.com/p/csJ4pPyGvC/
T 1568643405 18<grr1231418>	something has to call your function tho
T 1568643415 18<xvx18>	yes that part's fine lol
T 1568643499 18<prometh18>	how do you increment a bigint ?
T 1568643503 18<grr1231418>	not from what you're showing
T 1568643521 18<grr1231418>	n> a=1n; ++a
T 1568643522 18<jellobot18>	(okay) 2n
T 1568643546 18<xvx18>	I was calling foo() in the console, expecting it to print the value, but it didn't grr12314
T 1568643546 18<prometh18>	i've read that unary is unsupported
T 1568643567 18<Alexendoo18>	unary + is unsupported
T 1568643613 18<grr1231418>	xvx it probably did. you just had an empty value and didnt notice
T 1568643614 18<stennowork18>	how would unary + relate to incrementation
T 1568643624 18<prometh18>	bigint += 5
T 1568643626 18<prometh18>	bigint++
T 1568643642 18<stennowork18>	unary plus means 'cast to number'
T 1568643644 18<stennowork18>	one plus
T 1568643644 18<grr1231418>	n> a=1n; +a
T 1568643646 18<jellobot18>	(fail) TypeError: Cannot convert a BigInt value to a number
T 1568643649 18<grr1231418>	n> a=1n; -a
T 1568643650 18<jellobot18>	(okay) -1n
T 1568643672 18<grr1231418>	weird that they made unary - work but not unary +
T 1568643674 18<Alexendoo18>	++ is still a unary operator, it's not difficult to see how you could misremember it as all unary operators are unsupported
T 1568643677 18<grr1231418>	it should just be a no-op :p
T 1568643693 18<Alexendoo18>	asm.js uses unary + to ensure values are Numbers
T 1568643700 18<prometh18>	this is just another reason to disallow unary operators in a codebase
T 1568643709 18<stennowork18>	wut
T 1568643879 18<prometh18>	https://eslint.org/docs/rules/no-plusplus
T 1568643898 18<stennowork18>	unary + is unrelated to unary ++
T 1568643946 18<NoiseEee18>	urinary
T 1568643956 18<prometh18>	okay, but += doesn't support bigInt
T 1568643962 18<prometh18>	yet -= does
T 1568643965 18<prometh18>	i'd just avoid them completely
T 1568643978 18<Alexendoo18>	+= supports bigint
T 1568643982 18<prometh18>	hmm
T 1568643984 18<stennowork18>	wat
T 1568643989 18<stennowork18>	it was just shown
T 1568643997 18<stennowork18>	n> let bla = 1n; ++bla;
T 1568643998 18<jellobot18>	(okay) 2n
T 1568644001 18<stennowork18>	gasp
T 1568644012 18<stennowork18>	n> let bla = 1n; bla += 1n; bla
T 1568644013 18<jellobot18>	(okay) 2n
T 1568644016 18<prometh18>	what does `+a` even do?
T 1568644026 18<stennowork18>	'cast to Number'
T 1568644031 18<prometh18>	oh, that's ugly
T 1568644032 18<stennowork18>	n> +'123'
T 1568644033 18<jellobot18>	(okay) 123
T 1568644055 18<prometh18>	i think i see why people hate js
T 1568644067 18<Alexendoo18>	prometh: You pasted += 5, which is adding a Number, you can't mix BigInts and Numbers implicitly. Would have to be += 5n (or convert explicitly if it's from a number)
T 1568644074 18<stennowork18>	because they don't understand it?
T 1568644082 18<prometh18>	stennowork: too much to memorize
T 1568644087 18<stennowork18>	roflmao
T 1568644089 18<grr1231418>	lol
T 1568644092 18<stennowork18>	yeah programming is like that
T 1568644108 18<prometh18>	Alexendoo: can this be done?:  `a=BigInt(0); a += 5` ?
T 1568644128 18<grr1231418>	if you tried you'd have known already
T 1568644135 18<prometh18>	tried where?
T 1568644139 18<grr1231418>	also he just told you, no
T 1568644142 18<prometh18>	v8 has bigint ?
T 1568644143 18<systemfault18>	Anywere?
T 1568644147 18<systemfault18>	TIAS?
T 1568644160 18<prometh18>	?
T 1568644167 18<systemfault18>	Try It And See?
T 1568644167 18<prometh18>	oh, try it and see
T 1568644178 18<systemfault18>	Takes half a second.
T 1568644187 18<grr1231418>	yes it has BigInt... what did you think the 1n etc literals above were?
T 1568644231 18<prometh18>	i dont' even know what 1n is :)
T 1568644236 18<stennowork18>	O__________O
T 1568644246 18<systemfault18>	The "n" suffix means that it's a BigInt
T 1568644247 18<grr1231418>	well hopefully now you do
T 1568644248 18<stennowork18>	i am outta here
T 1568644256 18<systemfault18>	n> 1n + 2n
T 1568644257 18<jellobot18>	(okay) 3n
T 1568644266 18<prometh18>	didn't we have "n" before bigint?
T 1568644271 18<systemfault18>	No...
T 1568644282 18<prometh18>	i thought i remember seeing it
T 1568644302 18<prometh18>	maybe it was "e" ?
T 1568644320 18<systemfault18>	That's exponential notation, it's unrelated.
T 1568644326 18<systemfault18>	n> 1e3
T 1568644327 18<jellobot18>	(okay) 1000
T 1568644330 18<prometh18>	ah
T 1568644354 18<prometh18>	why did we need bigint if we had e ?
T 1568644365 18<prometh18>	just max_safe_number and backwards compat ?
T 1568644367 18<systemfault18>	Because it's unrelated....
T 1568644401 18<systemfault18>	The largest integer you can represent on a 64 bit float (number in JS) is 2**53 - 1
T 1568644448 18<grr1231418>	well
T 1568644484 18<grr1231418>	you can represent larger ones :p  but not all of them, so thats the largest "safety guaranteed" number
T 1568644488 18<prometh18>	what if htey're running 32bit ?
T 1568644509 18<graingert18>	It's doubles everywhere forever prometh
T 1568644520 18<prometh18>	does max_safe_number have a dfiferent value?
T 1568644530 18<grr1231418>	64 bit floats are available on 32 bit cpus too
T 1568644539 18<graingert18>	Different to what prometh ?
T 1568644550 18<prometh18>	graingert: 32bit vs 64bit system
T 1568644554 18<yakiza_18>	I have a very complex json file and i am wondering is it worth  loopong though the json objects and subobjects to create  1 javascript object that i can access easily ?
T 1568644557 18<grr1231418>	and even if they aren't the js specs require it, so the engine would do it in software
T 1568644578 18<graingert18>	yakiza_: what
T 1568644578 18<prometh18>	neat
T 1568644588 18<graingert18>	!no loops @ yakiza_
T 1568644588 18<ecmabot18>	yakiza_: ECMAScript's Array contains a number of built-in methods for iteration (e.g., map, reduce, every, some, filter, and forEach). They relieve the need for manual iteration, provide better abstraction than a `for` loop, and make it clear what your iteration is doing. See https://gist.github.com/ljharb/58faf1cfcb4e6808f74aae4ef7944cff
T 1568644599 18<graingert18>	yakiza_: you mean like stream processing?
T 1568644629 18<yakiza_18>	graingert:  okay  let me check that out,  nooo thats why i am asking relatively new to the whole thing
T 1568644657 18<graingert18>	yakiza_: what's your overall goal?
T 1568644666 18<sillyslux18>	yakiza_, you can parse to js object natively
T 1568644685 18<yakiza_18>	i want to display the id of each object and  based on the object the user selects display certain properties etc
T 1568644717 18<graingert18>	yakiza_: like jq?
T 1568644717 18<sillyslux18>	you want `JSON.parse(jsonstr)`
T 1568644721 18<yakiza_18>	 but atm i have json object that has multiple sub objefcts and i thought by looping though the json object and generating a single javascript objkect with a lot of attributes would be easier
T 1568644732 18<grr1231418>	yes, it might make sense to index them by id
T 1568644741 18<graingert18>	yakiza_: are you looking to make a UI like jq?
T 1568644758 18<graingert18>	jq is a shell app for processing and filtering json
T 1568644759 18<sillyslux18>	!json object @yakiza_
T 1568644759 18<ecmabot18>	yakiza_: JSON object is an often misused buzzword that does not have a well-defined meaning. See https://github.com/robotlolita/screw-the-buzzwords/wiki/JSON for alternatives to express what you mean.
T 1568644764 18<yakiza_18>	i have a json tha contains books so each book object holds sub object with book attributes subobject with author details etc etc
T 1568644789 18<sillyslux18>	it's either json string or js object
T 1568644807 18<yakiza_18>	.json file
T 1568644818 18<stennowork18>	so a json string
T 1568644821 18<yakiza_18>	yes
T 1568644846 18<sillyslux18>	do you use JSON.parse()?
T 1568644852 18<yakiza_18>	yes
T 1568644861 18<sillyslux18>	so you get a js object
T 1568644862 18<yakiza_18>	json stringify
T 1568644865 18<niggler18>	i love the chromium bug tracker
T 1568644866 18<niggler18>	https://bugs.chromium.org/p/chromium/issues/detail?id=1004297&q=&colspec=ID%20Pri%20M%20Stars%20ReleaseBlock%20Component%20Status%20Owner%20Summary%20OS%20Modified
T 1568644880 18<yakiza_18>	json.stringify  to get the value in a string
T 1568644898 18<yakiza_18>	ill have a bit of a read and come back to you guys
T 1568644903 18<yakiza_18>	 with better questions
T 1568644920 18<yakiza_18>	 thank you for the help and the links ill read them rn get some more knowledge on this thing
T 1568644985 18<stennowork18>	quite some activity in that bug list
T 1568644994 18<stennowork18>	inb4 'butt list'
T 1568645236 18<niggler18>	anyone using chrome 76+
T 1568645267 18<stennowork18>	Version 77.0.3865.75
T 1568645268 18<niggler18>	https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/addHitRegion does the codepen work
T 1568645278 18<niggler18>	scroll down in the page, there's an open in codepen link
T 1568645285 18<niggler18>	getting an error Uncaught TypeError: ctx.addHitRegion is not a function
T 1568645302 18<niggler18>	wonder if chrome broke or removed the feature
T 1568645302 18<stennowork18>	same
T 1568645347 18<pandem18>	it says its behind a flag?
T 1568645353 18<stennowork18>	 This feature is behind the Experimental Web Platform Features preference. To change preferences in Chrome, visit chrome://flags.
T 1568645358 18<Alexendoo18>	The codepen relies on the order in which the JS is loaded
T 1568645370 18<Alexendoo18>	Perhaps codepen had it in the head before or something and now it's at the end of the body
T 1568645379 18<niggler18>	nvm its behind a flag, forgot what settings were enabled
T 1568645425 18<Alexendoo18>	Oh, nevermind no it doesn't
T 1568645439 18<Alexendoo18>	I assumed that JS was in a script but it's a textarea
T 1568645467 18<niggler18>	stupid experimental features
T 1568708580 20*	Disconnected (20)
T 1568708607 19*	Now talking on 22##javascript
T 1568708607 22*	Topic for 22##javascript is: JavaScript is *not* Java. | Just ask your question. | Say "!mdn abc" for docs on "abc". | Don't paste code in the channel. | Can't talk? Get registered on freenode ( https://git.io/vaTS2 )
T 1568708607 22*	Topic for 22##javascript set by 26niggler!~niggler@unaffiliated/niggler (24Tue Jan 15 07:16:23 2019)
T 1568708644 18<tsujp18>	Ah postProcess would be where I set the value from the result of my heavy `call()` right graingert ?
T 1568708696 18<graingert18>	const preprocess = (assetAddress, i) => {
T 1568708696 18<graingert18>	  // fill in the code here
T 1568708696 18<graingert18>	};
T 1568708696 18<graingert18>	const postprocess = (assetAddress, i, callresult) => {
T 1568708696 18<graingert18>	  // fill in the code here
T 1568708697 18<graingert18>	};
T 1568708697 18<graingert18>	(async () => {
T 1568708698 18<graingert18>	  console.log(
T 1568708698 18<graingert18>	    await Promise.all(
T 1568708699 18<graingert18>	      assetAddresses.map(async (v, i) =>
T 1568708699 18<graingert18>	        postprocess(v, i, await call(...preprocess(v, i)))
T 1568708700 18<graingert18>	      )
T 1568708732 18<mobidrop18>	let me guess: you want us to give you the "fill in the code here" ?
T 1568708733 18<ashnur18>	place oriented programming
T 1568708739 18<ljharb18>	please never paste multiple lines of code into irc
T 1568708752 18<graingert18>	yeah I pressed the wrong button
T 1568708754 18<mobidrop18>	you should do your own homework you'll learn more that way
T 1568708769 18<graingert18>	regular enter rather than shift enter
T 1568708805 18<graingert18>	tsujp: did you see my paste?
T 1568708836 18<tsujp18>	Uhh I don't
T 1568708841 18<tsujp18>	What I am trying to understand mobidrop
T 1568708845 18<tsujp18>	I did graingert
T 1568708868 18<graingert18>	you should just fill in the code in preprocess and postprocess
T 1568708868 18<graingert18>	preprocess should return an array
T 1568708964 18<tsujp18>	I'm not sure I see the use of preprocess here, call is just taking those inputs and doing the network call itself
T 1568708979 18<graingert18>	it wasn't clear from your example because call had no args
T 1568708994 18<graingert18>	just show me your code with those placeholders filled in and I'll refactor it
T 1568709045 18<tsujp18>	I'll work on that now
T 1568709238 18<graingert18>	tsujp: great stuff how's it going?
T 1568709253 18<tsujp18>	Tricky, I do need preprocess so I am working into this stuff now
T 1568709269 18<tsujp18>	I am slow with these things sometimes, I start stop think start stop think etc
T 1568709510 18<sinclair18>	um, im back to this issue again...i need to find a semi decent browser test runner that isn't karma to run both firefox and chrome browser environments
T 1568709517 18<sinclair18>	is karma the only thing out there?
T 1568709533 18<sinclair18>	that would be a shame
T 1568709691 18<graingert18>	tsujp: that's ok just keep posting what you got so far
T 1568709711 18<graingert18>	sinclair: karma is pretty good tbh
T 1568709734 18<sinclair18>	graingert, i don't know about that
T 1568709743 18<sinclair18>	i've found it tho be a PITA
T 1568709747 18<graingert18>	well now you know
T 1568709808 18<sinclair18>	graingert, its tempting to just use puppeteer (i assume that's what everyone just uses) and say 'multi browser headless testing is too messy and slow and crap to do properly, ignore'
T 1568710011 18<tsujp18>	so far graingert https://gist.github.com/tsujp/50bd5e0bfd770acd9762329a6f64115b
T 1568710059 18<sinclair18>	graingert, i think between karma and mocha, somethings not doing it for me mate
T 1568710128 18<graingert18>	tsujp: why did you remove assetAdresses
T 1568710138 18<graingert18>	And it looks like your comments suggest mutation
T 1568710150 18<graingert18>	Are you expecting to make one call per item?
T 1568710187 18<graingert18>	tsujp: you need to write the code without modifying anything I added
T 1568710197 18<graingert18>	Only change the bits with the comments
T 1568710321 18<tsujp18>	I'm not modifying addresses
T 1568710331 18<tsujp18>	check line 6 for how I need to call getGenericRates
T 1568710373 18<tsujp18>	graingert
T 1568710402 18<Nozzzle18>	test
T 1568710408 18<MJCDawy18>	t0ast
T 1568710408 18<thykka18>	test fail.
T 1568710415 18<thykka18>	try again? y/n
T 1568710418 18<MJCDawy18>	noozle
T 1568710539 18<sinclair18>	i have a really stupid idea, running UI logic inside a web worker
T 1568710549 18<robin___18>	Hello! Why is this returning Promise<Pending>? https://pastebin.com/raw/bZExfKuG thanks
T 1568710564 18<graingert18>	tsujp: rename it back to "call"
T 1568710591 18<graingert18>	robin___: you need to await it where it's used
T 1568710598 18<sinclair18>	graingert, can i borrow your brain for a bit?
T 1568710618 18<robin___18>	graingert: I do: const newContacts = await this.appendContactTags(contacts);
T 1568710628 18<graingert18>	robin___: also return { ...contact, tagIds}
T 1568710646 18<thykka18>	sinclair, i heard they give a discount for a byte..
T 1568710658 18<tsujp18>	I cannot graingert, so `call()` needs to run only one thing but it's receiving an array to I need to make `call()` loop the array and do the executions, then postProcess will have to accept an array now
T 1568710667 18<graingert18>	tsujp: no it's not
T 1568710669 18<sinclair18>	thykka, maybe i can borrow your brain then
T 1568710671 18<tsujp18>	I'll try get it working and then paste because I don't understand why I cannot do that right now
T 1568710672 18<tsujp18>	It is
T 1568710681 18<sinclair18>	thykka, what do you think about the idea of running UI logic in a web worker?
T 1568710684 18<graingert18>	tsujp: it shouldn't access the other addresses right?
T 1568710692 18<graingert18>	You're processing one address at a time
T 1568710708 18<thykka18>	sinclair, i don't know. why would you do so?
T 1568710718 18<sinclair18>	thykka, running untrusted script
T 1568710744 18<sinclair18>	thykka, what im pondering is this...
T 1568710747 18<graingert18>	sinclair: use a sandboxed iframe
T 1568710761 18<graingert18>	sinclair: realms are coming
T 1568710765 18<sinclair18>	1) dedicate an element on a page as a 'owned' element
T 1568710783 18<sinclair18>	2) start a web worker and message to and from the page
T 1568710791 18<graingert18>	Also Google has a thing for running untrusted js in ads that's open source
T 1568710808 18<sinclair18>	3) marshal DOM operations between worker and page, and isolate them to said element
T 1568710824 18<MJCDawy18>	"wrap it in a module"
T 1568710826 18<sinclair18>	graingert, well, i don't know how much of that i can borrow on
T 1568710829 18<MJCDawy18>	pretty high tech ik
T 1568710830 18<MJCDawy18>	:P
T 1568710842 18<sinclair18>	MJCDawy, the world needs less of those
T 1568710860 18<graingert18>	sinclair: sandboxed iframe is the way and the light right now
T 1568710876 18<sinclair18>	graingert, um, yeah, but i don't know if i can use it
T 1568710878 18<MJCDawy18>	whats a "sandboxed" iframe
T 1568710884 18<tsujp18>	graingert recheck the gist, https://gist.github.com/tsujp/50bd5e0bfd770acd9762329a6f64115b
T 1568710886 18<MJCDawy18>	versus a regular one lol
T 1568710899 18<sinclair18>	graingert, basically, i want to write a kernel in a web page >_>
T 1568710918 18<grr1231418>	the google thing is called caja i think
T 1568710934 18<MJCDawy18>	I mean
T 1568710947 18<tsujp18>	This is how the data is being used by virtua of how you transform a list A, B, C, D into symmetric pairs AB, AC, AD, BA, CA, DA, BC, BD, CD, CD, CD, DC
T 1568710948 18<MJCDawy18>	running a second js vm isn't exactly some huge invention, by whatever means
T 1568710948 18<sinclair18>	graingert, i want to effectively have a setup where workers request 'fd's via syscalls, with the syscalls going out over postMessage()
T 1568710955 18<MJCDawy18>	iframe or "caca"
T 1568710977 18<graingert18>	tsujp: ah in that case you need a prepreprocess(assetAdresses)
T 1568710987 18<sinclair18>	graingert, and of some note, the page itself will be running webrtc
T 1568710992 18<MJCDawy18>	what about preprepreprocess
T 1568711037 18<sinclair18>	graingert, opening a socket (lets assume a tcp socket) will have the web worker call out to the page to get webrtc to open a RTCDataChannel
T 1568711056 18<sinclair18>	and return a fd to the web worker (which can be seen as a process)
T 1568711072 18<sinclair18>	so i have much of this pretty much working, its just that, UI
T 1568711077 18<sinclair18>	what to do about UI
T 1568711112 18<sinclair18>	graingert, im contemplating opening 1 terminal (xterm) per web worker currently
T 1568711143 18<sinclair18>	so, that would faciliate stdio between the page (now assuming the role of some desktop) and the service worker
T 1568711187 18<sinclair18>	graingert, so i think i could manage a terminal, but im curious about general UI / DOM stuff
T 1568711268 18<sinclair18>	graingert, its very very very tempting to limit DOM interactions to a subset of the DOM, then writing a little subset UI framework for presenting things to the DOM, but it was be inferior to just using the DOM outright
T 1568711572 18<graingert18>	sinclair: just use iframes
T 1568712530 18<MJCDawy18>	ye
T 1568712539 18<mobidrop18>	roll to use iframes
T 1568712660 18<MJCDawy18>	hm
T 1568712672 18<MJCDawy18>	since when did incognito have access to saved accounts
T 1568712808 18<pandem18>	since always
T 1568712911 18<incognito18>	free highlight
T 1568712930 18<incognito18>	i don't have access, except mine
T 1568713048 18<MJCDawy18>	pandem, nah not even doe
T 1568713054 18<MJCDawy18>	like 6 months ago it didn't
T 1568713060 18<MJCDawy18>	I don't use it much
T 1568713065 18<MJCDawy18>	just to stalk my ex occasionally
T 1568713068 18<MJCDawy18>	>.>
T 1568713098 18<MJCDawy18>	it didn't use to have any access to the same securestore as regular instances
T 1568713118 18<MJCDawy18>	annoyingly for some reason it only provided a new instance of that store, globally
T 1568713124 18<MJCDawy18>	so you had your normal one then 1 other
T 1568713125 18<pandem18>	incognito doesnt save any data, however it does not mean that it would not have access to accounts saved on your browser
T 1568713141 18<MJCDawy18>	*shrug* it didn't as I say last stalk
T 1568713152 18<MJCDawy18>	account details been saved since forever
T 1568713167 18<MJCDawy18>	but always had to hand type in incognito
T 1568713949 18<tsujp18>	Is it possible to do a map such that each time I map to the next item I map the rest then move on again, e.g. if given the list [ foo, bar, alice, bob ] you start on foo at level 1, and at level 2 do bar, alice bob. Then level 1 moves ahead to bar and then you do alice and bob
T 1568714052 18<graingert18>	tsujp: a moving window
T 1568714138 18<graingert18>	tsujp: https://www.npmjs.com/package/each-cons
T 1568714157 18<graingert18>	https://ramdajs.com/docs/#aperture
T 1568714197 18<graingert18>	tsujp: ^
T 1568714237 18<tsujp18>	Tasty
T 1568714358 18<graingert18>	Wait do you mean   fn([1, 2, 3, 4]) // [[1, 2, 3, 4], [2, 3, 4], [3, 4], [4]]
T 1568714563 18<stennowork18>	const recursive_map = ([first, ...rest], cb) => rest.length ? recursive_map(rest.map(cb), cb) : rest.map(cb); recursive_map([1,1,1,1], x => x +10
T 1568714565 18<stennowork18>	oops
T 1568714572 18<stennowork18>	n> const recursive_map = ([first, ...rest], cb) => rest.length ? recursive_map(rest.map(cb), cb) : rest.map(cb); recursive_map([1,1,1,1], x => x + 1)
T 1568714573 18<jellobot18>	(okay) []
T 1568714576 18<stennowork18>	:x
T 1568714603 18<Duikb00t18>	Hi
T 1568714657 18<stennowork18>	n> const recursive_map = ([first, ...rest], cb) => rest.length ? recursive_map(rest.map(cb), cb) : rest; recursive_map([1,1,1,1], x => x + 1)
T 1568714658 18<jellobot18>	(okay) []
T 1568714660 18<stennowork18>	meh
T 1568714665 18<stennowork18>	idek what i am trying to do
T 1568714809 18<stennowork18>	n> const recursive_map = ([first, ...rest], cb) => [first, rest.length ? ...recursive_map(rest.map(cb), cb) : ...rest]; recursive_map([1,1,1,1], x => x + 1)
T 1568714810 18<jellobot18>	(fail) SyntaxError: Unexpected token ...
T 1568714814 18<stennowork18>	it just gets worse
T 1568714954 18<MJCDawy18>	its funny, you have like 50 items to put on your development timeline, it seems like too much work
T 1568714964 18<MJCDawy18>	but you plan it out on a calendar and it's like, cruisy as lol
T 1568715041 18<tsujp18>	I just did this instead lmfao stennowork https://gist.github.com/tsujp/1b655ea0cc5da7c3c34f986aff820218
T 1568715046 18<tsujp18>	graingert ^
T 1568715048 18<tsujp18>	works for me
T 1568715113 18<graingert18>	tsujp: never use push in map
T 1568715128 18<graingert18>	Use forEach if you're going to mutate
T 1568715131 18<tsujp18>	How come? How do I rewrite that better
T 1568715145 18<tsujp18>	But i need to get to the -1th index
T 1568715156 18<tsujp18>	I've spent like 1 hour trying to rewrite this I cannot do it
T 1568715158 18<tsujp18>	Nothing works but that
T 1568715336 18<sash8718>	hi , anyone worked here in javascript ?
T 1568715345 18<sash8718>	sorr react ?
T 1568715356 18<graingert18>	!ask @ sash87
T 1568715356 18<ecmabot18>	sash87: Don't ask to ask, nor if anyone is here or alive or uses something. Just ask your question. http://www.mikeash.com/getting_answers.html http://www.catb.org/esr/faqs/smart-questions.html https://jvns.ca/blog/good-questions/
T 1568715393 18<graingert18>	tsujp: can you add what you expect your test to produce in a comment
T 1568715399 18<graingert18>	  console.log(test) / [...
T 1568715419 18<graingert18>	also never use let when you can use const, tsujp
T 1568715422 18<graingert18>	use eslint airbnb
T 1568715425 18<graingert18>	!airbnb @ tsujp
T 1568715426 18<ecmabot18>	tsujp: We tend to support airbnb's javascript style guide - it can be found here: https://github.com/airbnb/javascript you can enforce it in eslint with `npx install-peerdeps --dev eslint-config-airbnb-base && echo '{"extends": "airbnb-base"}' > .eslintrc` see also !eslint
T 1568715429 18<sash8718>	On change of a select option I want to get some data from server and display in UI.. where to write the code in react ?
T 1568715456 18<tsujp18>	updated https://gist.github.com/tsujp/1b655ea0cc5da7c3c34f986aff820218
T 1568715459 18<graingert18>	sash87: depends
T 1568715481 18<graingert18>	tsujp: show your code after running it through airbnb
T 1568715487 18<graingert18>	!airbnb @ tsujp
T 1568715488 18<ecmabot18>	tsujp: We tend to support airbnb's javascript style guide - it can be found here: https://github.com/airbnb/javascript you can enforce it in eslint with `npx install-peerdeps --dev eslint-config-airbnb-base && echo '{"extends": "airbnb-base"}' > .eslintrc` see also !eslint
T 1568715546 18<sash8718>	graingert:  what does it mean by depends .. sorry I am new to react
T 1568715565 18<tsujp18>	ill have to do it when im home
T 1568715593 18<sash8718>	On change I want to make a http api request get the data and display on screen
T 1568715713 18<graingert18>	tsujp: are you looking for all permutations of size 2?
T 1568715721 18<tsujp18>	I am yes
T 1568715810 18<graingert18>	are you sure
T 1568715815 18<graingert18>	because it's not what you wrote
T 1568715857 18<tsujp18>	I seem to suck :(
T 1568715872 18<tsujp18>	might just shamelessly copy the map one from here: https://stackoverflow.com/questions/43241174/javascript-generating-all-combinations-of-elements-in-a-single-array-in-pairs/43241295
T 1568715948 18<graingert18>	do you want combinations or permutations?
T 1568715958 18<graingert18>	tsujp: ^
T 1568715971 18<graingert18>	sash87: it depends what the rest of your app is doing
T 1568715980 18<graingert18>	sash87: and are you using react-router?
T 1568715989 18<grr1231418>	you mean the flatmap one?
T 1568716010 18<tsujp18>	permutations graingert, BA is not the same as AB
T 1568716059 18<graingert18>	tsujp: https://github.com/trekhleb/javascript-algorithms/tree/master/src/algorithms/sets/permutations
T 1568716126 18<graingert18>	tsujp: is [A, A] allowed
T 1568716135 18<tsujp18>	it is not
T 1568716156 18<tsujp18>	and there should be no duplicates, so only [B, A] once
T 1568716160 18<graingert18>	wait are you trying to iterate over all possible routes between points on a graph
T 1568716165 18<tsujp18>	So all permutations minus those referencing themselves*
T 1568716169 18<graingert18>	in one direction
T 1568716179 18<tsujp18>	Yes but there are only two points, strictly 2
T 1568716192 18<tsujp18>	So the route will only be maximally 1 edge between two nodes*
T 1568716199 18<tsujp18>	i.e. [A, B, C] cannot occur
T 1568716226 18<tsujp18>	Given the list [A, B, C] the output should be [AB, AC, BA, BC, BC, CB]
T 1568716238 18<tsujp18>	excuse that duplicate BC there lmfao
T 1568716241 18<stennowork18>	bc twice?
T 1568716242 18<stennowork18>	ah
T 1568716259 18<stennowork18>	so you have elements! connections
T 1568716266 18<stennowork18>	oh man
T 1568716270 18<tsujp18>	No I have n(n-1)
T 1568716276 18<stennowork18>	now i ahve to check that recursive_map thing again
T 1568716285 18<stennowork18>	n(n-1)(n-2)...
T 1568716288 18<stennowork18>	so faculty
T 1568716292 18<stennowork18>	or whats its called
T 1568716293 18<stennowork18>	factorial
T 1568716297 18<tsujp18>	No strictly n(n-1)
T 1568716323 18<stennowork18>	oh because we only have 1 edge
T 1568716343 18<tsujp18>	[A, B, C] => [AB, AC, BA, CA, BC, CB] which is 3 n so 3(3-1) => 3 * 2 = 6
T 1568716348 18<tsujp18>	4 is 12
T 1568716351 18<tsujp18>	et
T 1568716352 18<tsujp18>	etc*
T 1568716394 18<stennowork18>	hmm
T 1568716416 18<stennowork18>	oh BA and AB are different once
T 1568716421 18<stennowork18>	ok, ok
T 1568716473 18<graingert18>	n> const fn = d => d.flatMap((l, i) => d.slice(i+1).map(r => [l, r])); fn([1, 2, 3, 4]);
T 1568716474 18<jellobot18>	(okay) [ [ 1, 2 ], [ 1, 3 ], [ 1, 4 ], [ 2, 3 ], [ 2, 4 ], [ 3, 4 ] ]
T 1568716598 18<graingert18>	tsujp: like that ^
T 1568716609 18<tsujp18>	I am so silly
T 1568716612 18<tsujp18>	Thank you mate :(
T 1568716622 18<stennowork18>	wait
T 1568716624 18<tsujp18>	I feel so dumb I couldn't figure this out, perhaps i should sleep more I dunno
T 1568716628 18<stennowork18>	but that _is_ faculty
T 1568716636 18<stennowork18>	and here [1,2] and [2,1] are the same?
T 1568716653 18<tsujp18>	Oh wait no he's missing 1, 2 and then 2, 1
T 1568716660 18<stennowork18>	yes
T 1568716664 18<graingert18>	he?
T 1568716669 18<tsujp18>	Whoops yeah with 4 elements [1, 2, 3, 4] it should have 12 outputs
T 1568716671 18<tsujp18>	s/he
T 1568716672 18<tsujp18>	they*
T 1568716682 18<niggler18>	fatmap eh
T 1568716685 18<graingert18>	you just said it shouldn't include those
T 1568716703 18<graingert18>	const fn = d => d.flatMap((l, i) => d.map(r => [l, r])); fn([1, 2, 3, 4]);
T 1568716709 18<graingert18>	n> const fn = d => d.flatMap((l, i) => d.map(r => [l, r])); fn([1, 2, 3, 4]);
T 1568716710 18<stennowork18>	<tsujp> and there should be no duplicates, so only [B, A] once
T 1568716711 18<jellobot18>	(okay) [ [ 1, 1 ], [ 1, 2 ], [ 1, 3 ], [ 1, 4 ], [ 2, 1 ], [ 2, 2 ], [ 2, 3 ], [ 2, 4 ], [ 3, 1 ], [ 3, 2 ], [ 3, 3 ], [ 3, 4 ], [ 4, 1 ], [ 4, 2 ], [ 4, 3 ], [ 4, 4 ] ]
T 1568716770 18<graingert18>	n> const fn = d => d.flatMap((l, i) => d.map((r, j) => i == j ? [] : [l, r])); fn([1, 2, 3, 4]);
T 1568716771 18<jellobot18>	(okay) [ [], [ 1, 2 ], [ 1, 3 ], [ 1, 4 ], [ 2, 1 ], [], [ 2, 3 ], [ 2, 4 ], [ 3, 1 ], [ 3, 2 ], [], [ 3, 4 ], [ 4, 1 ], [ 4, 2 ], [ 4, 3 ], [] ]
T 1568716787 18<graingert18>	uhh
T 1568716803 18<graingert18>	n> const fn = d => d.flatMap((l, i) => d.flatMap((r, j) => i == j ? [] : [[l, r]])); fn([1, 2, 3, 4]);
T 1568716804 18<jellobot18>	(okay) [ [ 1, 2 ], [ 1, 3 ], [ 1, 4 ], [ 2, 1 ], [ 2, 3 ], [ 2, 4 ], [ 3, 1 ], [ 3, 2 ], [ 3, 4 ], [ 4, 1 ], [ 4, 2 ], [ 4, 3 ] ]
T 1568716810 18<graingert18>	tsujp: ^
T 1568716825 18<stennowork18>	wait should there be duplicates now or not
T 1568716828 18<stennowork18>	because they said
T 1568716829 18<stennowork18>	<tsujp> and there should be no duplicates, so only [B, A] once
T 1568716836 18<graingert18>	up to you because there's all three options now
T 1568716844 18<stennowork18>	so [B, A] and [A,B] are not duplicates
T 1568716853 18<graingert18>	obviously ;)
T 1568716859 18<tsujp18>	Correct [B, A] and [A, B] are not duplicates
T 1568716862 18<tsujp18>	Wow that's it graingert...
T 1568716863 18<tsujp18>	NICE
T 1568716878 18<tsujp18>	What is this kind of thing called? A permutation right because the order _is_ important?
T 1568716878 18<graingert18>	[A, A] is a duplicate of what exactly?
T 1568716879 18<stennowork18>	using the kludge flatmap to avoid map.filter
T 1568716898 18<tsujp18>	[A, A] is an edge to itself which isn't valid either
T 1568716919 18<graingert18>	stennowork: it would be map.filter.map
T 1568716938 18<tsujp18>	"Call possible binary permutations with distinct elements" <--- how to refer to this?
T 1568716945 18<tsujp18>	All possible ...*
T 1568716986 18<graingert18>	permutations(['1','2','3'],2)
T 1568717032 18<stennowork18>	but then you have to argue if [2,1] has 'distinct elements' from [2,1]
T 1568717059 18<graingert18>	tsujp: https://www.calculatorsoup.com/calculators/discretemathematics/permutations.php
T 1568717078 18<graingert18>	stennowork: no you don't that's combinations
T 1568717288 18<xvx18>	how can I point to an unknown part of a JSON
T 1568717299 18<xvx18>	like this: `json.properties.*.items.properties` where * is unknown
T 1568717356 18<laravel718>	do you read glassdoor?
T 1568717411 18<stennowork18>	xvx, you can't
T 1568717415 18<Woet18>	laravel7: what is your Javascript question?
T 1568717475 18<xvx18>	I'm trying to count items in ...*.items.properties but * could be anything
T 1568717478 18<xvx18>	there's no way?
T 1568717747 18<deadbeat18>	xvx: guess you could try Object.values(json.properties), loop over that and check for items.properties in every entry?
T 1568717801 18<stennowork18>	assuming that * is just a depth of 1
T 1568717827 18<stennowork18>	xvx, also you are pointing to a javascript object, right? not 'a JSON'
T 1568717839 18<xvx18>	JSON
T 1568717852 18<xvx18>	* is just one depth yes
T 1568717862 18<stennowork18>	xvx, JSON is a string. you have to parse to javascript first
T 1568717870 18<niggler18>	anyone work with google apis with js?
T 1568717872 18<stennowork18>	const jsObject = JSON.parse(the_json)
T 1568717875 18<niggler18>	like drive or sheets api
T 1568717935 18<stennowork18>	maybe with google maps? idk
T 1568718173 18<incognito18>	xvx : JSONPath(JsonStringVar,"$.*.items.properties")
T 1568718223 18<incognito18>	xvx : i don't really know the structure of your json, if you could paste a sample; i could be more precise
T 1568718236 18<stennowork18>	what language is that?
T 1568718239 18<stennowork18>	its not javascript
T 1568718434 18<xvx18>	https://paste.ubuntu.com/p/PkkVfrHSF6/ incognito
T 1568718440 18<incognito18>	stennowork: yes, i am mixin; for this one, it needs the https://code.google.com/archive/p/jsonpath/
T 1568718782 18<incognito18>	xvx:  btw, you should use an array for the items
T 1568718818 18<xvx18>	don't think I can because of the libraryI'm inserting the json into
T 1568719232 18<laravel718>	who is calling reducer in redux?
T 1568719252 18<incognito18>	xvx: it seems you need to loop (w/o third party lib)
T 1568719271 18<xvx18>	looking into that atm
T 1568719297 18<xvx18>	maybe not optimal performance wise but meh
T 1568719471 18<niggler18>	()=>{}()
T 1568719473 18<niggler18>	n> ()=>{}()
T 1568719474 18<jellobot18>	(fail) SyntaxError: Unexpected token (
T 1568719480 18<niggler18>	n> (()=>{})()
T 1568719481 18<jellobot18>	(okay) undefined
T 1568719711 18<howdoi18>	!dogballs
T 1568719711 18<ecmabot18>	howdoi: (function () {}()) > (function () {})() … https://www.youtube.com/watch?v=taaEzHI9xyY#t=34m33s (from YUIConf 2011)
T 1568719753 18<grr1231418>	its wrong, howdoi
T 1568719753 18<grr1231418>	\
T 1568719772 18<howdoi18>	grr12314: what's wrong?
T 1568719787 18<grr1231418>	crockford in general, but also this particular statement
T 1568719793 18<howdoi18>	lol
T 1568719812 18<howdoi18>	off-topic: RMS!
T 1568719880 18<paulcarroty18>	RMS quit with good
T 1568719974 18<laravel718>	do you use mapDispatchToProps or just pass action creators to connect?
T 1568720010 18<niggler18>	how dare you grr12314 crockford is our lord and savior
T 1568720466 18<howdoi18>	paulcarroty: but that's so strange, he is an eccentric anyway
T 1568720621 18<paulcarroty18>	eccentric and covers pedophiles sometimes, yeah.
T 1568720836 18<laravel718>	there is no builtin javascript function to convert object to query params?
T 1568720932 18<graingert18>	laravel7: npm has qs
T 1568720953 18<thykka18>	n> Object.entries({foo: 1, bar: 'this is great'}).map(([key,val])=> `${key}=${val}`).join`&`
T 1568720954 18<jellobot18>	(okay) 'foo=1&bar=this is great'
T 1568720967 18<thykka18>	maybe put some encodeURIComponent in there x)
T 1568720994 18<stennowork18>	in the browser you have https://developer.mozilla.org/en-US/docs/Web/API/URL
T 1568721049 18<stennowork18>	and URLSearchParams
T 1568721725 18<celphi18>	This is so weird.. why does the message send like this? https://jsfiddle.net/tj68w2cn/3/
T 1568721738 18<celphi18>	But if I delete line 15 it doesnt send anything???
T 1568721774 18<celphi18>	if i keep line 15,. then i get `blah blah`
T 1568722004 18<laravel718>	what is this underscore _page, _response naming convention and do you use it also? http://prntscr.com/p78rjq
T 1568722100 18<niggler18>	private
T 1568722113 18<celphi18>	yeah niggler
T 1568722124 18<celphi18>	sorry about last night -- something came up
T 1568722129 18<niggler18>	or in that case, probably a way to avoid masking `response`
T 1568722166 18<niggler18>	nw celphi
T 1568722187 18<celphi18>	How come line 15 makes it work?
T 1568722224 18<niggler18>	so first, get rid of line 15
T 1568722229 18<niggler18>	and see if just writing two newlines works
T 1568722230 18<laravel718>	even the keys in the object literals like _page?
T 1568722268 18<niggler18>	celphi: so `      res.write('data: blah blah\n\n');  res.end()`
T 1568722288 18<niggler18>	laravel7: in general, _ prefix indicates something you intend to be private
T 1568722289 18<celphi18>	oh that does work
T 1568722296 18<celphi18>	why 2?
T 1568722306 18<celphi18>	or even one for that matter
T 1568722309 18<niggler18>	in the specific case, its probably trying to avoid shadowing an existing value
T 1568722318 18<niggler18>	celphi: probably somewhere in the depths of the spec
T 1568722342 18<niggler18>	24 hours ago i didnt even know EventSource was a thing
T 1568722356 18<laravel718>	ok
T 1568722363 18<celphi18>	oh haha. yeah im trying to learn them
T 1568722399 18<celphi18>	not much documentation on it
T 1568722415 18<celphi18>	at least i dont know where to look that is
T 1568722467 18<niggler18>	yeah im not a huge fan of looking into those types of features unless there's a cool use case
T 1568722498 18<laravel718>	but its not even a class, just random variables in global functions, it looks like author is using it as `_disposableVarOverHere`
T 1568722512 18<haiiokarin18>	hey, if someone wants to take a look at my problem - https://stackoverflow.com/questions/57973788/trying-to-export-chart-with-chartjs-and-react-but-getting-erorr here it's detailed and you can probably tell me here on channel what could be wrong :)
T 1568722560 18<haiiokarin18>	oh solved
T 1568722567 18<Intelo18>	Is this 29 liner code correct? needs improvements? Its working though/ it seems.. https://pastebin.ubuntu.com/p/YzKvVpPhvg/
T 1568722583 18<niggler18>	29 lines is 30 too many Intelo
T 1568722600 18<celphi18>	haiiokarin: try console.log(input)
T 1568722600 18<Intelo18>	:)
T 1568722603 18<sillyslux18>	Intelo, use more const
T 1568722614 18<sillyslux18>	use more eslint
T 1568722616 18<Intelo18>	sillyslux,  nice suggestion
T 1568722621 18<niggler18>	or just return
T 1568722643 18<celphi18>	haiiokarin: is that supposed to be a signle element?
T 1568722647 18<haiiokarin18>	celphi: html2canvas expect only one element while input gives me array of html elements
T 1568722648 18<haiiokarin18>	celphi: yeah
T 1568722651 18<niggler18>	line 21 can just be `return tempSurveyList` and line 25 can be return []
T 1568722651 18<Intelo18>	niggler, return?
T 1568722653 18<celphi18>	getElements ByClassname is array
T 1568722653 18<haiiokarin18>	didn't know that
T 1568722660 18<niggler18>	then you avoid the finally clause entirely
T 1568722673 18<niggler18>	also since its async
T 1568722681 18<Intelo18>	niggler,  ya, its just style
T 1568722685 18<niggler18>	you probably should throw from there and have your downstream stuff handle the error
T 1568722711 18<niggler18>	unless this is supposed tobe some sort of safe function
T 1568722712 18<Intelo18>	niggler,  if I get issues with database, I still want to return
T 1568722719 18<niggler18>	sure
T 1568722727 18<niggler18>	so yeah you can get rid of surveyListToReturn
T 1568722734 18<sillyslux18>	celphi, haiiokarin getElementsByClassname returns a HTMLCollection
T 1568722762 18<Intelo18>	niggler,  actually, exactly if I get error "unique key violation" then I want to return data fine but if any other database error, I want to return []. so how to do that?
T 1568722773 18<niggler18>	test the error
T 1568722774 18<celphi18>	right array like object sillyslux
T 1568722778 18<niggler18>	error.message
T 1568722786 18<sillyslux18>	yes, but live updated
T 1568722787 18<niggler18>	and keep in mind, you can throw from an error handler
T 1568722801 18<niggler18>	n> try { throw "wtf"; } catch(e) { throw "dafuq"; }
T 1568722802 18<jellobot18>	(fail) dafuq
T 1568722823 18<sillyslux18>	and doesn't provide all array methods
T 1568722827 18<Intelo18>	niggler, hm..should I just test and compare string of error? "duplicate key value violates unique constraint"
T 1568722836 18<sillyslux18>	a very limited subset in fact
T 1568722844 18<sillyslux18>	call it iterable
T 1568722847 18<niggler18>	test the message
T 1568722851 18<Intelo18>	postgres tells code: '23505',
T 1568722878 18<celphi18>	sillyslux: but you can just do Array.from(array_like_object)
T 1568722882 18<niggler18>	n> try { throw new Error("what the heck") } catch(e) { throw new Error(e.message.match(/heck/) ? "heck
T 1568722883 18<jellobot18>	(fail) SyntaxError: Invalid or unexpected token
T 1568722883 18<niggler18>	n> try { throw new Error("what the heck") } catch(e) { throw new Error(e.message.match(/heck/) ? "heck
T 1568722884 18<jellobot18>	(fail) SyntaxError: Invalid or unexpected token
T 1568722890 18<niggler18>	n> try { throw new Error("what the heck") } catch(e) { throw new Error(e.message.match(/heck/) ? "heck" : "not heck"); }
T 1568722891 18<jellobot18>	(fail) Error: heck
T 1568722895 18<niggler18>	yay for keyboard failure
T 1568722903 18<celphi18>	damn you type super fast
T 1568722904 18<sillyslux18>	celphi, that would return an array
T 1568722906 18<niggler18>	anyway Intelo like that, you can test
T 1568722920 18<niggler18>	celphi: i need to get a new computer
T 1568722929 18<niggler18>	using a 2018 macbook pro and the keyboard is awful
T 1568722935 18<celphi18>	you typed that like crazy fast
T 1568722935 18<Intelo18>	niggler,  wait, what to check? message string or anything else?
T 1568722938 18<niggler18>	even with unshaky
T 1568722945 18<niggler18>	test the actual message
T 1568722962 18<niggler18>	throw new Error("blah") -- the error object will have a .message field
T 1568722999 18<niggler18>	id also check if the wrapper exposes the code anywhere
T 1568723058 18<Intelo18>	niggler,  shouldnt I check code of error only?
T 1568723107 18<niggler18>	im saying look at the library
T 1568723115 18<niggler18>	and see if they pass that postgres error code back to you in any way
T 1568723301 18<niggler18>	this is in TS From a library:         case "e": const e = new Error(ErrorName[errcode]); (e as any).code = errcode; return e;
T 1568723336 18<niggler18>	^^ i'd check if the db library passes back that postgres error code in a machine usable way
T 1568723347 18<stennowork18>	(e as any), is that a normal ts pattern?
T 1568723359 18<niggler18>	Error doesn't normally have a `.code` field
T 1568723372 18<niggler18>	so you have to work around it, and yes that's the idiom stennowork
T 1568723381 18<stennowork18>	i see, strange
T 1568723390 18<pandem18>	i thought any is bad
T 1568723390 18<stennowork18>	ok i see how it gets problematic once you extend instances
T 1568723419 18<niggler18>	in general its bad, but the point is to isolate where you are working around the type system
T 1568723420 18<stennowork18>	how about class CustomError extends Error
T 1568723427 18<stennowork18>	and then with a code field
T 1568723453 18<niggler18>	sure that's what you're "supposed" to do
T 1568723466 18<stennowork18>	:P
T 1568723499 18<niggler18>	at that point you're creating line noise for no real discernible benefit
T 1568723624 18<stennowork18>	hmm
T 1568723637 18<stennowork18>	hard to tell really isn't it
T 1568723657 18<niggler18>	facing a bigger and more interesting type problem
T 1568723659 18<stennowork18>	when you make the type system optional
T 1568723669 18<stennowork18>	might be bikeshedding i guess
T 1568723713 18<niggler18>	escape hatches let you mark where you are working around the typesystem
T 1568726945 18<tsujp18>	Why am I getting this ESLint error? Error Parsing error: "parserOptions.project" has been set for @typescript-eslint/parser.
T 1568727264 18<OnkelTem18>	Hi all
T 1568727314 18<OnkelTem18>	I can deconstruct an object using this approach: const { var } = obj. But how to do the same w/o `const` keyword? E.g. let var; { var } = obj - this doesn't work
T 1568727375 18<OnkelTem18>	except var = object.var  of course
T 1568727396 18<OnkelTem18>	oops, var is another keyword, should be something different sorry
T 1568727412 18<OnkelTem18>	s/var/foo/
T 1568727581 18<sillyslux18>	obj={v:1}; let v; ({v}=obj); v
T 1568727584 18<sillyslux18>	n> obj={v:1}; let v; ({v}=obj); v
T 1568727585 18<jellobot18>	(okay) 1
T 1568727634 18<graingert18>	!no var @ OnkelTem
T 1568727635 18<ecmabot18>	OnkelTem: `var` defines a variable in the current function-level scope, and should not be used when `const` or `let` are available (see !babel, !const, and !let). Always use a keyword to declare variables, otherwise you will pollute the global scope (a keyword is required in strict mode).
T 1568727637 18<OnkelTem18>	sillyslux: thanks!
T 1568727649 18<graingert18>	OnkelTem: why bother mutating though
T 1568727655 18<OnkelTem18>	graingert: I don't use var
T 1568727662 18<sillyslux18>	it's reassignment, not mutation
T 1568727668 18<graingert18>	OnkelTem: post your code where you wat to reassign
T 1568727676 18<graingert18>	sillyslux: reassignment is a form of mutation
T 1568727681 18<niggler18>	hmm is element.getAttribute("colspan") the same as element.colSpan ?
T 1568727682 18<sillyslux18>	no?
T 1568727685 18<graingert18>	yes
T 1568727687 18<sillyslux18>	no
T 1568727691 18<graingert18>	yes
T 1568727692 18<sillyslux18>	no
T 1568727694 18<graingert18>	yes
T 1568727696 18<sillyslux18>	no
T 1568727698 18<graingert18>	yes
T 1568727699 18<sillyslux18>	no
T 1568727701 18<graingert18>	yes
T 1568727702 18<sillyslux18>	no
T 1568727702 18<OnkelTem18>	Wow wow
T 1568727703 18<niggler18>	stop niggling
T 1568727736 18<niggler18>	reassignment doesn't mutate the original object but does change the system state
T 1568727742 18<OnkelTem18>	graingert: something like: let cancel; while(true) { ... ({cancel} = yield ract(...)) ... }
T 1568727744 18<niggler18>	move on and answer my question
T 1568727782 18<OnkelTem18>	race*
T 1568727795 18<sillyslux18>	niggler, property and html attribute aren't the same
T 1568727803 18<graingert18>	OnkelTem: hmm that's a pain
T 1568727817 18<graingert18>	OnkelTem: I'd probably go for ixjs there
T 1568727844 18<sillyslux18>	e.g. changing a property won't be reflected in the dom, you'd need setAttribute for that
T 1568727860 18<OnkelTem18>	graingert: sorry, what is that? Sure, not the best code
T 1568727868 18<graingert18>	?
T 1568727883 18<OnkelTem18>	ixjsowixosidid
T 1568727899 18<OnkelTem18>	erm... I mean just ixjs yeah - what is that?
T 1568727910 18<sillyslux18>	i may be wrong though, very wrong :(
T 1568727948 18<sillyslux18>	i know rxjs and ix.io but not ixjs
T 1568727950 18<stennowork18>	only the DOM representation of the element has properties
T 1568728011 18<stennowork18>	<input type='bla'> -> el.getAttribute('type') is 'bla', and el.type is 'text'
T 1568728015 18<stennowork18>	niggler, ^
T 1568728055 18<sillyslux18>	el.id and attribute id seem to be synchronized
T 1568728059 18<stennowork18>	so DOM element properties always have a possible valid value
T 1568728062 18<sillyslux18>	but href attribute is not
T 1568728072 18<sillyslux18>	according to some so answer
T 1568728088 18<sillyslux18>	https://stackoverflow.com/a/10280487
T 1568728095 18<stennowork18>	and DOM element attributes reflect the actual attribues provided in the markup
T 1568728113 18<stennowork18>	ah yeah
T 1568728132 18<stennowork18>	as they say in the SO, the boolean attributes are also interesting
T 1568728140 18<stennowork18>	There is another case for the input's checked property. The DOM property returns true or false while the attribute returns the string "checked" or an empty string.
T 1568728171 18<graingert18>	OnkelTem: it's a thingy for functional processing of iterables and async iterables
T 1568730529 18<\monster\18>	Hey guys, is jsDoc @param  supposed to recognise import alias eg  import {Foo as Moo} from "./whatever";   then a method may have /** @param p {Moo} **/   IntelliJ ide doesn't seem to like it, not sure if its the ide or if thats not valid usage, seems logical to me
T 1568730546 18<Intelo18>	niggler,  lib pass the code that i pasted
T 1568730620 18<niggler18>	stennowork: someone was suggesting replacing elt.getAttribute("colspan") with elt.colSpan
T 1568730630 18<niggler18>	and wanted to know if those would give the same result
T 1568730659 18<stennowork18>	i'd guess only if the colspan value of the actual element is a valid value?
T 1568730672 18<stennowork18>	and one might be string and the other one might be number
T 1568730705 18<niggler18>	i guess it was not obvious that colspan -> colSpaj
T 1568730711 18<niggler18>	colspan -> colSpan
T 1568730764 18<sillyslux18>	html table elements have special properties
T 1568730834 18<stennowork18>	yep
T 1568730858 18<stennowork18>	td.colSpan is number, td.getAttribute('colspan') is string
T 1568730863 18<stennowork18>	as expected
T 1568730901 18<stennowork18>	similarly, if i have <td colspan='1001'>, then td.colSpan will be 1, and td.getAttribute('colspan') will be '1001'
T 1568730956 18<prometh18>	elt is weird... elm is better
T 1568730956 18<stennowork18>	so no, you cannot switch el.getAttribute('attrname') with el.attrName
T 1568730986 18<sillyslux18>	do you mean td.colSpan is limited to the actual number of actually existing columns?
T 1568731015 18<prometh18>	sillyslux: the property is interpolated while the attribute is not
T 1568731020 18<stennowork18>	sillyslux, td.colSpan will a) have the 'parsed' value (in this case number), and b) will fall back to a valid default default value (1)
T 1568731031 18<sillyslux18>	oic
T 1568731033 18<stennowork18>	because colspan might be at most 1000
T 1568731075 18<stennowork18>	again as i mentioned earlier, if you have <input type='lolno'>, you will get theInput.type => 'text', theInput.getAttribute('type') => 'lolno'
T 1568731101 18<niggler18>	so for actual code, which is preferable
T 1568731108 18<prometh18>	property, probably
T 1568731116 18<prometh18>	depends on the code
T 1568731139 18<sillyslux18>	always pick the one that's right for your purpose
T 1568731151 18<prometh18>	even with non-interpolated properties such as data-*, `dataset` is fewer characters
T 1568731152 18<sillyslux18>	i.e. i don't know :(
T 1568731181 18<stennowork18>	it shoudl usually be the one that is actually used in the markup, i'd say
T 1568731184 18<stennowork18>	er
T 1568731192 18<stennowork18>	used in the parsed markup, the valid values
T 1568731197 18<niggler18>	so https://github.com/SheetJS/js-xlsx/blob/master/bits/79_html.js#L146 is the relevant line
T 1568731214 18<niggler18>	one proposal was to change that to use elt.colSpan instead of elt.getAttribute("colspan")
T 1568731215 18<prometh18>	basically, use getAttribute if you are reproducing html or are mutating the dom; use properties if you need the data for some other purpose
T 1568731225 18<stennowork18>	niggler, .colSpan here
T 1568731229 18<stennowork18>	no need to cast to number, either
T 1568731237 18<niggler18>	same with rowspan ?
T 1568731240 18<stennowork18>	colSpan is already number and its a valid value (at worst the default value 1)
T 1568731243 18<stennowork18>	yeah
T 1568731253 18<stennowork18>	no need for casting
T 1568731292 18<stennowork18>	CS = +elt.getAttribute("colspan") || 1; // can be CS = elt.colSpan
T 1568731302 18<stennowork18>	same thing
T 1568731317 18<prometh18>	fucking unary
T 1568731375 18<prometh18>	why not just let terser/uglify do that? parseInt or Number is more explicit
T 1568731487 18<niggler18>	old habits die hard
T 1568731496 18<stennowork18>	whats wrong with +
T 1568731500 18<prometh18>	cryptic
T 1568731505 18<stennowork18>	i thought you just learned about + yesterday
T 1568731514 18<stennowork18>	amusingly enough _after_ complaining about it
T 1568731520 18<niggler18>	lol
T 1568731527 18<prometh18>	i think it was teh day before
T 1568731529 18<prometh18>	you are incorrect
T 1568731539 18<niggler18>	n> var x = 1; x + + + x; x
T 1568731540 18<jellobot18>	(okay) 1
T 1568731543 18<niggler18>	n> var x = 1; x + ++ x; x
T 1568731545 18<jellobot18>	(okay) 2
T 1568731547 18<niggler18>	hmm
T 1568731552 18<niggler18>	stupid whitespace
T 1568731559 18<niggler18>	n> var x = 1; x ++ + x; x
T 1568731560 18<jellobot18>	(okay) 2
T 1568731564 18<niggler18>	n> var x = 1; x +++ x; x
T 1568731565 18<jellobot18>	(okay) 2
T 1568731647 18<prometh18>	n> Number('1) // i wonder what this does!
T 1568731648 18<jellobot18>	(fail) SyntaxError: Invalid or unexpected token
T 1568731654 18<prometh18>	well now we know
T 1568732107 18<jaawerth18>	yeah with ASI that's the same as x++; +x;
T 1568732186 18<jaawerth18>	oh wait, no lol
T 1568732197 18<stennowork18>	no
T 1568732198 18<jaawerth18>	it's x + (++x)
T 1568732216 18<pandem18>	wouldn't you need line break for ASI
T 1568732224 18<jaawerth18>	yeah ignore me
T 1568732598 18<robin___18>	Hello! Why does this (https://pastebin.com/raw/R346AYL8) result in this: companies:  [ Promise { <pending> }, Promise { <pending> } ] thanks
T 1568732657 18<stennowork18>	because an async function wraps its return value into a promise
T 1568732671 18<stennowork18>	n> [(async() => 3)()]
T 1568732673 18<jellobot18>	(okay) [ Promise { 3 } ]
T 1568732679 18<stennowork18>	something liek that ^
T 1568732755 18<robin___18>	stennowork: hmm how can I not make it a Promise? :D
T 1568732794 18<jaawerth18>	an async function always returns a promise no matter what
T 1568732831 18<stennowork18>	jaawerth, yes, as i just said
T 1568732841 18<jaawerth18>	stennowork: I was answering the followup question
T 1568732844 18<robin___18>	I removed the async:
T 1568732846 18<grr1231418>	robin___ considering your code doesnt even have a return in the main function, i dont know what you're actually testing
T 1568732850 18<sillyslux18>	don't use async funtions if you want something else
T 1568732850 18<robin___18>	  static amountOfUsers(companyId) { return 1; }
T 1568732923 18<jaawerth18>	robin___: your mapper fn is still async unless you also removed that
T 1568732933 18<grr1231418>	also, use Promise.all to turn array of promises into promise for an array
T 1568732961 18<grr1231418>	i think some previous code of yours showed that you knew this already... i might be confusing you with someone else
T 1568733095 18<robin___18>	let me show all code. It is easier for everyone: https://pastebin.com/raw/A2qRHvbf
T 1568733099 18<robin___18>	:p
T 1568733108 18<robin___18>	all 'affected' code
T 1568733120 18<thefounder1218>	hi guys. Trying to follow this tutorial but on Windows. https://medium.com/@SunnyB/how-to-convert-es6-into-es5-using-babel-1b533d31a169
T 1568733132 18<thefounder1218>	It outputs the .js file to the "build" directory
T 1568733144 18<thefounder1218>	but the code in it is still es6...it hasn't transpiled it to es5 at all
T 1568733148 18<thefounder1218>	not sure why not
T 1568733166 18<robin___18>	*https://pastebin.com/raw/B8BeJVPy sorry
T 1568733169 18<thefounder1218>	can somebody help?
T 1568733214 18<thefounder1218>	my directory looks like this https://imgur.com/a/jeWDtfy
T 1568733250 18<thefounder1218>	oh I used "lib" rather than "build" as the directory for my transpiled code
T 1568733281 18<thefounder1218>	using the .nodejs command prompt for windows as well
T 1568733290 18<grr1231418>	robin___ again, use await Promise.all around your map
T 1568733293 18<jaawerth18>	thefounder12: can you gist your babelrc?
T 1568733308 18<robin___18>	grr12314 can you please show me how
T 1568733318 18<thefounder1218>	gist your babelrc?
T 1568733323 18<grr1231418>	await Promise.all(...map here...)
T 1568733336 18<thefounder1218>	I am thinking that file is what's causing the problems, jaawerth
T 1568733349 18<jaawerth18>	that's why I want to see it ;-)
T 1568733355 18<thefounder1218>	it was created using "touch" using bash on linux but here I didn't know what the equivalent was
T 1568733366 18<thefounder1218>	so just called it .txt? lol
T 1568733371 18<robin___18>	grr12314: https://pastebin.com/raw/3WeQVM0D like this? :D
T 1568733383 18<robin___18>	+ the await
T 1568733394 18<grr1231418>	+ more than 1 await
T 1568733399 18<grr1231418>	and async function
T 1568733402 18<grr1231418>	and all that jazz
T 1568733426 18<thefounder1218>	https://imgur.com/a/TNJ8ysS
T 1568733436 18<thefounder1218>	jaawerth, that's what I wrote inside of it
T 1568733459 18<yuradoc18>	Hello. I need to create simple app with js front. but i need it fully offline. how to make it without server
T 1568733469 18<robin___18>	grr12314: closer? :D https://pastebin.com/raw/PFi0Taam
T 1568733503 18<grr1231418>	yup
T 1568733505 18<yuradoc18>	i know there is nw, electron, but maybe there are some very easy solution
T 1568733509 18<grr1231418>	too hard to test before asking?
T 1568733516 18<robin___18>	thanks buddy :D
T 1568733525 18<sillyslux18>	yuradoc, there's also pwa
T 1568733541 18<ryandv18>	does jest have something like a `finally` hook? something like `afterEach` but that I can be assured runs after each test
T 1568733553 18<ryandv18>	https://github.com/facebook/jest/issues/1897 says that if a test times out, jest crashes & does not invoke the `afterEach` handler
T 1568733556 18<ryandv18>	which leads to resource leakage
T 1568733591 18<yuradoc18>	i need someth like that: i click app - it loads me some browser like window
T 1568733592 18<thefounder1218>	also, Jaawerth
T 1568733593 18<thefounder1218>	https://imgur.com/cABSNSH
T 1568733593 18<grr1231418>	what resource leakage if the process crashed?
T 1568733599 18<ryandv18>	grr12314: open transactions
T 1568733610 18<yuradoc18>	with my code
T 1568733614 18<thefounder1218>	This is me running it with babel also. Yet the file I open in the lib directory is still es 6 ...lol
T 1568733617 18<grr1231418>	ryandv doesnt make sense
T 1568733621 18<yuradoc18>	hml, css, js only
T 1568733622 18<ryandv18>	grr12314: why not
T 1568733638 18<yuradoc18>	without internet connection and backend server
T 1568733642 18<grr1231418>	a dead process loses its tcp connections, sql transactions related to those will be rolled back
T 1568733650 18<grr1231418>	or what kinda transactions are those?
T 1568733668 18<ryandv18>	grr12314: when I terminate the jest process I see in my postgres logs, "unexpected EOF on open connection"
T 1568733675 18<jaawerth18>	thefounder12: no .txt, it should just be .babelrc
T 1568733680 18<ryandv18>	so it's true that the transaction is closed, but that's too late
T 1568733688 18<ryandv18>	because now other tests are blocked by the open transaction
T 1568733698 18<jaawerth18>	babel won't check for .baberc.txt, only .babelrc and .babelrc.js (if you config it with js instead of json)
T 1568733714 18<darkseid18>	gajus are you still doing the talk today?
T 1568733721 18<samsch18>	yuradoc, You can open html files in the browser, and they can reference local css/js files. There are some browser feature limits if you do this though.
T 1568733758 18<samsch18>	yuradoc, A more full-featured approach is to start a local server process and auto-open the browser to the local port.
T 1568733770 18<thefounder1218>	ahhh
T 1568733786 18<thefounder1218>	jaawerth, that's the problem then! One moment
T 1568733873 18<thefounder1218>	Woop Woop https://imgur.com/a/tibIFHh
T 1568733878 18<thefounder1218>	worked! Thanks jaawerth
T 1568733910 18<jaawerth18>	np
T 1568733922 18<ryandv18>	so maybe resource leakage isn't the right term
T 1568733931 18<ryandv18>	but I would like open transactions to be closed in a `finally` hook in jest
T 1568733941 18<ryandv18>	`afterEach` doesn't give any guarantee that it will actually be run it seems
T 1568734066 18<grr1231418>	if it actually crashes
T 1568734076 18<grr1231418>	then there's nothing you can do
T 1568734088 18<ryandv18>	lol
T 1568734130 18<grr1231418>	tho i doubt it crashes from timeouts
T 1568734166 18<ryandv18>	https://github.com/facebook/jest/issues/1897
T 1568734169 18<ryandv18>	seems to be a long-standing issue
T 1568734173 18<ryandv18>	I'm kind of shocked
T 1568734230 18<prometh18>	"What additional accommodations do you need to feel comfortable during your interview process?" -- what are they asking me?
T 1568734266 18<stennowork18>	'a few beers and a bowl of kush'
T 1568734272 18<prometh18>	i was thinking beer too
T 1568734303 18<prometh18>	is "beer? okay, coffee" a bad response?
T 1568734306 18<prometh18>	i just dont' know anymore
T 1568734314 18<grr1231418>	weird that the issue and the mentioned related issue is closed
T 1568734315 18<poboy18>	beers
T 1568734329 18<jaawerth18>	that's most likely intended for folks with disabilities
T 1568734341 18<poboy18>	prometh: some places (hipster places, I guess) actually mention how they have free beer during the interview process
T 1568734349 18<prometh18>	wow
T 1568734354 18<prometh18>	that's cool
T 1568734357 18<prometh18>	maybe hipsters are cool?
T 1568734362 18<poboy18>	At least here in Kansas City
T 1568734367 18<poboy18>	we're all alcoholics
T 1568734374 18<prometh18>	hipsters usually aren't very nice, though
T 1568734376 18<stennowork18>	terrible
T 1568734386 18<stennowork18>	i would never drink alcohol in a fucking interview wtf
T 1568734388 18<prometh18>	stennowork: you're a hipster, right?
T 1568734396 18<stennowork18>	wut?
T 1568734405 18<poboy18>	stennowork: no.  They say things like "we have free coffee, snacks and even beer"
T 1568734411 18<stennowork18>	oh
T 1568734417 18<jaawerth18>	the job I recently quit had free catered meals + beverages in the cafeteria plus a free beer fridge
T 1568734418 18<stennowork18>	well we have beer here in the office too
T 1568734421 18<prometh18>	what's so bad about beer in an interview... if it's offered ?
T 1568734437 18<poboy18>	I worked in one place that basically encouraged you to have a few drinks but they didn't provide them
T 1568734448 18<jaawerth18>	some tech companies are big in accomodations to keep people in the office as much as possible
T 1568734464 18<prometh18>	get drunk and break computers
T 1568734469 18<jaawerth18>	like "you don't HAVE to be here all the time but we're certainly make it easy if you so happen to opt to work tons of hours..."
T 1568734489 18<prometh18>	my experience has been that _choosing_ overtime results in getting fired
T 1568734493 18<stennowork18>	if i'd had the urge to drink alcohol
T 1568734496 18<prometh18>	"thanks for the unpaid work, now fuck off"
T 1568734501 18<stennowork18>	i'd drink it before an interview
T 1568734521 18<prometh18>	i'll have a jack & coke
T 1568734535 18<jaawerth18>	but yeah that question is for accommodating people with disabilities so I would not ask for beer haha
T 1568734548 18<prometh18>	jaawerth: i like you better than stennowork
T 1568734562 18<stennowork18>	i have no problem with that
T 1568734565 18<stennowork18>	i don't like you either
T 1568734576 18<prometh18>	i think i've only been nice to you
T 1568734588 18<prometh18>	until maybe just now
T 1568734628 18<prometh18>	jaawerth: how about asking in a joking manner, though?
T 1568734695 18<switzernauts18>	How do I do single qoute escape character in javascript, is it '\ ?
T 1568734713 18<prometh18>	switzernauts: the same as double quote
T 1568734714 18<grr1231418>	almost
T 1568734723 18<prometh18>	'\''
T 1568734728 18<jaawerth18>	prometh: eh that seems like it would unnecessarily risk making the wrong impression but ymmv
T 1568734730 18<switzernauts18>	thank you!
T 1568734746 18<prometh18>	jaawerth: i know, but i'm already a loser
T 1568734796 18<prometh18>	maybe substitute beer for whiskey, then it's more obviously sarcastic ?
T 1568734831 18<jaawerth18>	lol I meant more that that joke could be received differently depending on the personal experiences of those you're interviewing, I doubt they'd think it wasn't a joke
T 1568734855 18<jaawerth18>	but hey, I have gone into interviews with a "fuck it, BEHOLD MY TRUE SELF FOR GOOD OR ILL" impression and had it work out really well so I'm not saying throwing away pretense is a bad idea when you're fed up with the process
T 1568734878 18<prometh18>	i've done "it all" and it's basically all failed
T 1568734885 18<prometh18>	i've had most success with a normalized version of myself
T 1568734911 18<prometh18>	but no recent success
T 1568734936 18<prometh18>	i'm probably that guy at the bar getting rejected each night, all night
T 1568735033 18<gehn18>	I would avoid alcohol in all work related matters, *especially* during an interview, even if offered
T 1568735052 18<gehn18>	but I also don't drink alcohol any other time and don't like alcohol
T 1568735055 18<prometh18>	gehn: are you a violent drunk? :)
T 1568735080 18<gehn18>	no, because I don't drink
T 1568735081 18<prometh18>	"care for a drink?" "sure" *smashes trinkets on desk*
T 1568735094 18<prometh18>	gehn: cocaine?
T 1568735105 18<gehn18>	I tend to avoid the whole "hey we're a cool startup, we have a foosball table and a kegerator in the office" types of places
T 1568735129 18<prometh18>	gehn: why? too cliquey?
T 1568735130 18<gehn18>	those kinds of places tend to be compensating for something
T 1568735140 18<gehn18>	usually it's a horrible work life balance they're trying to hide
T 1568735149 18<roomba18>	"we're a very progressive company. we don't mind if our employees have a beer while they code." <-- translation: "we'll do anything to keep you at your desk. we also need an excuse to fire you if we need to."
T 1568735156 18<prometh18>	gehn: imbalance in, like, they don't stop working?
T 1568735196 18<prometh18>	i vomited all over a restaurant door at my last company trip
T 1568735205 18<prometh18>	i asked if that's why i was laid off, they said "no"
T 1568735260 18<gehn18>	actually to be fair, I don't mind the taste of some craft beers, but generally I don't like the way alcohol makes me feel, it's not good for productivity, horrible for sleep regulation, huge correlation with increased cancer risk
T 1568735266 18<gehn18>	and yeah, drunk people suck
T 1568735285 18<roomba18>	company trips should not be a thing
T 1568735291 18<roomba18>	what i do outside of work is none of their business.
T 1568735293 18<gehn18>	vomiting on a restaurant door is a pretty good example of the bad things it brings out in many people
T 1568735323 18<niggler18>	roomba: its also a backdoor ageism
T 1568735337 18<prometh18>	niggler: i don't understand
T 1568735340 18<roomba18>	niggler: and/or healthism or whateve you want to call it
T 1568735340 18<evulish18>	after work on fridays, my company is like a drinking competition
T 1568735344 18<niggler18>	younger people tend to be more tolerant of drinking on the job
T 1568735350 18<guideX18>	gehn, drunk people are fine, amongst other drunk people though, they're kind of like pod people
T 1568735359 18<prometh18>	guideX: pod people?
T 1568735365 18<guideX18>	you really dont' want them around if you're not a pod person, but amongst other pod people they're just fine
T 1568735374 18<gehn18>	as a group, no, drunk people are not fine, they suck
T 1568735376 18<guideX18>	sorry, pop culture reference, (invasi0on of the body snatchers)
T 1568735387 18<prometh18>	gehn: it's fun
T 1568735393 18<gehn18>	a very small subset of regular alcohol users can keep it together and don't become belligerent assholes
T 1568735397 18<prometh18>	guideX: oh *scream*
T 1568735407 18<gehn18>	oh I'm sure the drunk people are having fun, but not me when I have to be around them
T 1568735416 18<prometh18>	gehn: it can be offsetting
T 1568735418 18<roomba18>	company sports outings - not everyone is a shining beacon of fitness. it's just another way to suck up peoples' personal time doing shit they don't want to do in order to judge them and monitor their "performance" in a manner that has nothing to do with actual productivity and everything to do with "culture fit" with the end goal of leverage in order to weed out anyone who will buck lower pay and longer
T 1568735418 18<guideX18>	gehn, sounds like you hang with the wrong drunk people, I go out on saturdays to the bar and usually get snochered, and sometimes go to karaoke on wednesdays, and I can confirm drunk people can be fun
T 1568735420 18<roomba18>	hours.
T 1568735458 18<prometh18>	gehn: i definitely change, but unless i'm balckout drunk, i intetionally avoid crossing into asshole territory
T 1568735463 18<gehn18>	guideX, sounds like you are exactly the kind of person I'm talking about: oblivious to the fact that you probably become intolerable to be around for people who are not alcoholics
T 1568735474 18<gajus18>	What is the name of that website where I can offer commercial support to my open-source projects?
T 1568735493 18<Vooloo18>	I have a loop for (const regions of item.orders) { } regions is an ID, how can I get that ID of itself? the actual key.
T 1568735501 18<prometh18>	roomba: yeah, but people want to be friends and if ther's only one "fatty"..... i dunno
T 1568735557 18<GreenJello18>	Vooloo, is item.orders an array?
T 1568735560 18<prometh18>	gehn: have you thought that perhaps you are intolerable?
T 1568735560 18<roomba18>	prometh: i don't want to be your friend. i want to work my 8 hours and get my f*cking paycheck.
T 1568735577 18<prometh18>	roomba: yeah, same, but i have no social skills now, having done that for 20 years
T 1568735593 18<roomba18>	so what? lol
T 1568735601 18<prometh18>	roomba: so, now i want friends
T 1568735601 18<Vooloo18>	GreenJello: object
T 1568735605 18<xvx18>	how to extent (multiple layers) a JSON?
T 1568735605 18<xvx18>	I tried these hoping it'd automatically extent with nx1.nx2.nx3, but it didn't work:
T 1568735607 18<xvx18>	https://privatebin.net/?1930d89af9ffadfa#4sz4LFHtvDVE6UTKieiZ87tpKtxpEXJ4mSy2ZzL8bwTU
T 1568735617 18<roomba18>	prometh: oh.. cool. we can be friends. you don't need to find friends at work. that's too dangerous.
T 1568735617 18<xvx18>	extend*
T 1568735621 18<gehn18>	prometh, you're avoiding the topic by trying to divert attention away from a very real problem: insufferable drunk people
T 1568735630 18<GreenJello18>	Vooloo, then it depends on what the object is
T 1568735641 18<prometh18>	gehn: we may be talkign about different people, but you sound a bit like a stiff
T 1568735652 18<Vooloo18>	GreenJello: what?
T 1568735653 18<gehn18>	there exist insufferable non-drunk people, but that's not what we're talking about
T 1568735678 18<prometh18>	gehn: i dunno, but that sounds fair
T 1568735680 18<gehn18>	yes of course you're going to rationalize your irresponsible alcohol usage by claiming other people are "stiffs"
T 1568735684 18<evulish18>	i basically separated my friend group into okay drunks and insufferable drunks
T 1568735698 18<prometh18>	gehn: i don' tknow if you are or not
T 1568735721 18<prometh18>	gehn: but i think there's a middle area where rational people can bend in order to enter
T 1568735734 18<xvx18>	no one know how to put more sublayers into JSON?
T 1568735746 18<evulish18>	sublayers?
T 1568735756 18<prometh18>	back to javascript
T 1568735759 18<xvx18>	j.x.y  => j.x.y.a.b.c
T 1568735761 18<gehn18>	I want subwoofers in my JSON
T 1568735771 18<prometh18>	subbass is stupid
T 1568735778 18<prometh18>	bass is sufficient
T 1568735782 18<evulish18>	{a:{b:{c:{d:true}}}}
T 1568735796 18<GreenJello18>	Vooloo, it depends on what item.orders is; I can't tell what the solution is from just that code
T 1568735839 18<sloth18>	CUCAMONGA
T 1568735874 18<evulish18>	my company used to have a liquor bar in the office
T 1568735891 18<evulish18>	it stopped being replenished when we moved the office to manhattan, though
T 1568735899 18<evulish18>	but i had a few evening rum and diet cokes
T 1568735920 18<stennowork18>	dont make yourself too comfortable at work
T 1568735935 18<roomba18>	yeah. look at this guy stenno
T 1568735948 18<prometh18>	he's freed willy again
T 1568735949 18<roomba18>	gets to relax all day on irc
T 1568735991 18<Vooloo18>	changing "of" to "in" worked then I got the property name
T 1568736002 18<jaawerth18>	lol yeah I'm 100% remote right now while I'm consulting and I'm finding it hard to put in the hours I intend to. I need to set up a home office or something
T 1568736008 18<evulish18>	i don't think you want to use for... in on an object
T 1568736028 18<jaawerth18>	more separation between "work area" and "living area"
T 1568736046 18<roomba18>	jaawerth: doesn't work
T 1568736047 18<prometh18>	jaawerth: i have a home office, but it's also where i play guitar and video games
T 1568736050 18<stennowork18>	evulish, for in is exactly for an object
T 1568736074 18<roomba18>	jaawerth: the separation is all in your head. not your surroundings.
T 1568736104 18<jaawerth18>	for some people the environment helps inform the mental state
T 1568736107 18<prometh18>	jaawerth: how do you get clients doing consulting?
T 1568736110 18<stennowork18>	its important
T 1568736136 18<roomba18>	jaawerth: if you put in 0 hours, you'll be fine?
T 1568736149 18<jaawerth18>	prometh: I'm the wrong guy to ask, I kinda fell into it with a former employer and haven't yet had to try drumming up clients out of the aether
T 1568736184 18<jaawerth18>	dunno yet if I'll keep doing it after this engagement or go back to working somewhere full time
T 1568736222 18<roomba18>	you'll go back to full time
T 1568736237 18<jaawerth18>	probably
T 1568736243 18<roomba18>	i know it lol
T 1568736245 18<roomba18>	because
T 1568736260 18<roomba18>	i've been remote only / contracts only for almost a decade
T 1568736274 18<prometh18>	roomba: how do you get contracts?
T 1568736304 18<roomba18>	it's like a snowball you have to keep pushing down a never-ending hill.
T 1568736314 18<roomba18>	but there's seasons... and sometimes the snowball starts melting as you're pushing it.
T 1568736318 18<NoiseEee18>	you have to push snowballs *down* hills?
T 1568736325 18<roomba18>	yeah
T 1568736328 18<prometh18>	i hate finding work
T 1568736339 18<prometh18>	jaawerth compard it to drumming
T 1568736341 18<prometh18>	i'm a guitarist, ffs
T 1568736344 18<roomba18>	if you don't keep up with the snowball, it will end up going down the hill faster than you... and you lose it.
T 1568736363 18<prometh18>	roomba: so you have to keep moving on?
T 1568736377 18<roomba18>	you _always_ have to be moving on
T 1568736380 18<charolastra18>	the clients are the snow ball?
T 1568736390 18<roomba18>	your clients... your income... are your snowball
T 1568736398 18<stennowork18>	ta duck
T 1568736402 18<jaawerth18>	yeah, I'm just not sure I'll want to deal with always figuring out where the next gig is coming from. on the other hand, the hourly rate is higher and I do like not having my time always monopolized
T 1568736414 18<jaawerth18>	so I might keep going with it I can get into a groove. we'll see
T 1568736423 18<prometh18>	i can't even get contract work
T 1568736425 18<roomba18>	if you want to try it
T 1568736427 18<roomba18>	you need to start looking now
T 1568736427 18<NoiseEee18>	jaawerth: how have you been with setting aside tax $$
T 1568736428 18<prometh18>	i just don't get some things
T 1568736442 18<roomba18>	don't wait until the contract with your ex-employer is up
T 1568736461 18<charolastra18>	the actual question is: how did you form the first snow ball?
T 1568736467 18<jaawerth18>	NoiseEee: didn't have to this time - they technically took me on as a temporary part time employee at an hourly rate so no 1099 necessary
T 1568736468 18<prometh18>	charolastra++
T 1568736477 18<roomba18>	i started running donw the hill lol
T 1568736487 18<roomba18>	i got one client after a million rejections and failures
T 1568736488 18<prometh18>	roomba: i think i'm rolling
T 1568736495 18<roomba18>	and i did the best i could
T 1568736495 18<NoiseEee18>	i think i'm the snow
T 1568736496 18<prometh18>	roomba: falling
T 1568736512 18<jaawerth18>	this gig isn't really representative - I have a good relationship with the company since I used to work for them full time so we made a nice deal
T 1568736523 18<roomba18>	that client recommended me to another client, and it got people talking
T 1568736537 18<roomba18>	eventually, i had 2 or 3 people who really liked my work, and it just continued from there
T 1568736544 18<roomba18>	have had terrible clients too
T 1568736547 18<roomba18>	and people that absolutely hate me
T 1568736550 18<prometh18>	roomba: that was me 15 years ago... Flash days... i can't seem to reproduce that with javasript
T 1568736574 18<roomba18>	prometh: then take the easy route. undercut the shit out of people
T 1568736578 18<roomba18>	take the hit
T 1568736582 18<charolastra18>	yeah, we're talking about JS, right? could you give some examples on what gigs ppl want?
T 1568736585 18<roomba18>	to yourself and everyone overall
T 1568736591 18<prometh18>	roomba: everyone? how?
T 1568736597 18<roomba18>	by undercutting them
T 1568736614 18<prometh18>	roomba: how do you undercut them if you're already undercut yourself (low pay) ?
T 1568736622 18<jaawerth18>	and technically I'm a systems engineer for them. some js work i node/react, but mostly I'm fixing broken deployments and helping their currently-thin-on-the-ground tech people solve problems
T 1568736640 18<prometh18>	jaawerth: thin on the ground?
T 1568736646 18<roomba18>	if you have the technical ability but can't find clients, undercut to get yourself in the door, then blow the client away, use that to get your next client, and start building the snowball.
T 1568736652 18<jaawerth18>	yeah after I left their tech staff got kinda... light
T 1568736655 18<roomba18>	it doesn't take long before you can start changing what you'r eworth
T 1568736663 18<prometh18>	jaawerth: ah
T 1568736668 18<jaawerth18>	like other people left after me and they were not good about backfilling and now they're in kind of a fix
T 1568736675 18<charolastra18>	i wouldn't even know where to begin. can't just ask random people on the streets
T 1568736684 18<roomba18>	charolastra: you can. lo
T 1568736693 18<roomba18>	the streets are the open market
T 1568736709 18<jaawerth18>	right when I left my last job at another company, they dismissed their sysadmin. they're trying to take the time to hire a *good* one so this started because they needed a safety net, but once we got down to it there's a pretty large list of things to do
T 1568736711 18<roomba18>	"hi. i'm charolastra. this is what i do. i'm selling this."
T 1568736713 18<charolastra18>	they would look strangly at me and maby even call the cops. this is a damn backwards country
T 1568736729 18<roomba18>	i don't mean literally go out on the street rofl
T 1568736730 18<jaawerth18>	lots of inra to automate, projects to make more maintainable, etc. and since I already know their environment for the most part...
T 1568736747 18<jaawerth18>	infra*
T 1568736757 18<roomba18>	jaawerth: lol no
T 1568736773 18<jaawerth18>	lol no what?
T 1568736780 18<roomba18>	jaawerth: they lied to you
T 1568736798 18<jaawerth18>	Oh. We'll see. I suspect they'll end up coming to me with lots of OMG DROP EVERYTHING FOR THIS
T 1568736805 18<prometh18>	roomba: so, like, facebook ads?
T 1568736822 18<roomba18>	jaawerth: why would they "take their time to hire a *good* sysadmin" when you're already doing it... probably for less than the sysadmin they fired was doing it for.
T 1568736823 18<jaawerth18>	but there's nothing to stop me putting my foot down if need be
T 1568736832 18<jaawerth18>	roomba: oh no I'm way more expensive
T 1568736841 18<roomba18>	probably not.
T 1568736852 18<jaawerth18>	I know how much they're trying to hire the new one for
T 1568736887 18<roomba18>	it's not just salary though
T 1568736893 18<roomba18>	you're remote... so you're probably 1099?
T 1568736896 18<jaawerth18>	nope
T 1568736914 18<roomba18>	did they give you benefits or anything?
T 1568736915 18<jaawerth18>	I was gonna charge $150/hr if I were a 1099
T 1568736942 18<roomba18>	prometh: rofl hell no.
T 1568736952 18<jaawerth18>	in exchange for not having to deal with the taxes I lowered that some. I'm technically a part time employee
T 1568736956 18<jaawerth18>	temporary*
T 1568736975 18<roomba18>	it costs a lot to hire someone new
T 1568736985 18<darkseid18>	alright, this is kind of a weird one but... i'm working on a MS Word (online) plugin. I think it's changing the cursor positions at certain intervals but I'm not sure how to check. Is there an easy way to grab the current position of the cursor?
T 1568737003 18<roomba18>	so even if they pay you a higher salary than the old sysadmin, it doesn't make sense to them unless there's an overall savings.
T 1568737003 18<jaawerth18>	my initial plan was to go a couple months jobless to live my life a bit and decompress so instead I signed on to work ~20-30 hours a week, flexible
T 1568737023 18<jaawerth18>	well they know I'm not gonna stay on past 2-3 months at most
T 1568737029 18<jaawerth18>	I made that pretty clear
T 1568737037 18<roomba18>	sure no problem
T 1568737048 18<roomba18>	in 2-3 months they can just increase your pay lol
T 1568737107 18<prometh18>	jaawerth: you must have a downtown mansion at that pay
T 1568737109 18<roomba18>	you might be able to squeeze more months out of them this way... but eventually they'll hit whatever number that incentivizes them to go out and get the sysadmin they said they're looking for.
T 1568737132 18<jaawerth18>	maybe! but eventually I'm gonna get bored
T 1568737153 18<roomba18>	the'll send you a succubus then!
T 1568737154 18<prometh18>	i have a townhouse 15min drive from downtown
T 1568737157 18<prometh18>	:(
T 1568737214 18<prometh18>	well anyway, that sounds awesome, jaawerth... i'm not that smart
T 1568737221 18<roomba18>	ofc you are
T 1568737223 18<jaawerth18>	the timing was just right
T 1568737230 18<prometh18>	roomba: no, really, i'm not... math makes my head cloudy
T 1568737245 18<jaawerth18>	right when I quit my other job and was planning on taking a couple months off before I found a new one they found themselves in need of help
T 1568737249 18<roomba18>	you don't need math to make a ton of money. just luck and a few good decisions in a row.
T 1568737264 18<prometh18>	roomba: well, i can't get as good as some of the people in here
T 1568737280 18<prometh18>	i think i've peaked
T 1568737284 18<roomba18>	lol nope
T 1568737311 18<jaawerth18>	you'll get there. I won't say I don't know my shit but I've also had a recent run of blind luck with things
T 1568737323 18<roomba18>	yeah look at jaawerth
T 1568737342 18<prometh18>	my head can't connect many dots at one time... i lose track of things and i require more time
T 1568737349 18<roomba18>	not even a sysadmin, it sounds like. but it didn't matter. "they found themselves in need of help" and jaawerth saw that as an opportunity.
T 1568737360 18<prometh18>	i am depressed, but i'm speaking realisitcally right now
T 1568737374 18<roomba18>	that's what it really boils down to
T 1568737384 18<prometh18>	sure, i've been there before
T 1568737389 18<prometh18>	"in need"
T 1568737395 18<prometh18>	or, "in demand"
T 1568737402 18<jaawerth18>	yeah I mean I do have large swaths of the sysadmin skillset but I've never wanted that as a job. but I can switch-hit as one when necessary
T 1568737421 18<roomba18>	if you want to find clients/contracts/any sort of economic relationship (a job), you have to train yourself to recognize Other Peoples' Problems(tm)
T 1568737436 18<prometh18>	roomba: yeah, that's actually exactly what i'm trying to learn righ tnow
T 1568737447 18<stennowork18>	sysadmin is what you usually learn along the way as a dev
T 1568737450 18<prometh18>	roomba: any books on the subject?
T 1568737453 18<stennowork18>	software dev
T 1568737458 18<roomba18>	prometh: lol no idea. i learned by doing.
T 1568737477 18<prometh18>	roomba: i've peaked, so i don't learn by doing anymore :(
T 1568737490 18<jaawerth18>	yeah a big part of it is selling yourself and knowing how to turn client need into technical specs. and that isn't always easy especially if you're not feeling it
T 1568737512 18<jaawerth18>	I will admit I've benefited as much from my ability to talk a good game as I have from tech skills
T 1568737531 18<jaawerth18>	also: luck
T 1568737535 18<prometh18>	jaawerth: i lost my social skills... i'm like an unworthy thor
T 1568737550 18<stennowork18>	thats apparent
T 1568737567 18<prometh18>	stennowork: thanks.. you're always there to put me down while i'm at my lowest point ever
T 1568737567 18<ljharb18>	in a tech job, social skills are more important than tech skills anyways.
T 1568737575 18<jaawerth18>	unworthy thor got better :P
T 1568737578 18<stennowork18>	thats what you get for self-deprecation
T 1568737585 18<ljharb18>	anyone can write code; being a good coworker is rarer.
T 1568737588 18<prometh18>	stennowork: i wasn't joking ,though
T 1568737599 18<stennowork18>	yes
T 1568737619 18<prometh18>	stennowork: you don't have empathy
T 1568737631 18<stennowork18>	i do have empathy
T 1568737639 18<jaawerth18>	op hat on: y'all don't have to like each other but let's try to keep it out of the channel please
T 1568737641 18<prometh18>	believe what you want, then
T 1568737699 18<stennowork18>	the statements that you have made in the past forfeited my empathy dispenser towards you
T 1568737716 18<prometh18>	that's what she said
T 1568737718 18<gehn18>	empathy is bad
T 1568737761 18<gehn18>	empathy warps the minds of humans into making decisions that, if rationally analyzed, would be made/decided much differently and would result in much greater and better outcomes
T 1568737787 18<gehn18>	perfect example: show a person a picture of thousands of starving children in africa, and they on average give zero dollars as charity donations
T 1568737793 18<prometh18>	gehn: empathy is emotional intelligence
T 1568737799 18<gehn18>	no it is not
T 1568737806 18<gehn18>	show them a picture of a *single* starving child, and they on average give much more money much more readily
T 1568737809 18<stennowork18>	altruism is an elusion created by egoism
T 1568737813 18<niggler18>	in all jobs, social skills are paramount
T 1568737816 18<stennowork18>	illusion*
T 1568737829 18<gehn18>	it's clearly and blatantly obvious that helping a thousand starving children is of much more practical use and benefit
T 1568737841 18<prometh18>	gehn: you're using science to prove that humans are assholes, and that's true
T 1568737851 18<gehn18>	but empathy does not cause humans to act rationally in the interest of the better and greater outcomes
T 1568737858 18<gehn18>	prometh, I'm not and you're entirely missing the point
T 1568737869 18<jaawerth18>	gehn: it sounds like you're talking about sympathy, not empathy
T 1568737875 18<gehn18>	jaawerth, nope, I'm not
T 1568737880 18<jaawerth18>	empathy is closer to theory of mind
T 1568737907 18<gehn18>	read Paul Bloom
T 1568737912 18<gehn18>	it's in the title of his book
T 1568737919 18<Vooloo18>	I have an array with 18000 numbers, is there a quick way to check for duplicates?
T 1568737936 18<stennowork18>	what exactly do you mean with 'check for duplicates'
T 1568737938 18<prometh18>	gehn: okay, we're all robots.. let's do math and sacrifice all happiness
T 1568737949 18<stennowork18>	do you want yes/no if the array has a duplicate?
T 1568737956 18<stennowork18>	do you want to filter out all duplicates?
T 1568737958 18<gehn18>	prometh, you're so off base with that
T 1568737958 18<jaawerth18>	anyway, this is rather off topic and also let's stop attacking each other lest I have to start kicking people kthx
T 1568737960 18<prometh18>	gehn: oh, and, of course, worship self, selfishly
T 1568737966 18<gehn18>	prometh, hey, you do you
T 1568738008 18<prometh18>	Vooloo: Set
T 1568738041 18<prometh18>	Vooloo: that will remove dupes... checking for dupes, you might be best sorting first, then iterating
T 1568738141 18<prometh18>	stennowork: alright.... sorry for being a bad person previously.. i don't remember what it was, but i want to be on good terms wiht you
T 1568738183 18<jaawerth18>	Vooloo: echoing stennowork's question, do you want to 1) know if there are duplicates, 2) get an array without duplicates, or 3) get a list of items that appear in duplicate?
T 1568738215 18<jaawerth18>	(which you can also use to achieve #1, of course)
T 1568738303 18<Vooloo18>	a list of all dups would be nice
T 1568738314 18<sourcream18>	How to prevent ddos with cloudflare? Looks like lot of junk http traffic came through to the origin
T 1568738327 18<sourcream18>	https*
T 1568738330 18<roomba18>	prometh: lol i am about to lose a contract i've had for like a year
T 1568738334 18<roomba18>	prometh: well a little over a year
T 1568738370 18<jaawerth18>	Vooloo: ok, so I would create a Set of values you've already seen. then use it with .filter, where for each item you return false for seen.has(value), otherwise seen.add(value) and return true (or just return seen.add(value) since that will return the Set, whih is truthy)
T 1568738386 18<prometh18>	roomba: that doesn't sound so bad, given the snowball (?)
T 1568738401 18<roomba18>	prometh: the person at the company who oversees me (and others) is about to get shitcanned. taking down all the folks he contracts work out to.
T 1568738417 18<roomba18>	well... it's bad. but there will still be a snowball... rofl
T 1568738455 18<roomba18>	also, who knows what could happen
T 1568738458 18<prometh18>	does he deserve teh shitcanning?
T 1568738481 18<prometh18>	if so, that sounds like an enjoyable experience
T 1568738498 18<roomba18>	i have no idea what circumstances led up to it. he just said that they're bringing in outside people to evaluate performance and stuff... i.e. they're going to fire his whole dept.
T 1568738520 18<prometh18>	that's your heads up to jump ship
T 1568738536 18<roomba18>	nah. i'll just hang around and see what happens.
T 1568738542 18<prometh18>	why?
T 1568738548 18<jaawerth18>	n> const dupes = (values) => { const seen = new Set(); return values.filter(v => seen.has(v) ? false : seen.add(v)); }; dupes([1, 2, 3, 4, 3, 1]) @Vooloo
T 1568738549 18<jellobot18>	Vooloo, [ 1, 2, 3, 4 ]
T 1568738561 18<roomba18>	because i'm the only person who does a certain thing for that company
T 1568738563 18<jaawerth18>	whoops
T 1568738568 18<jaawerth18>	Vooloo: screwed that up lol
T 1568738577 18<ljharb18>	jaawerth: WeakSet
T 1568738584 18<jaawerth18>	nah
T 1568738595 18<roomba18>	and if they shitcan the person who pays me, they lose that certain thing. and it might be cheaper for them to just continue to work with me directly instead of try to find someone new to do it.
T 1568738598 18<prometh18>	jaawerth: might wanna benchmark that against sorting+reducing
T 1568738612 18<jaawerth18>	Vooloo: rather if seen.has(value) you return true, otherwise seen.add(value) and return false
T 1568738632 18<prometh18>	roomba: i've been that person many times, and i still get shitcanned
T 1568738640 18<roomba18>	prometh: or they could just be like "screw it. we don't care of our infrastructure goes to shit. we'll eventually find someone to fix it. we don't need any of these people"
T 1568738664 18<ljharb18>	jaawerth: oh i guess because it's not objects
T 1568738670 18<prometh18>	roomba: my only advice from my shitty life is that you're always expendable
T 1568738673 18<roomba18>	i'm not gonna just close the door because i think the hitmen are on the way
T 1568738715 18<jaawerth18>	n> const dupes = (values) => { const seen = new Set(); return values.filter(v => { if (seen.has(v)) return true; seen.add(v); return false; }); }; dupes([1, 2, 3, 4, 1, 3]); @Vooloo
T 1568738717 18<jellobot18>	Vooloo, [ 1, 3 ]
T 1568738744 18<Vooloo18>	when using set.add it will not add if it already exists?
T 1568738755 18<prometh18>	Vooloo: Set is always unique values
T 1568738755 18<ljharb18>	Vooloo: how would it
T 1568738777 18<Vooloo18>	I donno, JS does a lot of unexplainable things
T 1568738785 18<stennowork18>	that is the case for primitives, but for objects, make sure you hold the object reference
T 1568738787 18<prometh18>	Vooloo: not really
T 1568738795 18<roomba18>	prometh: lol my advice. i think you're the doomer.
T 1568738804 18<prometh18>	roomba: what is that?
T 1568738839 18<roomba18>	prometh: it's a meme that represents a blackpilled person
T 1568738844 18<prometh18>	roomba: what is that?
T 1568738845 18<prometh18>	heh
T 1568738866 18<prometh18>	i'm the "we're all doomed" guy ?
T 1568738878 18<ljharb18>	Vooloo: name one?
T 1568738881 18<roomba18>	prometh: there's the red pill and the blue pill - which are both made by the same pharma company. then there's the blackpill which is like this nihilistic world view where it doesn't matter what one does, everything will suck forever and ever.
T 1568738887 18<roomba18>	prometh: nothing could be further from the truth, though.
T 1568738894 18<z1haze18>	looking for some sort of facebook api that would allow me to pull in marketplace items to display on an external site. anyone toyed with this before?
T 1568738904 18<prometh18>	roomba: oh... well, realy i'm the yellow pill
T 1568738911 18<prometh18>	roomba: but my life does suck
T 1568738953 18<roomba18>	become a bloomer
T 1568738959 18<prometh18>	 my flower already died
T 1568739004 18<roomba18>	that's because you're currently a doomer and incapable of seeing that before your flower died, a bunch of wasps and bees grabbed a bunch of pollin and seeds and stuff
T 1568739011 18<jaawerth18>	prometh: I'm pretty confident that using a Set with filter will beat sorting + checking unless you need to optimize for space complexity over time complexity
T 1568739029 18<roomba18>	and a terrible wind storm ripped the flower out of the ground and sent it flying thruogh the air, and a bunch of seeds fell everywhere
T 1568739051 18<prometh18>	roomba: so i've planted seeds of evil everywhere?
T 1568739056 18<roomba18>	yes
T 1568739076 18<prometh18>	and now i am life
T 1568739084 18<prometh18>	one with the universe
T 1568739086 18<roomba18>	and they will bloom into beautiful poisonous flowers that will murder your enemies
T 1568739112 18<prometh18>	i resonate at all frequencies
T 1568739113 18<roomba18>	you're just too damn negative is all
T 1568739127 18<prometh18>	i'm also very positive, though
T 1568739135 18<roomba18>	me too. i can also be very negative.
T 1568739168 18<roomba18>	so maybe you're just putting the batteries in backwards?
T 1568739172 18<Vooloo18>	ljharb: fun stuff like if (var === undefined || var === null || var === '') for example
T 1568739183 18<prometh18>	roomba: i'm off, i know that
T 1568739192 18<roomba18>	i'm not on any social media except irc
T 1568739196 18<ljharb18>	Vooloo: and how is that unexplainable?
T 1568739206 18<jaawerth18>	Vooloo: those are all known behaviors though. the known behavior of a Set is to only contain one version of each value as defined by ===
T 1568739222 18<roomba18>	prometh: i think google and facebook are terrorist organizations
T 1568739225 18<ljharb18>	not by ===, but by SameValueZero
T 1568739231 18<ljharb18>	roomba: rofl
T 1568739236 18<jaawerth18>	Vooloo: but the example I just gave only bothers to add it once anyway
T 1568739241 18<ljharb18>	roomba: you may not understand the meaning of the word "terror"
T 1568739244 18<roomba18>	prometh: i also think that the majority of society is unsavable at this point. they are part of a hive mind.
T 1568739265 18<prometh18>	roomba: yep, but i don't care about them because each person must save themselves from hell
T 1568739278 18<roomba18>	prometh: and i _also_ think that despite all of this, it's still possible to be a good person and do something good in this world.
T 1568739289 18<prometh18>	roomba: i give life and recieve death.... but i just wnat money at this point
T 1568739321 18<prometh18>	if i can make money again, i'll continue with open source
T 1568739329 18<roomba18>	nah forget about that. it's dead.
T 1568739332 18<roomba18>	FOSS is dead.
T 1568739334 18<roomba18>	let the hive mind take it
T 1568739350 18<prometh18>	roomba: i guess you don't use babel?
T 1568739365 18<roomba18>	i use what gets the job done.
T 1568739372 18<gehn18>	I'm pretty sure FOSS is the opposite of dead
T 1568739385 18<systemfault18>	Tell that to RMS today :p
T 1568739401 18<jaawerth18>	I think you mean GNU/RMS
T 1568739408 18<jaawerth18>	heyoooo
T 1568739409 18<prometh18>	i'm feeling a shift in the dev world, away from OSS.... they want to write math and C++ because it makes them feel smart
T 1568739422 18<gehn18>	guhnoo
T 1568739426 18<jaawerth18>	what does writing math and C++ have to do with FOSS
T 1568739432 18<roomba18>	lololololol
T 1568739434 18<roomba18>	GNU/RMS
T 1568739438 18<jaawerth18>	or what does it have to do with NOT being FOSS rather
T 1568739455 18<prometh18>	jaawerth: they don't care about OSS... they just want to be pretentious (sstill smarter than me) and make money... "fuck the world"
T 1568739472 18<gehn18>	gcc and clang are FOSS aren't they?
T 1568739480 18<ljharb18>	roomba: lol what are you talking about
T 1568739485 18<systemfault18>	Not clang, AFAIK
T 1568739487 18<gehn18>	also who is "they"?
T 1568739490 18<roomba18>	ljharb: Actually it's GNU/roomba.
T 1568739493 18<gehn18>	aside from a weasel word
T 1568739501 18<prometh18>	gehn: devs in general
T 1568739512 18<jaawerth18>	every dev wants to be paid for their work. they just want to also give stuff away for free. it isn't mutually exclusive or we wouldn't have a ton of the open source software we have
T 1568739518 18<gehn18>	that's a pretty bold generalization
T 1568739536 18<prometh18>	jaawerth: but i feel a shift away from giving anything away
T 1568739544 18<gehn18>	not all devs share the same motives or views
T 1568739546 18<ljharb18>	prometh: that doesn't mean there is one
T 1568739552 18<prometh18>	ljharb: correct
T 1568739553 18<ningu18>	prometh: any citation for your feelings?
T 1568739554 18<jaawerth18>	yeah I'm generalizing. I supopse I shouldn't say "every"
T 1568739575 18<prometh18>	ningu: no, but my emotions/instincts are rarely wrong... i don't expect anyone to believe me
T 1568739594 18<roomba18>	Let's invite all of those devs into a "marketplace of ideas"... brought to you by Microsoft GitHub! where they can be fairly compensated for their contributions to FOSS. subscriptions start at only $4.99/mo!
T 1568739599 18<gehn18>	I'm certain that your emotions and instincts are very often wrong
T 1568739614 18<prometh18>	gehn: i'm not going to argue
T 1568739619 18<gehn18>	because that's how it is for basically all humans
T 1568739627 18<prometh18>	gehn: maybe i'm super special
T 1568739634 18<gehn18>	emotions and instincts are not a good substantive basis for any kind of rational decision making or outward appraisal of anything
T 1568739634 18<roomba18>	you are not special
T 1568739639 18<prometh18>	roomba: fuck you :P
T 1568739654 18<roomba18>	prometh: you are not a unique snowflake
T 1568739667 18<prometh18>	roomba: snowflakes are beautiful!!!
T 1568739668 18<prometh18>	:)
T 1568739671 18<NoiseEee18>	tf im noyt
T 1568739672 18<gehn18>	no, you ARE a unique snowflake... JUST like EVERYONE else
T 1568739676 18<NoiseEee18>	^
T 1568739706 18<prometh18>	i melted :S
T 1568739707 18<roomba18>	prometh: you are NPC #758593135, a not-not-unique not-not-special snowflake-not-snowflake
T 1568739726 18<gehn18>	in other words, a noflake
T 1568739726 18<prometh18>	roomba: there's a cockroach in the system (brazil)
T 1568739776 18<NoiseEee18>	a plant-based meat snowflake
T 1568739784 18<prometh18>	tofu
T 1568739784 18<NoiseEee18>	gotta get trendy
T 1568739808 18*	roomba registers noflake.io, creates a landing page telling everyone that noflake is a disruptor in the disruptor industry, posts it to hackernews, buys a lambo and a beach house with the VC money that pours in.
T 1568739821 18<roomba18>	prometh: see how that works?
T 1568739824 18<roomba18>	the world runs on complete bullshit.
T 1568739835 18<roomba18>	sling some bullshit, and you shall be paid.
T 1568739837 18<roomba18>	it's that simple
T 1568739842 18<prometh18>	roomba: no... i don't see why people invest in bullshit
T 1568739846 18<gehn18>	NOledge!
T 1568739850 18<gehn18>	lambo
T 1568739856 18<gehn18>	need I say more?
T 1568739865 18<roomba18>	^
T 1568739868 18<ljharb18>	prometh: it's an excellent fertilizer
T 1568739878 18<prometh18>	ljharb: interesting
T 1568739884 18<roomba18>	ljharb is right
T 1568739894 18<roomba18>	bullshit makes the crops grow that feeds the people!
T 1568739897 18<prometh18>	so i should be selling sod
T 1568739903 18<roomba18>	yes!
T 1568739908 18<praet18>	q: whats the best way to merge in a parsed json for each item in an array of items
T 1568739928 18<gehn18>	praet, specification incomplete
T 1568739958 18<gehn18>	merge in to what? the left lane? an exit ramp?
T 1568739968 18<praet18>	something like [{a:1, b:'jsonString'}, {a:2, b:'moreJson'}]
T 1568739976 18<ljharb18>	praet: why would you ever have nested json
T 1568739979 18<praet18>	convert the json to an object
T 1568739983 18<jaawerth18>	I thought you said parsed?
T 1568739985 18<prometh18>	gehn: i used to say "where we're going, we don't need roads", but now we're just doomed
T 1568739986 18<gehn18>	praet, resulting in what?
T 1568739993 18<praet18>	right sorry
T 1568739996 18<jaawerth18>	and are you joining on a shared id or something? or is it the same object you want to merge into every element?
T 1568740020 18<praet18>	resulting in [{a:1, b:{hi:1}... }]
T 1568740036 18<gehn18>	praet, by what logic?
T 1568740045 18<gehn18>	I don't see "hi" anywhere in the original
T 1568740067 18<jaawerth18>	it might help if you gave us a short example of input and desired output
T 1568740079 18<praet18>	i guess im deciding what more legible, a for each loop or a map with a json parse
T 1568740081 18<gehn18>	praet, you need to be extraordinarily specific
T 1568740088 18<gehn18>	everyone does, when asking any question really
T 1568740098 18<gehn18>	a large number of people make this mistake
T 1568740117 18<jaawerth18>	without knowing specifics, you probably want .map
T 1568740191 18<ljharb18>	praet: never a loop
T 1568740368 18<prussian18>	praet: just use lodash
T 1568740391 18<prussian18>	if your merge is shallow, you could probably get away with a simple reduce on your array of objects
T 1568740469 18<roomba18>	prometh: rofl they are about to show their hand i think
T 1568740487 18<prometh18>	?
T 1568740506 18<roomba18>	prometh: from what i was just told it sounds like a case of snitching to move up... one person is trying to set up my guy to get fired so he can take over
T 1568740534 18<prometh18>	roomba: yeah, i hate bitch politics
T 1568740536 18<roomba18>	prometh: but i never worked well with the guy who is snitching.
T 1568740543 18<ljharb18>	O.o
T 1568740562 18<prometh18>	ljharb: that wasn't a sexist remark
T 1568740575 18<roomba18>	prometh: so i just told them that if my guy gets fired, i'm considering the contract void.
T 1568740581 18<ljharb18>	prometh: if you have to say that, then yeah it is
T 1568740587 18<prussian18>	savage
T 1568740589 18<prometh18>	ljharb: could just be interpretation
T 1568740594 18<ljharb18>	prometh: that's what makes it one
T 1568740599 18<ljharb18>	prometh: your intention is irrelevant
T 1568740604 18<praet18>	ok heres what i came up with https://jsfiddle.net/qn83oy04/
T 1568740605 18<prometh18>	ljharb: thanks for including me
T 1568740609 18<ljharb18>	np
T 1568740622 18<praet18>	a different approach (i x/y'd myself)
T 1568740664 18<praet18>	the want var is wrong also
T 1568740721 18<praet18>	its like a zip in lodash maybe?
T 1568740735 18<prometh18>	roomba: that kinda shit just depresses me
T 1568740747 18<prometh18>	roomba: that's partly why i did remote for 20 years
T 1568740756 18<prometh18>	humans are depressing
T 1568740803 18<roomba18>	no they're not. they're just creatures of habit.
T 1568740806 18<NoiseEee18>	thats why i deal almost exclusively with cats
T 1568740818 18<prometh18>	NoiseEee: i don't understand
T 1568740830 18<prussian18>	uh ok
T 1568740833 18<gehn18>	prometh, have you considered that maybe it's just you that's depressing?
T 1568740835 18<gehn18>	or maybe you're just depressed?
T 1568740840 18<prometh18>	gehn: i am depressed
T 1568740844 18<prussian18>	sad
T 1568740846 18<gehn18>	ok well then that would explain it
T 1568740850 18<jaawerth18>	praet: if you're just merging by array index then info.map((record, i) => ({ ...record, ...results[i] })) will do it
T 1568740857 18<roomba18>	prometh: who told you that?
T 1568740860 18<prometh18>	roomba: myself
T 1568740883 18<roomba18>	i know what will cheer you up
T 1568740889 18<prometh18>	money?
T 1568740902 18<prometh18>	bury me with my money
T 1568740902 18<jaawerth18>	praet: though you'll probably want to account for length mismatches
T 1568740909 18<roomba18>	no not money
T 1568740916 18<roomba18>	but i know how you can get money and also cheer yourself up at the sam etime
T 1568740920 18<praet18>	there shouldnt be a length mismatch. good idea to use the index like that
T 1568740943 18<gehn18>	there shouldn't be many things in the world, but here we are
T 1568741015 18<prometh18>	roomba: are you going to follow up? :P
T 1568741020 18<jaawerth18>	praet: oh I didn't see you wanted it on a "results" prop though
T 1568741027 18<roomba18>	prometh: no.
T 1568741030 18<jaawerth18>	easy to adapt the above to work like that though
T 1568741047 18<roomba18>	prometh: you're gonna have to get out there and find out what i was going to not follow up on :)
T 1568741064 18<prometh18>	roomba: yes, because i haven't been trying
T 1568741077 18<praet18>	jaawerth: yup looking good
T 1568741168 18<roomba18>	prometh: me neither.
T 1568741186 18<roomba18>	prometh: mostly because i don't have to... yet. but i'm thinking about becoming a corporate drone for a while.
T 1568741207 18<gehn18>	corporate drones are paid well
T 1568741209 18<prometh18>	i was being sarcastic
T 1568741213 18<prometh18>	but what is a corporate drone?
T 1568741227 18<gehn18>	and despite popular misconception, corporate drones probably tend to have far better work-life balance than startup employees
T 1568741237 18<roomba18>	gehn: yes i totally agree
T 1568741256 18<roomba18>	but as a contractor, i love working with startups
T 1568741264 18<roomba18>	s/contractor/freelancer
T 1568741268 18<roomba18>	because i get to be remote
T 1568741279 18<roomba18>	i get to work on something small and usually meaningful
T 1568741285 18<roomba18>	and then gtfo before they run out of VC
T 1568741288 18<gehn18>	sure then you're much less beholden to their whims and random bad decisions
T 1568741291 18<poboy18>	remote FTW!
T 1568741293 18<gehn18>	yup
T 1568741300 18<roomba18>	plus
T 1568741312 18<roomba18>	startups let me have a little more say in what kind of tech stack they use
T 1568741337 18<roomba18>	it's like all the benefits of working with a startup without too much of the bad things
T 1568741353 18<roomba18>	i don't think i'd ever work at a startup as an employee
T 1568741380 18<roomba18>	<-- not compatible
T 1568741399 18<gehn18>	roomba, you just haven't installe the right driver
T 1568741444 18*	roomba searches Win10DrvrInstall.freedlls.ru for foozball.exe
T 1568741468 18<gehn18>	seems legit
T 1568741501 18<roomba18>	if they say the words "work life balance" in any of their job postings or during the interview, it's a red flag?
T 1568741532 18<gehn18>	only if their conception of "work life balance" equates to having a foosball table in the office
T 1568741545 18<prometh18>	and a beer fridge
T 1568741557 18<roomba18>	i've never tried to become a corporate drone so i don't know if good places even exist at this point lol
T 1568741566 18<gehn18>	roomba, they don't
T 1568741578 18<prometh18>	roomba: i'v enever been a corporate drone either.. i did try at amazon, though... failed
T 1568741579 18<gehn18>	it's only a choice between more and less evil
T 1568741588 18<systemfault18>	Weird how you people don't quite get that "something in between" exists.
T 1568741600 18<vidy18>	as long as you accept the inherent evilness of a megacorp it's ok
T 1568741614 18<prometh18>	the world is doomed anyway
T 1568741618 18<prometh18>	i don't really care about evil anymore
T 1568741621 18<gehn18>	evil megacorps often treat (some of) their employees very well
T 1568741625 18<prometh18>	just give me money and let me live my life
T 1568741637 18<systemfault18>	Find yourself a position in some medium-sized company... you'll still be able to change things and you know you they won't go bankrupt in 2 days.
T 1568741648 18<prometh18>	systemfault: that's what i did my entire life
T 1568741650 18<roomba18>	nobody is going to just give you money unless you convince them you have something they want to buy, prometh
T 1568741665 18<systemfault18>	It
T 1568741667 18<prometh18>	roomba: yeah... i do what i'm told and reduce technical debt
T 1568741670 18<systemfault18>	's called welfare.
T 1568741688 18<roomba18>	welfare isn't "giving people money"
T 1568741689 18<prometh18>	systemfault: ? i can't get employment insrance
T 1568741707 18<gehn18>	UBI will be (if it happens)
T 1568741715 18<roomba18>	UBI will not be "giving people money" either.
T 1568741725 18<prometh18>	ubisoft? :P
T 1568741739 18<roomba18>	prometh: hell yeah let's get jobs at ubisoft.
T 1568741750 18<gehn18>	I'm pretty sure that's the definition of what UBI is
T 1568741754 18<gehn18>	it's in the last letter of the acronym
T 1568741776 18<systemfault18>	Universal Basic Income-Soft?
T 1568741782 18<prometh18>	it's "universal" not "unconditional"
T 1568741787 18<roomba18>	^
T 1568741812 18<gehn18>	how does that relate to the I for "income"
T 1568741827 18<vidy18>	are there conditions for being in the universe? what are they
T 1568741827 18<prometh18>	it's giving money to those that quality fo rit
T 1568741838 18<gehn18>	and?
T 1568741845 18<prometh18>	"i'm lazy" probably isn't good enough
T 1568741850 18<roomba18>	gehn: because it's not giving money. it's still an exchange.
T 1568741850 18<systemfault18>	vidy: It's like taxes, you don't opt-in and can't opt-out
T 1568741859 18<gehn18>	still not sure how that relates
T 1568741868 18<stenno18>	relates to javascript?
T 1568741869 18<gehn18>	an exchange for what?
T 1568741891 18<roomba18>	gehn: in exchange for your obedience and servitude to Lord Bezos for generations to come.
T 1568741902 18<gehn18>	I don't think there are restrictions on what people can do with it, that's the point
T 1568741916 18<prometh18>	lord bezos should write a modern rap album: "i got mo money than all you bitches"
T 1568741916 18<gehn18>	use it to buy food, use it to go to college - it's up to you
T 1568741938 18<roomba18>	you won't be using UBI to go to college.
T 1568741952 18<prometh18>	college is not "basic"
T 1568741953 18<gehn18>	right because I don't need to
T 1568741963 18<roomba18>	^
T 1568741967 18<gehn18>	but it *is* the definition of giving money
T 1568741969 18<roomba18>	and that's the whole idea behind it
T 1568741974 18<roomba18>	it's not giving money
T 1568741975 18<gehn18>	and that's the point
T 1568741980 18<gehn18>	then what is it giving?
T 1568741992 18<roomba18>	debt, poverty, and enslavement
T 1568741999 18<prometh18>	it's giving money so that you can get a job and contribute back via taxes
T 1568742006 18<prometh18>	it's an investment
T 1568742027 18<gehn18>	oh, I see, you're going down the whole conspiracy rabbit hole, nevermind
T 1568742056 18<prometh18>	i don't qualify for employment insurance because i worked for international companies not registered in my country
T 1568742067 18<prometh18>	but i would qualify for ubi, if we had it
T 1568742089 18<prometh18>	(canada, if curious)
T 1568742093 18<roomba18>	gehn: no. it's simple economics. nobody is going to give away something for free. truly free. there are _always_ strings attached.
T 1568742110 18<gehn18>	see ya later conspiracy gator
T 1568742121 18<systemfault18>	It's not conspiracy... FFS.
T 1568742132 18<prometh18>	i don't understand how it coul dbe a conspiracy
T 1568742139 18<systemfault18>	Nothing can ever be for free.
T 1568742140 18<gehn18>	well it hasn't been implemented, at least not in the US
T 1568742140 18<gehn18>	so we don't really no
T 1568742143 18<gehn18>	you're just conjecturing
T 1568742158 18<gehn18>	systemfault, sure it can
T 1568742160 18<prometh18>	systemfault: oss?
T 1568742172 18<prometh18>	mit license
T 1568742175 18<systemfault18>	The more you're reliant on something, the more that something owns you.
T 1568742177 18<gehn18>	usually not much of meaningful value, but sure, free things exist all over the place
T 1568742222 18<roomba18>	gehn: like the free breath mints at the doctor's office? they're full of sugar to give you diabetes so you'll become a repeat customer.
T 1568742223 18<gehn18>	*cough* *cough* TYPESCRIPT *cough* *cough* LSP *cough* *cough*
T 1568742246 18<gehn18>	roomba, yeah you're totally off the deep end with this conspiracy thing
T 1568742251 18<gehn18>	plz spare us
T 1568742270 18<systemfault18>	roomba: Always consider stupidity first...
T 1568742288 18<roomba18>	nothing i've said is conspiratorial at all. plus it takes at least 3 people for there to be a conspiracy i think.
T 1568742294 18<gehn18>	^
T 1568742304 18<gehn18>	and now you're gaslighting
T 1568742355 18<roomba18>	your programming has defaulted you into this state. systemfault is correct though. 99% of the time it's laziness/stupidity.
T 1568742374 18<stenno18>	jfc people
T 1568742378 18<gehn18>	you don't see how what you just said is...
T 1568742383 18<gehn18>	ugh, nevermind, like I said, plz stahp
T 1568742385 18<systemfault18>	What's that term again... Hanlon's Razor?
T 1568742389 18<systemfault18>	Anyway...
T 1568742394 18<roomba18>	back on topic rofl
T 1568742395 18<gehn18>	Occam's
T 1568742399 18<roomba18>	let's cut this shit out
T 1568742439 18<systemfault18>	gehn: Occam's is that the simplest reason is probably the good one
T 1568742445 18<gehn18>	wake up sheeple!
T 1568742468 18<roomba18>	don't be "woke". woke is bad mmmkay.
T 1568742470 18<systemfault18>	Hanlon's is more like don't attribute to bad intent things that can be explain by stupidity
T 1568742486 18<gehn18>	what do you want people to be then?
T 1568742500 18<systemfault18>	Programming?
T 1568742501 18<roomba18>	gehn: me? i don't want people to be anything other than themselves.
T 1568742502 18<gehn18>	systemfault, ah ok
T 1568742509 18<systemfault18>	Let's all program!
T 1568742520 18<gehn18>	roomba, your statements would not lead the average person to conclude this
T 1568742560 18<roomba18>	gehn: you have no idea how much i fully understand this :)
T 1568742594 18<gehn18>	so maybe if you're aware that you say misleading things, you should stop saying misleading things?
T 1568742599 18<stenno18>	no one cares
T 1568742602 18<roomba18>	^
T 1568742602 18<gehn18>	I dunno, unless you want to be misleading, which I guess is fine
T 1568742629 18<gehn18>	stenno, I care about you, bro
T 1568742639 18<gehn18>	don't throw my love away!
T 1568742658 18*	gehn cries
T 1568742691 18<roomba18>	don't throw me away either. you need me stenno! who's gonna zip around the house any time you track in dirt from outside?!
T 1568742700 18<prometh18>	"woke" is for poetic wannabes
T 1568742711 18<jaawerth18>	yeah ok this political tangent has gotten too toxic
T 1568742768 18<systemfault18>	Time for some Britney Spears
T 1568742783 18<prometh18>	phonography
T 1568742804 18<prometh18>	pretty sure she meant phonetics
T 1568742808 18<prometh18>	or ponograph
T 1568742811 18<prometh18>	y
T 1568742819 18<roomba18>	phornography.
T 1568742823 18<prometh18>	yeah that too
T 1568742839 18<prometh18>	she didn't write it naywya
T 1568742863 18<roomba18>	prometh: btw good luck.
T 1568742873 18<prometh18>	roomba: was that sarcastic?
T 1568742890 18<prometh18>	i know i'm doomed, so...
T 1568742903 18<roomba18>	no i mean it.
T 1568742906 18<prometh18>	:) thanks
T 1568743087 18<roomba18>	prometh: wherever you go - just don't lose track of who you truly are. even if that means suppressing it temporarily. don't let them turn you into jello.
T 1568743103 18<gehn18>	but jello is yummy
T 1568743117 18<prometh18>	what is jello?
T 1568743118 18<gehn18>	mmmmm, horse hooves, yum
T 1568743119 18<roomba18>	it is. but i know you don't wanna get eaten!
T 1568743126 18<gehn18>	prometh, horse hooves + sugar mostly
T 1568743143 18<prometh18>	i haven't tried horse meat yet
T 1568743146 18<gehn18>	roomba, if the person eating me is good looking enough, sure
T 1568743171 18<bradleymeck18>	is jello still gelatin and not agar or something?
T 1568743197 18<gehn18>	ahem, I think you mean agar agar
T 1568743236 18<roomba18>	i thuoght agar and agar-agar are interchangable
T 1568743267 18<gehn18>	swagar.json
T 1568743570 18<brool18>	i wish i could become a corporate drone being paid well so i could stop being a corporate drone being paid peanuts
T 1568743635 18<systemfault18>	Jello is still gelatin
T 1568743653 18<systemfault18>	(Really important for ##JavaScript to know that)
T 1568743661 18<brool18>	jello = boiled pigs feet
T 1568743662 18<systemfault18>	Also, not Kosher or Halal
T 1568743687 18<systemfault18>	brool: It's possible to get beef gelatin, it's just that it's often pork
T 1568743759 18<brool18>	i've never been a fan of jell-o, but if it's unkashrut and haram then i'm going to develop a taste for it just to flex on them
T 1568743794 18<brool18>	ooh, jell-o shots
T 1568743801 18<systemfault18>	Bacon Jello with a glass of vodka
T 1568743829 18<systemfault18>	With dairy in it.
T 1568743919 18<brool18>	i-i'm lactose intolerant ;~;
T 1568743936 18<jaawerth18>	lol you realize people who eat kosher/halal don't care if people who don't share their beliefs don't right. so if you wanna do that out of spite have at it, enjoy your bacon dairy jello
T 1568743953 18<jaawerth18>	*don't, right?
T 1568744006 18<systemfault18>	Can't even make stupid jokes anymore :(
T 1568744015 18<jaawerth18>	not without me ruining them :D
T 1568744116 18<brool18>	i make stupid jokes just to flex on people who don't take them well :^)
T 1568744127 18<gehn18>	weird flex, but ok
T 1568744162 18<roomba18>	not weird at all. it's the best flex ever these days.
T 1568744177 18*	roomba likes vacuuming on the edges
T 1568744186 18<gehn18>	I prefer flax
T 1568744191 18<gehn18>	lots of omega-3's
T 1568744197 18<brool18>	oh gods, flax
T 1568744203 18<brool18>	bringing back the runescape memories
T 1568744215 18<brool18>	how many hours wasted spinning bowstrings for 150k gp
T 1568744241 18<gehn18>	runescrap, is this some kind of peasant joke I'm too cool to understand?
T 1568744647 18<jaawerth18>	runescrape would be a good name for a library
T 1568744737 18<weijunli18>	Im getting a bit confused with the parent/child iframe communication, anyone mind to do a simple jsfiddle to show me just the parent sending ´hello´ to the child frame?
T 1568744756 18<lf9418>	gehn: runescape was a popular game.
T 1568744826 18<weijunli18>	The child needs the eventlistener while the parent needs to postMessage, thath it?
T 1568744851 18<weijunli18>	but how do i tie both, considering I want to communicate from two different servers
T 1568744860 18<weijunli18>	sites*
T 1568744884 18<silverdust18>	Wuill this function wait for the promise elem.getText() to resolve before sending a value to the map function? https://gist.github.com/josephrexme/22c14c55d2c0a648aae0e22aa191f2fa
T 1568744937 18<silverdust18>	Or would it just set everything as false if some of those take time?
T 1568745123 18<deltab18>	silverdust: it'll always return false
T 1568745161 18<silverdust18>	deltab: what will be the best way to wait for it to be done without using async/await syntax
T 1568745220 18<silverdust18>	I am giving a PR review and I don't want it to seem like I'm forcing my own idea of async/await . Also don't want the PR creator to feel confused if they aren't already used to async/await syntax
T 1568745236 18<silverdust18>	So I want to suggest an alternative
T 1568745240 18<deltab18>	you'll need to return a promise or an array of promises
T 1568745260 18<gambl0re18>	how do you update an array value using useState?
T 1568745283 18<systemfault18>	By replacing the array
T 1568745305 18<systemfault18>	That means, no mutations... use filter/map/reduce/array spread
T 1568745336 18<silverdust18>	deltab: Here's what it originally looked like by the PR creator https://gist.github.com/josephrexme/40658db32bbfc113fbd5bd5bb708e9fb
T 1568745363 18<silverdust18>	But I want to say that's not good because returning a Promise to the filter will always evaluate as truthy
T 1568745382 18<silverdust18>	Which is why I came up with what I shared before
T 1568745392 18<gambl0re18>	is the #react channel still active? theres hasnt been any chat in there for a while
T 1568745483 18<gehn18>	gambl0re, yes
T 1568745537 18<deltab18>	silverdust: you need to use map but with the original inner function: that gives you an array of promises, which you can pass to Promise.all
T 1568745566 18<depesz18>	Hi. I have canvas element, and a span, and I want to position the span next to lower left corner of the canvas. how can I do it? (there will be more spans, for: top and botton on the left side, and left and right on top size)
T 1568745586 18<jaawerth18>	silverdust: just use Promise.all(listItems.map(elem => elem.getText())).then(itemsTxt => itemsTxt.filter(...))
T 1568745613 18<jaawerth18>	e.g. map the items into an array of promises, use Promise.all on it to get a promise of an array which you filter in a .then
T 1568745631 18<jaawerth18>	or even wrap the logic into a reusable pFilter function
T 1568746120 18<silverdust18>	jaawerth: so is Promise.all().then() going to hold the event loop and process everything in it before going to the next line? Since the goal is to return the filtered value in the outer scope?
T 1568746141 18<jaawerth18>	silverdust: no, but neither is await
T 1568747114 18<sillyslux18>	silverdust, can you show function elem.getText?
T 1568747115 18<jaawerth18>	silverdust: await simply "pauses" the async function it's in until the promise yo uawait on is resolved, at which point the event loop "resumes" said function. ti's just sugar that lets you code more imperatively inside the async function, but from the outer event loop's perspective it's no different from using .then
T 1568747182 18<sillyslux18>	why would elem.getText be async?
T 1568747247 18<sillyslux18>	oic
T 1568747251 18<jaawerth18>	I think there are headless browsers that work that way
T 1568747281 18<silverdust18>	sillyslux: here https://www.protractortest.org/#/api?view=webdriver.WebElement.prototype.getText
T 1568747292 18<sillyslux18>	ya, just reading it ^^
T 1568747791 18<niggler18>	prometh: https://twitter.com/MrWilliamo/status/1173564725399085058
T 1568747862 18<prometh18>	i dont' get it
T 1568747940 18<niggler18>	thats your problem, you're too old and simultaneously dont have enough experience
T 1568747993 18<jaawerth18>	I once caught a recruiter putting "minimum 5 years experience with angularjs" on a posting in 2014. angular had only been stable for like 5-6 years
T 1568748009 18<jaawerth18>	I made them fix it but not after it had already been posted
T 1568748022 18<jaawerth18>	not until after*
T 1568748140 18<roomba18>	prometh: do you have 10 years experience in Reactjs?
T 1568748305 18<niggler18>	20 years in reactjs
T 1568748312 18<niggler18>	40 years in JS
T 1568748362 18<sillyslux18>	not older than 35
T 1568748395 18<systemfault18>	I totally remember using JS in 1982
T 1568748400 18<systemfault18>	I SWEAR!!!
T 1568748411 18<siix18>	except back then it was called DOS
T 1568748508 18<lf9418>	ol
T 1568748563 18<malevolence18>	No idea what conversation I just walked in to lol
T 1568748630 18<Intelo18>	Which library is good to generate uuids like "58b96707eeddfd10062f5936" or whatnot. Somehow I need to generate them in javascript and not in database (long story of legacy)
T 1568748685 18<sillyslux18>	!npm uuid
T 1568748686 18<jellobot18>	sillyslux, uuid@3.3.3: RFC4122 (v1, v4, and v5) UUIDs - https://www.npmjs.com/package/uuid
T 1568748705 18<malevolence18>	uuid and import uuid/v4
T 1568748797 18<Alexendoo18>	That isn't a UUID though, so probably not those
T 1568748817 18<Intelo18>	Alexendoo, what?
T 1568748818 18<malevolence18>	huh?
T 1568748835 18<Alexendoo18>	"58b96707eeddfd10062f5936" isn't a UUID
T 1568748841 18<sillyslux18>	whats wrong with it?
T 1568748860 18<Alexendoo18>	If you ignore the lack of hyphens, it's not the same size
T 1568748871 18<sillyslux18>	"58b9 6707 eedd fd10 062f 5936"
T 1568748901 18<GreenJello18>	also, if I'm reading that right, it has an invalid version
T 1568748907 18<sillyslux18>	indeed
T 1568748943 18<malevolence18>	it is a valid uuid. there are 3 formats for them, one as a string as shown, second with dashes, and third with dashes and squiglies
T 1568748997 18<sillyslux18>	still too short
T 1568749036 18<Intelo18>	GreenJello,  invalid version?
T 1568749072 18<sillyslux18>	it's version f
T 1568749129 18<GreenJello18>	there are only versions 0-4, so 15 is very wrong if that were a UUID
T 1568749144 18<Intelo18>	GreenJello,  its a uuid by mongodb algo  I gues
T 1568749153 18<GreenJello18>	Intelo, mongo doesn't use UUIDs
T 1568749162 18<Intelo18>	GreenJello, then what does it use?
T 1568749164 18<malevolence18>	oh i see with it expanded. format is 8-4-4-4-12
T 1568749166 18<GreenJello18>	it uses something they invented called an "ObjectID"
T 1568749178 18<Intelo18>	if I insert uuidv4 in mongo, will it accept?
T 1568749198 18<Intelo18>	GreenJello, ya. Its the objectId that should be uuid I guess
T 1568749201 18<sillyslux18>	uuid might be too long but dunno
T 1568749235 18<sillyslux18>	there's probably a package for these mongo ids too though
T 1568749312 18<sillyslux18>	var objectId = new ObjectID();
T 1568749318 18<GreenJello18>	Intelo, const {ObjectID} = require('mongodb'); new ObjectID().toHexString()
T 1568749321 18<sillyslux18>	https://mongodb.github.io/node-mongodb-native/api-bson-generated/objectid.html
T 1568749340 18<malevolence18>	yes, the _id can be anything guaranteed to be unique. ObjectID simply creates something unique for you (as does firebase). You can use a different value though. However both firebase and mongo ObjectID's are also created by date which gives sorting by insert time. A UUID will not do that.
T 1568749510 18<malevolence18>	or if you want to create an Object id :) ->
T 1568749586 18<malevolence18>	const ObjectId = (m = Math, d = Date, h = 16, s = s => m.floor(s).toString(h)) =>
T 1568749587 18<malevolence18>	    s(d.now() / 1000) + ' '.repeat(h).replace(/./g, () => s(m.random() * h))
T 1568749603 18<Nyle18>	Well.
T 1568749611 18<Nyle18>	I ended up joining ##jabascript.
T 1568749634 18<malevolence18>	or
T 1568749646 18<malevolence18>	import { ObjectID } from 'bson';
T 1568749647 18<malevolence18>	const id  = new ObjectID();
T 1568749647 18<malevolence18>	console.log(id.toHexString());
T 1568749648 18<Nyle18>	So what's the best way to show a person a jabascript alert box error box thingymabogger
T 1568749657 18<Nyle18>	alert()?
T 1568749663 18<Nyle18>	or something better?
T 1568749671 18<malevolence18>	both will create valid ObjectId's that mongo will pass as valid
T 1568753031 20*	Disconnected (20)
T 1568753056 19*	Now talking on 22##javascript
T 1568753056 22*	Topic for 22##javascript is: JavaScript is *not* Java. | Just ask your question. | Say "!mdn abc" for docs on "abc". | Don't paste code in the channel. | Can't talk? Get registered on freenode ( https://git.io/vaTS2 )
T 1568753056 22*	Topic for 22##javascript set by 26niggler!~niggler@unaffiliated/niggler (24Tue Jan 15 07:16:23 2019)
T 1568753438 18<sidetracking18>	it's tha speaker knockerz
T 1568753564 18<primitivMedia18>	https://jsfiddle.net/nLv915js/
T 1568753567 18<primitivMedia18>	here you go
T 1568753711 18<prometh18>	how soon do you think frontend development will almost completely fade away due to machine learning automation?
T 1568753792 18<devsnek18>	couple thousand years
T 1568753828 18<prometh18>	or at least when it stops being so popular... like how it was 10-15 years ago
T 1568753841 18<prometh18>	or even 5 years ago
T 1568753867 18<bradleymeck18>	prometh: only when we reclaim flash/dreamweaver workflows
T 1568753996 18<jaawerth18>	primitivMedia: I don't use \b much but I believe the problem is that # is a non-word character, so putting \b#\w+ won't match #foo since the non-word character before # is not a word boundary, since # is also not a word character
T 1568754034 18<primitivMedia18>	that sounds about right
T 1568754039 18<primitivMedia18>	any work around?
T 1568754057 18<jaawerth18>	primitivMedia: are there any characters after the # you want to allow other than [a-zA-Z]? should ##foo match the entire thing? what about punctuation?
T 1568754069 18<primitivMedia18>	nope these are going to be instagram hashtags
T 1568754073 18<primitivMedia18>	so just letters
T 1568754073 18<bradleymeck18>	lookbehind~ bring that catastrophic backtracking~
T 1568754107 18<primitivMedia18>	lewtters and numbers, cant start with a number after the # \
T 1568754111 18<primitivMedia18>	#*
T 1568754232 18<jaawerth18>	primitivMedia: /\W*(#\w+)\W*/g should do it. or even just /(#\w+)/g
T 1568754247 18<jaawerth18>	oh, can't start with number
T 1568754251 18<primitivMedia18>	if iwanted to allow underscores but not at the beginning?
T 1568754269 18<jaawerth18>	then /(#[a-zA-Z]\w*)/g
T 1568754296 18<bambanx18>	anyone use rollup?
T 1568754320 18<GreenJello18>	n> /\w/.test('1')
T 1568754321 18<jellobot18>	(okay) true
T 1568754339 18<prometh18>	\w includes underscore, i think
T 1568754343 18<primitivMedia18>	works great ! /(#[a-zA-Z]\w*)/g
T 1568754344 18<jaawerth18>	it does
T 1568754355 18<primitivMedia18>	does it include other special characters or just _?
